
mtest02.elf:     file format elf32-littlenios2
mtest02.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000230

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x0001e4d4 memsz 0x0001e4d4 flags r-x
    LOAD off    0x0001f4f4 vaddr 0x0001e4f4 paddr 0x000200bc align 2**12
         filesz 0x00001bc8 memsz 0x00001bc8 flags rw-
    LOAD off    0x00021c84 vaddr 0x00021c84 paddr 0x00021c84 align 2**12
         filesz 0x00000000 memsz 0x00000168 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0001d05c  00000230  00000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00001268  0001d28c  0001d28c  0001e28c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001bc8  0001e4f4  000200bc  0001f4f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000168  00021c84  00021c84  00021c84  2**2
                  ALLOC, SMALL_DATA
  6 .new_sdram_controller_0 00000000  00021dec  00021dec  000210bc  2**0
                  CONTENTS
  7 .epcs_flash_controller_0 00000000  00801000  00801000  000210bc  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  000210bc  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 000013e0  00000000  00000000  000210e0  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00037027  00000000  00000000  000224c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000d2b7  00000000  00000000  000594e7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00011e48  00000000  00000000  0006679e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  0000324c  00000000  00000000  000785e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00004cbe  00000000  00000000  0007b834  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    000260a6  00000000  00000000  000804f2  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000010  00000000  00000000  000a6598  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00002288  00000000  00000000  000a65a8  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  000ac9e2  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  000ac9e5  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  000ac9f1  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  000ac9f2  2**0
                  CONTENTS, READONLY
 22 .stderr_dev   0000000b  00000000  00000000  000ac9f3  2**0
                  CONTENTS, READONLY
 23 .stdin_dev    0000000b  00000000  00000000  000ac9fe  2**0
                  CONTENTS, READONLY
 24 .stdout_dev   0000000b  00000000  00000000  000aca09  2**0
                  CONTENTS, READONLY
 25 .sopc_system_name 00000006  00000000  00000000  000aca14  2**0
                  CONTENTS, READONLY
 26 .quartus_project_dir 00000012  00000000  00000000  000aca1a  2**0
                  CONTENTS, READONLY
 27 .jdi          00006130  00000000  00000000  000aca2c  2**0
                  CONTENTS, READONLY
 28 .sopcinfo     00081c6c  00000000  00000000  000b2b5c  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000230 l    d  .text	00000000 .text
0001d28c l    d  .rodata	00000000 .rodata
0001e4f4 l    d  .rwdata	00000000 .rwdata
00021c84 l    d  .bss	00000000 .bss
00021dec l    d  .new_sdram_controller_0	00000000 .new_sdram_controller_0
00801000 l    d  .epcs_flash_controller_0	00000000 .epcs_flash_controller_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../mtest02_bsp//obj/HAL/src/crt0.o
00000268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 memtest.c
0000026c l     F .text	0000007c MenuHeader
000002e8 l     F .text	00000058 MenuBegin
00000340 l     F .text	0000004c MenuItem
0000041c l     F .text	00000104 MenuEnd
00021c84 l     O .bss	00000004 entry.3380
00021c88 l     O .bss	00000001 ch.3381
00000520 l     F .text	00000114 MemGetAddressRange
00000634 l     F .text	00000074 MemTestDataBus
000006a8 l     F .text	000001e0 MemTestAddressBus
00000888 l     F .text	00000220 MemTest8_16BitAccess
00000aa8 l     F .text	000001a4 MemTestDevice
00000c4c l     F .text	000001b4 TestRam
00000e00 l     F .text	00000150 FlashCheckIfBlockErased
00000f50 l     F .text	00000318 FlashTestBlockWrite
00001268 l     F .text	00000308 FlashTestReadWrite
00001570 l     F .text	000000fc FlashTestBlockErase
0000166c l     F .text	00000138 FlashRunTests
000017a4 l     F .text	00000180 GetFlashName
00001924 l     F .text	00000348 FlashErase
00001c6c l     F .text	00000288 FlashFindErasedBlocks
00001ef4 l     F .text	000001dc TestFlash
000020d0 l     F .text	00000170 TopMenu
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 impure.c
0001e4f4 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sscanf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfscanf.c
0001dd76 l     O .rodata	00000022 basefix.4340
00000000 l    df *ABS*	00000000 vfprintf.c
0001ddda l     O .rodata	00000010 zeroes.4404
000070e4 l     F .text	000000bc __sbprintf
0001ddea l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
0001defb l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
000073a8 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00008f00 l     F .text	00000008 __fp_unlock
00008f14 l     F .text	0000019c __sinit.part.1
000090b0 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
0001ed40 l     O .rwdata	00000020 lc_ctype_charset
0001ed20 l     O .rwdata	00000020 lc_message_charset
0001ed60 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0001e098 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
0000bdcc l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strtod.c
0000c2a8 l     F .text	00000064 sulp
0001e1cc l     O .rodata	00000014 fpinan.2773
0001e1e0 l     O .rodata	00000014 fpi.2737
0001e1f4 l     O .rodata	00000028 tinytens
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 vfscanf.c
0001e21c l     O .rodata	00000022 basefix.3791
00000000 l    df *ABS*	00000000 vfprintf.c
0001e23e l     O .rodata	00000010 zeroes.4389
0001e24e l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 vfprintf.c
00011e34 l     F .text	000000fc __sprint_r.part.0
0001e25e l     O .rodata	00000010 zeroes.4349
00013470 l     F .text	000000bc __sbprintf
0001e26e l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
00013ac8 l     F .text	00000100 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
0001e37e l     O .rodata	00000010 zeroes.4333
0001e38e l     O .rodata	00000010 blanks.4332
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
00019878 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0001998c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_flash_dev.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00019a74 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
00019b68 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
00019c50 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
00019d3c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
00019f18 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000200ac l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0001a18c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0001a2c8 l     F .text	00000034 alt_dev_reg
0001ef40 l     O .rwdata	000000cc epcs_flash_controller_0
0001f00c l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_epcs_flash_controller.c
0001a388 l     F .text	00000034 alt_flash_device_register
0001a410 l     F .text	000003f8 alt_epcs_flash_query
0001a808 l     F .text	000000ec alt_epcs_flash_memcmp
0001abe0 l     F .text	00000094 alt_epcs_test_address
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0001b0a8 l     F .text	0000020c altera_avalon_jtag_uart_irq
0001b2b4 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 epcs_commands.c
0001b948 l     F .text	00000038 epcs_test_wip
0001b980 l     F .text	0000003c epcs_await_wip_released
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0001c074 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0001c564 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0001c6c4 l     F .text	0000003c alt_get_errno
0001c700 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 altera_avalon_spi.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00021cc0 g     O .bss	00000004 alt_instruction_exception_handler
00002fd0 g     F .text	00000018 putchar
0000b528 g     F .text	00000074 _mprec_log10
0001ab54 g     F .text	0000008c alt_epcs_flash_get_info
0000b614 g     F .text	0000008c __any_on
00014674 g     F .text	00000054 _isatty_r
0001e0a4 g     O .rodata	00000028 __mprec_tinytens
00019e54 g     F .text	0000007c alt_main
00002fe8 g     F .text	000000c0 _puts_r
00021cec g     O .bss	00000100 alt_irq
00009e40 g     F .text	00000060 _lseek_r
000200bc g       *ABS*	00000000 __flash_rwdata_start
000180a8 g     F .text	00000088 .hidden __eqdf2
00021dec g       *ABS*	00000000 __alt_heap_start
00002f8c g     F .text	0000003c printf
00015d08 g     F .text	0000009c _wcrtomb_r
00003364 g     F .text	0000005c __sseek
00009260 g     F .text	00000010 __sinit
0001352c g     F .text	00000140 __swbuf_r
00009d64 g     F .text	0000007c _setlocale_r
000090b8 g     F .text	00000078 __sfmoreglue
00011e1c g     F .text	00000018 ungetc
00019ef4 g     F .text	00000024 __malloc_unlock
0000c30c g     F .text	000015e4 _strtod_r
0000038c g     F .text	00000090 GetInputString
0000e6ac g     F .text	00000100 _sfread_r
0000a364 g     F .text	0000015c memmove
00009248 g     F .text	00000018 _cleanup
0000a5e8 g     F .text	000000a8 _Balloc
00018130 g     F .text	000000dc .hidden __gtdf2
0001caec g     F .text	00000024 altera_nios2_gen2_irq_init
0001b9bc g     F .text	000000fc epcs_sector_erase
00000000 g     F .entry	0000000c __reset
00000020 g       *ABS*	00000000 __flash_exceptions_start
00013a6c g     F .text	0000005c _fstat_r
00021c98 g     O .bss	00000004 errno
00003130 g     F .text	00000014 __srget
000032e0 g     F .text	00000008 __seofread
00014968 g     F .text	000013a0 ___svfiprintf_internal_r
00021cac g     O .bss	00000004 alt_argv
0002806c g       *ABS*	00000000 _gp
0001edc0 g     O .rwdata	00000180 alt_fd_list
0000246c g     F .text	00000070 _getc_r
000024dc g     F .text	00000088 getc
00002fc8 g     F .text	00000008 _putchar_r
0001bc00 g     F .text	0000006c epcs_write_status_register
0001c214 g     F .text	00000090 alt_find_dev
00002e14 g     F .text	00000148 memcpy
00014418 g     F .text	0000025c __hexnan
00008f08 g     F .text	0000000c _cleanup_r
000194e8 g     F .text	000000dc .hidden __floatsidf
0001c648 g     F .text	0000007c alt_io_redirect
0001820c g     F .text	000000f4 .hidden __ltdf2
0001d28c g       *ABS*	00000000 __DTOR_END__
000030a8 g     F .text	00000014 puts
0001ced8 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0000a108 g     F .text	000000d8 mbrtowc
0001acec g     F .text	00000100 alt_epcs_flash_write_block
0000bfbc g     F .text	00000074 __fpclassifyd
0000b484 g     F .text	000000a4 __ratio
00013454 g     F .text	0000001c __vfiprintf_internal
0001b4ac g     F .text	0000021c altera_avalon_jtag_uart_read
00002564 g     F .text	00000014 malloc
00002f5c g     F .text	00000030 _printf_r
00002388 g     F .text	00000064 .hidden __udivsi3
00019ba4 g     F .text	000000ac isatty
00009d34 g     F .text	00000030 iswspace
0001e0f4 g     O .rodata	000000c8 __mprec_tens
00009de0 g     F .text	0000000c __locale_charset
00016d64 g     F .text	000000c8 .hidden __lesf2
00015ffc g     F .text	00000074 .hidden __fixunsdfsi
00021c94 g     O .bss	00000004 __malloc_top_pad
0000e63c g     F .text	00000070 __ssrefill_r
0000e1f8 g     F .text	0000001c strtoul
00020080 g     O .rwdata	00000004 __mb_cur_max
00009e10 g     F .text	0000000c _localeconv_r
0000e214 g     F .text	00000320 _strtoull_r
0000aa1c g     F .text	0000003c __i2b
000096e4 g     F .text	000004c8 __sfvwrite_r
00003144 g     F .text	00000054 _sbrk_r
0000b808 g     F .text	00000060 _read_r
0002009c g     O .rwdata	00000004 alt_max_fd
00013760 g     F .text	000000f0 _fclose_r
00008ed0 g     F .text	00000030 fflush
00021c90 g     O .bss	00000004 __malloc_max_sbrked_mem
00003460 g     F .text	0000198c __ssvfscanf_r
00016e2c g     F .text	000008ac .hidden __adddf3
00016c30 g     F .text	00000078 .hidden __nesf2
0001ac74 g     F .text	00000078 alt_epcs_flash_erase_block
0000b22c g     F .text	0000010c __b2d
0001666c g     F .text	000005c4 .hidden __umoddi3
00019d78 g     F .text	000000dc lseek
0002006c g     O .rwdata	00000004 _global_impure_ptr
0001becc g     F .text	0000005c epcs_exit_4_bytes_mode
0000b868 g     F .text	00000564 _realloc_r
00021dec g       *ABS*	00000000 __bss_end
0001c474 g     F .text	000000f0 alt_iic_isr_register
0001c9e4 g     F .text	00000108 alt_tick
0001e27e g     O .rodata	00000100 __hexdig
00016070 g     F .text	000005fc .hidden __udivdi3
000139c8 g     F .text	00000024 _fputwc_r
0001e0cc g     O .rodata	00000028 __mprec_bigtens
0000a800 g     F .text	00000104 __s2b
000195c4 g     F .text	000000a8 .hidden __floatunsidf
0000af6c g     F .text	00000060 __mcmp
00009280 g     F .text	00000018 __fp_lock_all
0001c428 g     F .text	0000004c alt_ic_irq_enabled
0001c948 g     F .text	0000009c alt_alarm_stop
0000dc60 g     F .text	0000001c strtol
00021cb4 g     O .bss	00000004 alt_irq_active
000000fc g     F .exceptions	000000d4 alt_irq_handler
0001ed98 g     O .rwdata	00000028 alt_dev_null
0001c054 g     F .text	00000020 alt_dcache_flush_all
0000a904 g     F .text	00000068 __hi0bits
00019468 g     F .text	00000080 .hidden __fixdfsi
0000d8f0 g     F .text	00000018 strtod
000200bc g       *ABS*	00000000 __ram_rwdata_end
00020094 g     O .rwdata	00000008 alt_dev_list
0001a1c8 g     F .text	00000100 write
0000b6a0 g     F .text	000000a0 _putc_r
00016ca8 g     F .text	000000bc .hidden __gtsf2
0001e4f4 g       *ABS*	00000000 __ram_rodata_end
00019ab0 g     F .text	000000b8 fstat
0001820c g     F .text	000000f4 .hidden __ledf2
0000ace4 g     F .text	00000140 __pow5mult
00011f48 g     F .text	0000150c ___vfiprintf_internal_r
00021ca4 g     O .bss	00000004 __nlocale_changed
000023ec g     F .text	00000058 .hidden __umodsi3
0001bd88 g     F .text	00000068 epcs_read_electronic_signature
00021dec g       *ABS*	00000000 end
0001afe8 g     F .text	000000c0 altera_avalon_jtag_uart_init
000001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
0001d28c g       *ABS*	00000000 __CTOR_LIST__
00800000 g       *ABS*	00000000 __alt_stack_pointer
00019814 g     F .text	00000064 .hidden __clzsi2
0001b6c8 g     F .text	00000224 altera_avalon_jtag_uart_write
00009270 g     F .text	00000004 __sfp_lock_acquire
0000a280 g     F .text	000000e4 memchr
00004dec g     F .text	000022dc ___vfprintf_internal_r
0000c108 g     F .text	00000058 _sprintf_r
000093d4 g     F .text	00000310 _free_r
00009dec g     F .text	00000010 __locale_mb_cur_max
0001d0d8 g     F .text	00000180 __call_exitprocs
000030bc g     F .text	00000074 __srget_r
0000e534 g     F .text	00000108 _sungetc_r
00021ca0 g     O .bss	00000004 __mlocale_changed
00020074 g     O .rwdata	00000004 __malloc_sbrk_base
00000230 g     F .text	0000003c _start
00021cb8 g     O .bss	00000004 _alt_tick_rate
0000dc7c g     F .text	00000304 _strtoll_r
0000ae24 g     F .text	00000148 __lshift
0001cb10 g     F .text	000001fc alt_avalon_spi_command
00021cbc g     O .bss	00000004 _alt_nticks
00019f54 g     F .text	00000104 read
0001a334 g     F .text	00000054 alt_sys_init
00014798 g     F .text	000001d0 __ssprint_r
0001cfc0 g     F .text	00000118 __register_exitproc
000146c8 g     F .text	000000d0 strncmp
0000aa58 g     F .text	0000028c __multiply
0001b354 g     F .text	00000068 altera_avalon_jtag_uart_close
00002444 g     F .text	00000028 .hidden __mulsi3
0001e4f4 g       *ABS*	00000000 __ram_rwdata_start
0001d28c g       *ABS*	00000000 __ram_rodata_start
00021cc4 g     O .bss	00000028 __malloc_current_mallinfo
00016c30 g     F .text	00000078 .hidden __eqsf2
0000b338 g     F .text	0000014c __d2b
0001b8ec g     F .text	0000005c epcs_read_status_register
0001ae84 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0000df80 g     F .text	00000278 _strtoul_r
0001ce14 g     F .text	000000c4 alt_get_fd
00007354 g     F .text	00000054 _close_r
0001bdf0 g     F .text	00000080 epcs_read_device_id
00002d98 g     F .text	0000007c memcmp
0001af44 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00021dec g       *ABS*	00000000 __alt_stack_base
0001af94 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00801000 g       *ABS*	00000000 __alt_mem_epcs_flash_controller_0
00003198 g     F .text	0000007c sscanf
00007200 g     F .text	00000154 __swsetup_r
000176d8 g     F .text	000009d0 .hidden __divdf3
00009130 g     F .text	00000118 __sfp
0000b59c g     F .text	00000078 __copybits
0001e918 g     O .rwdata	00000408 __malloc_av_
0000927c g     F .text	00000004 __sinit_lock_release
00018300 g     F .text	0000086c .hidden __muldf3
0000328c g     F .text	00000054 __sread
0001cd0c g     F .text	00000108 alt_find_file
0001c0b0 g     F .text	000000a4 alt_dev_llist_insert
00019ed0 g     F .text	00000024 __malloc_lock
0001a0dc g     F .text	000000b0 sbrk
0000f8f8 g     F .text	000022bc ___svfprintf_internal_r
00008e74 g     F .text	0000005c _fflush_r
00013684 g     F .text	000000dc _calloc_r
000200a4 g     O .rwdata	00000008 alt_flash_dev_list
00021c84 g       *ABS*	00000000 __bss_start
0000a4c0 g     F .text	00000128 memset
00002240 g     F .text	00000050 main
00021cb0 g     O .bss	00000004 alt_envp
00021c8c g     O .bss	00000004 __malloc_max_total_mem
0001aee4 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0001366c g     F .text	00000018 __swbuf
00016d64 g     F .text	000000c8 .hidden __ltsf2
000033c0 g     F .text	00000008 __sclose
00800000 g       *ABS*	00000000 __alt_heap_limit
00013850 g     F .text	00000014 fclose
0000da08 g     F .text	00000258 _strtol_r
0001966c g     F .text	000001a8 .hidden __truncdfsf2
000075d0 g     F .text	00001688 _dtoa_r
0000258c g     F .text	0000080c _malloc_r
00015e64 g     F .text	00000030 __ascii_wctomb
000200a0 g     O .rwdata	00000004 alt_errno
00011bb4 g     F .text	000000d4 __submore
00009bac g     F .text	000000c4 _fwalk
0000a224 g     F .text	0000005c _mbtowc_r
0000b740 g     F .text	000000c8 putc
00002290 g     F .text	00000084 .hidden __divsi3
000092b0 g     F .text	00000124 _malloc_trim_r
0001d28c g       *ABS*	00000000 __CTOR_END__
0001a8f4 g     F .text	00000260 alt_epcs_flash_write
0000c1cc g     F .text	000000dc strcmp
0001d28c g       *ABS*	00000000 __flash_rodata_start
0001d28c g       *ABS*	00000000 __DTOR_LIST__
000180a8 g     F .text	00000088 .hidden __nedf2
0001a2fc g     F .text	00000038 alt_irq_init
0001a058 g     F .text	00000084 alt_release_fd
0000c160 g     F .text	0000006c sprintf
0001e39e g     O .rodata	00000100 .hidden __clz_tab
00021c9c g     O .bss	00000004 _PathLocale
0000d908 g     F .text	00000100 strtof
0001cf74 g     F .text	00000014 atexit
00016ca8 g     F .text	000000bc .hidden __gesf2
000071a0 g     F .text	00000060 _write_r
00009e1c g     F .text	00000018 setlocale
0000c100 g     F .text	00000008 nanf
00020070 g     O .rwdata	00000004 _impure_ptr
00021ca8 g     O .bss	00000004 alt_argc
00008c58 g     F .text	0000021c __sflush_r
0000a05c g     F .text	000000ac _mbrtowc_r
0001c1b4 g     F .text	00000060 _do_dtors
00009e08 g     F .text	00000008 __locale_cjk_lang
0000bde8 g     F .text	000001d4 __srefill_r
00000020 g       .exceptions	00000000 alt_irq_entry
0000a1e0 g     F .text	00000044 __ascii_mbtowc
0000b1c8 g     F .text	00000064 __ulp
00009298 g     F .text	00000018 __fp_unlock_all
0002008c g     O .rwdata	00000008 alt_fs_list
0000e7ac g     F .text	0000114c __ssvfiscanf_r
00000020 g       *ABS*	00000000 __ram_exceptions_start
00009e34 g     F .text	0000000c localeconv
0001bab8 g     F .text	000000f4 epcs_read_buffer
00000000 g       *ABS*	00000000 __alt_mem_new_sdram_controller_0
0001a3bc g     F .text	00000054 alt_epcs_flash_init
0001c2c4 g     F .text	00000050 alt_ic_isr_register
00003214 g     F .text	00000078 _sscanf_r
000200bc g       *ABS*	00000000 _edata
00021dec g       *ABS*	00000000 _end
000199b8 g     F .text	00000068 alt_flash_open_dev
00013864 g     F .text	00000164 __fputwc
00000230 g       *ABS*	00000000 __ram_exceptions_end
0001b3bc g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0001c39c g     F .text	0000008c alt_ic_irq_disable
0001be70 g     F .text	0000005c epcs_enter_4_bytes_mode
000032e8 g     F .text	0000007c __swrite
00020078 g     O .rwdata	00000004 __malloc_trim_threshold
00009dfc g     F .text	0000000c __locale_msgcharset
0001cf88 g     F .text	00000038 exit
00009c70 g     F .text	000000c4 _fwalk_reent
0000afcc g     F .text	000001fc __mdiff
00019a20 g     F .text	00000054 alt_flash_close_dev
00002314 g     F .text	00000074 .hidden __modsi3
0002007c g     O .rwdata	00000004 __ctype_ptr__
00800000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00009274 g     F .text	00000004 __sfp_lock_release
0000c030 g     F .text	000000d0 __sccl
0001ddfa g     O .rodata	00000101 _ctype_
00020084 g     O .rwdata	00000004 __mbtowc
0001d258 g     F .text	00000034 _exit
0001bf28 g     F .text	0000012c alt_alarm_start
00015ef0 g     F .text	0000010c .hidden __muldi3
00009ea0 g     F .text	000001bc __smakebuf_r
000033c8 g     F .text	00000098 strlen
0001bbac g     F .text	00000054 epcs_write_enable
0001c7ec g     F .text	0000015c open
00018130 g     F .text	000000dc .hidden __gedf2
00013bc8 g     F .text	00000850 __gethex
00020088 g     O .rwdata	00000004 __wctomb
00011f30 g     F .text	00000018 __sprint_r
0001c2a4 g     F .text	00000020 alt_icache_flush_all
000200b0 g     O .rwdata	00000004 alt_priority_mask
0001c314 g     F .text	00000088 alt_ic_irq_enable
000070c8 g     F .text	0000001c __vfprintf_internal
00015e94 g     F .text	0000005c _wctomb_r
00018b6c g     F .text	000008fc .hidden __subdf3
0001adec g     F .text	00000098 alt_epcs_flash_read
0000a96c g     F .text	000000b0 __lo0bits
000200b4 g     O .rwdata	00000008 alt_alarm_list
00011c88 g     F .text	00000194 _ungetc_r
0001c154 g     F .text	00000060 _do_ctors
00015da4 g     F .text	000000c0 wcrtomb
000198b4 g     F .text	000000d8 close
00019cb8 g     F .text	00000084 alt_load
000139ec g     F .text	00000080 fputwc
00002578 g     F .text	00000014 free
00009278 g     F .text	00000004 __sinit_lock_acquire
0001bc6c g     F .text	0000011c epcs_write_buffer
0000a6b8 g     F .text	00000148 __multadd
0000a690 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08408c14 	ori	at,at,560
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001d00 	call	1d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0fffb17 	ldw	r3,-20(fp)
 130:	e0bffc17 	ldw	r2,-16(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001426 	beq	r2,zero,18c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 13c:	008000b4 	movhi	r2,2
 140:	10873b04 	addi	r2,r2,7404
 144:	e0fffd17 	ldw	r3,-12(fp)
 148:	180690fa 	slli	r3,r3,3
 14c:	10c5883a 	add	r2,r2,r3
 150:	10c00017 	ldw	r3,0(r2)
 154:	008000b4 	movhi	r2,2
 158:	10873b04 	addi	r2,r2,7404
 15c:	e13ffd17 	ldw	r4,-12(fp)
 160:	200890fa 	slli	r4,r4,3
 164:	1105883a 	add	r2,r2,r4
 168:	10800104 	addi	r2,r2,4
 16c:	10800017 	ldw	r2,0(r2)
 170:	1009883a 	mov	r4,r2
 174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 17c:	0005313a 	rdctl	r2,ipending
 180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 184:	e0bfff17 	ldw	r2,-4(fp)
 188:	00000706 	br	1a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 18c:	e0bffc17 	ldw	r2,-16(fp)
 190:	1085883a 	add	r2,r2,r2
 194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 198:	e0bffd17 	ldw	r2,-12(fp)
 19c:	10800044 	addi	r2,r2,1
 1a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 1a4:	003fe106 	br	12c <__alt_mem_epcs_flash_controller_0+0xff7ff12c>

    active = alt_irq_pending ();
 1a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 1ac:	e0bffb17 	ldw	r2,-20(fp)
 1b0:	103fdb1e 	bne	r2,zero,120 <__alt_mem_epcs_flash_controller_0+0xff7ff120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1b4:	0001883a 	nop
}
 1b8:	0001883a 	nop
 1bc:	e037883a 	mov	sp,fp
 1c0:	dfc00117 	ldw	ra,4(sp)
 1c4:	df000017 	ldw	fp,0(sp)
 1c8:	dec00204 	addi	sp,sp,8
 1cc:	f800283a 	ret

000001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1d0:	defffb04 	addi	sp,sp,-20
 1d4:	dfc00415 	stw	ra,16(sp)
 1d8:	df000315 	stw	fp,12(sp)
 1dc:	df000304 	addi	fp,sp,12
 1e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 1e4:	00bfffc4 	movi	r2,-1
 1e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 1ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 1f0:	d0a71517 	ldw	r2,-25516(gp)
 1f4:	10000726 	beq	r2,zero,214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 1f8:	d0a71517 	ldw	r2,-25516(gp)
 1fc:	e0fffd17 	ldw	r3,-12(fp)
 200:	e1bffe17 	ldw	r6,-8(fp)
 204:	e17fff17 	ldw	r5,-4(fp)
 208:	1809883a 	mov	r4,r3
 20c:	103ee83a 	callr	r2
 210:	00000206 	br	21c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 218:	0005883a 	mov	r2,zero
}
 21c:	e037883a 	mov	sp,fp
 220:	dfc00117 	ldw	ra,4(sp)
 224:	df000017 	ldw	fp,0(sp)
 228:	dec00204 	addi	sp,sp,8
 22c:	f800283a 	ret

Disassembly of section .text:

00000230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     230:	06c02034 	movhi	sp,128
    ori sp, sp, %lo(__alt_stack_pointer)
     234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
     238:	068000b4 	movhi	gp,2
    ori gp, gp, %lo(_gp)
     23c:	d6a01b14 	ori	gp,gp,32876
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     240:	008000b4 	movhi	r2,2
    ori r2, r2, %lo(__bss_start)
     244:	10872114 	ori	r2,r2,7300

    movhi r3, %hi(__bss_end)
     248:	00c000b4 	movhi	r3,2
    ori r3, r3, %lo(__bss_end)
     24c:	18c77b14 	ori	r3,r3,7660

    beq r2, r3, 1f
     250:	10c00326 	beq	r2,r3,260 <_start+0x30>

0:
    stw zero, (r2)
     254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     25c:	10fffd36 	bltu	r2,r3,254 <__alt_mem_epcs_flash_controller_0+0xff7ff254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     260:	0019cb80 	call	19cb8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     264:	0019e540 	call	19e54 <alt_main>

00000268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     268:	003fff06 	br	268 <__alt_mem_epcs_flash_controller_0+0xff7ff268>

0000026c <MenuHeader>:
*
*  Purpose: Prints the menu header.
*
******************************************************************/
static void MenuHeader(void)
{
     26c:	defffe04 	addi	sp,sp,-8
     270:	dfc00115 	stw	ra,4(sp)
     274:	df000015 	stw	fp,0(sp)
     278:	d839883a 	mov	fp,sp
  printf("\n\n");
     27c:	010000b4 	movhi	r4,2
     280:	2134a304 	addi	r4,r4,-11636
     284:	00030a80 	call	30a8 <puts>
  printf("             <---->   Nios II Memory Test.   <---->\n");
     288:	010000b4 	movhi	r4,2
     28c:	2134a404 	addi	r4,r4,-11632
     290:	00030a80 	call	30a8 <puts>
  printf("This software example tests the memory in your system to assure it\n");
     294:	010000b4 	movhi	r4,2
     298:	2134b104 	addi	r4,r4,-11580
     29c:	00030a80 	call	30a8 <puts>
  printf("is working properly.  This test is destructive to the contents of\n");
     2a0:	010000b4 	movhi	r4,2
     2a4:	2134c204 	addi	r4,r4,-11512
     2a8:	00030a80 	call	30a8 <puts>
  printf("the memory it tests. Assure the memory being tested does not contain\n");
     2ac:	010000b4 	movhi	r4,2
     2b0:	2134d304 	addi	r4,r4,-11444
     2b4:	00030a80 	call	30a8 <puts>
  printf("the executable or data sections of this code or the exception address\n");
     2b8:	010000b4 	movhi	r4,2
     2bc:	2134e504 	addi	r4,r4,-11372
     2c0:	00030a80 	call	30a8 <puts>
  printf("of the system.\n");
     2c4:	010000b4 	movhi	r4,2
     2c8:	2134f704 	addi	r4,r4,-11300
     2cc:	00030a80 	call	30a8 <puts>
}
     2d0:	0001883a 	nop
     2d4:	e037883a 	mov	sp,fp
     2d8:	dfc00117 	ldw	ra,4(sp)
     2dc:	df000017 	ldw	fp,0(sp)
     2e0:	dec00204 	addi	sp,sp,8
     2e4:	f800283a 	ret

000002e8 <MenuBegin>:
*
*  Purpose: Prints the top portion of the menu.
*
******************************************************************/
static void MenuBegin( char *title )
{
     2e8:	defffd04 	addi	sp,sp,-12
     2ec:	dfc00215 	stw	ra,8(sp)
     2f0:	df000115 	stw	fp,4(sp)
     2f4:	df000104 	addi	fp,sp,4
     2f8:	e13fff15 	stw	r4,-4(fp)
  printf("\n\n");
     2fc:	010000b4 	movhi	r4,2
     300:	2134a304 	addi	r4,r4,-11636
     304:	00030a80 	call	30a8 <puts>
  printf("----------------------------------\n");
     308:	010000b4 	movhi	r4,2
     30c:	2134fb04 	addi	r4,r4,-11284
     310:	00030a80 	call	30a8 <puts>
  printf("%s\n",title);
     314:	e13fff17 	ldw	r4,-4(fp)
     318:	00030a80 	call	30a8 <puts>
  printf("----------------------------------\n");
     31c:	010000b4 	movhi	r4,2
     320:	2134fb04 	addi	r4,r4,-11284
     324:	00030a80 	call	30a8 <puts>
}
     328:	0001883a 	nop
     32c:	e037883a 	mov	sp,fp
     330:	dfc00117 	ldw	ra,4(sp)
     334:	df000017 	ldw	fp,0(sp)
     338:	dec00204 	addi	sp,sp,8
     33c:	f800283a 	ret

00000340 <MenuItem>:
*  Purpose: Prints selection items in the menu, enumerated by the 
*           specified letter.
*
******************************************************************/
static void MenuItem( char letter, char *name )
{
     340:	defffc04 	addi	sp,sp,-16
     344:	dfc00315 	stw	ra,12(sp)
     348:	df000215 	stw	fp,8(sp)
     34c:	df000204 	addi	fp,sp,8
     350:	2005883a 	mov	r2,r4
     354:	e17fff15 	stw	r5,-4(fp)
     358:	e0bffe05 	stb	r2,-8(fp)
  printf("     %c:  %s\n" ,letter, name);
     35c:	e0bffe07 	ldb	r2,-8(fp)
     360:	e1bfff17 	ldw	r6,-4(fp)
     364:	100b883a 	mov	r5,r2
     368:	010000b4 	movhi	r4,2
     36c:	21350404 	addi	r4,r4,-11248
     370:	0002f8c0 	call	2f8c <printf>
}
     374:	0001883a 	nop
     378:	e037883a 	mov	sp,fp
     37c:	dfc00117 	ldw	ra,4(sp)
     380:	df000017 	ldw	fp,0(sp)
     384:	dec00204 	addi	sp,sp,8
     388:	f800283a 	ret

0000038c <GetInputString>:
*           returns the string, minus any '\r' characters it 
*           encounters.
*
******************************************************************/
void GetInputString( char* entry, int size, FILE * stream )
{
     38c:	defff904 	addi	sp,sp,-28
     390:	dfc00615 	stw	ra,24(sp)
     394:	df000515 	stw	fp,20(sp)
     398:	df000504 	addi	fp,sp,20
     39c:	e13ffd15 	stw	r4,-12(fp)
     3a0:	e17ffe15 	stw	r5,-8(fp)
     3a4:	e1bfff15 	stw	r6,-4(fp)
  int i;
  int ch = 0;
     3a8:	e03ffc15 	stw	zero,-16(fp)
  
  for(i = 0; (ch != '\n') && (i < size); )
     3ac:	e03ffb15 	stw	zero,-20(fp)
     3b0:	00000e06 	br	3ec <GetInputString+0x60>
  {
    if( (ch = getc(stream)) != '\r')
     3b4:	e13fff17 	ldw	r4,-4(fp)
     3b8:	00024dc0 	call	24dc <getc>
     3bc:	e0bffc15 	stw	r2,-16(fp)
     3c0:	e0bffc17 	ldw	r2,-16(fp)
     3c4:	10800360 	cmpeqi	r2,r2,13
     3c8:	1000081e 	bne	r2,zero,3ec <GetInputString+0x60>
    {
      entry[i] = ch;
     3cc:	e0bffb17 	ldw	r2,-20(fp)
     3d0:	e0fffd17 	ldw	r3,-12(fp)
     3d4:	1885883a 	add	r2,r3,r2
     3d8:	e0fffc17 	ldw	r3,-16(fp)
     3dc:	10c00005 	stb	r3,0(r2)
      i++;
     3e0:	e0bffb17 	ldw	r2,-20(fp)
     3e4:	10800044 	addi	r2,r2,1
     3e8:	e0bffb15 	stw	r2,-20(fp)
void GetInputString( char* entry, int size, FILE * stream )
{
  int i;
  int ch = 0;
  
  for(i = 0; (ch != '\n') && (i < size); )
     3ec:	e0bffc17 	ldw	r2,-16(fp)
     3f0:	108002a0 	cmpeqi	r2,r2,10
     3f4:	1000031e 	bne	r2,zero,404 <GetInputString+0x78>
     3f8:	e0fffb17 	ldw	r3,-20(fp)
     3fc:	e0bffe17 	ldw	r2,-8(fp)
     400:	18bfec16 	blt	r3,r2,3b4 <__alt_mem_epcs_flash_controller_0+0xff7ff3b4>
    {
      entry[i] = ch;
      i++;
    }
  }
}
     404:	0001883a 	nop
     408:	e037883a 	mov	sp,fp
     40c:	dfc00117 	ldw	ra,4(sp)
     410:	df000017 	ldw	fp,0(sp)
     414:	dec00204 	addi	sp,sp,8
     418:	f800283a 	ret

0000041c <MenuEnd>:
*  Purpose: Prints the end of the menu, then captures and returns
*           the user's selection.
*
******************************************************************/
static int MenuEnd( char lowLetter, char highLetter )
{
     41c:	defffc04 	addi	sp,sp,-16
     420:	dfc00315 	stw	ra,12(sp)
     424:	df000215 	stw	fp,8(sp)
     428:	df000204 	addi	fp,sp,8
     42c:	2007883a 	mov	r3,r4
     430:	2805883a 	mov	r2,r5
     434:	e0fffe05 	stb	r3,-8(fp)
     438:	e0bfff05 	stb	r2,-4(fp)
  static char entry[4];
  static char ch;

  printf("     q:  Exit\n");
     43c:	010000b4 	movhi	r4,2
     440:	21350804 	addi	r4,r4,-11232
     444:	00030a80 	call	30a8 <puts>
  printf("----------------------------------\n");
     448:	010000b4 	movhi	r4,2
     44c:	2134fb04 	addi	r4,r4,-11284
     450:	00030a80 	call	30a8 <puts>
  printf("\nSelect Choice (%c-%c): [Followed by <enter>]",lowLetter,highLetter);
     454:	e0bffe07 	ldb	r2,-8(fp)
     458:	e0ffff07 	ldb	r3,-4(fp)
     45c:	180d883a 	mov	r6,r3
     460:	100b883a 	mov	r5,r2
     464:	010000b4 	movhi	r4,2
     468:	21350c04 	addi	r4,r4,-11216
     46c:	0002f8c0 	call	2f8c <printf>

  GetInputString( entry, sizeof(entry), stdin );
     470:	d0a00117 	ldw	r2,-32764(gp)
     474:	10800117 	ldw	r2,4(r2)
     478:	100d883a 	mov	r6,r2
     47c:	01400104 	movi	r5,4
     480:	d1270604 	addi	r4,gp,-25576
     484:	000038c0 	call	38c <GetInputString>
  if(sscanf(entry, "%c\n", &ch))
     488:	d1a70704 	addi	r6,gp,-25572
     48c:	014000b4 	movhi	r5,2
     490:	29751804 	addi	r5,r5,-11168
     494:	d1270604 	addi	r4,gp,-25576
     498:	00031980 	call	3198 <sscanf>
     49c:	10001726 	beq	r2,zero,4fc <MenuEnd+0xe0>
  {
    if( ch >= 'A' && ch <= 'Z' )
     4a0:	d0a70703 	ldbu	r2,-25572(gp)
     4a4:	10803fcc 	andi	r2,r2,255
     4a8:	1080201c 	xori	r2,r2,128
     4ac:	10bfe004 	addi	r2,r2,-128
     4b0:	10801050 	cmplti	r2,r2,65
     4b4:	1000091e 	bne	r2,zero,4dc <MenuEnd+0xc0>
     4b8:	d0a70703 	ldbu	r2,-25572(gp)
     4bc:	10803fcc 	andi	r2,r2,255
     4c0:	1080201c 	xori	r2,r2,128
     4c4:	10bfe004 	addi	r2,r2,-128
     4c8:	108016c8 	cmpgei	r2,r2,91
     4cc:	1000031e 	bne	r2,zero,4dc <MenuEnd+0xc0>
      ch += 'a' - 'A';
     4d0:	d0a70703 	ldbu	r2,-25572(gp)
     4d4:	10800804 	addi	r2,r2,32
     4d8:	d0a70705 	stb	r2,-25572(gp)
    if( ch == 27 )
     4dc:	d0a70703 	ldbu	r2,-25572(gp)
     4e0:	10803fcc 	andi	r2,r2,255
     4e4:	1080201c 	xori	r2,r2,128
     4e8:	10bfe004 	addi	r2,r2,-128
     4ec:	108006d8 	cmpnei	r2,r2,27
     4f0:	1000021e 	bne	r2,zero,4fc <MenuEnd+0xe0>
      ch = 'q';
     4f4:	00801c44 	movi	r2,113
     4f8:	d0a70705 	stb	r2,-25572(gp)
  }
  return ch;
     4fc:	d0a70703 	ldbu	r2,-25572(gp)
     500:	10803fcc 	andi	r2,r2,255
     504:	1080201c 	xori	r2,r2,128
     508:	10bfe004 	addi	r2,r2,-128
}
     50c:	e037883a 	mov	sp,fp
     510:	dfc00117 	ldw	ra,4(sp)
     514:	df000017 	ldw	fp,0(sp)
     518:	dec00204 	addi	sp,sp,8
     51c:	f800283a 	ret

00000520 <MemGetAddressRange>:
*
*  Purpose: Gathers a range of memory from the user.
*
******************************************************************/
static int MemGetAddressRange(int* base_address, int* end_address)
{
     520:	defff904 	addi	sp,sp,-28
     524:	dfc00615 	stw	ra,24(sp)
     528:	df000515 	stw	fp,20(sp)
     52c:	df000504 	addi	fp,sp,20
     530:	e13ffe15 	stw	r4,-8(fp)
     534:	e17fff15 	stw	r5,-4(fp)
  char line[12];

  while(1)
  {
    /* Get the base address */
    printf("Base address to start memory test: (i.e. 0x800000)\n");
     538:	010000b4 	movhi	r4,2
     53c:	21351904 	addi	r4,r4,-11164
     540:	00030a80 	call	30a8 <puts>
    printf(">");
     544:	01000f84 	movi	r4,62
     548:	0002fd00 	call	2fd0 <putchar>

    GetInputString( line, sizeof(line), stdin );
     54c:	d0a00117 	ldw	r2,-32764(gp)
     550:	10800117 	ldw	r2,4(r2)
     554:	100d883a 	mov	r6,r2
     558:	01400304 	movi	r5,12
     55c:	e13ffb04 	addi	r4,fp,-20
     560:	000038c0 	call	38c <GetInputString>
   
    /* Check the format to make sure it was entered as hex */
    if(sscanf(line, "0x%X", base_address) != 1)
     564:	e1bffe17 	ldw	r6,-8(fp)
     568:	014000b4 	movhi	r5,2
     56c:	29752604 	addi	r5,r5,-11112
     570:	e13ffb04 	addi	r4,fp,-20
     574:	00031980 	call	3198 <sscanf>
     578:	10800060 	cmpeqi	r2,r2,1
     57c:	1000061e 	bne	r2,zero,598 <MemGetAddressRange+0x78>
    {
      printf("%s\n", line);
     580:	e13ffb04 	addi	r4,fp,-20
     584:	00030a80 	call	30a8 <puts>
      printf(" -ERROR: Invalid base address entered.  Address must be in the form '0x800000'\n\n");
     588:	010000b4 	movhi	r4,2
     58c:	21352804 	addi	r4,r4,-11104
     590:	00030a80 	call	30a8 <puts>
      continue;
     594:	00001f06 	br	614 <MemGetAddressRange+0xf4>
    }
    
    /* Get the end address */
    printf("End Address:\n");
     598:	010000b4 	movhi	r4,2
     59c:	21353c04 	addi	r4,r4,-11024
     5a0:	00030a80 	call	30a8 <puts>
    printf(">");
     5a4:	01000f84 	movi	r4,62
     5a8:	0002fd00 	call	2fd0 <putchar>

    GetInputString( line, sizeof(line), stdin );
     5ac:	d0a00117 	ldw	r2,-32764(gp)
     5b0:	10800117 	ldw	r2,4(r2)
     5b4:	100d883a 	mov	r6,r2
     5b8:	01400304 	movi	r5,12
     5bc:	e13ffb04 	addi	r4,fp,-20
     5c0:	000038c0 	call	38c <GetInputString>
    
    /* Check the format to make sure it was entered as hex */
    if(sscanf(line, "0x%X", end_address) != 1)
     5c4:	e1bfff17 	ldw	r6,-4(fp)
     5c8:	014000b4 	movhi	r5,2
     5cc:	29752604 	addi	r5,r5,-11112
     5d0:	e13ffb04 	addi	r4,fp,-20
     5d4:	00031980 	call	3198 <sscanf>
     5d8:	10800060 	cmpeqi	r2,r2,1
     5dc:	1000041e 	bne	r2,zero,5f0 <MemGetAddressRange+0xd0>
    {
      printf(" -ERROR: Invalid end address entered.  Address must be in the form '0x8FFFFF'\n\n");
     5e0:	010000b4 	movhi	r4,2
     5e4:	21354004 	addi	r4,r4,-11008
     5e8:	00030a80 	call	30a8 <puts>
      continue;
     5ec:	00000906 	br	614 <MemGetAddressRange+0xf4>
    }
    
    /* Make sure end address is greater than base address. */
    if (*end_address <= *base_address)
     5f0:	e0bfff17 	ldw	r2,-4(fp)
     5f4:	10800017 	ldw	r2,0(r2)
     5f8:	e0fffe17 	ldw	r3,-8(fp)
     5fc:	18c00017 	ldw	r3,0(r3)
     600:	18800516 	blt	r3,r2,618 <MemGetAddressRange+0xf8>
    {
      printf(" -ERROR: End address must be greater than the start address\n\n");
     604:	010000b4 	movhi	r4,2
     608:	21355404 	addi	r4,r4,-10928
     60c:	00030a80 	call	30a8 <puts>

      continue;
     610:	0001883a 	nop
    }
    break;
  }
     614:	003fc806 	br	538 <__alt_mem_epcs_flash_controller_0+0xff7ff538>
    {
      printf(" -ERROR: End address must be greater than the start address\n\n");

      continue;
    }
    break;
     618:	0001883a 	nop
  }

  return(0);
     61c:	0005883a 	mov	r2,zero
}
     620:	e037883a 	mov	sp,fp
     624:	dfc00117 	ldw	ra,4(sp)
     628:	df000017 	ldw	fp,0(sp)
     62c:	dec00204 	addi	sp,sp,8
     630:	f800283a 	ret

00000634 <MemTestDataBus>:
*  Purpose: Tests that the data bus is connected with no 
*           stuck-at's, shorts, or open circuits.
*
******************************************************************/
static int MemTestDataBus(unsigned int address)
{
     634:	defffc04 	addi	sp,sp,-16
     638:	df000315 	stw	fp,12(sp)
     63c:	df000304 	addi	fp,sp,12
     640:	e13fff15 	stw	r4,-4(fp)
  unsigned int pattern;
  unsigned int ret_code = 0x0;
     644:	e03ffe15 	stw	zero,-8(fp)

  /* Perform a walking 1's test at the given address. */
  for (pattern = 1; pattern != 0; pattern <<= 1)
     648:	00800044 	movi	r2,1
     64c:	e0bffd15 	stw	r2,-12(fp)
     650:	00000e06 	br	68c <MemTestDataBus+0x58>
  {
    /* Write the test pattern. */
    IOWR_32DIRECT(address, 0, pattern);
     654:	e0bfff17 	ldw	r2,-4(fp)
     658:	e0fffd17 	ldw	r3,-12(fp)
     65c:	10c00035 	stwio	r3,0(r2)

    /* Read it back (immediately is okay for this test). */
    if (IORD_32DIRECT(address, 0) != pattern)
     660:	e0bfff17 	ldw	r2,-4(fp)
     664:	10800037 	ldwio	r2,0(r2)
     668:	1007883a 	mov	r3,r2
     66c:	e0bffd17 	ldw	r2,-12(fp)
     670:	18800326 	beq	r3,r2,680 <MemTestDataBus+0x4c>
    {
      ret_code = pattern;
     674:	e0bffd17 	ldw	r2,-12(fp)
     678:	e0bffe15 	stw	r2,-8(fp)
      break;
     67c:	00000506 	br	694 <MemTestDataBus+0x60>
{
  unsigned int pattern;
  unsigned int ret_code = 0x0;

  /* Perform a walking 1's test at the given address. */
  for (pattern = 1; pattern != 0; pattern <<= 1)
     680:	e0bffd17 	ldw	r2,-12(fp)
     684:	1085883a 	add	r2,r2,r2
     688:	e0bffd15 	stw	r2,-12(fp)
     68c:	e0bffd17 	ldw	r2,-12(fp)
     690:	103ff01e 	bne	r2,zero,654 <__alt_mem_epcs_flash_controller_0+0xff7ff654>
    {
      ret_code = pattern;
      break;
    }
  }
  return ret_code;
     694:	e0bffe17 	ldw	r2,-8(fp)
}
     698:	e037883a 	mov	sp,fp
     69c:	df000017 	ldw	fp,0(sp)
     6a0:	dec00104 	addi	sp,sp,4
     6a4:	f800283a 	ret

000006a8 <MemTestAddressBus>:
*  Purpose: Tests that the address bus is connected with no 
*           stuck-at's, shorts, or open circuits.
*
******************************************************************/
static int MemTestAddressBus(unsigned int memory_base, unsigned int nBytes)
{
     6a8:	defff704 	addi	sp,sp,-36
     6ac:	df000815 	stw	fp,32(sp)
     6b0:	df000804 	addi	fp,sp,32
     6b4:	e13ffe15 	stw	r4,-8(fp)
     6b8:	e17fff15 	stw	r5,-4(fp)
  unsigned int address_mask = (nBytes - 1);
     6bc:	e0bfff17 	ldw	r2,-4(fp)
     6c0:	10bfffc4 	addi	r2,r2,-1
     6c4:	e0bffb15 	stw	r2,-20(fp)
  unsigned int offset;
  unsigned int test_offset;

  unsigned int pattern     = 0xAAAAAAAA;
     6c8:	00aaaaf4 	movhi	r2,43691
     6cc:	10aaaa84 	addi	r2,r2,-21846
     6d0:	e0bffc15 	stw	r2,-16(fp)
  unsigned int antipattern  = 0x55555555;
     6d4:	00955574 	movhi	r2,21845
     6d8:	10955544 	addi	r2,r2,21845
     6dc:	e0bffd15 	stw	r2,-12(fp)

  unsigned int ret_code = 0x0;
     6e0:	e03ffa15 	stw	zero,-24(fp)

  /* Write the default pattern at each of the power-of-two offsets. */
  for (offset = sizeof(unsigned int); (offset & address_mask) != 0; offset <<= 1)
     6e4:	00800104 	movi	r2,4
     6e8:	e0bff815 	stw	r2,-32(fp)
     6ec:	00000906 	br	714 <MemTestAddressBus+0x6c>
  {
    IOWR_32DIRECT(memory_base, offset, pattern);
     6f0:	e0fff817 	ldw	r3,-32(fp)
     6f4:	e0bffe17 	ldw	r2,-8(fp)
     6f8:	1885883a 	add	r2,r3,r2
     6fc:	1007883a 	mov	r3,r2
     700:	e0bffc17 	ldw	r2,-16(fp)
     704:	18800035 	stwio	r2,0(r3)
  unsigned int antipattern  = 0x55555555;

  unsigned int ret_code = 0x0;

  /* Write the default pattern at each of the power-of-two offsets. */
  for (offset = sizeof(unsigned int); (offset & address_mask) != 0; offset <<= 1)
     708:	e0bff817 	ldw	r2,-32(fp)
     70c:	1085883a 	add	r2,r2,r2
     710:	e0bff815 	stw	r2,-32(fp)
     714:	e0fff817 	ldw	r3,-32(fp)
     718:	e0bffb17 	ldw	r2,-20(fp)
     71c:	1884703a 	and	r2,r3,r2
     720:	103ff31e 	bne	r2,zero,6f0 <__alt_mem_epcs_flash_controller_0+0xff7ff6f0>
  {
    IOWR_32DIRECT(memory_base, offset, pattern);
  }

  /* Check for address bits stuck high. */
  test_offset = 0;
     724:	e03ff915 	stw	zero,-28(fp)
  IOWR_32DIRECT(memory_base, test_offset, antipattern);
     728:	e0fff917 	ldw	r3,-28(fp)
     72c:	e0bffe17 	ldw	r2,-8(fp)
     730:	1885883a 	add	r2,r3,r2
     734:	1007883a 	mov	r3,r2
     738:	e0bffd17 	ldw	r2,-12(fp)
     73c:	18800035 	stwio	r2,0(r3)
  for (offset = sizeof(unsigned int); (offset & address_mask) != 0; offset <<= 1)
     740:	00800104 	movi	r2,4
     744:	e0bff815 	stw	r2,-32(fp)
     748:	00000f06 	br	788 <MemTestAddressBus+0xe0>
  {
     if (IORD_32DIRECT(memory_base, offset) != pattern)
     74c:	e0fff817 	ldw	r3,-32(fp)
     750:	e0bffe17 	ldw	r2,-8(fp)
     754:	1885883a 	add	r2,r3,r2
     758:	10800037 	ldwio	r2,0(r2)
     75c:	1007883a 	mov	r3,r2
     760:	e0bffc17 	ldw	r2,-16(fp)
     764:	18800526 	beq	r3,r2,77c <MemTestAddressBus+0xd4>
     {
        ret_code = (memory_base+offset);
     768:	e0fffe17 	ldw	r3,-8(fp)
     76c:	e0bff817 	ldw	r2,-32(fp)
     770:	1885883a 	add	r2,r3,r2
     774:	e0bffa15 	stw	r2,-24(fp)
        break;
     778:	00000706 	br	798 <MemTestAddressBus+0xf0>
  }

  /* Check for address bits stuck high. */
  test_offset = 0;
  IOWR_32DIRECT(memory_base, test_offset, antipattern);
  for (offset = sizeof(unsigned int); (offset & address_mask) != 0; offset <<= 1)
     77c:	e0bff817 	ldw	r2,-32(fp)
     780:	1085883a 	add	r2,r2,r2
     784:	e0bff815 	stw	r2,-32(fp)
     788:	e0fff817 	ldw	r3,-32(fp)
     78c:	e0bffb17 	ldw	r2,-20(fp)
     790:	1884703a 	and	r2,r3,r2
     794:	103fed1e 	bne	r2,zero,74c <__alt_mem_epcs_flash_controller_0+0xff7ff74c>
        break;
     }
  }

  /* Check for address bits stuck low or shorted. */
  IOWR_32DIRECT(memory_base, test_offset, pattern);
     798:	e0fff917 	ldw	r3,-28(fp)
     79c:	e0bffe17 	ldw	r2,-8(fp)
     7a0:	1885883a 	add	r2,r3,r2
     7a4:	1007883a 	mov	r3,r2
     7a8:	e0bffc17 	ldw	r2,-16(fp)
     7ac:	18800035 	stwio	r2,0(r3)
  for (test_offset = sizeof(unsigned int); (test_offset & address_mask) != 0; test_offset <<= 1)
     7b0:	00800104 	movi	r2,4
     7b4:	e0bff915 	stw	r2,-28(fp)
     7b8:	00002a06 	br	864 <MemTestAddressBus+0x1bc>
  {
    if (!ret_code)
     7bc:	e0bffa17 	ldw	r2,-24(fp)
     7c0:	1000251e 	bne	r2,zero,858 <MemTestAddressBus+0x1b0>
    {
      IOWR_32DIRECT(memory_base, test_offset, antipattern);
     7c4:	e0fff917 	ldw	r3,-28(fp)
     7c8:	e0bffe17 	ldw	r2,-8(fp)
     7cc:	1885883a 	add	r2,r3,r2
     7d0:	1007883a 	mov	r3,r2
     7d4:	e0bffd17 	ldw	r2,-12(fp)
     7d8:	18800035 	stwio	r2,0(r3)
      for (offset = sizeof(unsigned int); (offset & address_mask) != 0; offset <<= 1)
     7dc:	00800104 	movi	r2,4
     7e0:	e0bff815 	stw	r2,-32(fp)
     7e4:	00001206 	br	830 <MemTestAddressBus+0x188>
      {
        if ((IORD_32DIRECT(memory_base, offset) != pattern) && (offset != test_offset))
     7e8:	e0fff817 	ldw	r3,-32(fp)
     7ec:	e0bffe17 	ldw	r2,-8(fp)
     7f0:	1885883a 	add	r2,r3,r2
     7f4:	10800037 	ldwio	r2,0(r2)
     7f8:	1007883a 	mov	r3,r2
     7fc:	e0bffc17 	ldw	r2,-16(fp)
     800:	18800826 	beq	r3,r2,824 <MemTestAddressBus+0x17c>
     804:	e0fff817 	ldw	r3,-32(fp)
     808:	e0bff917 	ldw	r2,-28(fp)
     80c:	18800526 	beq	r3,r2,824 <MemTestAddressBus+0x17c>
        {
          ret_code = (memory_base + test_offset);
     810:	e0fffe17 	ldw	r3,-8(fp)
     814:	e0bff917 	ldw	r2,-28(fp)
     818:	1885883a 	add	r2,r3,r2
     81c:	e0bffa15 	stw	r2,-24(fp)
          break;
     820:	00000706 	br	840 <MemTestAddressBus+0x198>
  for (test_offset = sizeof(unsigned int); (test_offset & address_mask) != 0; test_offset <<= 1)
  {
    if (!ret_code)
    {
      IOWR_32DIRECT(memory_base, test_offset, antipattern);
      for (offset = sizeof(unsigned int); (offset & address_mask) != 0; offset <<= 1)
     824:	e0bff817 	ldw	r2,-32(fp)
     828:	1085883a 	add	r2,r2,r2
     82c:	e0bff815 	stw	r2,-32(fp)
     830:	e0fff817 	ldw	r3,-32(fp)
     834:	e0bffb17 	ldw	r2,-20(fp)
     838:	1884703a 	and	r2,r3,r2
     83c:	103fea1e 	bne	r2,zero,7e8 <__alt_mem_epcs_flash_controller_0+0xff7ff7e8>
        {
          ret_code = (memory_base + test_offset);
          break;
        }
      }
      IOWR_32DIRECT(memory_base, test_offset, pattern);
     840:	e0fff917 	ldw	r3,-28(fp)
     844:	e0bffe17 	ldw	r2,-8(fp)
     848:	1885883a 	add	r2,r3,r2
     84c:	1007883a 	mov	r3,r2
     850:	e0bffc17 	ldw	r2,-16(fp)
     854:	18800035 	stwio	r2,0(r3)
     }
  }

  /* Check for address bits stuck low or shorted. */
  IOWR_32DIRECT(memory_base, test_offset, pattern);
  for (test_offset = sizeof(unsigned int); (test_offset & address_mask) != 0; test_offset <<= 1)
     858:	e0bff917 	ldw	r2,-28(fp)
     85c:	1085883a 	add	r2,r2,r2
     860:	e0bff915 	stw	r2,-28(fp)
     864:	e0fff917 	ldw	r3,-28(fp)
     868:	e0bffb17 	ldw	r2,-20(fp)
     86c:	1884703a 	and	r2,r3,r2
     870:	103fd21e 	bne	r2,zero,7bc <__alt_mem_epcs_flash_controller_0+0xff7ff7bc>
      }
      IOWR_32DIRECT(memory_base, test_offset, pattern);
    }
  }

  return ret_code;
     874:	e0bffa17 	ldw	r2,-24(fp)
}
     878:	e037883a 	mov	sp,fp
     87c:	df000017 	ldw	fp,0(sp)
     880:	dec00104 	addi	sp,sp,4
     884:	f800283a 	ret

00000888 <MemTest8_16BitAccess>:
*           can be read and written in both byte and half-word 
*           modes.
*
******************************************************************/
static int MemTest8_16BitAccess(unsigned int memory_base)
{
     888:	defffd04 	addi	sp,sp,-12
     88c:	df000215 	stw	fp,8(sp)
     890:	df000204 	addi	fp,sp,8
     894:	e13fff15 	stw	r4,-4(fp)
  int ret_code = 0x0;
     898:	e03ffe15 	stw	zero,-8(fp)

  /* Write 4 bytes */
  IOWR_8DIRECT(memory_base, 0, 0x0A);
     89c:	e0bfff17 	ldw	r2,-4(fp)
     8a0:	00c00284 	movi	r3,10
     8a4:	10c00025 	stbio	r3,0(r2)
  IOWR_8DIRECT(memory_base, 1, 0x05);
     8a8:	e0bfff17 	ldw	r2,-4(fp)
     8ac:	10800044 	addi	r2,r2,1
     8b0:	1007883a 	mov	r3,r2
     8b4:	00800144 	movi	r2,5
     8b8:	18800025 	stbio	r2,0(r3)
  IOWR_8DIRECT(memory_base, 2, 0xA0);
     8bc:	e0bfff17 	ldw	r2,-4(fp)
     8c0:	10800084 	addi	r2,r2,2
     8c4:	1007883a 	mov	r3,r2
     8c8:	00bfe804 	movi	r2,-96
     8cc:	18800025 	stbio	r2,0(r3)
  IOWR_8DIRECT(memory_base, 3, 0x50);
     8d0:	e0bfff17 	ldw	r2,-4(fp)
     8d4:	108000c4 	addi	r2,r2,3
     8d8:	1007883a 	mov	r3,r2
     8dc:	00801404 	movi	r2,80
     8e0:	18800025 	stbio	r2,0(r3)

  /* Read it back as one word */
  if(IORD_32DIRECT(memory_base, 0) != 0x50A0050A)
     8e4:	e0bfff17 	ldw	r2,-4(fp)
     8e8:	10c00037 	ldwio	r3,0(r2)
     8ec:	00942834 	movhi	r2,20640
     8f0:	10814284 	addi	r2,r2,1290
     8f4:	18800226 	beq	r3,r2,900 <MemTest8_16BitAccess+0x78>
  {
    ret_code = memory_base;
     8f8:	e0bfff17 	ldw	r2,-4(fp)
     8fc:	e0bffe15 	stw	r2,-8(fp)
  }

  /* Read it back as two half-words */
  if (!ret_code)
     900:	e0bffe17 	ldw	r2,-8(fp)
     904:	10000d1e 	bne	r2,zero,93c <MemTest8_16BitAccess+0xb4>
  {
    if ((IORD_16DIRECT(memory_base, 2) != 0x50A0) ||
     908:	e0bfff17 	ldw	r2,-4(fp)
     90c:	10800084 	addi	r2,r2,2
     910:	1080002b 	ldhuio	r2,0(r2)
     914:	10bfffcc 	andi	r2,r2,65535
     918:	10942818 	cmpnei	r2,r2,20640
     91c:	1000051e 	bne	r2,zero,934 <MemTest8_16BitAccess+0xac>
        (IORD_16DIRECT(memory_base, 0) != 0x050A))
     920:	e0bfff17 	ldw	r2,-4(fp)
     924:	1080002b 	ldhuio	r2,0(r2)
     928:	10bfffcc 	andi	r2,r2,65535
  }

  /* Read it back as two half-words */
  if (!ret_code)
  {
    if ((IORD_16DIRECT(memory_base, 2) != 0x50A0) ||
     92c:	108142a0 	cmpeqi	r2,r2,1290
     930:	1000021e 	bne	r2,zero,93c <MemTest8_16BitAccess+0xb4>
        (IORD_16DIRECT(memory_base, 0) != 0x050A))
    {
      ret_code = memory_base;
     934:	e0bfff17 	ldw	r2,-4(fp)
     938:	e0bffe15 	stw	r2,-8(fp)
    }
  }

  /* Read it back as 4 bytes */
  if (!ret_code)
     93c:	e0bffe17 	ldw	r2,-8(fp)
     940:	1000191e 	bne	r2,zero,9a8 <MemTest8_16BitAccess+0x120>
  {
    if ((IORD_8DIRECT(memory_base, 3) != 0x50) ||
     944:	e0bfff17 	ldw	r2,-4(fp)
     948:	108000c4 	addi	r2,r2,3
     94c:	10800023 	ldbuio	r2,0(r2)
     950:	10803fcc 	andi	r2,r2,255
     954:	10801418 	cmpnei	r2,r2,80
     958:	1000111e 	bne	r2,zero,9a0 <MemTest8_16BitAccess+0x118>
        (IORD_8DIRECT(memory_base, 2) != 0xA0) ||
     95c:	e0bfff17 	ldw	r2,-4(fp)
     960:	10800084 	addi	r2,r2,2
     964:	10800023 	ldbuio	r2,0(r2)
     968:	10803fcc 	andi	r2,r2,255
  }

  /* Read it back as 4 bytes */
  if (!ret_code)
  {
    if ((IORD_8DIRECT(memory_base, 3) != 0x50) ||
     96c:	10802818 	cmpnei	r2,r2,160
     970:	10000b1e 	bne	r2,zero,9a0 <MemTest8_16BitAccess+0x118>
        (IORD_8DIRECT(memory_base, 2) != 0xA0) ||
        (IORD_8DIRECT(memory_base, 1) != 0x05) ||
     974:	e0bfff17 	ldw	r2,-4(fp)
     978:	10800044 	addi	r2,r2,1
     97c:	10800023 	ldbuio	r2,0(r2)
     980:	10803fcc 	andi	r2,r2,255

  /* Read it back as 4 bytes */
  if (!ret_code)
  {
    if ((IORD_8DIRECT(memory_base, 3) != 0x50) ||
        (IORD_8DIRECT(memory_base, 2) != 0xA0) ||
     984:	10800158 	cmpnei	r2,r2,5
     988:	1000051e 	bne	r2,zero,9a0 <MemTest8_16BitAccess+0x118>
        (IORD_8DIRECT(memory_base, 1) != 0x05) ||
        (IORD_8DIRECT(memory_base, 0) != 0x0A))
     98c:	e0bfff17 	ldw	r2,-4(fp)
     990:	10800023 	ldbuio	r2,0(r2)
     994:	10803fcc 	andi	r2,r2,255
  /* Read it back as 4 bytes */
  if (!ret_code)
  {
    if ((IORD_8DIRECT(memory_base, 3) != 0x50) ||
        (IORD_8DIRECT(memory_base, 2) != 0xA0) ||
        (IORD_8DIRECT(memory_base, 1) != 0x05) ||
     998:	108002a0 	cmpeqi	r2,r2,10
     99c:	1000021e 	bne	r2,zero,9a8 <MemTest8_16BitAccess+0x120>
        (IORD_8DIRECT(memory_base, 0) != 0x0A))
    {
    ret_code = memory_base;
     9a0:	e0bfff17 	ldw	r2,-4(fp)
     9a4:	e0bffe15 	stw	r2,-8(fp)
    }
  }

  /* Write 2 half-words */
  if (!ret_code)
     9a8:	e0bffe17 	ldw	r2,-8(fp)
     9ac:	10000f1e 	bne	r2,zero,9ec <MemTest8_16BitAccess+0x164>
  {
    IOWR_16DIRECT(memory_base, 0, 0x50A0);
     9b0:	e0bfff17 	ldw	r2,-4(fp)
     9b4:	00d42804 	movi	r3,20640
     9b8:	10c0002d 	sthio	r3,0(r2)
    IOWR_16DIRECT(memory_base, 2, 0x050A);
     9bc:	e0bfff17 	ldw	r2,-4(fp)
     9c0:	10800084 	addi	r2,r2,2
     9c4:	1007883a 	mov	r3,r2
     9c8:	00814284 	movi	r2,1290
     9cc:	1880002d 	sthio	r2,0(r3)

    /* Read it back as one word */
    if(IORD_32DIRECT(memory_base, 0) != 0x050A50A0)
     9d0:	e0bfff17 	ldw	r2,-4(fp)
     9d4:	10c00037 	ldwio	r3,0(r2)
     9d8:	008142b4 	movhi	r2,1290
     9dc:	10942804 	addi	r2,r2,20640
     9e0:	18800226 	beq	r3,r2,9ec <MemTest8_16BitAccess+0x164>
    {
      ret_code = memory_base;
     9e4:	e0bfff17 	ldw	r2,-4(fp)
     9e8:	e0bffe15 	stw	r2,-8(fp)
    }
  }

  /* Read it back as two half-words */
  if (!ret_code)
     9ec:	e0bffe17 	ldw	r2,-8(fp)
     9f0:	10000d1e 	bne	r2,zero,a28 <MemTest8_16BitAccess+0x1a0>
  {
    if ((IORD_16DIRECT(memory_base, 2) != 0x050A) ||
     9f4:	e0bfff17 	ldw	r2,-4(fp)
     9f8:	10800084 	addi	r2,r2,2
     9fc:	1080002b 	ldhuio	r2,0(r2)
     a00:	10bfffcc 	andi	r2,r2,65535
     a04:	10814298 	cmpnei	r2,r2,1290
     a08:	1000051e 	bne	r2,zero,a20 <MemTest8_16BitAccess+0x198>
        (IORD_16DIRECT(memory_base, 0) != 0x50A0))
     a0c:	e0bfff17 	ldw	r2,-4(fp)
     a10:	1080002b 	ldhuio	r2,0(r2)
     a14:	10bfffcc 	andi	r2,r2,65535
  }

  /* Read it back as two half-words */
  if (!ret_code)
  {
    if ((IORD_16DIRECT(memory_base, 2) != 0x050A) ||
     a18:	10942820 	cmpeqi	r2,r2,20640
     a1c:	1000021e 	bne	r2,zero,a28 <MemTest8_16BitAccess+0x1a0>
        (IORD_16DIRECT(memory_base, 0) != 0x50A0))
    {
      ret_code = memory_base;
     a20:	e0bfff17 	ldw	r2,-4(fp)
     a24:	e0bffe15 	stw	r2,-8(fp)
    }
  }

  /* Read it back as 4 bytes */
  if (!ret_code)
     a28:	e0bffe17 	ldw	r2,-8(fp)
     a2c:	1000191e 	bne	r2,zero,a94 <MemTest8_16BitAccess+0x20c>
  {
    if ((IORD_8DIRECT(memory_base, 3) != 0x05) ||
     a30:	e0bfff17 	ldw	r2,-4(fp)
     a34:	108000c4 	addi	r2,r2,3
     a38:	10800023 	ldbuio	r2,0(r2)
     a3c:	10803fcc 	andi	r2,r2,255
     a40:	10800158 	cmpnei	r2,r2,5
     a44:	1000111e 	bne	r2,zero,a8c <MemTest8_16BitAccess+0x204>
        (IORD_8DIRECT(memory_base, 2) != 0x0A) ||
     a48:	e0bfff17 	ldw	r2,-4(fp)
     a4c:	10800084 	addi	r2,r2,2
     a50:	10800023 	ldbuio	r2,0(r2)
     a54:	10803fcc 	andi	r2,r2,255
  }

  /* Read it back as 4 bytes */
  if (!ret_code)
  {
    if ((IORD_8DIRECT(memory_base, 3) != 0x05) ||
     a58:	10800298 	cmpnei	r2,r2,10
     a5c:	10000b1e 	bne	r2,zero,a8c <MemTest8_16BitAccess+0x204>
        (IORD_8DIRECT(memory_base, 2) != 0x0A) ||
        (IORD_8DIRECT(memory_base, 1) != 0x50) ||
     a60:	e0bfff17 	ldw	r2,-4(fp)
     a64:	10800044 	addi	r2,r2,1
     a68:	10800023 	ldbuio	r2,0(r2)
     a6c:	10803fcc 	andi	r2,r2,255

  /* Read it back as 4 bytes */
  if (!ret_code)
  {
    if ((IORD_8DIRECT(memory_base, 3) != 0x05) ||
        (IORD_8DIRECT(memory_base, 2) != 0x0A) ||
     a70:	10801418 	cmpnei	r2,r2,80
     a74:	1000051e 	bne	r2,zero,a8c <MemTest8_16BitAccess+0x204>
        (IORD_8DIRECT(memory_base, 1) != 0x50) ||
        (IORD_8DIRECT(memory_base, 0) != 0xA0))
     a78:	e0bfff17 	ldw	r2,-4(fp)
     a7c:	10800023 	ldbuio	r2,0(r2)
     a80:	10803fcc 	andi	r2,r2,255
  /* Read it back as 4 bytes */
  if (!ret_code)
  {
    if ((IORD_8DIRECT(memory_base, 3) != 0x05) ||
        (IORD_8DIRECT(memory_base, 2) != 0x0A) ||
        (IORD_8DIRECT(memory_base, 1) != 0x50) ||
     a84:	10802820 	cmpeqi	r2,r2,160
     a88:	1000021e 	bne	r2,zero,a94 <MemTest8_16BitAccess+0x20c>
        (IORD_8DIRECT(memory_base, 0) != 0xA0))
    {
      ret_code = memory_base;
     a8c:	e0bfff17 	ldw	r2,-4(fp)
     a90:	e0bffe15 	stw	r2,-8(fp)
    }
  }

  return(ret_code);
     a94:	e0bffe17 	ldw	r2,-8(fp)
}
     a98:	e037883a 	mov	sp,fp
     a9c:	df000017 	ldw	fp,0(sp)
     aa0:	dec00104 	addi	sp,sp,4
     aa4:	f800283a 	ret

00000aa8 <MemTestDevice>:
*  Purpose: Tests that every bit in the memory device within the 
*           specified address range can store both a '1' and a '0'.
*
******************************************************************/
static int MemTestDevice(unsigned int memory_base, unsigned int nBytes)
{
     aa8:	defff804 	addi	sp,sp,-32
     aac:	dfc00715 	stw	ra,28(sp)
     ab0:	df000615 	stw	fp,24(sp)
     ab4:	df000604 	addi	fp,sp,24
     ab8:	e13ffe15 	stw	r4,-8(fp)
     abc:	e17fff15 	stw	r5,-4(fp)
  unsigned int offset;
  unsigned int pattern;
  unsigned int antipattern;
  unsigned int ret_code = 0x0;
     ac0:	e03ffc15 	stw	zero,-16(fp)

  /* Fill memory with a known pattern. */
  for (pattern = 1, offset = 0; offset < nBytes; pattern++, offset+=4)
     ac4:	00800044 	movi	r2,1
     ac8:	e0bffb15 	stw	r2,-20(fp)
     acc:	e03ffa15 	stw	zero,-24(fp)
     ad0:	00000c06 	br	b04 <MemTestDevice+0x5c>
  {
    IOWR_32DIRECT(memory_base, offset, pattern);
     ad4:	e0fffa17 	ldw	r3,-24(fp)
     ad8:	e0bffe17 	ldw	r2,-8(fp)
     adc:	1885883a 	add	r2,r3,r2
     ae0:	1007883a 	mov	r3,r2
     ae4:	e0bffb17 	ldw	r2,-20(fp)
     ae8:	18800035 	stwio	r2,0(r3)
  unsigned int pattern;
  unsigned int antipattern;
  unsigned int ret_code = 0x0;

  /* Fill memory with a known pattern. */
  for (pattern = 1, offset = 0; offset < nBytes; pattern++, offset+=4)
     aec:	e0bffb17 	ldw	r2,-20(fp)
     af0:	10800044 	addi	r2,r2,1
     af4:	e0bffb15 	stw	r2,-20(fp)
     af8:	e0bffa17 	ldw	r2,-24(fp)
     afc:	10800104 	addi	r2,r2,4
     b00:	e0bffa15 	stw	r2,-24(fp)
     b04:	e0fffa17 	ldw	r3,-24(fp)
     b08:	e0bfff17 	ldw	r2,-4(fp)
     b0c:	18bff136 	bltu	r3,r2,ad4 <__alt_mem_epcs_flash_controller_0+0xff7ffad4>
  {
    IOWR_32DIRECT(memory_base, offset, pattern);
  }

  printf(" .");
     b10:	010000b4 	movhi	r4,2
     b14:	21356404 	addi	r4,r4,-10864
     b18:	0002f8c0 	call	2f8c <printf>

  /* Check each location and invert it for the second pass. */
  for (pattern = 1, offset = 0; offset < nBytes; pattern++, offset+=4)
     b1c:	00800044 	movi	r2,1
     b20:	e0bffb15 	stw	r2,-20(fp)
     b24:	e03ffa15 	stw	zero,-24(fp)
     b28:	00001b06 	br	b98 <MemTestDevice+0xf0>
  {
    if (IORD_32DIRECT(memory_base, offset) != pattern)
     b2c:	e0fffa17 	ldw	r3,-24(fp)
     b30:	e0bffe17 	ldw	r2,-8(fp)
     b34:	1885883a 	add	r2,r3,r2
     b38:	10800037 	ldwio	r2,0(r2)
     b3c:	1007883a 	mov	r3,r2
     b40:	e0bffb17 	ldw	r2,-20(fp)
     b44:	18800526 	beq	r3,r2,b5c <MemTestDevice+0xb4>
    {
      ret_code = (memory_base + offset);
     b48:	e0fffe17 	ldw	r3,-8(fp)
     b4c:	e0bffa17 	ldw	r2,-24(fp)
     b50:	1885883a 	add	r2,r3,r2
     b54:	e0bffc15 	stw	r2,-16(fp)
      break;
     b58:	00001206 	br	ba4 <MemTestDevice+0xfc>
    }
    antipattern = ~pattern;
     b5c:	e0bffb17 	ldw	r2,-20(fp)
     b60:	0084303a 	nor	r2,zero,r2
     b64:	e0bffd15 	stw	r2,-12(fp)
    IOWR_32DIRECT(memory_base, offset, antipattern);
     b68:	e0fffa17 	ldw	r3,-24(fp)
     b6c:	e0bffe17 	ldw	r2,-8(fp)
     b70:	1885883a 	add	r2,r3,r2
     b74:	1007883a 	mov	r3,r2
     b78:	e0bffd17 	ldw	r2,-12(fp)
     b7c:	18800035 	stwio	r2,0(r3)
  }

  printf(" .");

  /* Check each location and invert it for the second pass. */
  for (pattern = 1, offset = 0; offset < nBytes; pattern++, offset+=4)
     b80:	e0bffb17 	ldw	r2,-20(fp)
     b84:	10800044 	addi	r2,r2,1
     b88:	e0bffb15 	stw	r2,-20(fp)
     b8c:	e0bffa17 	ldw	r2,-24(fp)
     b90:	10800104 	addi	r2,r2,4
     b94:	e0bffa15 	stw	r2,-24(fp)
     b98:	e0fffa17 	ldw	r3,-24(fp)
     b9c:	e0bfff17 	ldw	r2,-4(fp)
     ba0:	18bfe236 	bltu	r3,r2,b2c <__alt_mem_epcs_flash_controller_0+0xff7ffb2c>
    }
    antipattern = ~pattern;
    IOWR_32DIRECT(memory_base, offset, antipattern);
  }

  printf(" .");
     ba4:	010000b4 	movhi	r4,2
     ba8:	21356404 	addi	r4,r4,-10864
     bac:	0002f8c0 	call	2f8c <printf>

  /* Check each location for the inverted pattern and zero it. */
  for (pattern = 1, offset = 0; offset < nBytes; pattern++, offset+=4)
     bb0:	00800044 	movi	r2,1
     bb4:	e0bffb15 	stw	r2,-20(fp)
     bb8:	e03ffa15 	stw	zero,-24(fp)
     bbc:	00001a06 	br	c28 <MemTestDevice+0x180>
  {
    antipattern = ~pattern;
     bc0:	e0bffb17 	ldw	r2,-20(fp)
     bc4:	0084303a 	nor	r2,zero,r2
     bc8:	e0bffd15 	stw	r2,-12(fp)
    if (IORD_32DIRECT(memory_base, offset) != antipattern)
     bcc:	e0fffa17 	ldw	r3,-24(fp)
     bd0:	e0bffe17 	ldw	r2,-8(fp)
     bd4:	1885883a 	add	r2,r3,r2
     bd8:	10800037 	ldwio	r2,0(r2)
     bdc:	1007883a 	mov	r3,r2
     be0:	e0bffd17 	ldw	r2,-12(fp)
     be4:	18800526 	beq	r3,r2,bfc <MemTestDevice+0x154>
    {
      ret_code = (memory_base + offset);
     be8:	e0fffe17 	ldw	r3,-8(fp)
     bec:	e0bffa17 	ldw	r2,-24(fp)
     bf0:	1885883a 	add	r2,r3,r2
     bf4:	e0bffc15 	stw	r2,-16(fp)
      break;
     bf8:	00000e06 	br	c34 <MemTestDevice+0x18c>
    }
    IOWR_32DIRECT(memory_base, offset, 0x0);
     bfc:	e0fffa17 	ldw	r3,-24(fp)
     c00:	e0bffe17 	ldw	r2,-8(fp)
     c04:	1885883a 	add	r2,r3,r2
     c08:	0007883a 	mov	r3,zero
     c0c:	10c00035 	stwio	r3,0(r2)
  }

  printf(" .");

  /* Check each location for the inverted pattern and zero it. */
  for (pattern = 1, offset = 0; offset < nBytes; pattern++, offset+=4)
     c10:	e0bffb17 	ldw	r2,-20(fp)
     c14:	10800044 	addi	r2,r2,1
     c18:	e0bffb15 	stw	r2,-20(fp)
     c1c:	e0bffa17 	ldw	r2,-24(fp)
     c20:	10800104 	addi	r2,r2,4
     c24:	e0bffa15 	stw	r2,-24(fp)
     c28:	e0fffa17 	ldw	r3,-24(fp)
     c2c:	e0bfff17 	ldw	r2,-4(fp)
     c30:	18bfe336 	bltu	r3,r2,bc0 <__alt_mem_epcs_flash_controller_0+0xff7ffbc0>
      ret_code = (memory_base + offset);
      break;
    }
    IOWR_32DIRECT(memory_base, offset, 0x0);
  }
  return ret_code;
     c34:	e0bffc17 	ldw	r2,-16(fp)
}
     c38:	e037883a 	mov	sp,fp
     c3c:	dfc00117 	ldw	ra,4(sp)
     c40:	df000017 	ldw	fp,0(sp)
     c44:	dec00204 	addi	sp,sp,8
     c48:	f800283a 	ret

00000c4c <TestRam>:
*             - MemTestDevice
*             - MemDMATest
*
******************************************************************/
static void TestRam(void)
{
     c4c:	defffa04 	addi	sp,sp,-24
     c50:	dfc00515 	stw	ra,20(sp)
     c54:	df000415 	stw	fp,16(sp)
     c58:	df000404 	addi	fp,sp,16
  
  int memory_base, memory_end, memory_size;
  int ret_code = 0x0;
     c5c:	e03ffc15 	stw	zero,-16(fp)

  /* Find out what range of memory we are testing */
  MemGetAddressRange(&memory_base, &memory_end);
     c60:	e0ffff04 	addi	r3,fp,-4
     c64:	e0bffe04 	addi	r2,fp,-8
     c68:	180b883a 	mov	r5,r3
     c6c:	1009883a 	mov	r4,r2
     c70:	00005200 	call	520 <MemGetAddressRange>
  memory_size = (memory_end - memory_base);
     c74:	e0ffff17 	ldw	r3,-4(fp)
     c78:	e0bffe17 	ldw	r2,-8(fp)
     c7c:	1885c83a 	sub	r2,r3,r2
     c80:	e0bffd15 	stw	r2,-12(fp)

  printf("\n");
     c84:	01000284 	movi	r4,10
     c88:	0002fd00 	call	2fd0 <putchar>
  printf("Testing RAM from 0x%X to 0x%X\n", memory_base, (memory_base + memory_size));
     c8c:	e13ffe17 	ldw	r4,-8(fp)
     c90:	e0fffe17 	ldw	r3,-8(fp)
     c94:	e0bffd17 	ldw	r2,-12(fp)
     c98:	1885883a 	add	r2,r3,r2
     c9c:	100d883a 	mov	r6,r2
     ca0:	200b883a 	mov	r5,r4
     ca4:	010000b4 	movhi	r4,2
     ca8:	21356504 	addi	r4,r4,-10860
     cac:	0002f8c0 	call	2f8c <printf>

  /* Test Data Bus. */
  ret_code = MemTestDataBus(memory_base);
     cb0:	e0bffe17 	ldw	r2,-8(fp)
     cb4:	1009883a 	mov	r4,r2
     cb8:	00006340 	call	634 <MemTestDataBus>
     cbc:	e0bffc15 	stw	r2,-16(fp)

  if (ret_code)
     cc0:	e0bffc17 	ldw	r2,-16(fp)
     cc4:	10000526 	beq	r2,zero,cdc <TestRam+0x90>
   printf(" -Data bus test failed at bit 0x%X", (int)ret_code);
     cc8:	e17ffc17 	ldw	r5,-16(fp)
     ccc:	010000b4 	movhi	r4,2
     cd0:	21356d04 	addi	r4,r4,-10828
     cd4:	0002f8c0 	call	2f8c <printf>
     cd8:	00000306 	br	ce8 <TestRam+0x9c>
  else
    printf(" -Data bus test passed\n");
     cdc:	010000b4 	movhi	r4,2
     ce0:	21357604 	addi	r4,r4,-10792
     ce4:	00030a80 	call	30a8 <puts>

  /* Test Address Bus. */
  if (!ret_code)
     ce8:	e0bffc17 	ldw	r2,-16(fp)
     cec:	1000111e 	bne	r2,zero,d34 <TestRam+0xe8>
  {
    ret_code  = MemTestAddressBus(memory_base, memory_size);
     cf0:	e0bffe17 	ldw	r2,-8(fp)
     cf4:	1007883a 	mov	r3,r2
     cf8:	e0bffd17 	ldw	r2,-12(fp)
     cfc:	100b883a 	mov	r5,r2
     d00:	1809883a 	mov	r4,r3
     d04:	00006a80 	call	6a8 <MemTestAddressBus>
     d08:	e0bffc15 	stw	r2,-16(fp)
    if  (ret_code)
     d0c:	e0bffc17 	ldw	r2,-16(fp)
     d10:	10000526 	beq	r2,zero,d28 <TestRam+0xdc>
      printf(" -Address bus test failed at address 0x%X", (int)ret_code);
     d14:	e17ffc17 	ldw	r5,-16(fp)
     d18:	010000b4 	movhi	r4,2
     d1c:	21357c04 	addi	r4,r4,-10768
     d20:	0002f8c0 	call	2f8c <printf>
     d24:	00000306 	br	d34 <TestRam+0xe8>
    else
      printf(" -Address bus test passed\n");
     d28:	010000b4 	movhi	r4,2
     d2c:	21358704 	addi	r4,r4,-10724
     d30:	00030a80 	call	30a8 <puts>
  }

  /* Test byte and half-word access. */
  if (!ret_code)
     d34:	e0bffc17 	ldw	r2,-16(fp)
     d38:	10000e1e 	bne	r2,zero,d74 <TestRam+0x128>
  {
    ret_code = MemTest8_16BitAccess(memory_base);
     d3c:	e0bffe17 	ldw	r2,-8(fp)
     d40:	1009883a 	mov	r4,r2
     d44:	00008880 	call	888 <MemTest8_16BitAccess>
     d48:	e0bffc15 	stw	r2,-16(fp)
    if  (ret_code)
     d4c:	e0bffc17 	ldw	r2,-16(fp)
     d50:	10000526 	beq	r2,zero,d68 <TestRam+0x11c>
      printf(" -Byte and half-word access test failed at address 0x%X", (int)ret_code);
     d54:	e17ffc17 	ldw	r5,-16(fp)
     d58:	010000b4 	movhi	r4,2
     d5c:	21358e04 	addi	r4,r4,-10696
     d60:	0002f8c0 	call	2f8c <printf>
     d64:	00000306 	br	d74 <TestRam+0x128>
    else
      printf(" -Byte and half-word access test passed\n");
     d68:	010000b4 	movhi	r4,2
     d6c:	21359c04 	addi	r4,r4,-10640
     d70:	00030a80 	call	30a8 <puts>
  }

  /* Test that each bit in the device can store both 1 and 0. */
  if (!ret_code)
     d74:	e0bffc17 	ldw	r2,-16(fp)
     d78:	1000141e 	bne	r2,zero,dcc <TestRam+0x180>
  {
    printf(" -Testing each bit in memory device.");
     d7c:	010000b4 	movhi	r4,2
     d80:	2135a604 	addi	r4,r4,-10600
     d84:	0002f8c0 	call	2f8c <printf>
    ret_code = MemTestDevice(memory_base, memory_size);
     d88:	e0bffe17 	ldw	r2,-8(fp)
     d8c:	1007883a 	mov	r3,r2
     d90:	e0bffd17 	ldw	r2,-12(fp)
     d94:	100b883a 	mov	r5,r2
     d98:	1809883a 	mov	r4,r3
     d9c:	0000aa80 	call	aa8 <MemTestDevice>
     da0:	e0bffc15 	stw	r2,-16(fp)
    if  (ret_code)
     da4:	e0bffc17 	ldw	r2,-16(fp)
     da8:	10000526 	beq	r2,zero,dc0 <TestRam+0x174>
      printf("  failed at address 0x%X", (int)ret_code);
     dac:	e17ffc17 	ldw	r5,-16(fp)
     db0:	010000b4 	movhi	r4,2
     db4:	2135b004 	addi	r4,r4,-10560
     db8:	0002f8c0 	call	2f8c <printf>
     dbc:	00000306 	br	dcc <TestRam+0x180>
    else
      printf("  passed\n");
     dc0:	010000b4 	movhi	r4,2
     dc4:	2135b704 	addi	r4,r4,-10532
     dc8:	00030a80 	call	30a8 <puts>
    else
      printf("  passed\n");
  }
#endif /* DMA_NAME */
      
  if (!ret_code)
     dcc:	e0bffc17 	ldw	r2,-16(fp)
     dd0:	1000051e 	bne	r2,zero,de8 <TestRam+0x19c>
    printf("Memory at 0x%X Okay\n", memory_base);
     dd4:	e0bffe17 	ldw	r2,-8(fp)
     dd8:	100b883a 	mov	r5,r2
     ddc:	010000b4 	movhi	r4,2
     de0:	2135ba04 	addi	r4,r4,-10520
     de4:	0002f8c0 	call	2f8c <printf>
}
     de8:	0001883a 	nop
     dec:	e037883a 	mov	sp,fp
     df0:	dfc00117 	ldw	ra,4(sp)
     df4:	df000017 	ldw	fp,0(sp)
     df8:	dec00204 	addi	sp,sp,8
     dfc:	f800283a 	ret

00000e00 <FlashCheckIfBlockErased>:
*  Purpose: Checks the specified flash block to see if it is 
*           completely erased (all 0xFFFFFFFF).
*
******************************************************************/
static int FlashCheckIfBlockErased(alt_flash_fd* fd, int block, flash_region* regions)
{
     e00:	defff204 	addi	sp,sp,-56
     e04:	dfc00d15 	stw	ra,52(sp)
     e08:	df000c15 	stw	fp,48(sp)
     e0c:	df000c04 	addi	fp,sp,48
     e10:	e13ffd15 	stw	r4,-12(fp)
     e14:	e17ffe15 	stw	r5,-8(fp)
     e18:	e1bfff15 	stw	r6,-4(fp)
  int i, j;
  int ret_code = 0x0;
     e1c:	e03ff615 	stw	zero,-40(fp)
  char block_is_erased = 0x1;
     e20:	00800044 	movi	r2,1
     e24:	e0bff705 	stb	r2,-36(fp)
  alt_u8 *data_read;
 
  /* Get a buffer */
  data_read = malloc(64);
     e28:	01001004 	movi	r4,64
     e2c:	00025640 	call	2564 <malloc>
     e30:	e0bff815 	stw	r2,-32(fp)
  
  /* Initialize the flag */
  block_is_erased = 0x1;
     e34:	00800044 	movi	r2,1
     e38:	e0bff705 	stb	r2,-36(fp)

  for(i = 0; i < regions->block_size; i += 64)
     e3c:	e03ff415 	stw	zero,-48(fp)
     e40:	00002d06 	br	ef8 <FlashCheckIfBlockErased+0xf8>
  {
    ret_code = alt_read_flash(fd, ((block * regions->block_size) + i), data_read, 64);
     e44:	e0bfff17 	ldw	r2,-4(fp)
     e48:	10800317 	ldw	r2,12(r2)
     e4c:	e17ffe17 	ldw	r5,-8(fp)
     e50:	1009883a 	mov	r4,r2
     e54:	00024440 	call	2444 <__mulsi3>
     e58:	1007883a 	mov	r3,r2
     e5c:	e0bff417 	ldw	r2,-48(fp)
     e60:	1885883a 	add	r2,r3,r2
     e64:	e0fffd17 	ldw	r3,-12(fp)
     e68:	e0fff915 	stw	r3,-28(fp)
     e6c:	e0bffa15 	stw	r2,-24(fp)
     e70:	e0bff817 	ldw	r2,-32(fp)
     e74:	e0bffb15 	stw	r2,-20(fp)
     e78:	00801004 	movi	r2,64
     e7c:	e0bffc15 	stw	r2,-16(fp)
 */
static __inline__ int __attribute__ ((always_inline)) alt_read_flash( 
                                      alt_flash_fd* fd, int offset, 
                                      void* dest_addr, int length )
{
  return fd->read( fd, offset, dest_addr, length );
     e80:	e0bff917 	ldw	r2,-28(fp)
     e84:	10800617 	ldw	r2,24(r2)
     e88:	e1fffc17 	ldw	r7,-16(fp)
     e8c:	e1bffb17 	ldw	r6,-20(fp)
     e90:	e17ffa17 	ldw	r5,-24(fp)
     e94:	e13ff917 	ldw	r4,-28(fp)
     e98:	103ee83a 	callr	r2
     e9c:	e0bff615 	stw	r2,-40(fp)

    for(j=0; j < 64; j+=1)
     ea0:	e03ff515 	stw	zero,-44(fp)
     ea4:	00000c06 	br	ed8 <FlashCheckIfBlockErased+0xd8>
    {
      if(*(data_read+j) != 0xFF)
     ea8:	e0bff517 	ldw	r2,-44(fp)
     eac:	e0fff817 	ldw	r3,-32(fp)
     eb0:	1885883a 	add	r2,r3,r2
     eb4:	10800003 	ldbu	r2,0(r2)
     eb8:	10803fcc 	andi	r2,r2,255
     ebc:	10803fe0 	cmpeqi	r2,r2,255
     ec0:	1000021e 	bne	r2,zero,ecc <FlashCheckIfBlockErased+0xcc>
      {
        /* If this byte isn't erased, then neither is the block */
        block_is_erased = 0x0;
     ec4:	e03ff705 	stb	zero,-36(fp)
        break;
     ec8:	00000606 	br	ee4 <FlashCheckIfBlockErased+0xe4>

  for(i = 0; i < regions->block_size; i += 64)
  {
    ret_code = alt_read_flash(fd, ((block * regions->block_size) + i), data_read, 64);

    for(j=0; j < 64; j+=1)
     ecc:	e0bff517 	ldw	r2,-44(fp)
     ed0:	10800044 	addi	r2,r2,1
     ed4:	e0bff515 	stw	r2,-44(fp)
     ed8:	e0bff517 	ldw	r2,-44(fp)
     edc:	10801010 	cmplti	r2,r2,64
     ee0:	103ff11e 	bne	r2,zero,ea8 <__alt_mem_epcs_flash_controller_0+0xff7ffea8>
        /* If this byte isn't erased, then neither is the block */
        block_is_erased = 0x0;
        break;
      }
    }
    if (block_is_erased == 0x0)
     ee4:	e0bff707 	ldb	r2,-36(fp)
     ee8:	10000826 	beq	r2,zero,f0c <FlashCheckIfBlockErased+0x10c>
  data_read = malloc(64);
  
  /* Initialize the flag */
  block_is_erased = 0x1;

  for(i = 0; i < regions->block_size; i += 64)
     eec:	e0bff417 	ldw	r2,-48(fp)
     ef0:	10801004 	addi	r2,r2,64
     ef4:	e0bff415 	stw	r2,-48(fp)
     ef8:	e0bfff17 	ldw	r2,-4(fp)
     efc:	10800317 	ldw	r2,12(r2)
     f00:	e0fff417 	ldw	r3,-48(fp)
     f04:	18bfcf16 	blt	r3,r2,e44 <__alt_mem_epcs_flash_controller_0+0xff7ffe44>
     f08:	00000106 	br	f10 <FlashCheckIfBlockErased+0x110>
        block_is_erased = 0x0;
        break;
      }
    }
    if (block_is_erased == 0x0)
      break;
     f0c:	0001883a 	nop
  }
  /* Block is erased if we indexed through all block locations */
  if(i == regions->block_size)
     f10:	e0bfff17 	ldw	r2,-4(fp)
     f14:	10c00317 	ldw	r3,12(r2)
     f18:	e0bff417 	ldw	r2,-48(fp)
     f1c:	1880031e 	bne	r3,r2,f2c <FlashCheckIfBlockErased+0x12c>
    ret_code = 1;
     f20:	00800044 	movi	r2,1
     f24:	e0bff615 	stw	r2,-40(fp)
     f28:	00000106 	br	f30 <FlashCheckIfBlockErased+0x130>
  else
    ret_code = 0;
     f2c:	e03ff615 	stw	zero,-40(fp)
  
  free(data_read);
     f30:	e13ff817 	ldw	r4,-32(fp)
     f34:	00025780 	call	2578 <free>
 
  return ret_code;
     f38:	e0bff617 	ldw	r2,-40(fp)
}
     f3c:	e037883a 	mov	sp,fp
     f40:	dfc00117 	ldw	ra,4(sp)
     f44:	df000017 	ldw	fp,0(sp)
     f48:	dec00204 	addi	sp,sp,8
     f4c:	f800283a 	ret

00000f50 <FlashTestBlockWrite>:
*  Purpose: Tests that the function alt_write_flash_block is
*           is working properly.
*
******************************************************************/
static int FlashTestBlockWrite(int block, int *error, alt_flash_fd* fd, flash_region* regions)
{
     f50:	deffdb04 	addi	sp,sp,-148
     f54:	dfc02415 	stw	ra,144(sp)
     f58:	df002315 	stw	fp,140(sp)
     f5c:	dc002215 	stw	r16,136(sp)
     f60:	df002304 	addi	fp,sp,140
     f64:	e13ffb15 	stw	r4,-20(fp)
     f68:	e17ffc15 	stw	r5,-16(fp)
     f6c:	e1bffd15 	stw	r6,-12(fp)
     f70:	e1fffe15 	stw	r7,-8(fp)
  int i;
  int ret_code = 0x0;
     f74:	e03fdf15 	stw	zero,-132(fp)
  alt_u8 *data_written;
  alt_u8 *data_read;


  /* Get a couple buffers for the test */
  data_written = malloc(100);
     f78:	01001904 	movi	r4,100
     f7c:	00025640 	call	2564 <malloc>
     f80:	e0bfe015 	stw	r2,-128(fp)
  data_read = malloc(100);
     f84:	01001904 	movi	r4,100
     f88:	00025640 	call	2564 <malloc>
     f8c:	e0bfe115 	stw	r2,-124(fp)

  test_offset = (regions->offset + (block * regions->block_size));
     f90:	e0bffe17 	ldw	r2,-8(fp)
     f94:	14000017 	ldw	r16,0(r2)
     f98:	e0bffe17 	ldw	r2,-8(fp)
     f9c:	10800317 	ldw	r2,12(r2)
     fa0:	e17ffb17 	ldw	r5,-20(fp)
     fa4:	1009883a 	mov	r4,r2
     fa8:	00024440 	call	2444 <__mulsi3>
     fac:	8085883a 	add	r2,r16,r2
     fb0:	e0bfe215 	stw	r2,-120(fp)

  /* Fill write buffer with 100 values (incremented by 3) */
  for(i=0; i < 100; i++)
     fb4:	e03fde15 	stw	zero,-136(fp)
     fb8:	00000c06 	br	fec <FlashTestBlockWrite+0x9c>
    *(data_written + i) = (i * 3);
     fbc:	e0bfde17 	ldw	r2,-136(fp)
     fc0:	e0ffe017 	ldw	r3,-128(fp)
     fc4:	1887883a 	add	r3,r3,r2
     fc8:	e0bfde17 	ldw	r2,-136(fp)
     fcc:	1009883a 	mov	r4,r2
     fd0:	2005883a 	mov	r2,r4
     fd4:	1085883a 	add	r2,r2,r2
     fd8:	1105883a 	add	r2,r2,r4
     fdc:	18800005 	stb	r2,0(r3)
  data_read = malloc(100);

  test_offset = (regions->offset + (block * regions->block_size));

  /* Fill write buffer with 100 values (incremented by 3) */
  for(i=0; i < 100; i++)
     fe0:	e0bfde17 	ldw	r2,-136(fp)
     fe4:	10800044 	addi	r2,r2,1
     fe8:	e0bfde15 	stw	r2,-136(fp)
     fec:	e0bfde17 	ldw	r2,-136(fp)
     ff0:	10801910 	cmplti	r2,r2,100
     ff4:	103ff11e 	bne	r2,zero,fbc <__alt_mem_epcs_flash_controller_0+0xff7fffbc>
    *(data_written + i) = (i * 3);

  /* Write the buffer to flash starting 0x40 bytes from the beginning of the block. */
  printf(" -Testing \"alt_write_flash_block\".");
     ff8:	010000b4 	movhi	r4,2
     ffc:	2135c004 	addi	r4,r4,-10496
    1000:	0002f8c0 	call	2f8c <printf>
  ret_code = alt_write_flash_block(fd, test_offset, (test_offset + 0x40), data_written, 100);
    1004:	e0bfe217 	ldw	r2,-120(fp)
    1008:	10801004 	addi	r2,r2,64
    100c:	e0fffd17 	ldw	r3,-12(fp)
    1010:	e0ffe715 	stw	r3,-100(fp)
    1014:	e0ffe217 	ldw	r3,-120(fp)
    1018:	e0ffe815 	stw	r3,-96(fp)
    101c:	e0bfe915 	stw	r2,-92(fp)
    1020:	e0bfe017 	ldw	r2,-128(fp)
    1024:	e0bfea15 	stw	r2,-88(fp)
    1028:	00801904 	movi	r2,100
    102c:	e0bfeb15 	stw	r2,-84(fp)
                                      int data_offset,
                                      const void *data, int length)
{

  int ret_code;
  ret_code = fd->write_block( fd, block_offset, data_offset, data, length );
    1030:	e0bfe717 	ldw	r2,-100(fp)
    1034:	10800917 	ldw	r2,36(r2)
    1038:	e0ffeb17 	ldw	r3,-84(fp)
    103c:	d8c00015 	stw	r3,0(sp)
    1040:	e1ffea17 	ldw	r7,-88(fp)
    1044:	e1bfe917 	ldw	r6,-92(fp)
    1048:	e17fe817 	ldw	r5,-96(fp)
    104c:	e13fe717 	ldw	r4,-100(fp)
    1050:	103ee83a 	callr	r2
    1054:	e0bfec15 	stw	r2,-80(fp)

/* remove dcache_flush call for FB330552  
  if(!ret_code)
      alt_dcache_flush((alt_u8*)fd->base_addr + data_offset, length);
*/
  return ret_code;
    1058:	e0bfec17 	ldw	r2,-80(fp)
    105c:	e0bfdf15 	stw	r2,-132(fp)
  if (!ret_code)
    1060:	e0bfdf17 	ldw	r2,-132(fp)
    1064:	1000241e 	bne	r2,zero,10f8 <FlashTestBlockWrite+0x1a8>
  {
    /* Now read it back into the read_buffer */
    ret_code = alt_read_flash(fd, (test_offset + 0x40), data_read, 100);
    1068:	e0bfe217 	ldw	r2,-120(fp)
    106c:	10801004 	addi	r2,r2,64
    1070:	e0fffd17 	ldw	r3,-12(fp)
    1074:	e0ffe315 	stw	r3,-116(fp)
    1078:	e0bfed15 	stw	r2,-76(fp)
    107c:	e0bfe117 	ldw	r2,-124(fp)
    1080:	e0bfee15 	stw	r2,-72(fp)
    1084:	00801904 	movi	r2,100
    1088:	e0bfef15 	stw	r2,-68(fp)
 */
static __inline__ int __attribute__ ((always_inline)) alt_read_flash( 
                                      alt_flash_fd* fd, int offset, 
                                      void* dest_addr, int length )
{
  return fd->read( fd, offset, dest_addr, length );
    108c:	e0bfe317 	ldw	r2,-116(fp)
    1090:	10800617 	ldw	r2,24(r2)
    1094:	e1ffef17 	ldw	r7,-68(fp)
    1098:	e1bfee17 	ldw	r6,-72(fp)
    109c:	e17fed17 	ldw	r5,-76(fp)
    10a0:	e13fe317 	ldw	r4,-116(fp)
    10a4:	103ee83a 	callr	r2
    10a8:	e0bfdf15 	stw	r2,-132(fp)
    if(!ret_code)
    10ac:	e0bfdf17 	ldw	r2,-132(fp)
    10b0:	1000111e 	bne	r2,zero,10f8 <FlashTestBlockWrite+0x1a8>
    {
      /* See if they match */
      if (memcmp(data_written, data_read, 100))
    10b4:	01801904 	movi	r6,100
    10b8:	e17fe117 	ldw	r5,-124(fp)
    10bc:	e13fe017 	ldw	r4,-128(fp)
    10c0:	0002d980 	call	2d98 <memcmp>
    10c4:	10000926 	beq	r2,zero,10ec <FlashTestBlockWrite+0x19c>
      {
        printf("  FAILED.\n");
    10c8:	010000b4 	movhi	r4,2
    10cc:	2135c904 	addi	r4,r4,-10460
    10d0:	00030a80 	call	30a8 <puts>
        (*error)++;
    10d4:	e0bffc17 	ldw	r2,-16(fp)
    10d8:	10800017 	ldw	r2,0(r2)
    10dc:	10c00044 	addi	r3,r2,1
    10e0:	e0bffc17 	ldw	r2,-16(fp)
    10e4:	10c00015 	stw	r3,0(r2)
    10e8:	00000306 	br	10f8 <FlashTestBlockWrite+0x1a8>
      }
      else
        printf("  passed.\n");
    10ec:	010000b4 	movhi	r4,2
    10f0:	2135cc04 	addi	r4,r4,-10448
    10f4:	00030a80 	call	30a8 <puts>
    }
  }

  /* Test unaligned writes */
  if(!ret_code)
    10f8:	e0bfdf17 	ldw	r2,-132(fp)
    10fc:	10004f1e 	bne	r2,zero,123c <FlashTestBlockWrite+0x2ec>
  {
    /* Erase the block */
    ret_code = alt_erase_flash_block(fd, test_offset, regions->block_size);
    1100:	e0bffe17 	ldw	r2,-8(fp)
    1104:	10800317 	ldw	r2,12(r2)
    1108:	e0fffd17 	ldw	r3,-12(fp)
    110c:	e0ffe615 	stw	r3,-104(fp)
    1110:	e0ffe217 	ldw	r3,-120(fp)
    1114:	e0fff515 	stw	r3,-44(fp)
    1118:	e0bff615 	stw	r2,-40(fp)
 */
static __inline__ int __attribute__ ((always_inline)) alt_erase_flash_block( 
                                      alt_flash_fd* fd, int offset, int length) 
{
  int ret_code;
  ret_code = fd->erase_block( fd, offset );
    111c:	e0bfe617 	ldw	r2,-104(fp)
    1120:	10800817 	ldw	r2,32(r2)
    1124:	e17ff517 	ldw	r5,-44(fp)
    1128:	e13fe617 	ldw	r4,-104(fp)
    112c:	103ee83a 	callr	r2
    1130:	e0bff715 	stw	r2,-36(fp)
  
/* remove dcache_flush call for FB330552  
  if(!ret_code)
      alt_dcache_flush((alt_u8*)fd->base_addr + offset, length);
*/
  return ret_code;
    1134:	e0bff717 	ldw	r2,-36(fp)
    1138:	e0bfdf15 	stw	r2,-132(fp)
  
    /* Write the buffer to flash on an unaligned address. */
    printf(" -Testing unaligned writes.");
    113c:	010000b4 	movhi	r4,2
    1140:	2135cf04 	addi	r4,r4,-10436
    1144:	0002f8c0 	call	2f8c <printf>
    ret_code = alt_write_flash_block(fd, test_offset, (test_offset + 0x43), data_written, 100);
    1148:	e0bfe217 	ldw	r2,-120(fp)
    114c:	108010c4 	addi	r2,r2,67
    1150:	e0fffd17 	ldw	r3,-12(fp)
    1154:	e0ffe415 	stw	r3,-112(fp)
    1158:	e0ffe217 	ldw	r3,-120(fp)
    115c:	e0fff015 	stw	r3,-64(fp)
    1160:	e0bff115 	stw	r2,-60(fp)
    1164:	e0bfe017 	ldw	r2,-128(fp)
    1168:	e0bff215 	stw	r2,-56(fp)
    116c:	00801904 	movi	r2,100
    1170:	e0bff315 	stw	r2,-52(fp)
                                      int data_offset,
                                      const void *data, int length)
{

  int ret_code;
  ret_code = fd->write_block( fd, block_offset, data_offset, data, length );
    1174:	e0bfe417 	ldw	r2,-112(fp)
    1178:	10800917 	ldw	r2,36(r2)
    117c:	e0fff317 	ldw	r3,-52(fp)
    1180:	d8c00015 	stw	r3,0(sp)
    1184:	e1fff217 	ldw	r7,-56(fp)
    1188:	e1bff117 	ldw	r6,-60(fp)
    118c:	e17ff017 	ldw	r5,-64(fp)
    1190:	e13fe417 	ldw	r4,-112(fp)
    1194:	103ee83a 	callr	r2
    1198:	e0bff415 	stw	r2,-48(fp)

/* remove dcache_flush call for FB330552  
  if(!ret_code)
      alt_dcache_flush((alt_u8*)fd->base_addr + data_offset, length);
*/
  return ret_code;
    119c:	e0bff417 	ldw	r2,-48(fp)
    11a0:	e0bfdf15 	stw	r2,-132(fp)
    if (!ret_code)
    11a4:	e0bfdf17 	ldw	r2,-132(fp)
    11a8:	1000241e 	bne	r2,zero,123c <FlashTestBlockWrite+0x2ec>
    {
      /* Now read it back into the read_buffer */
      ret_code = alt_read_flash(fd, (test_offset + 0x43), data_read, 100);
    11ac:	e0bfe217 	ldw	r2,-120(fp)
    11b0:	108010c4 	addi	r2,r2,67
    11b4:	e0fffd17 	ldw	r3,-12(fp)
    11b8:	e0ffe515 	stw	r3,-108(fp)
    11bc:	e0bff815 	stw	r2,-32(fp)
    11c0:	e0bfe117 	ldw	r2,-124(fp)
    11c4:	e0bff915 	stw	r2,-28(fp)
    11c8:	00801904 	movi	r2,100
    11cc:	e0bffa15 	stw	r2,-24(fp)
 */
static __inline__ int __attribute__ ((always_inline)) alt_read_flash( 
                                      alt_flash_fd* fd, int offset, 
                                      void* dest_addr, int length )
{
  return fd->read( fd, offset, dest_addr, length );
    11d0:	e0bfe517 	ldw	r2,-108(fp)
    11d4:	10800617 	ldw	r2,24(r2)
    11d8:	e1fffa17 	ldw	r7,-24(fp)
    11dc:	e1bff917 	ldw	r6,-28(fp)
    11e0:	e17ff817 	ldw	r5,-32(fp)
    11e4:	e13fe517 	ldw	r4,-108(fp)
    11e8:	103ee83a 	callr	r2
    11ec:	e0bfdf15 	stw	r2,-132(fp)
      if(!ret_code)
    11f0:	e0bfdf17 	ldw	r2,-132(fp)
    11f4:	1000111e 	bne	r2,zero,123c <FlashTestBlockWrite+0x2ec>
      {
        /* See if they match */
        if (memcmp(data_written, data_read, 100))
    11f8:	01801904 	movi	r6,100
    11fc:	e17fe117 	ldw	r5,-124(fp)
    1200:	e13fe017 	ldw	r4,-128(fp)
    1204:	0002d980 	call	2d98 <memcmp>
    1208:	10000926 	beq	r2,zero,1230 <FlashTestBlockWrite+0x2e0>
        {
          printf("  FAILED.\n");
    120c:	010000b4 	movhi	r4,2
    1210:	2135c904 	addi	r4,r4,-10460
    1214:	00030a80 	call	30a8 <puts>
          (*error)++;
    1218:	e0bffc17 	ldw	r2,-16(fp)
    121c:	10800017 	ldw	r2,0(r2)
    1220:	10c00044 	addi	r3,r2,1
    1224:	e0bffc17 	ldw	r2,-16(fp)
    1228:	10c00015 	stw	r3,0(r2)
    122c:	00000306 	br	123c <FlashTestBlockWrite+0x2ec>
        }
        else
          printf("  passed.\n");
    1230:	010000b4 	movhi	r4,2
    1234:	2135cc04 	addi	r4,r4,-10448
    1238:	00030a80 	call	30a8 <puts>
      }
    }
  }

  /* Free up the buffers we allocated. */
  free(data_written);
    123c:	e13fe017 	ldw	r4,-128(fp)
    1240:	00025780 	call	2578 <free>
  free(data_read);
    1244:	e13fe117 	ldw	r4,-124(fp)
    1248:	00025780 	call	2578 <free>
  
  return ret_code;
    124c:	e0bfdf17 	ldw	r2,-132(fp)
}
    1250:	e6ffff04 	addi	sp,fp,-4
    1254:	dfc00217 	ldw	ra,8(sp)
    1258:	df000117 	ldw	fp,4(sp)
    125c:	dc000017 	ldw	r16,0(sp)
    1260:	dec00304 	addi	sp,sp,12
    1264:	f800283a 	ret

00001268 <FlashTestReadWrite>:
*           that every bit in the specified block can store both
*           a '1' and '0'.
*
******************************************************************/
static int FlashTestReadWrite(int block, int *error, alt_flash_fd* fd, flash_region* regions)
{
    1268:	deffe404 	addi	sp,sp,-112
    126c:	dfc01b15 	stw	ra,108(sp)
    1270:	df001a15 	stw	fp,104(sp)
    1274:	dc001915 	stw	r16,100(sp)
    1278:	df001a04 	addi	fp,sp,104
    127c:	e13ffb15 	stw	r4,-20(fp)
    1280:	e17ffc15 	stw	r5,-16(fp)
    1284:	e1bffd15 	stw	r6,-12(fp)
    1288:	e1fffe15 	stw	r7,-8(fp)
  int i;
  int ret_code = 0x0;
    128c:	e03fe715 	stw	zero,-100(fp)
  alt_u8 *data_written;
  alt_u8 *data_read;
 

  /* Get a couple buffers for the tests */
  data_written = malloc(regions->block_size);
    1290:	e0bffe17 	ldw	r2,-8(fp)
    1294:	10800317 	ldw	r2,12(r2)
    1298:	1009883a 	mov	r4,r2
    129c:	00025640 	call	2564 <malloc>
    12a0:	e0bfe815 	stw	r2,-96(fp)
  data_read = malloc(regions->block_size);
    12a4:	e0bffe17 	ldw	r2,-8(fp)
    12a8:	10800317 	ldw	r2,12(r2)
    12ac:	1009883a 	mov	r4,r2
    12b0:	00025640 	call	2564 <malloc>
    12b4:	e0bfe915 	stw	r2,-92(fp)
 
  /* Calculate the offset at which the block lives */
  test_offset = (regions->offset + (block * regions->block_size));
    12b8:	e0bffe17 	ldw	r2,-8(fp)
    12bc:	14000017 	ldw	r16,0(r2)
    12c0:	e0bffe17 	ldw	r2,-8(fp)
    12c4:	10800317 	ldw	r2,12(r2)
    12c8:	e17ffb17 	ldw	r5,-20(fp)
    12cc:	1009883a 	mov	r4,r2
    12d0:	00024440 	call	2444 <__mulsi3>
    12d4:	8085883a 	add	r2,r16,r2
    12d8:	e0bfea15 	stw	r2,-88(fp)

  printf("\n -Starting Flash Test.\n");
    12dc:	010000b4 	movhi	r4,2
    12e0:	2135d604 	addi	r4,r4,-10408
    12e4:	00030a80 	call	30a8 <puts>
 
  printf(" -Testing \"alt_write_flash\" and \"alt_read_flash\".\n");
    12e8:	010000b4 	movhi	r4,2
    12ec:	2135dc04 	addi	r4,r4,-10384
    12f0:	00030a80 	call	30a8 <puts>
  /* Fill buffer with incrementing values */
  for(i=0; i < regions->block_size; i++)
    12f4:	e03fe615 	stw	zero,-104(fp)
    12f8:	00000806 	br	131c <FlashTestReadWrite+0xb4>
    *(data_written + i) = i;
    12fc:	e0bfe617 	ldw	r2,-104(fp)
    1300:	e0ffe817 	ldw	r3,-96(fp)
    1304:	1885883a 	add	r2,r3,r2
    1308:	e0ffe617 	ldw	r3,-104(fp)
    130c:	10c00005 	stb	r3,0(r2)

  printf("\n -Starting Flash Test.\n");
 
  printf(" -Testing \"alt_write_flash\" and \"alt_read_flash\".\n");
  /* Fill buffer with incrementing values */
  for(i=0; i < regions->block_size; i++)
    1310:	e0bfe617 	ldw	r2,-104(fp)
    1314:	10800044 	addi	r2,r2,1
    1318:	e0bfe615 	stw	r2,-104(fp)
    131c:	e0bffe17 	ldw	r2,-8(fp)
    1320:	10800317 	ldw	r2,12(r2)
    1324:	e0ffe617 	ldw	r3,-104(fp)
    1328:	18bff416 	blt	r3,r2,12fc <__alt_mem_epcs_flash_controller_0+0xff8002fc>
    *(data_written + i) = i;

  /* Write the buffer to flash block */
  ret_code = alt_write_flash(fd, test_offset, data_written, regions->block_size);
    132c:	e0bffe17 	ldw	r2,-8(fp)
    1330:	10800317 	ldw	r2,12(r2)
    1334:	e0fffd17 	ldw	r3,-12(fp)
    1338:	e0ffee15 	stw	r3,-72(fp)
    133c:	e0ffea17 	ldw	r3,-88(fp)
    1340:	e0ffef15 	stw	r3,-68(fp)
    1344:	e0ffe817 	ldw	r3,-96(fp)
    1348:	e0fff015 	stw	r3,-64(fp)
    134c:	e0bff115 	stw	r2,-60(fp)
                                                           alt_flash_fd* fd, 
                                                           int offset, 
                                                           const void* src_addr, 
                                                           int length )
{
  return fd->write( fd, offset, src_addr, length );
    1350:	e0bfee17 	ldw	r2,-72(fp)
    1354:	10800517 	ldw	r2,20(r2)
    1358:	e1fff117 	ldw	r7,-60(fp)
    135c:	e1bff017 	ldw	r6,-64(fp)
    1360:	e17fef17 	ldw	r5,-68(fp)
    1364:	e13fee17 	ldw	r4,-72(fp)
    1368:	103ee83a 	callr	r2
    136c:	e0bfe715 	stw	r2,-100(fp)
     
  if (!ret_code)
    1370:	e0bfe717 	ldw	r2,-100(fp)
    1374:	1000731e 	bne	r2,zero,1544 <FlashTestReadWrite+0x2dc>
  {
    /* Read flash block into read buffer */
    ret_code = alt_read_flash(fd, test_offset, data_read, regions->block_size);
    1378:	e0bffe17 	ldw	r2,-8(fp)
    137c:	10800317 	ldw	r2,12(r2)
    1380:	e0fffd17 	ldw	r3,-12(fp)
    1384:	e0ffeb15 	stw	r3,-84(fp)
    1388:	e0ffea17 	ldw	r3,-88(fp)
    138c:	e0fff215 	stw	r3,-56(fp)
    1390:	e0ffe917 	ldw	r3,-92(fp)
    1394:	e0fff315 	stw	r3,-52(fp)
    1398:	e0bff415 	stw	r2,-48(fp)
 */
static __inline__ int __attribute__ ((always_inline)) alt_read_flash( 
                                      alt_flash_fd* fd, int offset, 
                                      void* dest_addr, int length )
{
  return fd->read( fd, offset, dest_addr, length );
    139c:	e0bfeb17 	ldw	r2,-84(fp)
    13a0:	10800617 	ldw	r2,24(r2)
    13a4:	e1fff417 	ldw	r7,-48(fp)
    13a8:	e1bff317 	ldw	r6,-52(fp)
    13ac:	e17ff217 	ldw	r5,-56(fp)
    13b0:	e13feb17 	ldw	r4,-84(fp)
    13b4:	103ee83a 	callr	r2
    13b8:	e0bfe715 	stw	r2,-100(fp)
    if(!ret_code)
    13bc:	e0bfe717 	ldw	r2,-100(fp)
    13c0:	1000131e 	bne	r2,zero,1410 <FlashTestReadWrite+0x1a8>
    {
      /* See if they match */
      if (memcmp(data_written, data_read, regions->block_size))
    13c4:	e0bffe17 	ldw	r2,-8(fp)
    13c8:	10800317 	ldw	r2,12(r2)
    13cc:	100d883a 	mov	r6,r2
    13d0:	e17fe917 	ldw	r5,-92(fp)
    13d4:	e13fe817 	ldw	r4,-96(fp)
    13d8:	0002d980 	call	2d98 <memcmp>
    13dc:	10000926 	beq	r2,zero,1404 <FlashTestReadWrite+0x19c>
      {
        printf("    pass 1 - FAILED.\n");
    13e0:	010000b4 	movhi	r4,2
    13e4:	2135e904 	addi	r4,r4,-10332
    13e8:	00030a80 	call	30a8 <puts>
        (*error)++;
    13ec:	e0bffc17 	ldw	r2,-16(fp)
    13f0:	10800017 	ldw	r2,0(r2)
    13f4:	10c00044 	addi	r3,r2,1
    13f8:	e0bffc17 	ldw	r2,-16(fp)
    13fc:	10c00015 	stw	r3,0(r2)
    1400:	00000306 	br	1410 <FlashTestReadWrite+0x1a8>
      }
      else
        printf("    pass 1 - passed.\n");
    1404:	010000b4 	movhi	r4,2
    1408:	2135ef04 	addi	r4,r4,-10308
    140c:	00030a80 	call	30a8 <puts>
    }
  
    /* Now fill the buffer with decrementing values (invert the incrementing ones) */
    for(i=0; i < regions->block_size; i++)
    1410:	e03fe615 	stw	zero,-104(fp)
    1414:	00000906 	br	143c <FlashTestReadWrite+0x1d4>
      *(data_written + i) = ~((alt_u8)(i));
    1418:	e0bfe617 	ldw	r2,-104(fp)
    141c:	e0ffe817 	ldw	r3,-96(fp)
    1420:	1885883a 	add	r2,r3,r2
    1424:	e0ffe617 	ldw	r3,-104(fp)
    1428:	00c6303a 	nor	r3,zero,r3
    142c:	10c00005 	stb	r3,0(r2)
      else
        printf("    pass 1 - passed.\n");
    }
  
    /* Now fill the buffer with decrementing values (invert the incrementing ones) */
    for(i=0; i < regions->block_size; i++)
    1430:	e0bfe617 	ldw	r2,-104(fp)
    1434:	10800044 	addi	r2,r2,1
    1438:	e0bfe615 	stw	r2,-104(fp)
    143c:	e0bffe17 	ldw	r2,-8(fp)
    1440:	10800317 	ldw	r2,12(r2)
    1444:	e0ffe617 	ldw	r3,-104(fp)
    1448:	18bff316 	blt	r3,r2,1418 <__alt_mem_epcs_flash_controller_0+0xff800418>
      *(data_written + i) = ~((alt_u8)(i));
 
    /* Write the buffer to flash block */
    ret_code = alt_write_flash(fd, test_offset, data_written, regions->block_size);
    144c:	e0bffe17 	ldw	r2,-8(fp)
    1450:	10800317 	ldw	r2,12(r2)
    1454:	e0fffd17 	ldw	r3,-12(fp)
    1458:	e0ffec15 	stw	r3,-80(fp)
    145c:	e0ffea17 	ldw	r3,-88(fp)
    1460:	e0fff515 	stw	r3,-44(fp)
    1464:	e0ffe817 	ldw	r3,-96(fp)
    1468:	e0fff615 	stw	r3,-40(fp)
    146c:	e0bff715 	stw	r2,-36(fp)
                                                           alt_flash_fd* fd, 
                                                           int offset, 
                                                           const void* src_addr, 
                                                           int length )
{
  return fd->write( fd, offset, src_addr, length );
    1470:	e0bfec17 	ldw	r2,-80(fp)
    1474:	10800517 	ldw	r2,20(r2)
    1478:	e1fff717 	ldw	r7,-36(fp)
    147c:	e1bff617 	ldw	r6,-40(fp)
    1480:	e17ff517 	ldw	r5,-44(fp)
    1484:	e13fec17 	ldw	r4,-80(fp)
    1488:	103ee83a 	callr	r2
    148c:	e0bfe715 	stw	r2,-100(fp)
    
    if (!ret_code)
    1490:	e0bfe717 	ldw	r2,-100(fp)
    1494:	1000261e 	bne	r2,zero,1530 <FlashTestReadWrite+0x2c8>
    {
      /* Read flash block into read buffer */
      ret_code = alt_read_flash(fd, test_offset, data_read, regions->block_size);
    1498:	e0bffe17 	ldw	r2,-8(fp)
    149c:	10800317 	ldw	r2,12(r2)
    14a0:	e0fffd17 	ldw	r3,-12(fp)
    14a4:	e0ffed15 	stw	r3,-76(fp)
    14a8:	e0ffea17 	ldw	r3,-88(fp)
    14ac:	e0fff815 	stw	r3,-32(fp)
    14b0:	e0ffe917 	ldw	r3,-92(fp)
    14b4:	e0fff915 	stw	r3,-28(fp)
    14b8:	e0bffa15 	stw	r2,-24(fp)
 */
static __inline__ int __attribute__ ((always_inline)) alt_read_flash( 
                                      alt_flash_fd* fd, int offset, 
                                      void* dest_addr, int length )
{
  return fd->read( fd, offset, dest_addr, length );
    14bc:	e0bfed17 	ldw	r2,-76(fp)
    14c0:	10800617 	ldw	r2,24(r2)
    14c4:	e1fffa17 	ldw	r7,-24(fp)
    14c8:	e1bff917 	ldw	r6,-28(fp)
    14cc:	e17ff817 	ldw	r5,-32(fp)
    14d0:	e13fed17 	ldw	r4,-76(fp)
    14d4:	103ee83a 	callr	r2
    14d8:	e0bfe715 	stw	r2,-100(fp)
      if(!ret_code)
    14dc:	e0bfe717 	ldw	r2,-100(fp)
    14e0:	1000131e 	bne	r2,zero,1530 <FlashTestReadWrite+0x2c8>
      {
        /* See if they match */
        if (memcmp(data_written, data_read, regions->block_size))
    14e4:	e0bffe17 	ldw	r2,-8(fp)
    14e8:	10800317 	ldw	r2,12(r2)
    14ec:	100d883a 	mov	r6,r2
    14f0:	e17fe917 	ldw	r5,-92(fp)
    14f4:	e13fe817 	ldw	r4,-96(fp)
    14f8:	0002d980 	call	2d98 <memcmp>
    14fc:	10000926 	beq	r2,zero,1524 <FlashTestReadWrite+0x2bc>
        {
          printf("    pass 2 - FAILED.\n");
    1500:	010000b4 	movhi	r4,2
    1504:	2135f504 	addi	r4,r4,-10284
    1508:	00030a80 	call	30a8 <puts>
          (*error)++;
    150c:	e0bffc17 	ldw	r2,-16(fp)
    1510:	10800017 	ldw	r2,0(r2)
    1514:	10c00044 	addi	r3,r2,1
    1518:	e0bffc17 	ldw	r2,-16(fp)
    151c:	10c00015 	stw	r3,0(r2)
    1520:	00000306 	br	1530 <FlashTestReadWrite+0x2c8>
        }
        else
          printf("    pass 2 - passed.\n");
    1524:	010000b4 	movhi	r4,2
    1528:	2135fb04 	addi	r4,r4,-10260
    152c:	00030a80 	call	30a8 <puts>
      }
    }
    if (*error)
    1530:	e0bffc17 	ldw	r2,-16(fp)
    1534:	10800017 	ldw	r2,0(r2)
    1538:	10000226 	beq	r2,zero,1544 <FlashTestReadWrite+0x2dc>
      ret_code = 1;
    153c:	00800044 	movi	r2,1
    1540:	e0bfe715 	stw	r2,-100(fp)
  }

  /* Free up the buffers we allocated */
  free(data_written);
    1544:	e13fe817 	ldw	r4,-96(fp)
    1548:	00025780 	call	2578 <free>
  free(data_read);
    154c:	e13fe917 	ldw	r4,-92(fp)
    1550:	00025780 	call	2578 <free>
  
  return ret_code;
    1554:	e0bfe717 	ldw	r2,-100(fp)
}
    1558:	e6ffff04 	addi	sp,fp,-4
    155c:	dfc00217 	ldw	ra,8(sp)
    1560:	df000117 	ldw	fp,4(sp)
    1564:	dc000017 	ldw	r16,0(sp)
    1568:	dec00304 	addi	sp,sp,12
    156c:	f800283a 	ret

00001570 <FlashTestBlockErase>:
*           flash block contains some non-0xFFFFFFFF data before
*           this function is called.
*
******************************************************************/
static int FlashTestBlockErase(int block, int *error, alt_flash_fd* fd, flash_region* regions)
{
    1570:	defff304 	addi	sp,sp,-52
    1574:	dfc00c15 	stw	ra,48(sp)
    1578:	df000b15 	stw	fp,44(sp)
    157c:	dc000a15 	stw	r16,40(sp)
    1580:	df000b04 	addi	fp,sp,44
    1584:	e13ffb15 	stw	r4,-20(fp)
    1588:	e17ffc15 	stw	r5,-16(fp)
    158c:	e1bffd15 	stw	r6,-12(fp)
    1590:	e1fffe15 	stw	r7,-8(fp)

  int ret_code = 0x0;
    1594:	e03ff515 	stw	zero,-44(fp)
  int test_offset;

  /* Calculate the offset of the block */
  test_offset = (regions->offset + (block * regions->block_size));
    1598:	e0bffe17 	ldw	r2,-8(fp)
    159c:	14000017 	ldw	r16,0(r2)
    15a0:	e0bffe17 	ldw	r2,-8(fp)
    15a4:	10800317 	ldw	r2,12(r2)
    15a8:	e17ffb17 	ldw	r5,-20(fp)
    15ac:	1009883a 	mov	r4,r2
    15b0:	00024440 	call	2444 <__mulsi3>
    15b4:	8085883a 	add	r2,r16,r2
    15b8:	e0bff615 	stw	r2,-40(fp)

  printf(" -Testing \"alt_erase_flash_block\".");
    15bc:	010000b4 	movhi	r4,2
    15c0:	21360104 	addi	r4,r4,-10236
    15c4:	0002f8c0 	call	2f8c <printf>
  ret_code = alt_erase_flash_block(fd, test_offset, regions->block_size);
    15c8:	e0bffe17 	ldw	r2,-8(fp)
    15cc:	10800317 	ldw	r2,12(r2)
    15d0:	e0fffd17 	ldw	r3,-12(fp)
    15d4:	e0fff715 	stw	r3,-36(fp)
    15d8:	e0fff617 	ldw	r3,-40(fp)
    15dc:	e0fff815 	stw	r3,-32(fp)
    15e0:	e0bff915 	stw	r2,-28(fp)
 */
static __inline__ int __attribute__ ((always_inline)) alt_erase_flash_block( 
                                      alt_flash_fd* fd, int offset, int length) 
{
  int ret_code;
  ret_code = fd->erase_block( fd, offset );
    15e4:	e0bff717 	ldw	r2,-36(fp)
    15e8:	10800817 	ldw	r2,32(r2)
    15ec:	e17ff817 	ldw	r5,-32(fp)
    15f0:	e13ff717 	ldw	r4,-36(fp)
    15f4:	103ee83a 	callr	r2
    15f8:	e0bffa15 	stw	r2,-24(fp)
  
/* remove dcache_flush call for FB330552  
  if(!ret_code)
      alt_dcache_flush((alt_u8*)fd->base_addr + offset, length);
*/
  return ret_code;
    15fc:	e0bffa17 	ldw	r2,-24(fp)
    1600:	e0bff515 	stw	r2,-44(fp)
  /* Check that the erase was successful. */
  if (!ret_code)
    1604:	e0bff517 	ldw	r2,-44(fp)
    1608:	1000111e 	bne	r2,zero,1650 <FlashTestBlockErase+0xe0>
  {
    if(FlashCheckIfBlockErased(fd, block, regions))
    160c:	e1bffe17 	ldw	r6,-8(fp)
    1610:	e17ffb17 	ldw	r5,-20(fp)
    1614:	e13ffd17 	ldw	r4,-12(fp)
    1618:	0000e000 	call	e00 <FlashCheckIfBlockErased>
    161c:	10000426 	beq	r2,zero,1630 <FlashTestBlockErase+0xc0>
      printf("  passed.\n");
    1620:	010000b4 	movhi	r4,2
    1624:	2135cc04 	addi	r4,r4,-10448
    1628:	00030a80 	call	30a8 <puts>
    162c:	00000806 	br	1650 <FlashTestBlockErase+0xe0>
    else
    {
      printf("  FAILED\n");  
    1630:	010000b4 	movhi	r4,2
    1634:	21360a04 	addi	r4,r4,-10200
    1638:	00030a80 	call	30a8 <puts>
      (*error)++;
    163c:	e0bffc17 	ldw	r2,-16(fp)
    1640:	10800017 	ldw	r2,0(r2)
    1644:	10c00044 	addi	r3,r2,1
    1648:	e0bffc17 	ldw	r2,-16(fp)
    164c:	10c00015 	stw	r3,0(r2)
    }
  }
  
  return ret_code;
    1650:	e0bff517 	ldw	r2,-44(fp)
}
    1654:	e6ffff04 	addi	sp,fp,-4
    1658:	dfc00217 	ldw	ra,8(sp)
    165c:	df000117 	ldw	fp,4(sp)
    1660:	dc000017 	ldw	r16,0(sp)
    1664:	dec00304 	addi	sp,sp,12
    1668:	f800283a 	ret

0000166c <FlashRunTests>:
*             - alt_erase_flash_block
*             - alt_write_flash_block
* 
******************************************************************/
static void FlashRunTests(alt_flash_fd* fd, int block, flash_region* regions)
{
    166c:	defff304 	addi	sp,sp,-52
    1670:	dfc00c15 	stw	ra,48(sp)
    1674:	df000b15 	stw	fp,44(sp)
    1678:	dc000a15 	stw	r16,40(sp)
    167c:	df000b04 	addi	fp,sp,44
    1680:	e13ffc15 	stw	r4,-16(fp)
    1684:	e17ffd15 	stw	r5,-12(fp)
    1688:	e1bffe15 	stw	r6,-8(fp)
  int ret_code = 0x0;
    168c:	e03ff515 	stw	zero,-44(fp)
  int error = 0x0;
    1690:	e03ffb15 	stw	zero,-20(fp)
  int test_offset;

  /* Calculate the offset of the block */
  test_offset = (regions->offset + (block * regions->block_size));
    1694:	e0bffe17 	ldw	r2,-8(fp)
    1698:	14000017 	ldw	r16,0(r2)
    169c:	e0bffe17 	ldw	r2,-8(fp)
    16a0:	10800317 	ldw	r2,12(r2)
    16a4:	e17ffd17 	ldw	r5,-12(fp)
    16a8:	1009883a 	mov	r4,r2
    16ac:	00024440 	call	2444 <__mulsi3>
    16b0:	8085883a 	add	r2,r16,r2
    16b4:	e0bff615 	stw	r2,-40(fp)
  
  /* Test reading and writing functions */
  ret_code = FlashTestReadWrite(block, &error, fd, regions);
    16b8:	e0bffb04 	addi	r2,fp,-20
    16bc:	e1fffe17 	ldw	r7,-8(fp)
    16c0:	e1bffc17 	ldw	r6,-16(fp)
    16c4:	100b883a 	mov	r5,r2
    16c8:	e13ffd17 	ldw	r4,-12(fp)
    16cc:	00012680 	call	1268 <FlashTestReadWrite>
    16d0:	e0bff515 	stw	r2,-44(fp)
 
  /* Test the erase function */
  if (!ret_code)
    16d4:	e0bff517 	ldw	r2,-44(fp)
    16d8:	1000071e 	bne	r2,zero,16f8 <FlashRunTests+0x8c>
  {
    ret_code = FlashTestBlockErase(block, &error, fd, regions);
    16dc:	e0bffb04 	addi	r2,fp,-20
    16e0:	e1fffe17 	ldw	r7,-8(fp)
    16e4:	e1bffc17 	ldw	r6,-16(fp)
    16e8:	100b883a 	mov	r5,r2
    16ec:	e13ffd17 	ldw	r4,-12(fp)
    16f0:	00015700 	call	1570 <FlashTestBlockErase>
    16f4:	e0bff515 	stw	r2,-44(fp)
  }
  /* Test the block write function */
  if (!ret_code)
    16f8:	e0bff517 	ldw	r2,-44(fp)
    16fc:	1000071e 	bne	r2,zero,171c <FlashRunTests+0xb0>
  {
    ret_code = FlashTestBlockWrite(block, &error, fd, regions);
    1700:	e0bffb04 	addi	r2,fp,-20
    1704:	e1fffe17 	ldw	r7,-8(fp)
    1708:	e1bffc17 	ldw	r6,-16(fp)
    170c:	100b883a 	mov	r5,r2
    1710:	e13ffd17 	ldw	r4,-12(fp)
    1714:	0000f500 	call	f50 <FlashTestBlockWrite>
    1718:	e0bff515 	stw	r2,-44(fp)
  }

  /* Erase the block so we dont fill one up each time we run the test */
  printf(" -Returning block %d to its erased state.\n", block);
    171c:	e17ffd17 	ldw	r5,-12(fp)
    1720:	010000b4 	movhi	r4,2
    1724:	21360d04 	addi	r4,r4,-10188
    1728:	0002f8c0 	call	2f8c <printf>
  alt_erase_flash_block(fd, test_offset, regions->block_size);
    172c:	e0bffe17 	ldw	r2,-8(fp)
    1730:	10800317 	ldw	r2,12(r2)
    1734:	e0fffc17 	ldw	r3,-16(fp)
    1738:	e0fff715 	stw	r3,-36(fp)
    173c:	e0fff617 	ldw	r3,-40(fp)
    1740:	e0fff815 	stw	r3,-32(fp)
    1744:	e0bff915 	stw	r2,-28(fp)
 */
static __inline__ int __attribute__ ((always_inline)) alt_erase_flash_block( 
                                      alt_flash_fd* fd, int offset, int length) 
{
  int ret_code;
  ret_code = fd->erase_block( fd, offset );
    1748:	e0bff717 	ldw	r2,-36(fp)
    174c:	10800817 	ldw	r2,32(r2)
    1750:	e17ff817 	ldw	r5,-32(fp)
    1754:	e13ff717 	ldw	r4,-36(fp)
    1758:	103ee83a 	callr	r2
    175c:	e0bffa15 	stw	r2,-24(fp)
 
  printf(" -Flash tests complete.\n");
    1760:	010000b4 	movhi	r4,2
    1764:	21361804 	addi	r4,r4,-10144
    1768:	00030a80 	call	30a8 <puts>
  if(ret_code || error)
    176c:	e0bff517 	ldw	r2,-44(fp)
    1770:	1000021e 	bne	r2,zero,177c <FlashRunTests+0x110>
    1774:	e0bffb17 	ldw	r2,-20(fp)
    1778:	10000326 	beq	r2,zero,1788 <FlashRunTests+0x11c>
  {
    printf(" -At least one test failed.\n\n");
    177c:	010000b4 	movhi	r4,2
    1780:	21361e04 	addi	r4,r4,-10120
    1784:	00030a80 	call	30a8 <puts>
  }
}
    1788:	0001883a 	nop
    178c:	e6ffff04 	addi	sp,fp,-4
    1790:	dfc00217 	ldw	ra,8(sp)
    1794:	df000117 	ldw	fp,4(sp)
    1798:	dc000017 	ldw	r16,0(sp)
    179c:	dec00304 	addi	sp,sp,12
    17a0:	f800283a 	ret

000017a4 <GetFlashName>:
*           Defaults to "/dev/ext_flash", the name of the flash
*           component in the Nios II example designs.
* 
******************************************************************/
static int GetFlashName(char line[30], int flash_type)
{
    17a4:	defffa04 	addi	sp,sp,-24
    17a8:	dfc00515 	stw	ra,20(sp)
    17ac:	df000415 	stw	fp,16(sp)
    17b0:	df000404 	addi	fp,sp,16
    17b4:	e13ffe15 	stw	r4,-8(fp)
    17b8:	e17fff15 	stw	r5,-4(fp)

  char ch = 0x0;
    17bc:	e03ffc05 	stb	zero,-16(fp)
  int i;

  if (flash_type == CFI)
    17c0:	e0bfff17 	ldw	r2,-4(fp)
    17c4:	108000d8 	cmpnei	r2,r2,3
    17c8:	1000091e 	bne	r2,zero,17f0 <GetFlashName+0x4c>
  { 
    printf("\nEnter the name of the CFI flash device to be opened,\n");
    17cc:	010000b4 	movhi	r4,2
    17d0:	21362604 	addi	r4,r4,-10088
    17d4:	00030a80 	call	30a8 <puts>
    printf("or just press <enter> to open \"/dev/ext_flash\"\n");
    17d8:	010000b4 	movhi	r4,2
    17dc:	21363404 	addi	r4,r4,-10032
    17e0:	00030a80 	call	30a8 <puts>
    printf(">");
    17e4:	01000f84 	movi	r4,62
    17e8:	0002fd00 	call	2fd0 <putchar>
    17ec:	00000b06 	br	181c <GetFlashName+0x78>
  }
  else if (flash_type == EPCS)
    17f0:	e0bfff17 	ldw	r2,-4(fp)
    17f4:	10800118 	cmpnei	r2,r2,4
    17f8:	1000081e 	bne	r2,zero,181c <GetFlashName+0x78>
  {
    printf("\nEnter the name of the EPCS flash device to be opened,\n");
    17fc:	010000b4 	movhi	r4,2
    1800:	21364004 	addi	r4,r4,-9984
    1804:	00030a80 	call	30a8 <puts>
    printf("or just press <enter> to open \"/dev/epcs_controller\"\n");
    1808:	010000b4 	movhi	r4,2
    180c:	21364e04 	addi	r4,r4,-9928
    1810:	00030a80 	call	30a8 <puts>
    printf(">");
    1814:	01000f84 	movi	r4,62
    1818:	0002fd00 	call	2fd0 <putchar>
  }
 
  for(i = 0; ch != '\n'; i++)
    181c:	e03ffd15 	stw	zero,-12(fp)
    1820:	00003706 	br	1900 <GetFlashName+0x15c>
  {
    ch = getc(stdin);
    1824:	d0a00117 	ldw	r2,-32764(gp)
    1828:	10800117 	ldw	r2,4(r2)
    182c:	1009883a 	mov	r4,r2
    1830:	00024dc0 	call	24dc <getc>
    1834:	e0bffc05 	stb	r2,-16(fp)
    if(ch == '\r' || ch == '\n')
    1838:	e0bffc07 	ldb	r2,-16(fp)
    183c:	10800360 	cmpeqi	r2,r2,13
    1840:	1000031e 	bne	r2,zero,1850 <GetFlashName+0xac>
    1844:	e0bffc07 	ldb	r2,-16(fp)
    1848:	10800298 	cmpnei	r2,r2,10
    184c:	1000221e 	bne	r2,zero,18d8 <GetFlashName+0x134>
    {
      /* Hitting <enter> defaults to the standard component name */
      if( i <= 1 )
    1850:	e0bffd17 	ldw	r2,-12(fp)
    1854:	10800088 	cmpgei	r2,r2,2
    1858:	10001a1e 	bne	r2,zero,18c4 <GetFlashName+0x120>
      {
        if (flash_type == CFI)
    185c:	e0bfff17 	ldw	r2,-4(fp)
    1860:	108000d8 	cmpnei	r2,r2,3
    1864:	10000a1e 	bne	r2,zero,1890 <GetFlashName+0xec>
          strcpy(line, "/dev/ext_flash\0");
    1868:	e0fffe17 	ldw	r3,-8(fp)
    186c:	008000b4 	movhi	r2,2
    1870:	10b65c04 	addi	r2,r2,-9872
    1874:	1009883a 	mov	r4,r2
    1878:	008003c4 	movi	r2,15
    187c:	100d883a 	mov	r6,r2
    1880:	200b883a 	mov	r5,r4
    1884:	1809883a 	mov	r4,r3
    1888:	0002e140 	call	2e14 <memcpy>
  {
    ch = getc(stdin);
    if(ch == '\r' || ch == '\n')
    {
      /* Hitting <enter> defaults to the standard component name */
      if( i <= 1 )
    188c:	00001806 	br	18f0 <GetFlashName+0x14c>
      {
        if (flash_type == CFI)
          strcpy(line, "/dev/ext_flash\0");
        else if (flash_type == EPCS)
    1890:	e0bfff17 	ldw	r2,-4(fp)
    1894:	10800118 	cmpnei	r2,r2,4
    1898:	1000151e 	bne	r2,zero,18f0 <GetFlashName+0x14c>
          strcpy(line, "/dev/epcs_controller\0");
    189c:	e0fffe17 	ldw	r3,-8(fp)
    18a0:	008000b4 	movhi	r2,2
    18a4:	10b66004 	addi	r2,r2,-9856
    18a8:	1009883a 	mov	r4,r2
    18ac:	00800544 	movi	r2,21
    18b0:	100d883a 	mov	r6,r2
    18b4:	200b883a 	mov	r5,r4
    18b8:	1809883a 	mov	r4,r3
    18bc:	0002e140 	call	2e14 <memcpy>
  {
    ch = getc(stdin);
    if(ch == '\r' || ch == '\n')
    {
      /* Hitting <enter> defaults to the standard component name */
      if( i <= 1 )
    18c0:	00000b06 	br	18f0 <GetFlashName+0x14c>
          strcpy(line, "/dev/epcs_controller\0");
      }
         
      else
        /* Properly terminate the string. */
        line[i] = '\0';
    18c4:	e0bffd17 	ldw	r2,-12(fp)
    18c8:	e0fffe17 	ldw	r3,-8(fp)
    18cc:	1885883a 	add	r2,r3,r2
    18d0:	10000005 	stb	zero,0(r2)
  {
    ch = getc(stdin);
    if(ch == '\r' || ch == '\n')
    {
      /* Hitting <enter> defaults to the standard component name */
      if( i <= 1 )
    18d4:	00000606 	br	18f0 <GetFlashName+0x14c>
      else
        /* Properly terminate the string. */
        line[i] = '\0';
    }
    else
     line[i] = ch;
    18d8:	e0bffd17 	ldw	r2,-12(fp)
    18dc:	e0fffe17 	ldw	r3,-8(fp)
    18e0:	1885883a 	add	r2,r3,r2
    18e4:	e0fffc03 	ldbu	r3,-16(fp)
    18e8:	10c00005 	stb	r3,0(r2)
    18ec:	00000106 	br	18f4 <GetFlashName+0x150>
  {
    ch = getc(stdin);
    if(ch == '\r' || ch == '\n')
    {
      /* Hitting <enter> defaults to the standard component name */
      if( i <= 1 )
    18f0:	0001883a 	nop
    printf("\nEnter the name of the EPCS flash device to be opened,\n");
    printf("or just press <enter> to open \"/dev/epcs_controller\"\n");
    printf(">");
  }
 
  for(i = 0; ch != '\n'; i++)
    18f4:	e0bffd17 	ldw	r2,-12(fp)
    18f8:	10800044 	addi	r2,r2,1
    18fc:	e0bffd15 	stw	r2,-12(fp)
    1900:	e0bffc07 	ldb	r2,-16(fp)
    1904:	10800298 	cmpnei	r2,r2,10
    1908:	103fc61e 	bne	r2,zero,1824 <__alt_mem_epcs_flash_controller_0+0xff800824>
    }
    else
     line[i] = ch;
  }
 
  return 0;
    190c:	0005883a 	mov	r2,zero
}
    1910:	e037883a 	mov	sp,fp
    1914:	dfc00117 	ldw	ra,4(sp)
    1918:	df000017 	ldw	fp,0(sp)
    191c:	dec00204 	addi	sp,sp,8
    1920:	f800283a 	ret

00001924 <FlashErase>:
*
*  Purpose: Erases 1 or all blocks in the specified flash device.
* 
******************************************************************/
static void FlashErase(int flash_type)
{
    1924:	deffe204 	addi	sp,sp,-120
    1928:	dfc01d15 	stw	ra,116(sp)
    192c:	df001c15 	stw	fp,112(sp)
    1930:	dc001b15 	stw	r16,108(sp)
    1934:	df001c04 	addi	fp,sp,112
    1938:	e13ffe15 	stw	r4,-8(fp)
  char entry[4];
  char flashname[30];
  unsigned int block;
 
  /* Get the name of the flash we are erasing */
  ret_code = GetFlashName(flashname, flash_type);
    193c:	e0bff504 	addi	r2,fp,-44
    1940:	e17ffe17 	ldw	r5,-8(fp)
    1944:	1009883a 	mov	r4,r2
    1948:	00017a40 	call	17a4 <GetFlashName>
    194c:	e0bfe415 	stw	r2,-112(fp)
 
  fd = alt_flash_open_dev(flashname);
    1950:	e0bff504 	addi	r2,fp,-44
    1954:	1009883a 	mov	r4,r2
    1958:	00199b80 	call	199b8 <alt_flash_open_dev>
    195c:	e0bfe515 	stw	r2,-108(fp)
  if (fd)
    1960:	e0bfe517 	ldw	r2,-108(fp)
    1964:	1000ba26 	beq	r2,zero,1c50 <FlashErase+0x32c>
    1968:	e0bfe517 	ldw	r2,-108(fp)
    196c:	e0bfe915 	stw	r2,-92(fp)
    1970:	e0bff204 	addi	r2,fp,-56
    1974:	e0bfea15 	stw	r2,-88(fp)
    1978:	e0bff304 	addi	r2,fp,-52
    197c:	e0bfeb15 	stw	r2,-84(fp)
 */
static __inline__ int __attribute__ ((always_inline)) alt_get_flash_info( 
                                      alt_flash_fd* fd, flash_region** info, 
                                      int* number_of_regions)
{
  return fd->get_info( fd, info, number_of_regions);
    1980:	e0bfe917 	ldw	r2,-92(fp)
    1984:	10800717 	ldw	r2,28(r2)
    1988:	e1bfeb17 	ldw	r6,-84(fp)
    198c:	e17fea17 	ldw	r5,-88(fp)
    1990:	e13fe917 	ldw	r4,-92(fp)
    1994:	103ee83a 	callr	r2
  {
    /* Find out some useful stuff about the flash */
    ret_code = alt_get_flash_info(fd, &regions, &number_of_regions);
    1998:	e0bfe415 	stw	r2,-112(fp)
    if (!ret_code)
    199c:	e0bfe417 	ldw	r2,-112(fp)
    19a0:	1000a41e 	bne	r2,zero,1c34 <FlashErase+0x310>
    {
      printf(" -Region has %d blocks.\n", regions->number_of_blocks);
    19a4:	e0bff217 	ldw	r2,-56(fp)
    19a8:	10800217 	ldw	r2,8(r2)
    19ac:	100b883a 	mov	r5,r2
    19b0:	010000b4 	movhi	r4,2
    19b4:	21366604 	addi	r4,r4,-9832
    19b8:	0002f8c0 	call	2f8c <printf>
      printf(" -Which block would you like to erase?\n");
    19bc:	010000b4 	movhi	r4,2
    19c0:	21366d04 	addi	r4,r4,-9804
    19c4:	00030a80 	call	30a8 <puts>
      printf(" -> ");
    19c8:	010000b4 	movhi	r4,2
    19cc:	21367704 	addi	r4,r4,-9764
    19d0:	0002f8c0 	call	2f8c <printf>
      
      GetInputString( entry, sizeof(entry), stdin );
    19d4:	d0a00117 	ldw	r2,-32764(gp)
    19d8:	10c00117 	ldw	r3,4(r2)
    19dc:	e0bff404 	addi	r2,fp,-48
    19e0:	180d883a 	mov	r6,r3
    19e4:	01400104 	movi	r5,4
    19e8:	1009883a 	mov	r4,r2
    19ec:	000038c0 	call	38c <GetInputString>

      if(entry[0] == 'a')
    19f0:	e0bff403 	ldbu	r2,-48(fp)
    19f4:	10803fcc 	andi	r2,r2,255
    19f8:	1080201c 	xori	r2,r2,128
    19fc:	10bfe004 	addi	r2,r2,-128
    1a00:	10801858 	cmpnei	r2,r2,97
    1a04:	1000521e 	bne	r2,zero,1b50 <FlashErase+0x22c>
      {
        printf(" -Erase ALL blocks? (y/n) ");
    1a08:	010000b4 	movhi	r4,2
    1a0c:	21367904 	addi	r4,r4,-9756
    1a10:	0002f8c0 	call	2f8c <printf>

        GetInputString( entry, sizeof(entry), stdin );
    1a14:	d0a00117 	ldw	r2,-32764(gp)
    1a18:	10c00117 	ldw	r3,4(r2)
    1a1c:	e0bff404 	addi	r2,fp,-48
    1a20:	180d883a 	mov	r6,r3
    1a24:	01400104 	movi	r5,4
    1a28:	1009883a 	mov	r4,r2
    1a2c:	000038c0 	call	38c <GetInputString>
        
        if(entry[0] == 'y')
    1a30:	e0bff403 	ldbu	r2,-48(fp)
    1a34:	10803fcc 	andi	r2,r2,255
    1a38:	1080201c 	xori	r2,r2,128
    1a3c:	10bfe004 	addi	r2,r2,-128
    1a40:	10801e58 	cmpnei	r2,r2,121
    1a44:	10003f1e 	bne	r2,zero,1b44 <FlashErase+0x220>
        {
          /* Erase all blocks */
          printf(" -Erasing %d blocks.  Please Wait.\n", (regions->number_of_blocks));
    1a48:	e0bff217 	ldw	r2,-56(fp)
    1a4c:	10800217 	ldw	r2,8(r2)
    1a50:	100b883a 	mov	r5,r2
    1a54:	010000b4 	movhi	r4,2
    1a58:	21368004 	addi	r4,r4,-9728
    1a5c:	0002f8c0 	call	2f8c <printf>
          for(block = 0; block < regions->number_of_blocks; block++)
    1a60:	e03ffd15 	stw	zero,-12(fp)
    1a64:	00002e06 	br	1b20 <FlashErase+0x1fc>
          {
            /* Dont erase it if it's already erased silly. */
            if ((FlashCheckIfBlockErased(fd, block, regions)) == 0)
    1a68:	e0bffd17 	ldw	r2,-12(fp)
    1a6c:	1007883a 	mov	r3,r2
    1a70:	e0bff217 	ldw	r2,-56(fp)
    1a74:	100d883a 	mov	r6,r2
    1a78:	180b883a 	mov	r5,r3
    1a7c:	e13fe517 	ldw	r4,-108(fp)
    1a80:	0000e000 	call	e00 <FlashCheckIfBlockErased>
    1a84:	1000191e 	bne	r2,zero,1aec <FlashErase+0x1c8>
            {
              test_offset = (regions->offset + (block * regions->block_size));
    1a88:	e0bff217 	ldw	r2,-56(fp)
    1a8c:	10800017 	ldw	r2,0(r2)
    1a90:	1021883a 	mov	r16,r2
    1a94:	e0bff217 	ldw	r2,-56(fp)
    1a98:	10800317 	ldw	r2,12(r2)
    1a9c:	1007883a 	mov	r3,r2
    1aa0:	e0bffd17 	ldw	r2,-12(fp)
    1aa4:	100b883a 	mov	r5,r2
    1aa8:	1809883a 	mov	r4,r3
    1aac:	00024440 	call	2444 <__mulsi3>
    1ab0:	8085883a 	add	r2,r16,r2
    1ab4:	e0bfe715 	stw	r2,-100(fp)
              alt_erase_flash_block(fd, test_offset, regions->block_size);
    1ab8:	e0bff217 	ldw	r2,-56(fp)
    1abc:	10800317 	ldw	r2,12(r2)
    1ac0:	e0ffe517 	ldw	r3,-108(fp)
    1ac4:	e0ffe615 	stw	r3,-104(fp)
    1ac8:	e0ffe717 	ldw	r3,-100(fp)
    1acc:	e0ffec15 	stw	r3,-80(fp)
    1ad0:	e0bfed15 	stw	r2,-76(fp)
 */
static __inline__ int __attribute__ ((always_inline)) alt_erase_flash_block( 
                                      alt_flash_fd* fd, int offset, int length) 
{
  int ret_code;
  ret_code = fd->erase_block( fd, offset );
    1ad4:	e0bfe617 	ldw	r2,-104(fp)
    1ad8:	10800817 	ldw	r2,32(r2)
    1adc:	e17fec17 	ldw	r5,-80(fp)
    1ae0:	e13fe617 	ldw	r4,-104(fp)
    1ae4:	103ee83a 	callr	r2
    1ae8:	e0bfee15 	stw	r2,-72(fp)
            }
            /* Just a simple progress meter so we dont get bored waiting for the flash to erase. */
            printf(".");
    1aec:	01000b84 	movi	r4,46
    1af0:	0002fd00 	call	2fd0 <putchar>
            if(((block + 1) % 80) == 0)
    1af4:	e0bffd17 	ldw	r2,-12(fp)
    1af8:	10800044 	addi	r2,r2,1
    1afc:	01401404 	movi	r5,80
    1b00:	1009883a 	mov	r4,r2
    1b04:	00023ec0 	call	23ec <__umodsi3>
    1b08:	1000021e 	bne	r2,zero,1b14 <FlashErase+0x1f0>
            {
              printf("\n");
    1b0c:	01000284 	movi	r4,10
    1b10:	0002fd00 	call	2fd0 <putchar>
        
        if(entry[0] == 'y')
        {
          /* Erase all blocks */
          printf(" -Erasing %d blocks.  Please Wait.\n", (regions->number_of_blocks));
          for(block = 0; block < regions->number_of_blocks; block++)
    1b14:	e0bffd17 	ldw	r2,-12(fp)
    1b18:	10800044 	addi	r2,r2,1
    1b1c:	e0bffd15 	stw	r2,-12(fp)
    1b20:	e0bff217 	ldw	r2,-56(fp)
    1b24:	10800217 	ldw	r2,8(r2)
    1b28:	1007883a 	mov	r3,r2
    1b2c:	e0bffd17 	ldw	r2,-12(fp)
    1b30:	10ffcd36 	bltu	r2,r3,1a68 <__alt_mem_epcs_flash_controller_0+0xff800a68>
            if(((block + 1) % 80) == 0)
            {
              printf("\n");
            }
          }
          printf("\n -All Blocks Erased.\n");
    1b34:	010000b4 	movhi	r4,2
    1b38:	21368904 	addi	r4,r4,-9692
    1b3c:	00030a80 	call	30a8 <puts>
    1b40:	00000306 	br	1b50 <FlashErase+0x22c>
        }
        else
        {
          printf("Erased zero blocks.\n");
    1b44:	010000b4 	movhi	r4,2
    1b48:	21368f04 	addi	r4,r4,-9668
    1b4c:	00030a80 	call	30a8 <puts>
        }
      }
      /* Just erase one block */
      if(sscanf(entry, "%d\n", &block))
    1b50:	e0fffd04 	addi	r3,fp,-12
    1b54:	e0bff404 	addi	r2,fp,-48
    1b58:	180d883a 	mov	r6,r3
    1b5c:	014000b4 	movhi	r5,2
    1b60:	29769404 	addi	r5,r5,-9648
    1b64:	1009883a 	mov	r4,r2
    1b68:	00031980 	call	3198 <sscanf>
    1b6c:	10003126 	beq	r2,zero,1c34 <FlashErase+0x310>
      {
        if ((block >= 0) && (block <= (regions->number_of_blocks - 1)))
    1b70:	e0bff217 	ldw	r2,-56(fp)
    1b74:	10800217 	ldw	r2,8(r2)
    1b78:	10bfffc4 	addi	r2,r2,-1
    1b7c:	1007883a 	mov	r3,r2
    1b80:	e0bffd17 	ldw	r2,-12(fp)
    1b84:	18801f36 	bltu	r3,r2,1c04 <FlashErase+0x2e0>
        {
          test_offset = (regions->offset + (block * regions->block_size));
    1b88:	e0bff217 	ldw	r2,-56(fp)
    1b8c:	10800017 	ldw	r2,0(r2)
    1b90:	1021883a 	mov	r16,r2
    1b94:	e0bff217 	ldw	r2,-56(fp)
    1b98:	10800317 	ldw	r2,12(r2)
    1b9c:	1007883a 	mov	r3,r2
    1ba0:	e0bffd17 	ldw	r2,-12(fp)
    1ba4:	100b883a 	mov	r5,r2
    1ba8:	1809883a 	mov	r4,r3
    1bac:	00024440 	call	2444 <__mulsi3>
    1bb0:	8085883a 	add	r2,r16,r2
    1bb4:	e0bfe715 	stw	r2,-100(fp)
          alt_erase_flash_block(fd, test_offset, regions->block_size);
    1bb8:	e0bff217 	ldw	r2,-56(fp)
    1bbc:	10800317 	ldw	r2,12(r2)
    1bc0:	e0ffe517 	ldw	r3,-108(fp)
    1bc4:	e0ffe815 	stw	r3,-96(fp)
    1bc8:	e0ffe717 	ldw	r3,-100(fp)
    1bcc:	e0ffef15 	stw	r3,-68(fp)
    1bd0:	e0bff015 	stw	r2,-64(fp)
    1bd4:	e0bfe817 	ldw	r2,-96(fp)
    1bd8:	10800817 	ldw	r2,32(r2)
    1bdc:	e17fef17 	ldw	r5,-68(fp)
    1be0:	e13fe817 	ldw	r4,-96(fp)
    1be4:	103ee83a 	callr	r2
    1be8:	e0bff115 	stw	r2,-60(fp)
          printf(" -Block %d erased.\n", block);
    1bec:	e0bffd17 	ldw	r2,-12(fp)
    1bf0:	100b883a 	mov	r5,r2
    1bf4:	010000b4 	movhi	r4,2
    1bf8:	21369504 	addi	r4,r4,-9644
    1bfc:	0002f8c0 	call	2f8c <printf>
    1c00:	00000c06 	br	1c34 <FlashErase+0x310>
        }
        else
        {
          printf(" -Block number entered is %d\n", block);
    1c04:	e0bffd17 	ldw	r2,-12(fp)
    1c08:	100b883a 	mov	r5,r2
    1c0c:	010000b4 	movhi	r4,2
    1c10:	21369a04 	addi	r4,r4,-9624
    1c14:	0002f8c0 	call	2f8c <printf>
          printf(" -Block number must be between 0 and %d.\n", (regions->number_of_blocks - 1));
    1c18:	e0bff217 	ldw	r2,-56(fp)
    1c1c:	10800217 	ldw	r2,8(r2)
    1c20:	10bfffc4 	addi	r2,r2,-1
    1c24:	100b883a 	mov	r5,r2
    1c28:	010000b4 	movhi	r4,2
    1c2c:	2136a204 	addi	r4,r4,-9592
    1c30:	0002f8c0 	call	2f8c <printf>
        }
      }
    }
    printf(" -Closing flash \"%s\".\n", flashname);
    1c34:	e0bff504 	addi	r2,fp,-44
    1c38:	100b883a 	mov	r5,r2
    1c3c:	010000b4 	movhi	r4,2
    1c40:	2136ad04 	addi	r4,r4,-9548
    1c44:	0002f8c0 	call	2f8c <printf>
    alt_flash_close_dev(fd);
    1c48:	e13fe517 	ldw	r4,-108(fp)
    1c4c:	0019a200 	call	19a20 <alt_flash_close_dev>
  }
}
    1c50:	0001883a 	nop
    1c54:	e6ffff04 	addi	sp,fp,-4
    1c58:	dfc00217 	ldw	ra,8(sp)
    1c5c:	df000117 	ldw	fp,4(sp)
    1c60:	dc000017 	ldw	r16,0(sp)
    1c64:	dec00304 	addi	sp,sp,12
    1c68:	f800283a 	ret

00001c6c <FlashFindErasedBlocks>:
*           parameter is SHOWMAP, the function prints a list of 
*           all blocks, indicating which ones are erased.
* 
******************************************************************/
static int FlashFindErasedBlocks(alt_flash_fd* fd, flash_region* regions, int number_of_regions, int mode)
{ 
    1c6c:	defff304 	addi	sp,sp,-52
    1c70:	dfc00c15 	stw	ra,48(sp)
    1c74:	df000b15 	stw	fp,44(sp)
    1c78:	dc000a15 	stw	r16,40(sp)
    1c7c:	df000b04 	addi	fp,sp,44
    1c80:	e13ffb15 	stw	r4,-20(fp)
    1c84:	e17ffc15 	stw	r5,-16(fp)
    1c88:	e1bffd15 	stw	r6,-12(fp)
    1c8c:	e1fffe15 	stw	r7,-8(fp)
  int region_index, block_index;
  int block_erased = 0x0;
    1c90:	e03ff715 	stw	zero,-36(fp)
  char entry[5];
  unsigned int block;

  /* Currently only supports flashes with 1 region, but region loop is left here for possible */
  /* future implementation */
  for(region_index = 0; region_index < number_of_regions; region_index++)
    1c94:	e03ff515 	stw	zero,-44(fp)
    1c98:	00008a06 	br	1ec4 <FlashFindErasedBlocks+0x258>
  {
    printf(" -Checking Region %d for erased blocks.\n", region_index);
    1c9c:	e17ff517 	ldw	r5,-44(fp)
    1ca0:	010000b4 	movhi	r4,2
    1ca4:	2136b304 	addi	r4,r4,-9524
    1ca8:	0002f8c0 	call	2f8c <printf>
    /* SHOWMAP mode has a legend reminding us what little plus and minus signs mean */
    if(mode == SHOWMAP)
    1cac:	e0bffe17 	ldw	r2,-8(fp)
    1cb0:	10800098 	cmpnei	r2,r2,2
    1cb4:	1000061e 	bne	r2,zero,1cd0 <FlashFindErasedBlocks+0x64>
    {
      printf("            erased block = '-'\n");     
    1cb8:	010000b4 	movhi	r4,2
    1cbc:	2136be04 	addi	r4,r4,-9480
    1cc0:	00030a80 	call	30a8 <puts>
      printf("          unerased block = '+'\n\n");     
    1cc4:	010000b4 	movhi	r4,2
    1cc8:	2136c604 	addi	r4,r4,-9448
    1ccc:	00030a80 	call	30a8 <puts>
    }
    /* Check those blocks. */
    for(block_index = 0; block_index < (regions->number_of_blocks); block_index++)
    1cd0:	e03ff615 	stw	zero,-40(fp)
    1cd4:	00003206 	br	1da0 <FlashFindErasedBlocks+0x134>
    {
      block_erased = FlashCheckIfBlockErased(fd, block_index, regions);
    1cd8:	e1bffc17 	ldw	r6,-16(fp)
    1cdc:	e17ff617 	ldw	r5,-40(fp)
    1ce0:	e13ffb17 	ldw	r4,-20(fp)
    1ce4:	0000e000 	call	e00 <FlashCheckIfBlockErased>
    1ce8:	e0bff715 	stw	r2,-36(fp)
      /* If it's erased and were running in TEST mode, we're done */
      if(block_erased && (mode == TEST))
    1cec:	e0bff717 	ldw	r2,-36(fp)
    1cf0:	10000326 	beq	r2,zero,1d00 <FlashFindErasedBlocks+0x94>
    1cf4:	e0bffe17 	ldw	r2,-8(fp)
    1cf8:	10800060 	cmpeqi	r2,r2,1
    1cfc:	10002c1e 	bne	r2,zero,1db0 <FlashFindErasedBlocks+0x144>
        break;
      /* If in SHOWMAP mode, mark block as either erased or not-erased. */
      else if(block_erased && (mode == SHOWMAP))
    1d00:	e0bff717 	ldw	r2,-36(fp)
    1d04:	10001126 	beq	r2,zero,1d4c <FlashFindErasedBlocks+0xe0>
    1d08:	e0bffe17 	ldw	r2,-8(fp)
    1d0c:	10800098 	cmpnei	r2,r2,2
    1d10:	10000e1e 	bne	r2,zero,1d4c <FlashFindErasedBlocks+0xe0>
        printf("  Block %3d @ 0x%8.8X:\t-\n", block_index, (regions->offset + (block_index * regions->block_size)));           
    1d14:	e0bffc17 	ldw	r2,-16(fp)
    1d18:	14000017 	ldw	r16,0(r2)
    1d1c:	e0bffc17 	ldw	r2,-16(fp)
    1d20:	10800317 	ldw	r2,12(r2)
    1d24:	e17ff617 	ldw	r5,-40(fp)
    1d28:	1009883a 	mov	r4,r2
    1d2c:	00024440 	call	2444 <__mulsi3>
    1d30:	8085883a 	add	r2,r16,r2
    1d34:	100d883a 	mov	r6,r2
    1d38:	e17ff617 	ldw	r5,-40(fp)
    1d3c:	010000b4 	movhi	r4,2
    1d40:	2136ce04 	addi	r4,r4,-9416
    1d44:	0002f8c0 	call	2f8c <printf>
    1d48:	00001206 	br	1d94 <FlashFindErasedBlocks+0x128>
      else if(!block_erased && (mode == SHOWMAP))
    1d4c:	e0bff717 	ldw	r2,-36(fp)
    1d50:	1000101e 	bne	r2,zero,1d94 <FlashFindErasedBlocks+0x128>
    1d54:	e0bffe17 	ldw	r2,-8(fp)
    1d58:	10800098 	cmpnei	r2,r2,2
    1d5c:	10000d1e 	bne	r2,zero,1d94 <FlashFindErasedBlocks+0x128>
        printf("  Block %3d @ 0x%8.8X:\t+\n", block_index, (regions->offset + (block_index * regions->block_size)));           
    1d60:	e0bffc17 	ldw	r2,-16(fp)
    1d64:	14000017 	ldw	r16,0(r2)
    1d68:	e0bffc17 	ldw	r2,-16(fp)
    1d6c:	10800317 	ldw	r2,12(r2)
    1d70:	e17ff617 	ldw	r5,-40(fp)
    1d74:	1009883a 	mov	r4,r2
    1d78:	00024440 	call	2444 <__mulsi3>
    1d7c:	8085883a 	add	r2,r16,r2
    1d80:	100d883a 	mov	r6,r2
    1d84:	e17ff617 	ldw	r5,-40(fp)
    1d88:	010000b4 	movhi	r4,2
    1d8c:	2136d504 	addi	r4,r4,-9388
    1d90:	0002f8c0 	call	2f8c <printf>
    {
      printf("            erased block = '-'\n");     
      printf("          unerased block = '+'\n\n");     
    }
    /* Check those blocks. */
    for(block_index = 0; block_index < (regions->number_of_blocks); block_index++)
    1d94:	e0bff617 	ldw	r2,-40(fp)
    1d98:	10800044 	addi	r2,r2,1
    1d9c:	e0bff615 	stw	r2,-40(fp)
    1da0:	e0bffc17 	ldw	r2,-16(fp)
    1da4:	10800217 	ldw	r2,8(r2)
    1da8:	e0fff617 	ldw	r3,-40(fp)
    1dac:	18bfca16 	blt	r3,r2,1cd8 <__alt_mem_epcs_flash_controller_0+0xff800cd8>
        printf("  Block %3d @ 0x%8.8X:\t-\n", block_index, (regions->offset + (block_index * regions->block_size)));           
      else if(!block_erased && (mode == SHOWMAP))
        printf("  Block %3d @ 0x%8.8X:\t+\n", block_index, (regions->offset + (block_index * regions->block_size)));           
    }
    /* Special case if no blocks are erased (TEST mode only)*/
    if(( block_index == ( regions->number_of_blocks )) && ( mode == TEST ))
    1db0:	e0bffc17 	ldw	r2,-16(fp)
    1db4:	10c00217 	ldw	r3,8(r2)
    1db8:	e0bff617 	ldw	r2,-40(fp)
    1dbc:	1880391e 	bne	r3,r2,1ea4 <FlashFindErasedBlocks+0x238>
    1dc0:	e0bffe17 	ldw	r2,-8(fp)
    1dc4:	10800058 	cmpnei	r2,r2,1
    1dc8:	1000361e 	bne	r2,zero,1ea4 <FlashFindErasedBlocks+0x238>
    {
      printf(" -Found no erased blocks.  Please enter the number of the block\n");
    1dcc:	010000b4 	movhi	r4,2
    1dd0:	2136dc04 	addi	r4,r4,-9360
    1dd4:	00030a80 	call	30a8 <puts>
      printf("  you would like to test.  Enter 'q' to quit without testing flash.\n");
    1dd8:	010000b4 	movhi	r4,2
    1ddc:	2136ec04 	addi	r4,r4,-9296
    1de0:	00030a80 	call	30a8 <puts>
      printf(" -> ");
    1de4:	010000b4 	movhi	r4,2
    1de8:	21367704 	addi	r4,r4,-9764
    1dec:	0002f8c0 	call	2f8c <printf>

      GetInputString( entry, sizeof(entry), stdin );
    1df0:	d0a00117 	ldw	r2,-32764(gp)
    1df4:	10c00117 	ldw	r3,4(r2)
    1df8:	e0bff804 	addi	r2,fp,-32
    1dfc:	180d883a 	mov	r6,r3
    1e00:	01400144 	movi	r5,5
    1e04:	1009883a 	mov	r4,r2
    1e08:	000038c0 	call	38c <GetInputString>

      if(entry[0] == 'q')
    1e0c:	e0bff803 	ldbu	r2,-32(fp)
    1e10:	10803fcc 	andi	r2,r2,255
    1e14:	1080201c 	xori	r2,r2,128
    1e18:	10bfe004 	addi	r2,r2,-128
    1e1c:	10801c58 	cmpnei	r2,r2,113
    1e20:	1000031e 	bne	r2,zero,1e30 <FlashFindErasedBlocks+0x1c4>
      {
    		block_index = QUIT_WITHOUT_TESTING;
    1e24:	00bfffc4 	movi	r2,-1
    1e28:	e0bff615 	stw	r2,-40(fp)
    		break;
    1e2c:	00002a06 	br	1ed8 <FlashFindErasedBlocks+0x26c>
    	}
      else if(sscanf(entry, "%d\n", &block))
    1e30:	e0fffa04 	addi	r3,fp,-24
    1e34:	e0bff804 	addi	r2,fp,-32
    1e38:	180d883a 	mov	r6,r3
    1e3c:	014000b4 	movhi	r5,2
    1e40:	29769404 	addi	r5,r5,-9648
    1e44:	1009883a 	mov	r4,r2
    1e48:	00031980 	call	3198 <sscanf>
    1e4c:	10001526 	beq	r2,zero,1ea4 <FlashFindErasedBlocks+0x238>
      {
        if ((block >= 0) && (block <= (regions->number_of_blocks - 1)))
    1e50:	e0bffc17 	ldw	r2,-16(fp)
    1e54:	10800217 	ldw	r2,8(r2)
    1e58:	10bfffc4 	addi	r2,r2,-1
    1e5c:	1007883a 	mov	r3,r2
    1e60:	e0bffa17 	ldw	r2,-24(fp)
    1e64:	18800336 	bltu	r3,r2,1e74 <FlashFindErasedBlocks+0x208>
        {
        	block_index = block;
    1e68:	e0bffa17 	ldw	r2,-24(fp)
    1e6c:	e0bff615 	stw	r2,-40(fp)
        	break;
    1e70:	00001906 	br	1ed8 <FlashFindErasedBlocks+0x26c>
        }
        else 
        {
          printf(" -Block number entered is %d\n", block);
    1e74:	e0bffa17 	ldw	r2,-24(fp)
    1e78:	100b883a 	mov	r5,r2
    1e7c:	010000b4 	movhi	r4,2
    1e80:	21369a04 	addi	r4,r4,-9624
    1e84:	0002f8c0 	call	2f8c <printf>
          printf(" -Block number must be between 0 and %d.\n", (regions->number_of_blocks - 1));
    1e88:	e0bffc17 	ldw	r2,-16(fp)
    1e8c:	10800217 	ldw	r2,8(r2)
    1e90:	10bfffc4 	addi	r2,r2,-1
    1e94:	100b883a 	mov	r5,r2
    1e98:	010000b4 	movhi	r4,2
    1e9c:	2136a204 	addi	r4,r4,-9592
    1ea0:	0002f8c0 	call	2f8c <printf>
        }
      }    	
    }
    /* Break out of the region loop if we've found an erased block to test. */
    if(block_erased && (mode == TEST))
    1ea4:	e0bff717 	ldw	r2,-36(fp)
    1ea8:	10000326 	beq	r2,zero,1eb8 <FlashFindErasedBlocks+0x24c>
    1eac:	e0bffe17 	ldw	r2,-8(fp)
    1eb0:	10800058 	cmpnei	r2,r2,1
    1eb4:	10000726 	beq	r2,zero,1ed4 <FlashFindErasedBlocks+0x268>
  char entry[5];
  unsigned int block;

  /* Currently only supports flashes with 1 region, but region loop is left here for possible */
  /* future implementation */
  for(region_index = 0; region_index < number_of_regions; region_index++)
    1eb8:	e0bff517 	ldw	r2,-44(fp)
    1ebc:	10800044 	addi	r2,r2,1
    1ec0:	e0bff515 	stw	r2,-44(fp)
    1ec4:	e0fff517 	ldw	r3,-44(fp)
    1ec8:	e0bffd17 	ldw	r2,-12(fp)
    1ecc:	18bf7316 	blt	r3,r2,1c9c <__alt_mem_epcs_flash_controller_0+0xff800c9c>
    1ed0:	00000106 	br	1ed8 <FlashFindErasedBlocks+0x26c>
        }
      }    	
    }
    /* Break out of the region loop if we've found an erased block to test. */
    if(block_erased && (mode == TEST))
      break;
    1ed4:	0001883a 	nop
  }

  return block_index;
    1ed8:	e0bff617 	ldw	r2,-40(fp)
}
    1edc:	e6ffff04 	addi	sp,fp,-4
    1ee0:	dfc00217 	ldw	ra,8(sp)
    1ee4:	df000117 	ldw	fp,4(sp)
    1ee8:	dc000017 	ldw	r16,0(sp)
    1eec:	dec00304 	addi	sp,sp,12
    1ef0:	f800283a 	ret

00001ef4 <TestFlash>:
*           indicates which ones are erased.  The flash is closed
*           at the end of the function.
* 
******************************************************************/
static void TestFlash(int mode, int flash_type)
{
    1ef4:	deffea04 	addi	sp,sp,-88
    1ef8:	dfc01515 	stw	ra,84(sp)
    1efc:	df001415 	stw	fp,80(sp)
    1f00:	dc001315 	stw	r16,76(sp)
    1f04:	df001404 	addi	fp,sp,80
    1f08:	e13ffd15 	stw	r4,-12(fp)
    1f0c:	e17ffe15 	stw	r5,-8(fp)
  alt_flash_fd* fd;
  int number_of_regions;
  int block;
  flash_region* regions;
  int ret_code = 0x0;
    1f10:	e03fec15 	stw	zero,-80(fp)
  char entry[4];
  char flashname[30];
  
  ret_code = GetFlashName(flashname, flash_type);
    1f14:	e0bff504 	addi	r2,fp,-44
    1f18:	e17ffe17 	ldw	r5,-8(fp)
    1f1c:	1009883a 	mov	r4,r2
    1f20:	00017a40 	call	17a4 <GetFlashName>
    1f24:	e0bfec15 	stw	r2,-80(fp)

  fd = alt_flash_open_dev(flashname);
    1f28:	e0bff504 	addi	r2,fp,-44
    1f2c:	1009883a 	mov	r4,r2
    1f30:	00199b80 	call	199b8 <alt_flash_open_dev>
    1f34:	e0bfed15 	stw	r2,-76(fp)
  if (fd)
    1f38:	e0bfed17 	ldw	r2,-76(fp)
    1f3c:	10005826 	beq	r2,zero,20a0 <TestFlash+0x1ac>
  {
    printf(" -Successfully opened %s\n", flashname);
    1f40:	e0bff504 	addi	r2,fp,-44
    1f44:	100b883a 	mov	r5,r2
    1f48:	010000b4 	movhi	r4,2
    1f4c:	2136fd04 	addi	r4,r4,-9228
    1f50:	0002f8c0 	call	2f8c <printf>
    1f54:	e0bfed17 	ldw	r2,-76(fp)
    1f58:	e0bfef15 	stw	r2,-68(fp)
    1f5c:	e0bff304 	addi	r2,fp,-52
    1f60:	e0bff015 	stw	r2,-64(fp)
    1f64:	e0bff204 	addi	r2,fp,-56
    1f68:	e0bff115 	stw	r2,-60(fp)
 */
static __inline__ int __attribute__ ((always_inline)) alt_get_flash_info( 
                                      alt_flash_fd* fd, flash_region** info, 
                                      int* number_of_regions)
{
  return fd->get_info( fd, info, number_of_regions);
    1f6c:	e0bfef17 	ldw	r2,-68(fp)
    1f70:	10800717 	ldw	r2,28(r2)
    1f74:	e1bff117 	ldw	r6,-60(fp)
    1f78:	e17ff017 	ldw	r5,-64(fp)
    1f7c:	e13fef17 	ldw	r4,-68(fp)
    1f80:	103ee83a 	callr	r2
    
    /* Get some useful info about the flash */
    ret_code = alt_get_flash_info(fd, &regions, &number_of_regions);
    1f84:	e0bfec15 	stw	r2,-80(fp)
      
    if (!ret_code)
    1f88:	e0bfec17 	ldw	r2,-80(fp)
    1f8c:	1000491e 	bne	r2,zero,20b4 <TestFlash+0x1c0>
    {
      printf(" -Region 0 contains %d blocks.\n", regions->number_of_blocks);
    1f90:	e0bff317 	ldw	r2,-52(fp)
    1f94:	10800217 	ldw	r2,8(r2)
    1f98:	100b883a 	mov	r5,r2
    1f9c:	010000b4 	movhi	r4,2
    1fa0:	21370404 	addi	r4,r4,-9200
    1fa4:	0002f8c0 	call	2f8c <printf>
      
      block = FlashFindErasedBlocks(fd, regions, number_of_regions, mode);
    1fa8:	e0bff317 	ldw	r2,-52(fp)
    1fac:	e0fff217 	ldw	r3,-56(fp)
    1fb0:	e1fffd17 	ldw	r7,-12(fp)
    1fb4:	180d883a 	mov	r6,r3
    1fb8:	100b883a 	mov	r5,r2
    1fbc:	e13fed17 	ldw	r4,-76(fp)
    1fc0:	0001c6c0 	call	1c6c <FlashFindErasedBlocks>
    1fc4:	e0bfee15 	stw	r2,-72(fp)

      /* If we're in TEST mode, ask if this block is okay to test. */
      if(( mode == TEST ) && ( block != QUIT_WITHOUT_TESTING ))
    1fc8:	e0bffd17 	ldw	r2,-12(fp)
    1fcc:	10800058 	cmpnei	r2,r2,1
    1fd0:	1000381e 	bne	r2,zero,20b4 <TestFlash+0x1c0>
    1fd4:	e0bfee17 	ldw	r2,-72(fp)
    1fd8:	10bfffe0 	cmpeqi	r2,r2,-1
    1fdc:	1000351e 	bne	r2,zero,20b4 <TestFlash+0x1c0>
      {
        printf(" -Block %d, at address 0x%X identified.\n", block, (regions->offset + (block * regions->block_size)));
    1fe0:	e0bff317 	ldw	r2,-52(fp)
    1fe4:	14000017 	ldw	r16,0(r2)
    1fe8:	e0bff317 	ldw	r2,-52(fp)
    1fec:	10800317 	ldw	r2,12(r2)
    1ff0:	e17fee17 	ldw	r5,-72(fp)
    1ff4:	1009883a 	mov	r4,r2
    1ff8:	00024440 	call	2444 <__mulsi3>
    1ffc:	8085883a 	add	r2,r16,r2
    2000:	100d883a 	mov	r6,r2
    2004:	e17fee17 	ldw	r5,-72(fp)
    2008:	010000b4 	movhi	r4,2
    200c:	21370c04 	addi	r4,r4,-9168
    2010:	0002f8c0 	call	2f8c <printf>
        printf(" -Would you like to test this block? (y/n)");
    2014:	010000b4 	movhi	r4,2
    2018:	21371704 	addi	r4,r4,-9124
    201c:	0002f8c0 	call	2f8c <printf>

        GetInputString(entry, sizeof(entry), stdin);
    2020:	d0a00117 	ldw	r2,-32764(gp)
    2024:	10c00117 	ldw	r3,4(r2)
    2028:	e0bff404 	addi	r2,fp,-48
    202c:	180d883a 	mov	r6,r3
    2030:	01400104 	movi	r5,4
    2034:	1009883a 	mov	r4,r2
    2038:	000038c0 	call	38c <GetInputString>

        if ( entry[0] == 'y' && entry[1] == '\n' )
    203c:	e0bff403 	ldbu	r2,-48(fp)
    2040:	10803fcc 	andi	r2,r2,255
    2044:	1080201c 	xori	r2,r2,128
    2048:	10bfe004 	addi	r2,r2,-128
    204c:	10801e58 	cmpnei	r2,r2,121
    2050:	1000181e 	bne	r2,zero,20b4 <TestFlash+0x1c0>
    2054:	e0bff443 	ldbu	r2,-47(fp)
    2058:	10803fcc 	andi	r2,r2,255
    205c:	1080201c 	xori	r2,r2,128
    2060:	10bfe004 	addi	r2,r2,-128
    2064:	10800298 	cmpnei	r2,r2,10
    2068:	1000121e 	bne	r2,zero,20b4 <TestFlash+0x1c0>
        {
          /* Test that Flash! */
          FlashRunTests(fd, block, regions);
    206c:	e0bff317 	ldw	r2,-52(fp)
    2070:	100d883a 	mov	r6,r2
    2074:	e17fee17 	ldw	r5,-72(fp)
    2078:	e13fed17 	ldw	r4,-76(fp)
    207c:	000166c0 	call	166c <FlashRunTests>
          printf(" -Closing flash device \"%s\".\n", flashname);
    2080:	e0bff504 	addi	r2,fp,-44
    2084:	100b883a 	mov	r5,r2
    2088:	010000b4 	movhi	r4,2
    208c:	21372204 	addi	r4,r4,-9080
    2090:	0002f8c0 	call	2f8c <printf>
          alt_flash_close_dev(fd);
    2094:	e13fed17 	ldw	r4,-76(fp)
    2098:	0019a200 	call	19a20 <alt_flash_close_dev>
  }
  else
  {
    printf(" -ERROR: Could not open %s\n", flashname);   
  }
}
    209c:	00000506 	br	20b4 <TestFlash+0x1c0>
      }
    }
  }
  else
  {
    printf(" -ERROR: Could not open %s\n", flashname);   
    20a0:	e0bff504 	addi	r2,fp,-44
    20a4:	100b883a 	mov	r5,r2
    20a8:	010000b4 	movhi	r4,2
    20ac:	21372a04 	addi	r4,r4,-9048
    20b0:	0002f8c0 	call	2f8c <printf>
  }
}
    20b4:	0001883a 	nop
    20b8:	e6ffff04 	addi	sp,fp,-4
    20bc:	dfc00217 	ldw	ra,8(sp)
    20c0:	df000117 	ldw	fp,4(sp)
    20c4:	dc000017 	ldw	r16,0(sp)
    20c8:	dec00304 	addi	sp,sp,12
    20cc:	f800283a 	ret

000020d0 <TopMenu>:
*
*  Purpose: Generates the top level menu.
* 
******************************************************************/
static int TopMenu( void )
{
    20d0:	defffd04 	addi	sp,sp,-12
    20d4:	dfc00215 	stw	ra,8(sp)
    20d8:	df000115 	stw	fp,4(sp)
    20dc:	df000104 	addi	fp,sp,4
  char ch;

  /* Print the top-level menu to stdout */
  while (1)
  {
    MenuBegin("      Memory Test Main Menu");
    20e0:	010000b4 	movhi	r4,2
    20e4:	21373104 	addi	r4,r4,-9020
    20e8:	00002e80 	call	2e8 <MenuBegin>
    MenuItem( 'a', "Test RAM" );
    20ec:	014000b4 	movhi	r5,2
    20f0:	29773804 	addi	r5,r5,-8992
    20f4:	01001844 	movi	r4,97
    20f8:	00003400 	call	340 <MenuItem>
    MenuItem( 'b', "Test Flash");
    20fc:	014000b4 	movhi	r5,2
    2100:	29773b04 	addi	r5,r5,-8980
    2104:	01001884 	movi	r4,98
    2108:	00003400 	call	340 <MenuItem>
#ifdef EPCS_CONTROLLER_NAME    
    MenuItem( 'c', "Test EPCS Serial Flash");
    ch = MenuEnd( 'a', 'c' );    
#else
    ch = MenuEnd( 'a', 'b' );
    210c:	01401884 	movi	r5,98
    2110:	01001844 	movi	r4,97
    2114:	000041c0 	call	41c <MenuEnd>
    2118:	e0bfff05 	stb	r2,-4(fp)
#endif /* EPCS_CONTROLLER_NAME */

    switch(ch)
    211c:	e0bfff07 	ldb	r2,-4(fp)
    2120:	10bfe7c4 	addi	r2,r2,-97
    2124:	10c00468 	cmpgeui	r3,r2,17
    2128:	1800241e 	bne	r3,zero,21bc <TopMenu+0xec>
    212c:	100690ba 	slli	r3,r2,2
    2130:	00800034 	movhi	r2,0
    2134:	10885104 	addi	r2,r2,8516
    2138:	1885883a 	add	r2,r3,r2
    213c:	10800017 	ldw	r2,0(r2)
    2140:	1000683a 	jmp	r2
    2144:	00002188 	cmpgei	zero,zero,134
    2148:	00002190 	cmplti	zero,zero,134
    214c:	000021bc 	xorhi	zero,zero,134
    2150:	000021bc 	xorhi	zero,zero,134
    2154:	000021a0 	cmpeqi	zero,zero,134
    2158:	000021bc 	xorhi	zero,zero,134
    215c:	000021bc 	xorhi	zero,zero,134
    2160:	000021bc 	xorhi	zero,zero,134
    2164:	000021bc 	xorhi	zero,zero,134
    2168:	000021bc 	xorhi	zero,zero,134
    216c:	000021bc 	xorhi	zero,zero,134
    2170:	000021bc 	xorhi	zero,zero,134
    2174:	000021ac 	andhi	zero,zero,134
    2178:	000021bc 	xorhi	zero,zero,134
    217c:	000021bc 	xorhi	zero,zero,134
    2180:	000021bc 	xorhi	zero,zero,134
    2184:	000021d4 	movui	zero,135
    {
      MenuCase('a',TestRam());
    2188:	0000c4c0 	call	c4c <TestRam>
    218c:	00001206 	br	21d8 <TopMenu+0x108>
      MenuCase('b',TestFlash(TEST, CFI));
    2190:	014000c4 	movi	r5,3
    2194:	01000044 	movi	r4,1
    2198:	0001ef40 	call	1ef4 <TestFlash>
    219c:	00000e06 	br	21d8 <TopMenu+0x108>
      MenuCase('e',FlashErase(CFI));       /* hidden option */
    21a0:	010000c4 	movi	r4,3
    21a4:	00019240 	call	1924 <FlashErase>
    21a8:	00000b06 	br	21d8 <TopMenu+0x108>
      MenuCase('m',TestFlash(SHOWMAP, CFI)); /* hidden option */
    21ac:	014000c4 	movi	r5,3
    21b0:	01000084 	movi	r4,2
    21b4:	0001ef40 	call	1ef4 <TestFlash>
    21b8:	00000706 	br	21d8 <TopMenu+0x108>
      MenuCase('c',TestFlash(TEST, EPCS));
      MenuCase('f',FlashErase(EPCS));       /* hidden option */
      MenuCase('s',TestFlash(SHOWMAP, EPCS)); /* hidden option */
#endif /* EPCS_CONTROLLER_NAME */
      case 'q':	break;
      default:	printf("\n -ERROR: %c is an invalid entry.  Please try again\n", ch); break;
    21bc:	e0bfff07 	ldb	r2,-4(fp)
    21c0:	100b883a 	mov	r5,r2
    21c4:	010000b4 	movhi	r4,2
    21c8:	21373e04 	addi	r4,r4,-8968
    21cc:	0002f8c0 	call	2f8c <printf>
    21d0:	00000106 	br	21d8 <TopMenu+0x108>
#ifdef EPCS_CONTROLLER_NAME    
      MenuCase('c',TestFlash(TEST, EPCS));
      MenuCase('f',FlashErase(EPCS));       /* hidden option */
      MenuCase('s',TestFlash(SHOWMAP, EPCS)); /* hidden option */
#endif /* EPCS_CONTROLLER_NAME */
      case 'q':	break;
    21d4:	0001883a 	nop
      default:	printf("\n -ERROR: %c is an invalid entry.  Please try again\n", ch); break;
    }
    if (ch == 'q')
    21d8:	e0bfff07 	ldb	r2,-4(fp)
    21dc:	10801c58 	cmpnei	r2,r2,113
    21e0:	10001026 	beq	r2,zero,2224 <TopMenu+0x154>
      break;
    printf("\nPress enter to continue...\n");
    21e4:	010000b4 	movhi	r4,2
    21e8:	21374c04 	addi	r4,r4,-8912
    21ec:	00030a80 	call	30a8 <puts>
    while( (( ch = getc(stdin)) != '\n' ) && ( ch != EOF ));
    21f0:	0001883a 	nop
    21f4:	d0a00117 	ldw	r2,-32764(gp)
    21f8:	10800117 	ldw	r2,4(r2)
    21fc:	1009883a 	mov	r4,r2
    2200:	00024dc0 	call	24dc <getc>
    2204:	e0bfff05 	stb	r2,-4(fp)
    2208:	e0bfff07 	ldb	r2,-4(fp)
    220c:	108002a0 	cmpeqi	r2,r2,10
    2210:	103fb31e 	bne	r2,zero,20e0 <__alt_mem_epcs_flash_controller_0+0xff8010e0>
    2214:	e0bfff07 	ldb	r2,-4(fp)
    2218:	10bfffd8 	cmpnei	r2,r2,-1
    221c:	103ff51e 	bne	r2,zero,21f4 <__alt_mem_epcs_flash_controller_0+0xff8011f4>

  }
    2220:	003faf06 	br	20e0 <__alt_mem_epcs_flash_controller_0+0xff8010e0>
#endif /* EPCS_CONTROLLER_NAME */
      case 'q':	break;
      default:	printf("\n -ERROR: %c is an invalid entry.  Please try again\n", ch); break;
    }
    if (ch == 'q')
      break;
    2224:	0001883a 	nop
    printf("\nPress enter to continue...\n");
    while( (( ch = getc(stdin)) != '\n' ) && ( ch != EOF ));

  }
  return (ch);
    2228:	e0bfff07 	ldb	r2,-4(fp)
}
    222c:	e037883a 	mov	sp,fp
    2230:	dfc00117 	ldw	ra,4(sp)
    2234:	df000017 	ldw	fp,0(sp)
    2238:	dec00204 	addi	sp,sp,8
    223c:	f800283a 	ret

00002240 <main>:
*  Purpose: Continually prints the menu and performs the actions
*           requested by the user.
* 
******************************************************************/
int main(void)
{
    2240:	defffd04 	addi	sp,sp,-12
    2244:	dfc00215 	stw	ra,8(sp)
    2248:	df000115 	stw	fp,4(sp)
    224c:	df000104 	addi	fp,sp,4

  int ch;

  /* Print the Header */
  MenuHeader();
    2250:	000026c0 	call	26c <MenuHeader>
  /* Print the menu and do what the user requests, until they hit 'q' */
  while (1)
  {
    ch = TopMenu();
    2254:	00020d00 	call	20d0 <TopMenu>
    2258:	e0bfff15 	stw	r2,-4(fp)
    if (ch == 'q')
    225c:	e0bfff17 	ldw	r2,-4(fp)
    2260:	10801c58 	cmpnei	r2,r2,113
    2264:	103ffb1e 	bne	r2,zero,2254 <__alt_mem_epcs_flash_controller_0+0xff801254>
    {
      printf( "\nExiting from Memory Test.\n");
    2268:	010000b4 	movhi	r4,2
    226c:	21375304 	addi	r4,r4,-8884
    2270:	00030a80 	call	30a8 <puts>
      break;
    2274:	0001883a 	nop
    }
  }
  return (0);
    2278:	0005883a 	mov	r2,zero
}
    227c:	e037883a 	mov	sp,fp
    2280:	dfc00117 	ldw	ra,4(sp)
    2284:	df000017 	ldw	fp,0(sp)
    2288:	dec00204 	addi	sp,sp,8
    228c:	f800283a 	ret

00002290 <__divsi3>:
    2290:	20001b16 	blt	r4,zero,2300 <__divsi3+0x70>
    2294:	000f883a 	mov	r7,zero
    2298:	28001616 	blt	r5,zero,22f4 <__divsi3+0x64>
    229c:	200d883a 	mov	r6,r4
    22a0:	29001a2e 	bgeu	r5,r4,230c <__divsi3+0x7c>
    22a4:	00800804 	movi	r2,32
    22a8:	00c00044 	movi	r3,1
    22ac:	00000106 	br	22b4 <__divsi3+0x24>
    22b0:	10000d26 	beq	r2,zero,22e8 <__divsi3+0x58>
    22b4:	294b883a 	add	r5,r5,r5
    22b8:	10bfffc4 	addi	r2,r2,-1
    22bc:	18c7883a 	add	r3,r3,r3
    22c0:	293ffb36 	bltu	r5,r4,22b0 <__alt_mem_epcs_flash_controller_0+0xff8012b0>
    22c4:	0005883a 	mov	r2,zero
    22c8:	18000726 	beq	r3,zero,22e8 <__divsi3+0x58>
    22cc:	0005883a 	mov	r2,zero
    22d0:	31400236 	bltu	r6,r5,22dc <__divsi3+0x4c>
    22d4:	314dc83a 	sub	r6,r6,r5
    22d8:	10c4b03a 	or	r2,r2,r3
    22dc:	1806d07a 	srli	r3,r3,1
    22e0:	280ad07a 	srli	r5,r5,1
    22e4:	183ffa1e 	bne	r3,zero,22d0 <__alt_mem_epcs_flash_controller_0+0xff8012d0>
    22e8:	38000126 	beq	r7,zero,22f0 <__divsi3+0x60>
    22ec:	0085c83a 	sub	r2,zero,r2
    22f0:	f800283a 	ret
    22f4:	014bc83a 	sub	r5,zero,r5
    22f8:	39c0005c 	xori	r7,r7,1
    22fc:	003fe706 	br	229c <__alt_mem_epcs_flash_controller_0+0xff80129c>
    2300:	0109c83a 	sub	r4,zero,r4
    2304:	01c00044 	movi	r7,1
    2308:	003fe306 	br	2298 <__alt_mem_epcs_flash_controller_0+0xff801298>
    230c:	00c00044 	movi	r3,1
    2310:	003fee06 	br	22cc <__alt_mem_epcs_flash_controller_0+0xff8012cc>

00002314 <__modsi3>:
    2314:	20001716 	blt	r4,zero,2374 <__modsi3+0x60>
    2318:	000f883a 	mov	r7,zero
    231c:	2005883a 	mov	r2,r4
    2320:	28001216 	blt	r5,zero,236c <__modsi3+0x58>
    2324:	2900162e 	bgeu	r5,r4,2380 <__modsi3+0x6c>
    2328:	01800804 	movi	r6,32
    232c:	00c00044 	movi	r3,1
    2330:	00000106 	br	2338 <__modsi3+0x24>
    2334:	30000a26 	beq	r6,zero,2360 <__modsi3+0x4c>
    2338:	294b883a 	add	r5,r5,r5
    233c:	31bfffc4 	addi	r6,r6,-1
    2340:	18c7883a 	add	r3,r3,r3
    2344:	293ffb36 	bltu	r5,r4,2334 <__alt_mem_epcs_flash_controller_0+0xff801334>
    2348:	18000526 	beq	r3,zero,2360 <__modsi3+0x4c>
    234c:	1806d07a 	srli	r3,r3,1
    2350:	11400136 	bltu	r2,r5,2358 <__modsi3+0x44>
    2354:	1145c83a 	sub	r2,r2,r5
    2358:	280ad07a 	srli	r5,r5,1
    235c:	183ffb1e 	bne	r3,zero,234c <__alt_mem_epcs_flash_controller_0+0xff80134c>
    2360:	38000126 	beq	r7,zero,2368 <__modsi3+0x54>
    2364:	0085c83a 	sub	r2,zero,r2
    2368:	f800283a 	ret
    236c:	014bc83a 	sub	r5,zero,r5
    2370:	003fec06 	br	2324 <__alt_mem_epcs_flash_controller_0+0xff801324>
    2374:	0109c83a 	sub	r4,zero,r4
    2378:	01c00044 	movi	r7,1
    237c:	003fe706 	br	231c <__alt_mem_epcs_flash_controller_0+0xff80131c>
    2380:	00c00044 	movi	r3,1
    2384:	003ff106 	br	234c <__alt_mem_epcs_flash_controller_0+0xff80134c>

00002388 <__udivsi3>:
    2388:	200d883a 	mov	r6,r4
    238c:	2900152e 	bgeu	r5,r4,23e4 <__udivsi3+0x5c>
    2390:	28001416 	blt	r5,zero,23e4 <__udivsi3+0x5c>
    2394:	00800804 	movi	r2,32
    2398:	00c00044 	movi	r3,1
    239c:	00000206 	br	23a8 <__udivsi3+0x20>
    23a0:	10000e26 	beq	r2,zero,23dc <__udivsi3+0x54>
    23a4:	28000516 	blt	r5,zero,23bc <__udivsi3+0x34>
    23a8:	294b883a 	add	r5,r5,r5
    23ac:	10bfffc4 	addi	r2,r2,-1
    23b0:	18c7883a 	add	r3,r3,r3
    23b4:	293ffa36 	bltu	r5,r4,23a0 <__alt_mem_epcs_flash_controller_0+0xff8013a0>
    23b8:	18000826 	beq	r3,zero,23dc <__udivsi3+0x54>
    23bc:	0005883a 	mov	r2,zero
    23c0:	31400236 	bltu	r6,r5,23cc <__udivsi3+0x44>
    23c4:	314dc83a 	sub	r6,r6,r5
    23c8:	10c4b03a 	or	r2,r2,r3
    23cc:	1806d07a 	srli	r3,r3,1
    23d0:	280ad07a 	srli	r5,r5,1
    23d4:	183ffa1e 	bne	r3,zero,23c0 <__alt_mem_epcs_flash_controller_0+0xff8013c0>
    23d8:	f800283a 	ret
    23dc:	0005883a 	mov	r2,zero
    23e0:	f800283a 	ret
    23e4:	00c00044 	movi	r3,1
    23e8:	003ff406 	br	23bc <__alt_mem_epcs_flash_controller_0+0xff8013bc>

000023ec <__umodsi3>:
    23ec:	2005883a 	mov	r2,r4
    23f0:	2900122e 	bgeu	r5,r4,243c <__umodsi3+0x50>
    23f4:	28001116 	blt	r5,zero,243c <__umodsi3+0x50>
    23f8:	01800804 	movi	r6,32
    23fc:	00c00044 	movi	r3,1
    2400:	00000206 	br	240c <__umodsi3+0x20>
    2404:	30000c26 	beq	r6,zero,2438 <__umodsi3+0x4c>
    2408:	28000516 	blt	r5,zero,2420 <__umodsi3+0x34>
    240c:	294b883a 	add	r5,r5,r5
    2410:	31bfffc4 	addi	r6,r6,-1
    2414:	18c7883a 	add	r3,r3,r3
    2418:	293ffa36 	bltu	r5,r4,2404 <__alt_mem_epcs_flash_controller_0+0xff801404>
    241c:	18000626 	beq	r3,zero,2438 <__umodsi3+0x4c>
    2420:	1806d07a 	srli	r3,r3,1
    2424:	11400136 	bltu	r2,r5,242c <__umodsi3+0x40>
    2428:	1145c83a 	sub	r2,r2,r5
    242c:	280ad07a 	srli	r5,r5,1
    2430:	183ffb1e 	bne	r3,zero,2420 <__alt_mem_epcs_flash_controller_0+0xff801420>
    2434:	f800283a 	ret
    2438:	f800283a 	ret
    243c:	00c00044 	movi	r3,1
    2440:	003ff706 	br	2420 <__alt_mem_epcs_flash_controller_0+0xff801420>

00002444 <__mulsi3>:
    2444:	0005883a 	mov	r2,zero
    2448:	20000726 	beq	r4,zero,2468 <__mulsi3+0x24>
    244c:	20c0004c 	andi	r3,r4,1
    2450:	2008d07a 	srli	r4,r4,1
    2454:	18000126 	beq	r3,zero,245c <__mulsi3+0x18>
    2458:	1145883a 	add	r2,r2,r5
    245c:	294b883a 	add	r5,r5,r5
    2460:	203ffa1e 	bne	r4,zero,244c <__alt_mem_epcs_flash_controller_0+0xff80144c>
    2464:	f800283a 	ret
    2468:	f800283a 	ret

0000246c <_getc_r>:
    246c:	defffd04 	addi	sp,sp,-12
    2470:	dc000115 	stw	r16,4(sp)
    2474:	dfc00215 	stw	ra,8(sp)
    2478:	2021883a 	mov	r16,r4
    247c:	20000226 	beq	r4,zero,2488 <_getc_r+0x1c>
    2480:	20800e17 	ldw	r2,56(r4)
    2484:	10000c26 	beq	r2,zero,24b8 <_getc_r+0x4c>
    2488:	28800117 	ldw	r2,4(r5)
    248c:	10bfffc4 	addi	r2,r2,-1
    2490:	28800115 	stw	r2,4(r5)
    2494:	10000c16 	blt	r2,zero,24c8 <_getc_r+0x5c>
    2498:	28800017 	ldw	r2,0(r5)
    249c:	10c00044 	addi	r3,r2,1
    24a0:	28c00015 	stw	r3,0(r5)
    24a4:	10800003 	ldbu	r2,0(r2)
    24a8:	dfc00217 	ldw	ra,8(sp)
    24ac:	dc000117 	ldw	r16,4(sp)
    24b0:	dec00304 	addi	sp,sp,12
    24b4:	f800283a 	ret
    24b8:	d9400015 	stw	r5,0(sp)
    24bc:	00092600 	call	9260 <__sinit>
    24c0:	d9400017 	ldw	r5,0(sp)
    24c4:	003ff006 	br	2488 <__alt_mem_epcs_flash_controller_0+0xff801488>
    24c8:	8009883a 	mov	r4,r16
    24cc:	dfc00217 	ldw	ra,8(sp)
    24d0:	dc000117 	ldw	r16,4(sp)
    24d4:	dec00304 	addi	sp,sp,12
    24d8:	00030bc1 	jmpi	30bc <__srget_r>

000024dc <getc>:
    24dc:	008000b4 	movhi	r2,2
    24e0:	defffd04 	addi	sp,sp,-12
    24e4:	10801c04 	addi	r2,r2,112
    24e8:	dc400115 	stw	r17,4(sp)
    24ec:	14400017 	ldw	r17,0(r2)
    24f0:	dc000015 	stw	r16,0(sp)
    24f4:	dfc00215 	stw	ra,8(sp)
    24f8:	2021883a 	mov	r16,r4
    24fc:	88000226 	beq	r17,zero,2508 <getc+0x2c>
    2500:	88800e17 	ldw	r2,56(r17)
    2504:	10000d26 	beq	r2,zero,253c <getc+0x60>
    2508:	80800117 	ldw	r2,4(r16)
    250c:	10bfffc4 	addi	r2,r2,-1
    2510:	80800115 	stw	r2,4(r16)
    2514:	10000c16 	blt	r2,zero,2548 <getc+0x6c>
    2518:	80800017 	ldw	r2,0(r16)
    251c:	10c00044 	addi	r3,r2,1
    2520:	80c00015 	stw	r3,0(r16)
    2524:	10800003 	ldbu	r2,0(r2)
    2528:	dfc00217 	ldw	ra,8(sp)
    252c:	dc400117 	ldw	r17,4(sp)
    2530:	dc000017 	ldw	r16,0(sp)
    2534:	dec00304 	addi	sp,sp,12
    2538:	f800283a 	ret
    253c:	8809883a 	mov	r4,r17
    2540:	00092600 	call	9260 <__sinit>
    2544:	003ff006 	br	2508 <__alt_mem_epcs_flash_controller_0+0xff801508>
    2548:	800b883a 	mov	r5,r16
    254c:	8809883a 	mov	r4,r17
    2550:	dfc00217 	ldw	ra,8(sp)
    2554:	dc400117 	ldw	r17,4(sp)
    2558:	dc000017 	ldw	r16,0(sp)
    255c:	dec00304 	addi	sp,sp,12
    2560:	00030bc1 	jmpi	30bc <__srget_r>

00002564 <malloc>:
    2564:	008000b4 	movhi	r2,2
    2568:	10801c04 	addi	r2,r2,112
    256c:	200b883a 	mov	r5,r4
    2570:	11000017 	ldw	r4,0(r2)
    2574:	000258c1 	jmpi	258c <_malloc_r>

00002578 <free>:
    2578:	008000b4 	movhi	r2,2
    257c:	10801c04 	addi	r2,r2,112
    2580:	200b883a 	mov	r5,r4
    2584:	11000017 	ldw	r4,0(r2)
    2588:	00093d41 	jmpi	93d4 <_free_r>

0000258c <_malloc_r>:
    258c:	defff504 	addi	sp,sp,-44
    2590:	dc800315 	stw	r18,12(sp)
    2594:	dfc00a15 	stw	ra,40(sp)
    2598:	df000915 	stw	fp,36(sp)
    259c:	ddc00815 	stw	r23,32(sp)
    25a0:	dd800715 	stw	r22,28(sp)
    25a4:	dd400615 	stw	r21,24(sp)
    25a8:	dd000515 	stw	r20,20(sp)
    25ac:	dcc00415 	stw	r19,16(sp)
    25b0:	dc400215 	stw	r17,8(sp)
    25b4:	dc000115 	stw	r16,4(sp)
    25b8:	288002c4 	addi	r2,r5,11
    25bc:	00c00584 	movi	r3,22
    25c0:	2025883a 	mov	r18,r4
    25c4:	18807f2e 	bgeu	r3,r2,27c4 <_malloc_r+0x238>
    25c8:	047ffe04 	movi	r17,-8
    25cc:	1462703a 	and	r17,r2,r17
    25d0:	8800a316 	blt	r17,zero,2860 <_malloc_r+0x2d4>
    25d4:	8940a236 	bltu	r17,r5,2860 <_malloc_r+0x2d4>
    25d8:	0019ed00 	call	19ed0 <__malloc_lock>
    25dc:	00807dc4 	movi	r2,503
    25e0:	1441e92e 	bgeu	r2,r17,2d88 <_malloc_r+0x7fc>
    25e4:	8804d27a 	srli	r2,r17,9
    25e8:	1000a126 	beq	r2,zero,2870 <_malloc_r+0x2e4>
    25ec:	00c00104 	movi	r3,4
    25f0:	18811e36 	bltu	r3,r2,2a6c <_malloc_r+0x4e0>
    25f4:	8804d1ba 	srli	r2,r17,6
    25f8:	12000e44 	addi	r8,r2,57
    25fc:	11c00e04 	addi	r7,r2,56
    2600:	4209883a 	add	r4,r8,r8
    2604:	04c000b4 	movhi	r19,2
    2608:	2109883a 	add	r4,r4,r4
    260c:	9cfa4604 	addi	r19,r19,-5864
    2610:	2109883a 	add	r4,r4,r4
    2614:	9909883a 	add	r4,r19,r4
    2618:	24000117 	ldw	r16,4(r4)
    261c:	213ffe04 	addi	r4,r4,-8
    2620:	24009726 	beq	r4,r16,2880 <_malloc_r+0x2f4>
    2624:	80800117 	ldw	r2,4(r16)
    2628:	01bfff04 	movi	r6,-4
    262c:	014003c4 	movi	r5,15
    2630:	1184703a 	and	r2,r2,r6
    2634:	1447c83a 	sub	r3,r2,r17
    2638:	28c00716 	blt	r5,r3,2658 <_malloc_r+0xcc>
    263c:	1800920e 	bge	r3,zero,2888 <_malloc_r+0x2fc>
    2640:	84000317 	ldw	r16,12(r16)
    2644:	24008e26 	beq	r4,r16,2880 <_malloc_r+0x2f4>
    2648:	80800117 	ldw	r2,4(r16)
    264c:	1184703a 	and	r2,r2,r6
    2650:	1447c83a 	sub	r3,r2,r17
    2654:	28fff90e 	bge	r5,r3,263c <__alt_mem_epcs_flash_controller_0+0xff80163c>
    2658:	3809883a 	mov	r4,r7
    265c:	018000b4 	movhi	r6,2
    2660:	9c000417 	ldw	r16,16(r19)
    2664:	31ba4604 	addi	r6,r6,-5864
    2668:	32000204 	addi	r8,r6,8
    266c:	82013426 	beq	r16,r8,2b40 <_malloc_r+0x5b4>
    2670:	80c00117 	ldw	r3,4(r16)
    2674:	00bfff04 	movi	r2,-4
    2678:	188e703a 	and	r7,r3,r2
    267c:	3c45c83a 	sub	r2,r7,r17
    2680:	00c003c4 	movi	r3,15
    2684:	18811f16 	blt	r3,r2,2b04 <_malloc_r+0x578>
    2688:	32000515 	stw	r8,20(r6)
    268c:	32000415 	stw	r8,16(r6)
    2690:	10007f0e 	bge	r2,zero,2890 <_malloc_r+0x304>
    2694:	00807fc4 	movi	r2,511
    2698:	11c0fd36 	bltu	r2,r7,2a90 <_malloc_r+0x504>
    269c:	3806d0fa 	srli	r3,r7,3
    26a0:	01c00044 	movi	r7,1
    26a4:	30800117 	ldw	r2,4(r6)
    26a8:	19400044 	addi	r5,r3,1
    26ac:	294b883a 	add	r5,r5,r5
    26b0:	1807d0ba 	srai	r3,r3,2
    26b4:	294b883a 	add	r5,r5,r5
    26b8:	294b883a 	add	r5,r5,r5
    26bc:	298b883a 	add	r5,r5,r6
    26c0:	38c6983a 	sll	r3,r7,r3
    26c4:	29c00017 	ldw	r7,0(r5)
    26c8:	2a7ffe04 	addi	r9,r5,-8
    26cc:	1886b03a 	or	r3,r3,r2
    26d0:	82400315 	stw	r9,12(r16)
    26d4:	81c00215 	stw	r7,8(r16)
    26d8:	30c00115 	stw	r3,4(r6)
    26dc:	2c000015 	stw	r16,0(r5)
    26e0:	3c000315 	stw	r16,12(r7)
    26e4:	2005d0ba 	srai	r2,r4,2
    26e8:	01400044 	movi	r5,1
    26ec:	288a983a 	sll	r5,r5,r2
    26f0:	19406f36 	bltu	r3,r5,28b0 <_malloc_r+0x324>
    26f4:	28c4703a 	and	r2,r5,r3
    26f8:	10000a1e 	bne	r2,zero,2724 <_malloc_r+0x198>
    26fc:	00bfff04 	movi	r2,-4
    2700:	294b883a 	add	r5,r5,r5
    2704:	2088703a 	and	r4,r4,r2
    2708:	28c4703a 	and	r2,r5,r3
    270c:	21000104 	addi	r4,r4,4
    2710:	1000041e 	bne	r2,zero,2724 <_malloc_r+0x198>
    2714:	294b883a 	add	r5,r5,r5
    2718:	28c4703a 	and	r2,r5,r3
    271c:	21000104 	addi	r4,r4,4
    2720:	103ffc26 	beq	r2,zero,2714 <__alt_mem_epcs_flash_controller_0+0xff801714>
    2724:	02bfff04 	movi	r10,-4
    2728:	024003c4 	movi	r9,15
    272c:	21800044 	addi	r6,r4,1
    2730:	318d883a 	add	r6,r6,r6
    2734:	318d883a 	add	r6,r6,r6
    2738:	318d883a 	add	r6,r6,r6
    273c:	998d883a 	add	r6,r19,r6
    2740:	333ffe04 	addi	r12,r6,-8
    2744:	2017883a 	mov	r11,r4
    2748:	31800104 	addi	r6,r6,4
    274c:	34000017 	ldw	r16,0(r6)
    2750:	31fffd04 	addi	r7,r6,-12
    2754:	81c0041e 	bne	r16,r7,2768 <_malloc_r+0x1dc>
    2758:	0000fb06 	br	2b48 <_malloc_r+0x5bc>
    275c:	1801030e 	bge	r3,zero,2b6c <_malloc_r+0x5e0>
    2760:	84000317 	ldw	r16,12(r16)
    2764:	81c0f826 	beq	r16,r7,2b48 <_malloc_r+0x5bc>
    2768:	80800117 	ldw	r2,4(r16)
    276c:	1284703a 	and	r2,r2,r10
    2770:	1447c83a 	sub	r3,r2,r17
    2774:	48fff90e 	bge	r9,r3,275c <__alt_mem_epcs_flash_controller_0+0xff80175c>
    2778:	80800317 	ldw	r2,12(r16)
    277c:	81000217 	ldw	r4,8(r16)
    2780:	89400054 	ori	r5,r17,1
    2784:	81400115 	stw	r5,4(r16)
    2788:	20800315 	stw	r2,12(r4)
    278c:	11000215 	stw	r4,8(r2)
    2790:	8463883a 	add	r17,r16,r17
    2794:	9c400515 	stw	r17,20(r19)
    2798:	9c400415 	stw	r17,16(r19)
    279c:	18800054 	ori	r2,r3,1
    27a0:	88800115 	stw	r2,4(r17)
    27a4:	8a000315 	stw	r8,12(r17)
    27a8:	8a000215 	stw	r8,8(r17)
    27ac:	88e3883a 	add	r17,r17,r3
    27b0:	88c00015 	stw	r3,0(r17)
    27b4:	9009883a 	mov	r4,r18
    27b8:	0019ef40 	call	19ef4 <__malloc_unlock>
    27bc:	80800204 	addi	r2,r16,8
    27c0:	00001b06 	br	2830 <_malloc_r+0x2a4>
    27c4:	04400404 	movi	r17,16
    27c8:	89402536 	bltu	r17,r5,2860 <_malloc_r+0x2d4>
    27cc:	0019ed00 	call	19ed0 <__malloc_lock>
    27d0:	00800184 	movi	r2,6
    27d4:	01000084 	movi	r4,2
    27d8:	04c000b4 	movhi	r19,2
    27dc:	1085883a 	add	r2,r2,r2
    27e0:	9cfa4604 	addi	r19,r19,-5864
    27e4:	1085883a 	add	r2,r2,r2
    27e8:	9885883a 	add	r2,r19,r2
    27ec:	14000117 	ldw	r16,4(r2)
    27f0:	10fffe04 	addi	r3,r2,-8
    27f4:	80c0d926 	beq	r16,r3,2b5c <_malloc_r+0x5d0>
    27f8:	80c00117 	ldw	r3,4(r16)
    27fc:	81000317 	ldw	r4,12(r16)
    2800:	00bfff04 	movi	r2,-4
    2804:	1884703a 	and	r2,r3,r2
    2808:	81400217 	ldw	r5,8(r16)
    280c:	8085883a 	add	r2,r16,r2
    2810:	10c00117 	ldw	r3,4(r2)
    2814:	29000315 	stw	r4,12(r5)
    2818:	21400215 	stw	r5,8(r4)
    281c:	18c00054 	ori	r3,r3,1
    2820:	10c00115 	stw	r3,4(r2)
    2824:	9009883a 	mov	r4,r18
    2828:	0019ef40 	call	19ef4 <__malloc_unlock>
    282c:	80800204 	addi	r2,r16,8
    2830:	dfc00a17 	ldw	ra,40(sp)
    2834:	df000917 	ldw	fp,36(sp)
    2838:	ddc00817 	ldw	r23,32(sp)
    283c:	dd800717 	ldw	r22,28(sp)
    2840:	dd400617 	ldw	r21,24(sp)
    2844:	dd000517 	ldw	r20,20(sp)
    2848:	dcc00417 	ldw	r19,16(sp)
    284c:	dc800317 	ldw	r18,12(sp)
    2850:	dc400217 	ldw	r17,8(sp)
    2854:	dc000117 	ldw	r16,4(sp)
    2858:	dec00b04 	addi	sp,sp,44
    285c:	f800283a 	ret
    2860:	00800304 	movi	r2,12
    2864:	90800015 	stw	r2,0(r18)
    2868:	0005883a 	mov	r2,zero
    286c:	003ff006 	br	2830 <__alt_mem_epcs_flash_controller_0+0xff801830>
    2870:	01002004 	movi	r4,128
    2874:	02001004 	movi	r8,64
    2878:	01c00fc4 	movi	r7,63
    287c:	003f6106 	br	2604 <__alt_mem_epcs_flash_controller_0+0xff801604>
    2880:	4009883a 	mov	r4,r8
    2884:	003f7506 	br	265c <__alt_mem_epcs_flash_controller_0+0xff80165c>
    2888:	81000317 	ldw	r4,12(r16)
    288c:	003fde06 	br	2808 <__alt_mem_epcs_flash_controller_0+0xff801808>
    2890:	81c5883a 	add	r2,r16,r7
    2894:	11400117 	ldw	r5,4(r2)
    2898:	9009883a 	mov	r4,r18
    289c:	29400054 	ori	r5,r5,1
    28a0:	11400115 	stw	r5,4(r2)
    28a4:	0019ef40 	call	19ef4 <__malloc_unlock>
    28a8:	80800204 	addi	r2,r16,8
    28ac:	003fe006 	br	2830 <__alt_mem_epcs_flash_controller_0+0xff801830>
    28b0:	9c000217 	ldw	r16,8(r19)
    28b4:	00bfff04 	movi	r2,-4
    28b8:	85800117 	ldw	r22,4(r16)
    28bc:	b0ac703a 	and	r22,r22,r2
    28c0:	b4400336 	bltu	r22,r17,28d0 <_malloc_r+0x344>
    28c4:	b445c83a 	sub	r2,r22,r17
    28c8:	00c003c4 	movi	r3,15
    28cc:	18805d16 	blt	r3,r2,2a44 <_malloc_r+0x4b8>
    28d0:	05c000b4 	movhi	r23,2
    28d4:	008000b4 	movhi	r2,2
    28d8:	10872504 	addi	r2,r2,7316
    28dc:	bdc01d04 	addi	r23,r23,116
    28e0:	15400017 	ldw	r21,0(r2)
    28e4:	b8c00017 	ldw	r3,0(r23)
    28e8:	00bfffc4 	movi	r2,-1
    28ec:	858d883a 	add	r6,r16,r22
    28f0:	8d6b883a 	add	r21,r17,r21
    28f4:	1880ea26 	beq	r3,r2,2ca0 <_malloc_r+0x714>
    28f8:	ad4403c4 	addi	r21,r21,4111
    28fc:	00bc0004 	movi	r2,-4096
    2900:	a8aa703a 	and	r21,r21,r2
    2904:	a80b883a 	mov	r5,r21
    2908:	9009883a 	mov	r4,r18
    290c:	d9800015 	stw	r6,0(sp)
    2910:	00031440 	call	3144 <_sbrk_r>
    2914:	1029883a 	mov	r20,r2
    2918:	00bfffc4 	movi	r2,-1
    291c:	d9800017 	ldw	r6,0(sp)
    2920:	a080e826 	beq	r20,r2,2cc4 <_malloc_r+0x738>
    2924:	a180a636 	bltu	r20,r6,2bc0 <_malloc_r+0x634>
    2928:	070000b4 	movhi	fp,2
    292c:	e7073104 	addi	fp,fp,7364
    2930:	e0800017 	ldw	r2,0(fp)
    2934:	a887883a 	add	r3,r21,r2
    2938:	e0c00015 	stw	r3,0(fp)
    293c:	3500e626 	beq	r6,r20,2cd8 <_malloc_r+0x74c>
    2940:	b9000017 	ldw	r4,0(r23)
    2944:	00bfffc4 	movi	r2,-1
    2948:	2080ee26 	beq	r4,r2,2d04 <_malloc_r+0x778>
    294c:	a185c83a 	sub	r2,r20,r6
    2950:	10c5883a 	add	r2,r2,r3
    2954:	e0800015 	stw	r2,0(fp)
    2958:	a0c001cc 	andi	r3,r20,7
    295c:	1800bc26 	beq	r3,zero,2c50 <_malloc_r+0x6c4>
    2960:	a0e9c83a 	sub	r20,r20,r3
    2964:	00840204 	movi	r2,4104
    2968:	a5000204 	addi	r20,r20,8
    296c:	10c7c83a 	sub	r3,r2,r3
    2970:	a545883a 	add	r2,r20,r21
    2974:	1083ffcc 	andi	r2,r2,4095
    2978:	18abc83a 	sub	r21,r3,r2
    297c:	a80b883a 	mov	r5,r21
    2980:	9009883a 	mov	r4,r18
    2984:	00031440 	call	3144 <_sbrk_r>
    2988:	00ffffc4 	movi	r3,-1
    298c:	10c0e126 	beq	r2,r3,2d14 <_malloc_r+0x788>
    2990:	1505c83a 	sub	r2,r2,r20
    2994:	1545883a 	add	r2,r2,r21
    2998:	10800054 	ori	r2,r2,1
    299c:	e0c00017 	ldw	r3,0(fp)
    29a0:	9d000215 	stw	r20,8(r19)
    29a4:	a0800115 	stw	r2,4(r20)
    29a8:	a8c7883a 	add	r3,r21,r3
    29ac:	e0c00015 	stw	r3,0(fp)
    29b0:	84c00e26 	beq	r16,r19,29ec <_malloc_r+0x460>
    29b4:	018003c4 	movi	r6,15
    29b8:	3580a72e 	bgeu	r6,r22,2c58 <_malloc_r+0x6cc>
    29bc:	81400117 	ldw	r5,4(r16)
    29c0:	013ffe04 	movi	r4,-8
    29c4:	b0bffd04 	addi	r2,r22,-12
    29c8:	1104703a 	and	r2,r2,r4
    29cc:	2900004c 	andi	r4,r5,1
    29d0:	2088b03a 	or	r4,r4,r2
    29d4:	81000115 	stw	r4,4(r16)
    29d8:	01400144 	movi	r5,5
    29dc:	8089883a 	add	r4,r16,r2
    29e0:	21400115 	stw	r5,4(r4)
    29e4:	21400215 	stw	r5,8(r4)
    29e8:	3080cd36 	bltu	r6,r2,2d20 <_malloc_r+0x794>
    29ec:	008000b4 	movhi	r2,2
    29f0:	10872404 	addi	r2,r2,7312
    29f4:	11000017 	ldw	r4,0(r2)
    29f8:	20c0012e 	bgeu	r4,r3,2a00 <_malloc_r+0x474>
    29fc:	10c00015 	stw	r3,0(r2)
    2a00:	008000b4 	movhi	r2,2
    2a04:	10872304 	addi	r2,r2,7308
    2a08:	11000017 	ldw	r4,0(r2)
    2a0c:	9c000217 	ldw	r16,8(r19)
    2a10:	20c0012e 	bgeu	r4,r3,2a18 <_malloc_r+0x48c>
    2a14:	10c00015 	stw	r3,0(r2)
    2a18:	80c00117 	ldw	r3,4(r16)
    2a1c:	00bfff04 	movi	r2,-4
    2a20:	1886703a 	and	r3,r3,r2
    2a24:	1c45c83a 	sub	r2,r3,r17
    2a28:	1c400236 	bltu	r3,r17,2a34 <_malloc_r+0x4a8>
    2a2c:	00c003c4 	movi	r3,15
    2a30:	18800416 	blt	r3,r2,2a44 <_malloc_r+0x4b8>
    2a34:	9009883a 	mov	r4,r18
    2a38:	0019ef40 	call	19ef4 <__malloc_unlock>
    2a3c:	0005883a 	mov	r2,zero
    2a40:	003f7b06 	br	2830 <__alt_mem_epcs_flash_controller_0+0xff801830>
    2a44:	88c00054 	ori	r3,r17,1
    2a48:	80c00115 	stw	r3,4(r16)
    2a4c:	8463883a 	add	r17,r16,r17
    2a50:	10800054 	ori	r2,r2,1
    2a54:	9c400215 	stw	r17,8(r19)
    2a58:	88800115 	stw	r2,4(r17)
    2a5c:	9009883a 	mov	r4,r18
    2a60:	0019ef40 	call	19ef4 <__malloc_unlock>
    2a64:	80800204 	addi	r2,r16,8
    2a68:	003f7106 	br	2830 <__alt_mem_epcs_flash_controller_0+0xff801830>
    2a6c:	00c00504 	movi	r3,20
    2a70:	18804a2e 	bgeu	r3,r2,2b9c <_malloc_r+0x610>
    2a74:	00c01504 	movi	r3,84
    2a78:	18806e36 	bltu	r3,r2,2c34 <_malloc_r+0x6a8>
    2a7c:	8804d33a 	srli	r2,r17,12
    2a80:	12001bc4 	addi	r8,r2,111
    2a84:	11c01b84 	addi	r7,r2,110
    2a88:	4209883a 	add	r4,r8,r8
    2a8c:	003edd06 	br	2604 <__alt_mem_epcs_flash_controller_0+0xff801604>
    2a90:	3804d27a 	srli	r2,r7,9
    2a94:	00c00104 	movi	r3,4
    2a98:	1880442e 	bgeu	r3,r2,2bac <_malloc_r+0x620>
    2a9c:	00c00504 	movi	r3,20
    2aa0:	18808136 	bltu	r3,r2,2ca8 <_malloc_r+0x71c>
    2aa4:	11401704 	addi	r5,r2,92
    2aa8:	10c016c4 	addi	r3,r2,91
    2aac:	294b883a 	add	r5,r5,r5
    2ab0:	294b883a 	add	r5,r5,r5
    2ab4:	294b883a 	add	r5,r5,r5
    2ab8:	994b883a 	add	r5,r19,r5
    2abc:	28800017 	ldw	r2,0(r5)
    2ac0:	018000b4 	movhi	r6,2
    2ac4:	297ffe04 	addi	r5,r5,-8
    2ac8:	31ba4604 	addi	r6,r6,-5864
    2acc:	28806526 	beq	r5,r2,2c64 <_malloc_r+0x6d8>
    2ad0:	01bfff04 	movi	r6,-4
    2ad4:	10c00117 	ldw	r3,4(r2)
    2ad8:	1986703a 	and	r3,r3,r6
    2adc:	38c0022e 	bgeu	r7,r3,2ae8 <_malloc_r+0x55c>
    2ae0:	10800217 	ldw	r2,8(r2)
    2ae4:	28bffb1e 	bne	r5,r2,2ad4 <__alt_mem_epcs_flash_controller_0+0xff801ad4>
    2ae8:	11400317 	ldw	r5,12(r2)
    2aec:	98c00117 	ldw	r3,4(r19)
    2af0:	81400315 	stw	r5,12(r16)
    2af4:	80800215 	stw	r2,8(r16)
    2af8:	2c000215 	stw	r16,8(r5)
    2afc:	14000315 	stw	r16,12(r2)
    2b00:	003ef806 	br	26e4 <__alt_mem_epcs_flash_controller_0+0xff8016e4>
    2b04:	88c00054 	ori	r3,r17,1
    2b08:	80c00115 	stw	r3,4(r16)
    2b0c:	8463883a 	add	r17,r16,r17
    2b10:	34400515 	stw	r17,20(r6)
    2b14:	34400415 	stw	r17,16(r6)
    2b18:	10c00054 	ori	r3,r2,1
    2b1c:	8a000315 	stw	r8,12(r17)
    2b20:	8a000215 	stw	r8,8(r17)
    2b24:	88c00115 	stw	r3,4(r17)
    2b28:	88a3883a 	add	r17,r17,r2
    2b2c:	88800015 	stw	r2,0(r17)
    2b30:	9009883a 	mov	r4,r18
    2b34:	0019ef40 	call	19ef4 <__malloc_unlock>
    2b38:	80800204 	addi	r2,r16,8
    2b3c:	003f3c06 	br	2830 <__alt_mem_epcs_flash_controller_0+0xff801830>
    2b40:	30c00117 	ldw	r3,4(r6)
    2b44:	003ee706 	br	26e4 <__alt_mem_epcs_flash_controller_0+0xff8016e4>
    2b48:	5ac00044 	addi	r11,r11,1
    2b4c:	588000cc 	andi	r2,r11,3
    2b50:	31800204 	addi	r6,r6,8
    2b54:	103efd1e 	bne	r2,zero,274c <__alt_mem_epcs_flash_controller_0+0xff80174c>
    2b58:	00002406 	br	2bec <_malloc_r+0x660>
    2b5c:	14000317 	ldw	r16,12(r2)
    2b60:	143f251e 	bne	r2,r16,27f8 <__alt_mem_epcs_flash_controller_0+0xff8017f8>
    2b64:	21000084 	addi	r4,r4,2
    2b68:	003ebc06 	br	265c <__alt_mem_epcs_flash_controller_0+0xff80165c>
    2b6c:	8085883a 	add	r2,r16,r2
    2b70:	10c00117 	ldw	r3,4(r2)
    2b74:	81000317 	ldw	r4,12(r16)
    2b78:	81400217 	ldw	r5,8(r16)
    2b7c:	18c00054 	ori	r3,r3,1
    2b80:	10c00115 	stw	r3,4(r2)
    2b84:	29000315 	stw	r4,12(r5)
    2b88:	21400215 	stw	r5,8(r4)
    2b8c:	9009883a 	mov	r4,r18
    2b90:	0019ef40 	call	19ef4 <__malloc_unlock>
    2b94:	80800204 	addi	r2,r16,8
    2b98:	003f2506 	br	2830 <__alt_mem_epcs_flash_controller_0+0xff801830>
    2b9c:	12001704 	addi	r8,r2,92
    2ba0:	11c016c4 	addi	r7,r2,91
    2ba4:	4209883a 	add	r4,r8,r8
    2ba8:	003e9606 	br	2604 <__alt_mem_epcs_flash_controller_0+0xff801604>
    2bac:	3804d1ba 	srli	r2,r7,6
    2bb0:	11400e44 	addi	r5,r2,57
    2bb4:	10c00e04 	addi	r3,r2,56
    2bb8:	294b883a 	add	r5,r5,r5
    2bbc:	003fbc06 	br	2ab0 <__alt_mem_epcs_flash_controller_0+0xff801ab0>
    2bc0:	84ff5926 	beq	r16,r19,2928 <__alt_mem_epcs_flash_controller_0+0xff801928>
    2bc4:	008000b4 	movhi	r2,2
    2bc8:	10ba4604 	addi	r2,r2,-5864
    2bcc:	14000217 	ldw	r16,8(r2)
    2bd0:	00bfff04 	movi	r2,-4
    2bd4:	80c00117 	ldw	r3,4(r16)
    2bd8:	1886703a 	and	r3,r3,r2
    2bdc:	003f9106 	br	2a24 <__alt_mem_epcs_flash_controller_0+0xff801a24>
    2be0:	60800217 	ldw	r2,8(r12)
    2be4:	213fffc4 	addi	r4,r4,-1
    2be8:	1300651e 	bne	r2,r12,2d80 <_malloc_r+0x7f4>
    2bec:	208000cc 	andi	r2,r4,3
    2bf0:	633ffe04 	addi	r12,r12,-8
    2bf4:	103ffa1e 	bne	r2,zero,2be0 <__alt_mem_epcs_flash_controller_0+0xff801be0>
    2bf8:	98800117 	ldw	r2,4(r19)
    2bfc:	0146303a 	nor	r3,zero,r5
    2c00:	1884703a 	and	r2,r3,r2
    2c04:	98800115 	stw	r2,4(r19)
    2c08:	294b883a 	add	r5,r5,r5
    2c0c:	117f2836 	bltu	r2,r5,28b0 <__alt_mem_epcs_flash_controller_0+0xff8018b0>
    2c10:	283f2726 	beq	r5,zero,28b0 <__alt_mem_epcs_flash_controller_0+0xff8018b0>
    2c14:	2886703a 	and	r3,r5,r2
    2c18:	5809883a 	mov	r4,r11
    2c1c:	183ec31e 	bne	r3,zero,272c <__alt_mem_epcs_flash_controller_0+0xff80172c>
    2c20:	294b883a 	add	r5,r5,r5
    2c24:	2886703a 	and	r3,r5,r2
    2c28:	21000104 	addi	r4,r4,4
    2c2c:	183ffc26 	beq	r3,zero,2c20 <__alt_mem_epcs_flash_controller_0+0xff801c20>
    2c30:	003ebe06 	br	272c <__alt_mem_epcs_flash_controller_0+0xff80172c>
    2c34:	00c05504 	movi	r3,340
    2c38:	18801236 	bltu	r3,r2,2c84 <_malloc_r+0x6f8>
    2c3c:	8804d3fa 	srli	r2,r17,15
    2c40:	12001e04 	addi	r8,r2,120
    2c44:	11c01dc4 	addi	r7,r2,119
    2c48:	4209883a 	add	r4,r8,r8
    2c4c:	003e6d06 	br	2604 <__alt_mem_epcs_flash_controller_0+0xff801604>
    2c50:	00c40004 	movi	r3,4096
    2c54:	003f4606 	br	2970 <__alt_mem_epcs_flash_controller_0+0xff801970>
    2c58:	00800044 	movi	r2,1
    2c5c:	a0800115 	stw	r2,4(r20)
    2c60:	003f7406 	br	2a34 <__alt_mem_epcs_flash_controller_0+0xff801a34>
    2c64:	1805d0ba 	srai	r2,r3,2
    2c68:	01c00044 	movi	r7,1
    2c6c:	30c00117 	ldw	r3,4(r6)
    2c70:	388e983a 	sll	r7,r7,r2
    2c74:	2805883a 	mov	r2,r5
    2c78:	38c6b03a 	or	r3,r7,r3
    2c7c:	30c00115 	stw	r3,4(r6)
    2c80:	003f9b06 	br	2af0 <__alt_mem_epcs_flash_controller_0+0xff801af0>
    2c84:	00c15504 	movi	r3,1364
    2c88:	18801a36 	bltu	r3,r2,2cf4 <_malloc_r+0x768>
    2c8c:	8804d4ba 	srli	r2,r17,18
    2c90:	12001f44 	addi	r8,r2,125
    2c94:	11c01f04 	addi	r7,r2,124
    2c98:	4209883a 	add	r4,r8,r8
    2c9c:	003e5906 	br	2604 <__alt_mem_epcs_flash_controller_0+0xff801604>
    2ca0:	ad400404 	addi	r21,r21,16
    2ca4:	003f1706 	br	2904 <__alt_mem_epcs_flash_controller_0+0xff801904>
    2ca8:	00c01504 	movi	r3,84
    2cac:	18802336 	bltu	r3,r2,2d3c <_malloc_r+0x7b0>
    2cb0:	3804d33a 	srli	r2,r7,12
    2cb4:	11401bc4 	addi	r5,r2,111
    2cb8:	10c01b84 	addi	r3,r2,110
    2cbc:	294b883a 	add	r5,r5,r5
    2cc0:	003f7b06 	br	2ab0 <__alt_mem_epcs_flash_controller_0+0xff801ab0>
    2cc4:	9c000217 	ldw	r16,8(r19)
    2cc8:	00bfff04 	movi	r2,-4
    2ccc:	80c00117 	ldw	r3,4(r16)
    2cd0:	1886703a 	and	r3,r3,r2
    2cd4:	003f5306 	br	2a24 <__alt_mem_epcs_flash_controller_0+0xff801a24>
    2cd8:	3083ffcc 	andi	r2,r6,4095
    2cdc:	103f181e 	bne	r2,zero,2940 <__alt_mem_epcs_flash_controller_0+0xff801940>
    2ce0:	99000217 	ldw	r4,8(r19)
    2ce4:	b545883a 	add	r2,r22,r21
    2ce8:	10800054 	ori	r2,r2,1
    2cec:	20800115 	stw	r2,4(r4)
    2cf0:	003f3e06 	br	29ec <__alt_mem_epcs_flash_controller_0+0xff8019ec>
    2cf4:	01003f84 	movi	r4,254
    2cf8:	02001fc4 	movi	r8,127
    2cfc:	01c01f84 	movi	r7,126
    2d00:	003e4006 	br	2604 <__alt_mem_epcs_flash_controller_0+0xff801604>
    2d04:	008000b4 	movhi	r2,2
    2d08:	10801d04 	addi	r2,r2,116
    2d0c:	15000015 	stw	r20,0(r2)
    2d10:	003f1106 	br	2958 <__alt_mem_epcs_flash_controller_0+0xff801958>
    2d14:	00800044 	movi	r2,1
    2d18:	002b883a 	mov	r21,zero
    2d1c:	003f1f06 	br	299c <__alt_mem_epcs_flash_controller_0+0xff80199c>
    2d20:	81400204 	addi	r5,r16,8
    2d24:	9009883a 	mov	r4,r18
    2d28:	00093d40 	call	93d4 <_free_r>
    2d2c:	008000b4 	movhi	r2,2
    2d30:	10873104 	addi	r2,r2,7364
    2d34:	10c00017 	ldw	r3,0(r2)
    2d38:	003f2c06 	br	29ec <__alt_mem_epcs_flash_controller_0+0xff8019ec>
    2d3c:	00c05504 	movi	r3,340
    2d40:	18800536 	bltu	r3,r2,2d58 <_malloc_r+0x7cc>
    2d44:	3804d3fa 	srli	r2,r7,15
    2d48:	11401e04 	addi	r5,r2,120
    2d4c:	10c01dc4 	addi	r3,r2,119
    2d50:	294b883a 	add	r5,r5,r5
    2d54:	003f5606 	br	2ab0 <__alt_mem_epcs_flash_controller_0+0xff801ab0>
    2d58:	00c15504 	movi	r3,1364
    2d5c:	18800536 	bltu	r3,r2,2d74 <_malloc_r+0x7e8>
    2d60:	3804d4ba 	srli	r2,r7,18
    2d64:	11401f44 	addi	r5,r2,125
    2d68:	10c01f04 	addi	r3,r2,124
    2d6c:	294b883a 	add	r5,r5,r5
    2d70:	003f4f06 	br	2ab0 <__alt_mem_epcs_flash_controller_0+0xff801ab0>
    2d74:	01403f84 	movi	r5,254
    2d78:	00c01f84 	movi	r3,126
    2d7c:	003f4c06 	br	2ab0 <__alt_mem_epcs_flash_controller_0+0xff801ab0>
    2d80:	98800117 	ldw	r2,4(r19)
    2d84:	003fa006 	br	2c08 <__alt_mem_epcs_flash_controller_0+0xff801c08>
    2d88:	8808d0fa 	srli	r4,r17,3
    2d8c:	20800044 	addi	r2,r4,1
    2d90:	1085883a 	add	r2,r2,r2
    2d94:	003e9006 	br	27d8 <__alt_mem_epcs_flash_controller_0+0xff8017d8>

00002d98 <memcmp>:
    2d98:	01c000c4 	movi	r7,3
    2d9c:	3980192e 	bgeu	r7,r6,2e04 <memcmp+0x6c>
    2da0:	2144b03a 	or	r2,r4,r5
    2da4:	11c4703a 	and	r2,r2,r7
    2da8:	10000f26 	beq	r2,zero,2de8 <memcmp+0x50>
    2dac:	20800003 	ldbu	r2,0(r4)
    2db0:	28c00003 	ldbu	r3,0(r5)
    2db4:	10c0151e 	bne	r2,r3,2e0c <memcmp+0x74>
    2db8:	31bfff84 	addi	r6,r6,-2
    2dbc:	01ffffc4 	movi	r7,-1
    2dc0:	00000406 	br	2dd4 <memcmp+0x3c>
    2dc4:	20800003 	ldbu	r2,0(r4)
    2dc8:	28c00003 	ldbu	r3,0(r5)
    2dcc:	31bfffc4 	addi	r6,r6,-1
    2dd0:	10c00e1e 	bne	r2,r3,2e0c <memcmp+0x74>
    2dd4:	21000044 	addi	r4,r4,1
    2dd8:	29400044 	addi	r5,r5,1
    2ddc:	31fff91e 	bne	r6,r7,2dc4 <__alt_mem_epcs_flash_controller_0+0xff801dc4>
    2de0:	0005883a 	mov	r2,zero
    2de4:	f800283a 	ret
    2de8:	20c00017 	ldw	r3,0(r4)
    2dec:	28800017 	ldw	r2,0(r5)
    2df0:	18bfee1e 	bne	r3,r2,2dac <__alt_mem_epcs_flash_controller_0+0xff801dac>
    2df4:	31bfff04 	addi	r6,r6,-4
    2df8:	21000104 	addi	r4,r4,4
    2dfc:	29400104 	addi	r5,r5,4
    2e00:	39bff936 	bltu	r7,r6,2de8 <__alt_mem_epcs_flash_controller_0+0xff801de8>
    2e04:	303fe91e 	bne	r6,zero,2dac <__alt_mem_epcs_flash_controller_0+0xff801dac>
    2e08:	003ff506 	br	2de0 <__alt_mem_epcs_flash_controller_0+0xff801de0>
    2e0c:	10c5c83a 	sub	r2,r2,r3
    2e10:	f800283a 	ret

00002e14 <memcpy>:
    2e14:	defffd04 	addi	sp,sp,-12
    2e18:	dfc00215 	stw	ra,8(sp)
    2e1c:	dc400115 	stw	r17,4(sp)
    2e20:	dc000015 	stw	r16,0(sp)
    2e24:	00c003c4 	movi	r3,15
    2e28:	2005883a 	mov	r2,r4
    2e2c:	1980452e 	bgeu	r3,r6,2f44 <memcpy+0x130>
    2e30:	2906b03a 	or	r3,r5,r4
    2e34:	18c000cc 	andi	r3,r3,3
    2e38:	1800441e 	bne	r3,zero,2f4c <memcpy+0x138>
    2e3c:	347ffc04 	addi	r17,r6,-16
    2e40:	8822d13a 	srli	r17,r17,4
    2e44:	28c00104 	addi	r3,r5,4
    2e48:	23400104 	addi	r13,r4,4
    2e4c:	8820913a 	slli	r16,r17,4
    2e50:	2b000204 	addi	r12,r5,8
    2e54:	22c00204 	addi	r11,r4,8
    2e58:	84000504 	addi	r16,r16,20
    2e5c:	2a800304 	addi	r10,r5,12
    2e60:	22400304 	addi	r9,r4,12
    2e64:	2c21883a 	add	r16,r5,r16
    2e68:	2811883a 	mov	r8,r5
    2e6c:	200f883a 	mov	r7,r4
    2e70:	41000017 	ldw	r4,0(r8)
    2e74:	1fc00017 	ldw	ra,0(r3)
    2e78:	63c00017 	ldw	r15,0(r12)
    2e7c:	39000015 	stw	r4,0(r7)
    2e80:	53800017 	ldw	r14,0(r10)
    2e84:	6fc00015 	stw	ra,0(r13)
    2e88:	5bc00015 	stw	r15,0(r11)
    2e8c:	4b800015 	stw	r14,0(r9)
    2e90:	18c00404 	addi	r3,r3,16
    2e94:	39c00404 	addi	r7,r7,16
    2e98:	42000404 	addi	r8,r8,16
    2e9c:	6b400404 	addi	r13,r13,16
    2ea0:	63000404 	addi	r12,r12,16
    2ea4:	5ac00404 	addi	r11,r11,16
    2ea8:	52800404 	addi	r10,r10,16
    2eac:	4a400404 	addi	r9,r9,16
    2eb0:	1c3fef1e 	bne	r3,r16,2e70 <__alt_mem_epcs_flash_controller_0+0xff801e70>
    2eb4:	89c00044 	addi	r7,r17,1
    2eb8:	380e913a 	slli	r7,r7,4
    2ebc:	310003cc 	andi	r4,r6,15
    2ec0:	02c000c4 	movi	r11,3
    2ec4:	11c7883a 	add	r3,r2,r7
    2ec8:	29cb883a 	add	r5,r5,r7
    2ecc:	5900212e 	bgeu	r11,r4,2f54 <memcpy+0x140>
    2ed0:	1813883a 	mov	r9,r3
    2ed4:	2811883a 	mov	r8,r5
    2ed8:	200f883a 	mov	r7,r4
    2edc:	42800017 	ldw	r10,0(r8)
    2ee0:	4a400104 	addi	r9,r9,4
    2ee4:	39ffff04 	addi	r7,r7,-4
    2ee8:	4abfff15 	stw	r10,-4(r9)
    2eec:	42000104 	addi	r8,r8,4
    2ef0:	59fffa36 	bltu	r11,r7,2edc <__alt_mem_epcs_flash_controller_0+0xff801edc>
    2ef4:	213fff04 	addi	r4,r4,-4
    2ef8:	2008d0ba 	srli	r4,r4,2
    2efc:	318000cc 	andi	r6,r6,3
    2f00:	21000044 	addi	r4,r4,1
    2f04:	2109883a 	add	r4,r4,r4
    2f08:	2109883a 	add	r4,r4,r4
    2f0c:	1907883a 	add	r3,r3,r4
    2f10:	290b883a 	add	r5,r5,r4
    2f14:	30000626 	beq	r6,zero,2f30 <memcpy+0x11c>
    2f18:	198d883a 	add	r6,r3,r6
    2f1c:	29c00003 	ldbu	r7,0(r5)
    2f20:	18c00044 	addi	r3,r3,1
    2f24:	29400044 	addi	r5,r5,1
    2f28:	19ffffc5 	stb	r7,-1(r3)
    2f2c:	19bffb1e 	bne	r3,r6,2f1c <__alt_mem_epcs_flash_controller_0+0xff801f1c>
    2f30:	dfc00217 	ldw	ra,8(sp)
    2f34:	dc400117 	ldw	r17,4(sp)
    2f38:	dc000017 	ldw	r16,0(sp)
    2f3c:	dec00304 	addi	sp,sp,12
    2f40:	f800283a 	ret
    2f44:	2007883a 	mov	r3,r4
    2f48:	003ff206 	br	2f14 <__alt_mem_epcs_flash_controller_0+0xff801f14>
    2f4c:	2007883a 	mov	r3,r4
    2f50:	003ff106 	br	2f18 <__alt_mem_epcs_flash_controller_0+0xff801f18>
    2f54:	200d883a 	mov	r6,r4
    2f58:	003fee06 	br	2f14 <__alt_mem_epcs_flash_controller_0+0xff801f14>

00002f5c <_printf_r>:
    2f5c:	defffd04 	addi	sp,sp,-12
    2f60:	2805883a 	mov	r2,r5
    2f64:	dfc00015 	stw	ra,0(sp)
    2f68:	d9800115 	stw	r6,4(sp)
    2f6c:	d9c00215 	stw	r7,8(sp)
    2f70:	21400217 	ldw	r5,8(r4)
    2f74:	d9c00104 	addi	r7,sp,4
    2f78:	100d883a 	mov	r6,r2
    2f7c:	0004dec0 	call	4dec <___vfprintf_internal_r>
    2f80:	dfc00017 	ldw	ra,0(sp)
    2f84:	dec00304 	addi	sp,sp,12
    2f88:	f800283a 	ret

00002f8c <printf>:
    2f8c:	defffc04 	addi	sp,sp,-16
    2f90:	dfc00015 	stw	ra,0(sp)
    2f94:	d9400115 	stw	r5,4(sp)
    2f98:	d9800215 	stw	r6,8(sp)
    2f9c:	d9c00315 	stw	r7,12(sp)
    2fa0:	008000b4 	movhi	r2,2
    2fa4:	10801c04 	addi	r2,r2,112
    2fa8:	10800017 	ldw	r2,0(r2)
    2fac:	200b883a 	mov	r5,r4
    2fb0:	d9800104 	addi	r6,sp,4
    2fb4:	11000217 	ldw	r4,8(r2)
    2fb8:	00070c80 	call	70c8 <__vfprintf_internal>
    2fbc:	dfc00017 	ldw	ra,0(sp)
    2fc0:	dec00404 	addi	sp,sp,16
    2fc4:	f800283a 	ret

00002fc8 <_putchar_r>:
    2fc8:	21800217 	ldw	r6,8(r4)
    2fcc:	000b6a01 	jmpi	b6a0 <_putc_r>

00002fd0 <putchar>:
    2fd0:	008000b4 	movhi	r2,2
    2fd4:	10801c04 	addi	r2,r2,112
    2fd8:	200b883a 	mov	r5,r4
    2fdc:	11000017 	ldw	r4,0(r2)
    2fe0:	21800217 	ldw	r6,8(r4)
    2fe4:	000b6a01 	jmpi	b6a0 <_putc_r>

00002fe8 <_puts_r>:
    2fe8:	defff604 	addi	sp,sp,-40
    2fec:	dc000715 	stw	r16,28(sp)
    2ff0:	2021883a 	mov	r16,r4
    2ff4:	2809883a 	mov	r4,r5
    2ff8:	dc400815 	stw	r17,32(sp)
    2ffc:	dfc00915 	stw	ra,36(sp)
    3000:	2823883a 	mov	r17,r5
    3004:	00033c80 	call	33c8 <strlen>
    3008:	10c00044 	addi	r3,r2,1
    300c:	d8800115 	stw	r2,4(sp)
    3010:	008000b4 	movhi	r2,2
    3014:	10b75b04 	addi	r2,r2,-8852
    3018:	d8800215 	stw	r2,8(sp)
    301c:	00800044 	movi	r2,1
    3020:	d8800315 	stw	r2,12(sp)
    3024:	00800084 	movi	r2,2
    3028:	dc400015 	stw	r17,0(sp)
    302c:	d8c00615 	stw	r3,24(sp)
    3030:	dec00415 	stw	sp,16(sp)
    3034:	d8800515 	stw	r2,20(sp)
    3038:	80000226 	beq	r16,zero,3044 <_puts_r+0x5c>
    303c:	80800e17 	ldw	r2,56(r16)
    3040:	10001426 	beq	r2,zero,3094 <_puts_r+0xac>
    3044:	81400217 	ldw	r5,8(r16)
    3048:	2880030b 	ldhu	r2,12(r5)
    304c:	10c8000c 	andi	r3,r2,8192
    3050:	1800061e 	bne	r3,zero,306c <_puts_r+0x84>
    3054:	29001917 	ldw	r4,100(r5)
    3058:	00f7ffc4 	movi	r3,-8193
    305c:	10880014 	ori	r2,r2,8192
    3060:	20c6703a 	and	r3,r4,r3
    3064:	2880030d 	sth	r2,12(r5)
    3068:	28c01915 	stw	r3,100(r5)
    306c:	d9800404 	addi	r6,sp,16
    3070:	8009883a 	mov	r4,r16
    3074:	00096e40 	call	96e4 <__sfvwrite_r>
    3078:	1000091e 	bne	r2,zero,30a0 <_puts_r+0xb8>
    307c:	00800284 	movi	r2,10
    3080:	dfc00917 	ldw	ra,36(sp)
    3084:	dc400817 	ldw	r17,32(sp)
    3088:	dc000717 	ldw	r16,28(sp)
    308c:	dec00a04 	addi	sp,sp,40
    3090:	f800283a 	ret
    3094:	8009883a 	mov	r4,r16
    3098:	00092600 	call	9260 <__sinit>
    309c:	003fe906 	br	3044 <__alt_mem_epcs_flash_controller_0+0xff802044>
    30a0:	00bfffc4 	movi	r2,-1
    30a4:	003ff606 	br	3080 <__alt_mem_epcs_flash_controller_0+0xff802080>

000030a8 <puts>:
    30a8:	008000b4 	movhi	r2,2
    30ac:	10801c04 	addi	r2,r2,112
    30b0:	200b883a 	mov	r5,r4
    30b4:	11000017 	ldw	r4,0(r2)
    30b8:	0002fe81 	jmpi	2fe8 <_puts_r>

000030bc <__srget_r>:
    30bc:	defffd04 	addi	sp,sp,-12
    30c0:	dc400115 	stw	r17,4(sp)
    30c4:	dc000015 	stw	r16,0(sp)
    30c8:	dfc00215 	stw	ra,8(sp)
    30cc:	2023883a 	mov	r17,r4
    30d0:	2821883a 	mov	r16,r5
    30d4:	20000226 	beq	r4,zero,30e0 <__srget_r+0x24>
    30d8:	20800e17 	ldw	r2,56(r4)
    30dc:	10001026 	beq	r2,zero,3120 <__srget_r+0x64>
    30e0:	800b883a 	mov	r5,r16
    30e4:	8809883a 	mov	r4,r17
    30e8:	000bde80 	call	bde8 <__srefill_r>
    30ec:	10000e1e 	bne	r2,zero,3128 <__srget_r+0x6c>
    30f0:	80c00017 	ldw	r3,0(r16)
    30f4:	80800117 	ldw	r2,4(r16)
    30f8:	19000044 	addi	r4,r3,1
    30fc:	10bfffc4 	addi	r2,r2,-1
    3100:	80800115 	stw	r2,4(r16)
    3104:	81000015 	stw	r4,0(r16)
    3108:	18800003 	ldbu	r2,0(r3)
    310c:	dfc00217 	ldw	ra,8(sp)
    3110:	dc400117 	ldw	r17,4(sp)
    3114:	dc000017 	ldw	r16,0(sp)
    3118:	dec00304 	addi	sp,sp,12
    311c:	f800283a 	ret
    3120:	00092600 	call	9260 <__sinit>
    3124:	003fee06 	br	30e0 <__alt_mem_epcs_flash_controller_0+0xff8020e0>
    3128:	00bfffc4 	movi	r2,-1
    312c:	003ff706 	br	310c <__alt_mem_epcs_flash_controller_0+0xff80210c>

00003130 <__srget>:
    3130:	008000b4 	movhi	r2,2
    3134:	10801c04 	addi	r2,r2,112
    3138:	200b883a 	mov	r5,r4
    313c:	11000017 	ldw	r4,0(r2)
    3140:	00030bc1 	jmpi	30bc <__srget_r>

00003144 <_sbrk_r>:
    3144:	defffd04 	addi	sp,sp,-12
    3148:	dc000015 	stw	r16,0(sp)
    314c:	040000b4 	movhi	r16,2
    3150:	dc400115 	stw	r17,4(sp)
    3154:	84072604 	addi	r16,r16,7320
    3158:	2023883a 	mov	r17,r4
    315c:	2809883a 	mov	r4,r5
    3160:	dfc00215 	stw	ra,8(sp)
    3164:	80000015 	stw	zero,0(r16)
    3168:	001a0dc0 	call	1a0dc <sbrk>
    316c:	00ffffc4 	movi	r3,-1
    3170:	10c00526 	beq	r2,r3,3188 <_sbrk_r+0x44>
    3174:	dfc00217 	ldw	ra,8(sp)
    3178:	dc400117 	ldw	r17,4(sp)
    317c:	dc000017 	ldw	r16,0(sp)
    3180:	dec00304 	addi	sp,sp,12
    3184:	f800283a 	ret
    3188:	80c00017 	ldw	r3,0(r16)
    318c:	183ff926 	beq	r3,zero,3174 <__alt_mem_epcs_flash_controller_0+0xff802174>
    3190:	88c00015 	stw	r3,0(r17)
    3194:	003ff706 	br	3174 <__alt_mem_epcs_flash_controller_0+0xff802174>

00003198 <sscanf>:
    3198:	deffe204 	addi	sp,sp,-120
    319c:	dc001a15 	stw	r16,104(sp)
    31a0:	2821883a 	mov	r16,r5
    31a4:	dfc01b15 	stw	ra,108(sp)
    31a8:	d9801c15 	stw	r6,112(sp)
    31ac:	d9c01d15 	stw	r7,116(sp)
    31b0:	00c08104 	movi	r3,516
    31b4:	d8c0030d 	sth	r3,12(sp)
    31b8:	d9000015 	stw	r4,0(sp)
    31bc:	d9000415 	stw	r4,16(sp)
    31c0:	00033c80 	call	33c8 <strlen>
    31c4:	00c000b4 	movhi	r3,2
    31c8:	18c01c04 	addi	r3,r3,112
    31cc:	d8800115 	stw	r2,4(sp)
    31d0:	d8800515 	stw	r2,20(sp)
    31d4:	19000017 	ldw	r4,0(r3)
    31d8:	00800034 	movhi	r2,0
    31dc:	108cb804 	addi	r2,r2,13024
    31e0:	d8800815 	stw	r2,32(sp)
    31e4:	d9c01c04 	addi	r7,sp,112
    31e8:	800d883a 	mov	r6,r16
    31ec:	d80b883a 	mov	r5,sp
    31f0:	00bfffc4 	movi	r2,-1
    31f4:	d8000c15 	stw	zero,48(sp)
    31f8:	d8001115 	stw	zero,68(sp)
    31fc:	d880038d 	sth	r2,14(sp)
    3200:	00034600 	call	3460 <__ssvfscanf_r>
    3204:	dfc01b17 	ldw	ra,108(sp)
    3208:	dc001a17 	ldw	r16,104(sp)
    320c:	dec01e04 	addi	sp,sp,120
    3210:	f800283a 	ret

00003214 <_sscanf_r>:
    3214:	deffe204 	addi	sp,sp,-120
    3218:	dc001b15 	stw	r16,108(sp)
    321c:	2021883a 	mov	r16,r4
    3220:	dfc01c15 	stw	ra,112(sp)
    3224:	d9c01d15 	stw	r7,116(sp)
    3228:	00808104 	movi	r2,516
    322c:	2809883a 	mov	r4,r5
    3230:	d9400015 	stw	r5,0(sp)
    3234:	d9400415 	stw	r5,16(sp)
    3238:	d9801a15 	stw	r6,104(sp)
    323c:	d880030d 	sth	r2,12(sp)
    3240:	00033c80 	call	33c8 <strlen>
    3244:	d8800115 	stw	r2,4(sp)
    3248:	d8800515 	stw	r2,20(sp)
    324c:	d9801a17 	ldw	r6,104(sp)
    3250:	00800034 	movhi	r2,0
    3254:	108cb804 	addi	r2,r2,13024
    3258:	d8800815 	stw	r2,32(sp)
    325c:	d9c01d04 	addi	r7,sp,116
    3260:	d80b883a 	mov	r5,sp
    3264:	8009883a 	mov	r4,r16
    3268:	00bfffc4 	movi	r2,-1
    326c:	d8000c15 	stw	zero,48(sp)
    3270:	d8001115 	stw	zero,68(sp)
    3274:	d880038d 	sth	r2,14(sp)
    3278:	00034600 	call	3460 <__ssvfscanf_r>
    327c:	dfc01c17 	ldw	ra,112(sp)
    3280:	dc001b17 	ldw	r16,108(sp)
    3284:	dec01e04 	addi	sp,sp,120
    3288:	f800283a 	ret

0000328c <__sread>:
    328c:	defffe04 	addi	sp,sp,-8
    3290:	dc000015 	stw	r16,0(sp)
    3294:	2821883a 	mov	r16,r5
    3298:	2940038f 	ldh	r5,14(r5)
    329c:	dfc00115 	stw	ra,4(sp)
    32a0:	000b8080 	call	b808 <_read_r>
    32a4:	10000716 	blt	r2,zero,32c4 <__sread+0x38>
    32a8:	80c01417 	ldw	r3,80(r16)
    32ac:	1887883a 	add	r3,r3,r2
    32b0:	80c01415 	stw	r3,80(r16)
    32b4:	dfc00117 	ldw	ra,4(sp)
    32b8:	dc000017 	ldw	r16,0(sp)
    32bc:	dec00204 	addi	sp,sp,8
    32c0:	f800283a 	ret
    32c4:	80c0030b 	ldhu	r3,12(r16)
    32c8:	18fbffcc 	andi	r3,r3,61439
    32cc:	80c0030d 	sth	r3,12(r16)
    32d0:	dfc00117 	ldw	ra,4(sp)
    32d4:	dc000017 	ldw	r16,0(sp)
    32d8:	dec00204 	addi	sp,sp,8
    32dc:	f800283a 	ret

000032e0 <__seofread>:
    32e0:	0005883a 	mov	r2,zero
    32e4:	f800283a 	ret

000032e8 <__swrite>:
    32e8:	2880030b 	ldhu	r2,12(r5)
    32ec:	defffb04 	addi	sp,sp,-20
    32f0:	dcc00315 	stw	r19,12(sp)
    32f4:	dc800215 	stw	r18,8(sp)
    32f8:	dc400115 	stw	r17,4(sp)
    32fc:	dc000015 	stw	r16,0(sp)
    3300:	dfc00415 	stw	ra,16(sp)
    3304:	10c0400c 	andi	r3,r2,256
    3308:	2821883a 	mov	r16,r5
    330c:	2023883a 	mov	r17,r4
    3310:	3025883a 	mov	r18,r6
    3314:	3827883a 	mov	r19,r7
    3318:	18000526 	beq	r3,zero,3330 <__swrite+0x48>
    331c:	2940038f 	ldh	r5,14(r5)
    3320:	01c00084 	movi	r7,2
    3324:	000d883a 	mov	r6,zero
    3328:	0009e400 	call	9e40 <_lseek_r>
    332c:	8080030b 	ldhu	r2,12(r16)
    3330:	8140038f 	ldh	r5,14(r16)
    3334:	10bbffcc 	andi	r2,r2,61439
    3338:	980f883a 	mov	r7,r19
    333c:	900d883a 	mov	r6,r18
    3340:	8809883a 	mov	r4,r17
    3344:	8080030d 	sth	r2,12(r16)
    3348:	dfc00417 	ldw	ra,16(sp)
    334c:	dcc00317 	ldw	r19,12(sp)
    3350:	dc800217 	ldw	r18,8(sp)
    3354:	dc400117 	ldw	r17,4(sp)
    3358:	dc000017 	ldw	r16,0(sp)
    335c:	dec00504 	addi	sp,sp,20
    3360:	00071a01 	jmpi	71a0 <_write_r>

00003364 <__sseek>:
    3364:	defffe04 	addi	sp,sp,-8
    3368:	dc000015 	stw	r16,0(sp)
    336c:	2821883a 	mov	r16,r5
    3370:	2940038f 	ldh	r5,14(r5)
    3374:	dfc00115 	stw	ra,4(sp)
    3378:	0009e400 	call	9e40 <_lseek_r>
    337c:	00ffffc4 	movi	r3,-1
    3380:	10c00826 	beq	r2,r3,33a4 <__sseek+0x40>
    3384:	80c0030b 	ldhu	r3,12(r16)
    3388:	80801415 	stw	r2,80(r16)
    338c:	18c40014 	ori	r3,r3,4096
    3390:	80c0030d 	sth	r3,12(r16)
    3394:	dfc00117 	ldw	ra,4(sp)
    3398:	dc000017 	ldw	r16,0(sp)
    339c:	dec00204 	addi	sp,sp,8
    33a0:	f800283a 	ret
    33a4:	80c0030b 	ldhu	r3,12(r16)
    33a8:	18fbffcc 	andi	r3,r3,61439
    33ac:	80c0030d 	sth	r3,12(r16)
    33b0:	dfc00117 	ldw	ra,4(sp)
    33b4:	dc000017 	ldw	r16,0(sp)
    33b8:	dec00204 	addi	sp,sp,8
    33bc:	f800283a 	ret

000033c0 <__sclose>:
    33c0:	2940038f 	ldh	r5,14(r5)
    33c4:	00073541 	jmpi	7354 <_close_r>

000033c8 <strlen>:
    33c8:	208000cc 	andi	r2,r4,3
    33cc:	10002026 	beq	r2,zero,3450 <strlen+0x88>
    33d0:	20800007 	ldb	r2,0(r4)
    33d4:	10002026 	beq	r2,zero,3458 <strlen+0x90>
    33d8:	2005883a 	mov	r2,r4
    33dc:	00000206 	br	33e8 <strlen+0x20>
    33e0:	10c00007 	ldb	r3,0(r2)
    33e4:	18001826 	beq	r3,zero,3448 <strlen+0x80>
    33e8:	10800044 	addi	r2,r2,1
    33ec:	10c000cc 	andi	r3,r2,3
    33f0:	183ffb1e 	bne	r3,zero,33e0 <__alt_mem_epcs_flash_controller_0+0xff8023e0>
    33f4:	10c00017 	ldw	r3,0(r2)
    33f8:	01ffbff4 	movhi	r7,65279
    33fc:	39ffbfc4 	addi	r7,r7,-257
    3400:	00ca303a 	nor	r5,zero,r3
    3404:	01a02074 	movhi	r6,32897
    3408:	19c7883a 	add	r3,r3,r7
    340c:	31a02004 	addi	r6,r6,-32640
    3410:	1946703a 	and	r3,r3,r5
    3414:	1986703a 	and	r3,r3,r6
    3418:	1800091e 	bne	r3,zero,3440 <strlen+0x78>
    341c:	10800104 	addi	r2,r2,4
    3420:	10c00017 	ldw	r3,0(r2)
    3424:	19cb883a 	add	r5,r3,r7
    3428:	00c6303a 	nor	r3,zero,r3
    342c:	28c6703a 	and	r3,r5,r3
    3430:	1986703a 	and	r3,r3,r6
    3434:	183ff926 	beq	r3,zero,341c <__alt_mem_epcs_flash_controller_0+0xff80241c>
    3438:	00000106 	br	3440 <strlen+0x78>
    343c:	10800044 	addi	r2,r2,1
    3440:	10c00007 	ldb	r3,0(r2)
    3444:	183ffd1e 	bne	r3,zero,343c <__alt_mem_epcs_flash_controller_0+0xff80243c>
    3448:	1105c83a 	sub	r2,r2,r4
    344c:	f800283a 	ret
    3450:	2005883a 	mov	r2,r4
    3454:	003fe706 	br	33f4 <__alt_mem_epcs_flash_controller_0+0xff8023f4>
    3458:	0005883a 	mov	r2,zero
    345c:	f800283a 	ret

00003460 <__ssvfscanf_r>:
    3460:	2880030b 	ldhu	r2,12(r5)
    3464:	deff4b04 	addi	sp,sp,-724
    3468:	df00b315 	stw	fp,716(sp)
    346c:	ddc0b215 	stw	r23,712(sp)
    3470:	dfc0b415 	stw	ra,720(sp)
    3474:	dd80b115 	stw	r22,708(sp)
    3478:	dd40b015 	stw	r21,704(sp)
    347c:	dd00af15 	stw	r20,700(sp)
    3480:	dcc0ae15 	stw	r19,696(sp)
    3484:	dc80ad15 	stw	r18,692(sp)
    3488:	dc40ac15 	stw	r17,688(sp)
    348c:	dc00ab15 	stw	r16,684(sp)
    3490:	10c8000c 	andi	r3,r2,8192
    3494:	d9c09c15 	stw	r7,624(sp)
    3498:	2839883a 	mov	fp,r5
    349c:	202f883a 	mov	r23,r4
    34a0:	1800061e 	bne	r3,zero,34bc <__ssvfscanf_r+0x5c>
    34a4:	29001917 	ldw	r4,100(r5)
    34a8:	00f7ffc4 	movi	r3,-8193
    34ac:	10880014 	ori	r2,r2,8192
    34b0:	20c6703a 	and	r3,r4,r3
    34b4:	2880030d 	sth	r2,12(r5)
    34b8:	28c01915 	stw	r3,100(r5)
    34bc:	30800003 	ldbu	r2,0(r6)
    34c0:	0021883a 	mov	r16,zero
    34c4:	058000b4 	movhi	r22,2
    34c8:	d800a115 	stw	zero,644(sp)
    34cc:	d8009e15 	stw	zero,632(sp)
    34d0:	d800a015 	stw	zero,640(sp)
    34d4:	d8809b15 	stw	r2,620(sp)
    34d8:	b5801f04 	addi	r22,r22,124
    34dc:	8025883a 	mov	r18,r16
    34e0:	e027883a 	mov	r19,fp
    34e4:	35000044 	addi	r20,r6,1
    34e8:	10001e26 	beq	r2,zero,3564 <__ssvfscanf_r+0x104>
    34ec:	b4000017 	ldw	r16,0(r22)
    34f0:	8087883a 	add	r3,r16,r2
    34f4:	18c00043 	ldbu	r3,1(r3)
    34f8:	18c0020c 	andi	r3,r3,8
    34fc:	18001b26 	beq	r3,zero,356c <__ssvfscanf_r+0x10c>
    3500:	98800117 	ldw	r2,4(r19)
    3504:	00800e0e 	bge	zero,r2,3540 <__ssvfscanf_r+0xe0>
    3508:	98c00017 	ldw	r3,0(r19)
    350c:	b1000017 	ldw	r4,0(r22)
    3510:	18800003 	ldbu	r2,0(r3)
    3514:	2085883a 	add	r2,r4,r2
    3518:	10800043 	ldbu	r2,1(r2)
    351c:	1080020c 	andi	r2,r2,8
    3520:	10000b26 	beq	r2,zero,3550 <__ssvfscanf_r+0xf0>
    3524:	98800117 	ldw	r2,4(r19)
    3528:	18c00044 	addi	r3,r3,1
    352c:	98c00015 	stw	r3,0(r19)
    3530:	10bfffc4 	addi	r2,r2,-1
    3534:	98800115 	stw	r2,4(r19)
    3538:	94800044 	addi	r18,r18,1
    353c:	00bff216 	blt	zero,r2,3508 <__alt_mem_epcs_flash_controller_0+0xff802508>
    3540:	980b883a 	mov	r5,r19
    3544:	b809883a 	mov	r4,r23
    3548:	000e63c0 	call	e63c <__ssrefill_r>
    354c:	103fee26 	beq	r2,zero,3508 <__alt_mem_epcs_flash_controller_0+0xff802508>
    3550:	a00d883a 	mov	r6,r20
    3554:	30800003 	ldbu	r2,0(r6)
    3558:	35000044 	addi	r20,r6,1
    355c:	d8809b15 	stw	r2,620(sp)
    3560:	103fe21e 	bne	r2,zero,34ec <__alt_mem_epcs_flash_controller_0+0xff8024ec>
    3564:	d880a017 	ldw	r2,640(sp)
    3568:	00009a06 	br	37d4 <__ssvfscanf_r+0x374>
    356c:	00c00944 	movi	r3,37
    3570:	10c0891e 	bne	r2,r3,3798 <__ssvfscanf_r+0x338>
    3574:	0039883a 	mov	fp,zero
    3578:	35400043 	ldbu	r21,1(r6)
    357c:	0023883a 	mov	r17,zero
    3580:	01801e04 	movi	r6,120
    3584:	00c01b04 	movi	r3,108
    3588:	e009883a 	mov	r4,fp
    358c:	a1c00044 	addi	r7,r20,1
    3590:	3540a236 	bltu	r6,r21,381c <__ssvfscanf_r+0x3bc>
    3594:	a80490ba 	slli	r2,r21,2
    3598:	01400034 	movhi	r5,0
    359c:	294d6b04 	addi	r5,r5,13740
    35a0:	1145883a 	add	r2,r2,r5
    35a4:	10800017 	ldw	r2,0(r2)
    35a8:	1000683a 	jmp	r2
    35ac:	000037d0 	cmplti	zero,zero,223
    35b0:	0000381c 	xori	zero,zero,224
    35b4:	0000381c 	xori	zero,zero,224
    35b8:	0000381c 	xori	zero,zero,224
    35bc:	0000381c 	xori	zero,zero,224
    35c0:	0000381c 	xori	zero,zero,224
    35c4:	0000381c 	xori	zero,zero,224
    35c8:	0000381c 	xori	zero,zero,224
    35cc:	0000381c 	xori	zero,zero,224
    35d0:	0000381c 	xori	zero,zero,224
    35d4:	0000381c 	xori	zero,zero,224
    35d8:	0000381c 	xori	zero,zero,224
    35dc:	0000381c 	xori	zero,zero,224
    35e0:	0000381c 	xori	zero,zero,224
    35e4:	0000381c 	xori	zero,zero,224
    35e8:	0000381c 	xori	zero,zero,224
    35ec:	0000381c 	xori	zero,zero,224
    35f0:	0000381c 	xori	zero,zero,224
    35f4:	0000381c 	xori	zero,zero,224
    35f8:	0000381c 	xori	zero,zero,224
    35fc:	0000381c 	xori	zero,zero,224
    3600:	0000381c 	xori	zero,zero,224
    3604:	0000381c 	xori	zero,zero,224
    3608:	0000381c 	xori	zero,zero,224
    360c:	0000381c 	xori	zero,zero,224
    3610:	0000381c 	xori	zero,zero,224
    3614:	0000381c 	xori	zero,zero,224
    3618:	0000381c 	xori	zero,zero,224
    361c:	0000381c 	xori	zero,zero,224
    3620:	0000381c 	xori	zero,zero,224
    3624:	0000381c 	xori	zero,zero,224
    3628:	0000381c 	xori	zero,zero,224
    362c:	0000381c 	xori	zero,zero,224
    3630:	0000381c 	xori	zero,zero,224
    3634:	0000381c 	xori	zero,zero,224
    3638:	0000381c 	xori	zero,zero,224
    363c:	0000381c 	xori	zero,zero,224
    3640:	00003790 	cmplti	zero,zero,222
    3644:	0000381c 	xori	zero,zero,224
    3648:	0000381c 	xori	zero,zero,224
    364c:	0000381c 	xori	zero,zero,224
    3650:	0000381c 	xori	zero,zero,224
    3654:	00003804 	movi	zero,224
    3658:	0000381c 	xori	zero,zero,224
    365c:	0000381c 	xori	zero,zero,224
    3660:	0000381c 	xori	zero,zero,224
    3664:	0000381c 	xori	zero,zero,224
    3668:	0000381c 	xori	zero,zero,224
    366c:	00003964 	muli	zero,zero,229
    3670:	00003964 	muli	zero,zero,229
    3674:	00003964 	muli	zero,zero,229
    3678:	00003964 	muli	zero,zero,229
    367c:	00003964 	muli	zero,zero,229
    3680:	00003964 	muli	zero,zero,229
    3684:	00003964 	muli	zero,zero,229
    3688:	00003964 	muli	zero,zero,229
    368c:	00003964 	muli	zero,zero,229
    3690:	00003964 	muli	zero,zero,229
    3694:	0000381c 	xori	zero,zero,224
    3698:	0000381c 	xori	zero,zero,224
    369c:	0000381c 	xori	zero,zero,224
    36a0:	0000381c 	xori	zero,zero,224
    36a4:	0000381c 	xori	zero,zero,224
    36a8:	0000381c 	xori	zero,zero,224
    36ac:	0000381c 	xori	zero,zero,224
    36b0:	0000381c 	xori	zero,zero,224
    36b4:	0000381c 	xori	zero,zero,224
    36b8:	0000381c 	xori	zero,zero,224
    36bc:	00003934 	movhi	zero,228
    36c0:	00003a10 	cmplti	zero,zero,232
    36c4:	0000381c 	xori	zero,zero,224
    36c8:	00003a10 	cmplti	zero,zero,232
    36cc:	0000381c 	xori	zero,zero,224
    36d0:	0000381c 	xori	zero,zero,224
    36d4:	0000381c 	xori	zero,zero,224
    36d8:	0000381c 	xori	zero,zero,224
    36dc:	000039fc 	xorhi	zero,zero,231
    36e0:	0000381c 	xori	zero,zero,224
    36e4:	0000381c 	xori	zero,zero,224
    36e8:	000039cc 	andi	zero,zero,231
    36ec:	0000381c 	xori	zero,zero,224
    36f0:	0000381c 	xori	zero,zero,224
    36f4:	0000381c 	xori	zero,zero,224
    36f8:	0000381c 	xori	zero,zero,224
    36fc:	0000381c 	xori	zero,zero,224
    3700:	0000381c 	xori	zero,zero,224
    3704:	0000381c 	xori	zero,zero,224
    3708:	0000381c 	xori	zero,zero,224
    370c:	0000399c 	xori	zero,zero,230
    3710:	0000381c 	xori	zero,zero,224
    3714:	0000381c 	xori	zero,zero,224
    3718:	00003b58 	cmpnei	zero,zero,237
    371c:	0000381c 	xori	zero,zero,224
    3720:	0000381c 	xori	zero,zero,224
    3724:	0000381c 	xori	zero,zero,224
    3728:	0000381c 	xori	zero,zero,224
    372c:	0000381c 	xori	zero,zero,224
    3730:	0000381c 	xori	zero,zero,224
    3734:	0000381c 	xori	zero,zero,224
    3738:	00003ad8 	cmpnei	zero,zero,235
    373c:	00003aac 	andhi	zero,zero,234
    3740:	00003a10 	cmplti	zero,zero,232
    3744:	00003a10 	cmplti	zero,zero,232
    3748:	00003a10 	cmplti	zero,zero,232
    374c:	00003a98 	cmpnei	zero,zero,234
    3750:	00003be8 	cmpgeui	zero,zero,239
    3754:	0000381c 	xori	zero,zero,224
    3758:	0000381c 	xori	zero,zero,224
    375c:	00003a84 	movi	zero,234
    3760:	0000381c 	xori	zero,zero,224
    3764:	00003a54 	movui	zero,233
    3768:	00003a28 	cmpgeui	zero,zero,232
    376c:	00003904 	movi	zero,228
    3770:	0000381c 	xori	zero,zero,224
    3774:	0000381c 	xori	zero,zero,224
    3778:	000038ec 	andhi	zero,zero,227
    377c:	0000381c 	xori	zero,zero,224
    3780:	00003870 	cmpltui	zero,zero,225
    3784:	0000381c 	xori	zero,zero,224
    3788:	0000381c 	xori	zero,zero,224
    378c:	0000399c 	xori	zero,zero,230
    3790:	d9c09d15 	stw	r7,628(sp)
    3794:	3829883a 	mov	r20,r7
    3798:	98800117 	ldw	r2,4(r19)
    379c:	0081c60e 	bge	zero,r2,3eb8 <__ssvfscanf_r+0xa58>
    37a0:	98800017 	ldw	r2,0(r19)
    37a4:	a0ffffc3 	ldbu	r3,-1(r20)
    37a8:	11000003 	ldbu	r4,0(r2)
    37ac:	20ff6d1e 	bne	r4,r3,3564 <__alt_mem_epcs_flash_controller_0+0xff802564>
    37b0:	98c00117 	ldw	r3,4(r19)
    37b4:	10800044 	addi	r2,r2,1
    37b8:	98800015 	stw	r2,0(r19)
    37bc:	18bfffc4 	addi	r2,r3,-1
    37c0:	98800115 	stw	r2,4(r19)
    37c4:	94800044 	addi	r18,r18,1
    37c8:	a00d883a 	mov	r6,r20
    37cc:	003f6106 	br	3554 <__alt_mem_epcs_flash_controller_0+0xff802554>
    37d0:	00bfffc4 	movi	r2,-1
    37d4:	dfc0b417 	ldw	ra,720(sp)
    37d8:	df00b317 	ldw	fp,716(sp)
    37dc:	ddc0b217 	ldw	r23,712(sp)
    37e0:	dd80b117 	ldw	r22,708(sp)
    37e4:	dd40b017 	ldw	r21,704(sp)
    37e8:	dd00af17 	ldw	r20,700(sp)
    37ec:	dcc0ae17 	ldw	r19,696(sp)
    37f0:	dc80ad17 	ldw	r18,692(sp)
    37f4:	dc40ac17 	ldw	r17,688(sp)
    37f8:	dc00ab17 	ldw	r16,684(sp)
    37fc:	dec0b504 	addi	sp,sp,724
    3800:	f800283a 	ret
    3804:	a1400043 	ldbu	r5,1(r20)
    3808:	3829883a 	mov	r20,r7
    380c:	8c400414 	ori	r17,r17,16
    3810:	2d403fcc 	andi	r21,r5,255
    3814:	a1c00044 	addi	r7,r20,1
    3818:	357f5e2e 	bgeu	r6,r21,3594 <__alt_mem_epcs_flash_controller_0+0xff802594>
    381c:	856b883a 	add	r21,r16,r21
    3820:	a8800043 	ldbu	r2,1(r21)
    3824:	d9c09d15 	stw	r7,628(sp)
    3828:	00c00044 	movi	r3,1
    382c:	108000cc 	andi	r2,r2,3
    3830:	2039883a 	mov	fp,r4
    3834:	10c1a526 	beq	r2,r3,3ecc <__ssvfscanf_r+0xa6c>
    3838:	98800117 	ldw	r2,4(r19)
    383c:	00804216 	blt	zero,r2,3948 <__ssvfscanf_r+0x4e8>
    3840:	980b883a 	mov	r5,r19
    3844:	b809883a 	mov	r4,r23
    3848:	000e63c0 	call	e63c <__ssrefill_r>
    384c:	10015e1e 	bne	r2,zero,3dc8 <__ssvfscanf_r+0x968>
    3850:	01000074 	movhi	r4,1
    3854:	21368204 	addi	r4,r4,-9720
    3858:	01400284 	movi	r5,10
    385c:	b4000017 	ldw	r16,0(r22)
    3860:	d900a115 	stw	r4,644(sp)
    3864:	d9409e15 	stw	r5,632(sp)
    3868:	050000c4 	movi	r20,3
    386c:	00000a06 	br	3898 <__ssvfscanf_r+0x438>
    3870:	98800117 	ldw	r2,4(r19)
    3874:	d9c09d15 	stw	r7,628(sp)
    3878:	2039883a 	mov	fp,r4
    387c:	0081e20e 	bge	zero,r2,4008 <__ssvfscanf_r+0xba8>
    3880:	00c00074 	movhi	r3,1
    3884:	18f7e004 	addi	r3,r3,-8320
    3888:	01000284 	movi	r4,10
    388c:	d8c0a115 	stw	r3,644(sp)
    3890:	d9009e15 	stw	r4,632(sp)
    3894:	050000c4 	movi	r20,3
    3898:	98c00017 	ldw	r3,0(r19)
    389c:	00000206 	br	38a8 <__ssvfscanf_r+0x448>
    38a0:	18c00044 	addi	r3,r3,1
    38a4:	98c00015 	stw	r3,0(r19)
    38a8:	19000003 	ldbu	r4,0(r3)
    38ac:	20803fcc 	andi	r2,r4,255
    38b0:	8085883a 	add	r2,r16,r2
    38b4:	10800043 	ldbu	r2,1(r2)
    38b8:	1140020c 	andi	r5,r2,8
    38bc:	28020126 	beq	r5,zero,40c4 <__ssvfscanf_r+0xc64>
    38c0:	98800117 	ldw	r2,4(r19)
    38c4:	94800044 	addi	r18,r18,1
    38c8:	10bfffc4 	addi	r2,r2,-1
    38cc:	98800115 	stw	r2,4(r19)
    38d0:	00bff316 	blt	zero,r2,38a0 <__alt_mem_epcs_flash_controller_0+0xff8028a0>
    38d4:	980b883a 	mov	r5,r19
    38d8:	b809883a 	mov	r4,r23
    38dc:	000e63c0 	call	e63c <__ssrefill_r>
    38e0:	1001391e 	bne	r2,zero,3dc8 <__ssvfscanf_r+0x968>
    38e4:	b4000017 	ldw	r16,0(r22)
    38e8:	003feb06 	br	3898 <__alt_mem_epcs_flash_controller_0+0xff802898>
    38ec:	98800117 	ldw	r2,4(r19)
    38f0:	d9c09d15 	stw	r7,628(sp)
    38f4:	2039883a 	mov	fp,r4
    38f8:	0081aa0e 	bge	zero,r2,3fa4 <__ssvfscanf_r+0xb44>
    38fc:	05000084 	movi	r20,2
    3900:	003fe506 	br	3898 <__alt_mem_epcs_flash_controller_0+0xff802898>
    3904:	98800117 	ldw	r2,4(r19)
    3908:	d9c09d15 	stw	r7,628(sp)
    390c:	2039883a 	mov	fp,r4
    3910:	8c408814 	ori	r17,r17,544
    3914:	0081df0e 	bge	zero,r2,4094 <__ssvfscanf_r+0xc34>
    3918:	00c00074 	movhi	r3,1
    391c:	18f7e004 	addi	r3,r3,-8320
    3920:	01000404 	movi	r4,16
    3924:	d8c0a115 	stw	r3,644(sp)
    3928:	d9009e15 	stw	r4,632(sp)
    392c:	050000c4 	movi	r20,3
    3930:	003fd906 	br	3898 <__alt_mem_epcs_flash_controller_0+0xff802898>
    3934:	98800117 	ldw	r2,4(r19)
    3938:	d9c09d15 	stw	r7,628(sp)
    393c:	2039883a 	mov	fp,r4
    3940:	8c400054 	ori	r17,r17,1
    3944:	0081850e 	bge	zero,r2,3f5c <__ssvfscanf_r+0xafc>
    3948:	00c00074 	movhi	r3,1
    394c:	18f68204 	addi	r3,r3,-9720
    3950:	01000284 	movi	r4,10
    3954:	d8c0a115 	stw	r3,644(sp)
    3958:	d9009e15 	stw	r4,632(sp)
    395c:	050000c4 	movi	r20,3
    3960:	003fcd06 	br	3898 <__alt_mem_epcs_flash_controller_0+0xff802898>
    3964:	01400284 	movi	r5,10
    3968:	d8c0a615 	stw	r3,664(sp)
    396c:	d980a915 	stw	r6,676(sp)
    3970:	d9c0aa15 	stw	r7,680(sp)
    3974:	00024440 	call	2444 <__mulsi3>
    3978:	a1400043 	ldbu	r5,1(r20)
    397c:	d9c0aa17 	ldw	r7,680(sp)
    3980:	1545883a 	add	r2,r2,r21
    3984:	113ff404 	addi	r4,r2,-48
    3988:	3829883a 	mov	r20,r7
    398c:	2d403fcc 	andi	r21,r5,255
    3990:	d8c0a617 	ldw	r3,664(sp)
    3994:	d980a917 	ldw	r6,676(sp)
    3998:	003efc06 	br	358c <__alt_mem_epcs_flash_controller_0+0xff80258c>
    399c:	98800117 	ldw	r2,4(r19)
    39a0:	d9c09d15 	stw	r7,628(sp)
    39a4:	2039883a 	mov	fp,r4
    39a8:	8c408014 	ori	r17,r17,512
    39ac:	0081710e 	bge	zero,r2,3f74 <__ssvfscanf_r+0xb14>
    39b0:	01400074 	movhi	r5,1
    39b4:	2977e004 	addi	r5,r5,-8320
    39b8:	00800404 	movi	r2,16
    39bc:	d940a115 	stw	r5,644(sp)
    39c0:	d8809e15 	stw	r2,632(sp)
    39c4:	050000c4 	movi	r20,3
    39c8:	003fb306 	br	3898 <__alt_mem_epcs_flash_controller_0+0xff802898>
    39cc:	98800117 	ldw	r2,4(r19)
    39d0:	d9c09d15 	stw	r7,628(sp)
    39d4:	2039883a 	mov	fp,r4
    39d8:	8c400054 	ori	r17,r17,1
    39dc:	0081840e 	bge	zero,r2,3ff0 <__ssvfscanf_r+0xb90>
    39e0:	01400074 	movhi	r5,1
    39e4:	2977e004 	addi	r5,r5,-8320
    39e8:	00800204 	movi	r2,8
    39ec:	d940a115 	stw	r5,644(sp)
    39f0:	d8809e15 	stw	r2,632(sp)
    39f4:	050000c4 	movi	r20,3
    39f8:	003fa706 	br	3898 <__alt_mem_epcs_flash_controller_0+0xff802898>
    39fc:	a1400043 	ldbu	r5,1(r20)
    3a00:	8c400094 	ori	r17,r17,2
    3a04:	3829883a 	mov	r20,r7
    3a08:	2d403fcc 	andi	r21,r5,255
    3a0c:	003edf06 	br	358c <__alt_mem_epcs_flash_controller_0+0xff80258c>
    3a10:	98800117 	ldw	r2,4(r19)
    3a14:	d9c09d15 	stw	r7,628(sp)
    3a18:	2039883a 	mov	fp,r4
    3a1c:	00816d0e 	bge	zero,r2,3fd4 <__ssvfscanf_r+0xb74>
    3a20:	05000104 	movi	r20,4
    3a24:	003f9c06 	br	3898 <__alt_mem_epcs_flash_controller_0+0xff802898>
    3a28:	98800117 	ldw	r2,4(r19)
    3a2c:	d9c09d15 	stw	r7,628(sp)
    3a30:	2039883a 	mov	fp,r4
    3a34:	0081800e 	bge	zero,r2,4038 <__ssvfscanf_r+0xbd8>
    3a38:	01000074 	movhi	r4,1
    3a3c:	2137e004 	addi	r4,r4,-8320
    3a40:	01400204 	movi	r5,8
    3a44:	d900a115 	stw	r4,644(sp)
    3a48:	d9409e15 	stw	r5,632(sp)
    3a4c:	050000c4 	movi	r20,3
    3a50:	003f9106 	br	3898 <__alt_mem_epcs_flash_controller_0+0xff802898>
    3a54:	d9c09d15 	stw	r7,628(sp)
    3a58:	8880040c 	andi	r2,r17,16
    3a5c:	1000a01e 	bne	r2,zero,3ce0 <__ssvfscanf_r+0x880>
    3a60:	8880010c 	andi	r2,r17,4
    3a64:	10012826 	beq	r2,zero,3f08 <__ssvfscanf_r+0xaa8>
    3a68:	d9009c17 	ldw	r4,624(sp)
    3a6c:	3829883a 	mov	r20,r7
    3a70:	20800017 	ldw	r2,0(r4)
    3a74:	21000104 	addi	r4,r4,4
    3a78:	d9009c15 	stw	r4,624(sp)
    3a7c:	1480000d 	sth	r18,0(r2)
    3a80:	003eb306 	br	3550 <__alt_mem_epcs_flash_controller_0+0xff802550>
    3a84:	a5400043 	ldbu	r21,1(r20)
    3a88:	a8c11a26 	beq	r21,r3,3ef4 <__ssvfscanf_r+0xa94>
    3a8c:	8c400054 	ori	r17,r17,1
    3a90:	3829883a 	mov	r20,r7
    3a94:	003ebd06 	br	358c <__alt_mem_epcs_flash_controller_0+0xff80258c>
    3a98:	a1400043 	ldbu	r5,1(r20)
    3a9c:	8c400114 	ori	r17,r17,4
    3aa0:	3829883a 	mov	r20,r7
    3aa4:	2d403fcc 	andi	r21,r5,255
    3aa8:	003eb806 	br	358c <__alt_mem_epcs_flash_controller_0+0xff80258c>
    3aac:	98800117 	ldw	r2,4(r19)
    3ab0:	d9c09d15 	stw	r7,628(sp)
    3ab4:	2039883a 	mov	fp,r4
    3ab8:	00bf610e 	bge	zero,r2,3840 <__alt_mem_epcs_flash_controller_0+0xff802840>
    3abc:	00800074 	movhi	r2,1
    3ac0:	10b68204 	addi	r2,r2,-9720
    3ac4:	00c00284 	movi	r3,10
    3ac8:	d880a115 	stw	r2,644(sp)
    3acc:	d8c09e15 	stw	r3,632(sp)
    3ad0:	050000c4 	movi	r20,3
    3ad4:	003f7006 	br	3898 <__alt_mem_epcs_flash_controller_0+0xff802898>
    3ad8:	98800117 	ldw	r2,4(r19)
    3adc:	d9c09d15 	stw	r7,628(sp)
    3ae0:	2039883a 	mov	fp,r4
    3ae4:	0080c60e 	bge	zero,r2,3e00 <__ssvfscanf_r+0x9a0>
    3ae8:	e000011e 	bne	fp,zero,3af0 <__ssvfscanf_r+0x690>
    3aec:	07000044 	movi	fp,1
    3af0:	8880004c 	andi	r2,r17,1
    3af4:	1000461e 	bne	r2,zero,3c10 <__ssvfscanf_r+0x7b0>
    3af8:	8c40040c 	andi	r17,r17,16
    3afc:	8800dc26 	beq	r17,zero,3e70 <__ssvfscanf_r+0xa10>
    3b00:	0021883a 	mov	r16,zero
    3b04:	00000806 	br	3b28 <__ssvfscanf_r+0x6c8>
    3b08:	1887883a 	add	r3,r3,r2
    3b0c:	980b883a 	mov	r5,r19
    3b10:	b809883a 	mov	r4,r23
    3b14:	98c00015 	stw	r3,0(r19)
    3b18:	80a1883a 	add	r16,r16,r2
    3b1c:	e0b9c83a 	sub	fp,fp,r2
    3b20:	000e63c0 	call	e63c <__ssrefill_r>
    3b24:	1000cc1e 	bne	r2,zero,3e58 <__ssvfscanf_r+0x9f8>
    3b28:	98800117 	ldw	r2,4(r19)
    3b2c:	98c00017 	ldw	r3,0(r19)
    3b30:	173ff516 	blt	r2,fp,3b08 <__alt_mem_epcs_flash_controller_0+0xff802b08>
    3b34:	1705c83a 	sub	r2,r2,fp
    3b38:	1f15883a 	add	r10,r3,fp
    3b3c:	8721883a 	add	r16,r16,fp
    3b40:	98800115 	stw	r2,4(r19)
    3b44:	9a800015 	stw	r10,0(r19)
    3b48:	dd009d17 	ldw	r20,628(sp)
    3b4c:	9425883a 	add	r18,r18,r16
    3b50:	a00d883a 	mov	r6,r20
    3b54:	003e7f06 	br	3554 <__alt_mem_epcs_flash_controller_0+0xff802554>
    3b58:	2039883a 	mov	fp,r4
    3b5c:	380b883a 	mov	r5,r7
    3b60:	d9005884 	addi	r4,sp,354
    3b64:	d9c09d15 	stw	r7,628(sp)
    3b68:	000c0300 	call	c030 <__sccl>
    3b6c:	1029883a 	mov	r20,r2
    3b70:	98800117 	ldw	r2,4(r19)
    3b74:	0081120e 	bge	zero,r2,3fc0 <__ssvfscanf_r+0xb60>
    3b78:	99000017 	ldw	r4,0(r19)
    3b7c:	20800003 	ldbu	r2,0(r4)
    3b80:	e0005a26 	beq	fp,zero,3cec <__ssvfscanf_r+0x88c>
    3b84:	8c40040c 	andi	r17,r17,16
    3b88:	88005b26 	beq	r17,zero,3cf8 <__ssvfscanf_r+0x898>
    3b8c:	e023883a 	mov	r17,fp
    3b90:	0021883a 	mov	r16,zero
    3b94:	00000106 	br	3b9c <__ssvfscanf_r+0x73c>
    3b98:	20800003 	ldbu	r2,0(r4)
    3b9c:	10803fcc 	andi	r2,r2,255
    3ba0:	d8c05884 	addi	r3,sp,354
    3ba4:	1885883a 	add	r2,r3,r2
    3ba8:	10800007 	ldb	r2,0(r2)
    3bac:	1000ae26 	beq	r2,zero,3e68 <__ssvfscanf_r+0xa08>
    3bb0:	98800117 	ldw	r2,4(r19)
    3bb4:	21000044 	addi	r4,r4,1
    3bb8:	84000044 	addi	r16,r16,1
    3bbc:	10bfffc4 	addi	r2,r2,-1
    3bc0:	98800115 	stw	r2,4(r19)
    3bc4:	99000015 	stw	r4,0(r19)
    3bc8:	8700a126 	beq	r16,fp,3e50 <__ssvfscanf_r+0x9f0>
    3bcc:	00bff216 	blt	zero,r2,3b98 <__alt_mem_epcs_flash_controller_0+0xff802b98>
    3bd0:	980b883a 	mov	r5,r19
    3bd4:	b809883a 	mov	r4,r23
    3bd8:	000e63c0 	call	e63c <__ssrefill_r>
    3bdc:	10009b1e 	bne	r2,zero,3e4c <__ssvfscanf_r+0x9ec>
    3be0:	99000017 	ldw	r4,0(r19)
    3be4:	003fec06 	br	3b98 <__alt_mem_epcs_flash_controller_0+0xff802b98>
    3be8:	98800117 	ldw	r2,4(r19)
    3bec:	d9c09d15 	stw	r7,628(sp)
    3bf0:	2039883a 	mov	fp,r4
    3bf4:	00811c0e 	bge	zero,r2,4068 <__ssvfscanf_r+0xc08>
    3bf8:	01400074 	movhi	r5,1
    3bfc:	29768204 	addi	r5,r5,-9720
    3c00:	d940a115 	stw	r5,644(sp)
    3c04:	d8009e15 	stw	zero,632(sp)
    3c08:	050000c4 	movi	r20,3
    3c0c:	003f2206 	br	3898 <__alt_mem_epcs_flash_controller_0+0xff802898>
    3c10:	dd409904 	addi	r21,sp,612
    3c14:	8c40040c 	andi	r17,r17,16
    3c18:	01800204 	movi	r6,8
    3c1c:	000b883a 	mov	r5,zero
    3c20:	a809883a 	mov	r4,r21
    3c24:	dc409f15 	stw	r17,636(sp)
    3c28:	000a4c00 	call	a4c0 <memset>
    3c2c:	dc409f17 	ldw	r17,636(sp)
    3c30:	88006e26 	beq	r17,zero,3dec <__ssvfscanf_r+0x98c>
    3c34:	0029883a 	mov	r20,zero
    3c38:	0023883a 	mov	r17,zero
    3c3c:	0009dec0 	call	9dec <__locale_mb_cur_max>
    3c40:	14406126 	beq	r2,r17,3dc8 <__ssvfscanf_r+0x968>
    3c44:	98800017 	ldw	r2,0(r19)
    3c48:	98c00117 	ldw	r3,4(r19)
    3c4c:	d9000104 	addi	r4,sp,4
    3c50:	12000003 	ldbu	r8,0(r2)
    3c54:	18ffffc4 	addi	r3,r3,-1
    3c58:	10800044 	addi	r2,r2,1
    3c5c:	98c00115 	stw	r3,4(r19)
    3c60:	98800015 	stw	r2,0(r19)
    3c64:	8c000044 	addi	r16,r17,1
    3c68:	dd400015 	stw	r21,0(sp)
    3c6c:	2463883a 	add	r17,r4,r17
    3c70:	200d883a 	mov	r6,r4
    3c74:	a00b883a 	mov	r5,r20
    3c78:	800f883a 	mov	r7,r16
    3c7c:	b809883a 	mov	r4,r23
    3c80:	8a000005 	stb	r8,0(r17)
    3c84:	000a05c0 	call	a05c <_mbrtowc_r>
    3c88:	017fffc4 	movi	r5,-1
    3c8c:	11404e26 	beq	r2,r5,3dc8 <__ssvfscanf_r+0x968>
    3c90:	1000601e 	bne	r2,zero,3e14 <__ssvfscanf_r+0x9b4>
    3c94:	d8c09f17 	ldw	r3,636(sp)
    3c98:	1800641e 	bne	r3,zero,3e2c <__ssvfscanf_r+0x9cc>
    3c9c:	a0000015 	stw	zero,0(r20)
    3ca0:	9425883a 	add	r18,r18,r16
    3ca4:	e179883a 	add	fp,fp,r5
    3ca8:	a5000104 	addi	r20,r20,4
    3cac:	98800117 	ldw	r2,4(r19)
    3cb0:	0023883a 	mov	r17,zero
    3cb4:	00804b16 	blt	zero,r2,3de4 <__ssvfscanf_r+0x984>
    3cb8:	980b883a 	mov	r5,r19
    3cbc:	b809883a 	mov	r4,r23
    3cc0:	000e63c0 	call	e63c <__ssrefill_r>
    3cc4:	10004726 	beq	r2,zero,3de4 <__ssvfscanf_r+0x984>
    3cc8:	88003f1e 	bne	r17,zero,3dc8 <__ssvfscanf_r+0x968>
    3ccc:	d8c09f17 	ldw	r3,636(sp)
    3cd0:	1800031e 	bne	r3,zero,3ce0 <__ssvfscanf_r+0x880>
    3cd4:	d900a017 	ldw	r4,640(sp)
    3cd8:	21000044 	addi	r4,r4,1
    3cdc:	d900a015 	stw	r4,640(sp)
    3ce0:	dd009d17 	ldw	r20,628(sp)
    3ce4:	a00d883a 	mov	r6,r20
    3ce8:	003e1a06 	br	3554 <__alt_mem_epcs_flash_controller_0+0xff802554>
    3cec:	8c40040c 	andi	r17,r17,16
    3cf0:	073fffc4 	movi	fp,-1
    3cf4:	883fa51e 	bne	r17,zero,3b8c <__alt_mem_epcs_flash_controller_0+0xff802b8c>
    3cf8:	d9409c17 	ldw	r5,624(sp)
    3cfc:	e2bfffc4 	addi	r10,fp,-1
    3d00:	2c000017 	ldw	r16,0(r5)
    3d04:	2c400104 	addi	r17,r5,4
    3d08:	8007883a 	mov	r3,r16
    3d0c:	82ab883a 	add	r21,r16,r10
    3d10:	00000306 	br	3d20 <__ssvfscanf_r+0x8c0>
    3d14:	99000017 	ldw	r4,0(r19)
    3d18:	e007883a 	mov	r3,fp
    3d1c:	20800003 	ldbu	r2,0(r4)
    3d20:	10803fcc 	andi	r2,r2,255
    3d24:	d9405884 	addi	r5,sp,354
    3d28:	2885883a 	add	r2,r5,r2
    3d2c:	10800007 	ldb	r2,0(r2)
    3d30:	10004b26 	beq	r2,zero,3e60 <__ssvfscanf_r+0xa00>
    3d34:	98800117 	ldw	r2,4(r19)
    3d38:	21400044 	addi	r5,r4,1
    3d3c:	99400015 	stw	r5,0(r19)
    3d40:	10bfffc4 	addi	r2,r2,-1
    3d44:	98800115 	stw	r2,4(r19)
    3d48:	20800003 	ldbu	r2,0(r4)
    3d4c:	1f000044 	addi	fp,r3,1
    3d50:	18800005 	stb	r2,0(r3)
    3d54:	1d400726 	beq	r3,r21,3d74 <__ssvfscanf_r+0x914>
    3d58:	98800117 	ldw	r2,4(r19)
    3d5c:	00bfed16 	blt	zero,r2,3d14 <__alt_mem_epcs_flash_controller_0+0xff802d14>
    3d60:	980b883a 	mov	r5,r19
    3d64:	b809883a 	mov	r4,r23
    3d68:	000e63c0 	call	e63c <__ssrefill_r>
    3d6c:	103fe926 	beq	r2,zero,3d14 <__alt_mem_epcs_flash_controller_0+0xff802d14>
    3d70:	87001526 	beq	r16,fp,3dc8 <__ssvfscanf_r+0x968>
    3d74:	e421c83a 	sub	r16,fp,r16
    3d78:	803dfa26 	beq	r16,zero,3564 <__alt_mem_epcs_flash_controller_0+0xff802564>
    3d7c:	d880a017 	ldw	r2,640(sp)
    3d80:	e0000005 	stb	zero,0(fp)
    3d84:	dc409c15 	stw	r17,624(sp)
    3d88:	10800044 	addi	r2,r2,1
    3d8c:	d880a015 	stw	r2,640(sp)
    3d90:	9425883a 	add	r18,r18,r16
    3d94:	a00d883a 	mov	r6,r20
    3d98:	003dee06 	br	3554 <__alt_mem_epcs_flash_controller_0+0xff802554>
    3d9c:	013fff84 	movi	r4,-2
    3da0:	1103ed1e 	bne	r2,r4,4d58 <__ssvfscanf_r+0x18f8>
    3da4:	8821883a 	mov	r16,r17
    3da8:	98800117 	ldw	r2,4(r19)
    3dac:	00834116 	blt	zero,r2,4ab4 <__ssvfscanf_r+0x1654>
    3db0:	980b883a 	mov	r5,r19
    3db4:	b809883a 	mov	r4,r23
    3db8:	000e63c0 	call	e63c <__ssrefill_r>
    3dbc:	10033d26 	beq	r2,zero,4ab4 <__ssvfscanf_r+0x1654>
    3dc0:	dc409f17 	ldw	r17,636(sp)
    3dc4:	80034426 	beq	r16,zero,4ad8 <__ssvfscanf_r+0x1678>
    3dc8:	d900a017 	ldw	r4,640(sp)
    3dcc:	203e8026 	beq	r4,zero,37d0 <__alt_mem_epcs_flash_controller_0+0xff8027d0>
    3dd0:	9880030b 	ldhu	r2,12(r19)
    3dd4:	1080100c 	andi	r2,r2,64
    3dd8:	103e7d1e 	bne	r2,zero,37d0 <__alt_mem_epcs_flash_controller_0+0xff8027d0>
    3ddc:	2005883a 	mov	r2,r4
    3de0:	003e7c06 	br	37d4 <__alt_mem_epcs_flash_controller_0+0xff8027d4>
    3de4:	e03f951e 	bne	fp,zero,3c3c <__alt_mem_epcs_flash_controller_0+0xff802c3c>
    3de8:	003fb806 	br	3ccc <__alt_mem_epcs_flash_controller_0+0xff802ccc>
    3dec:	d8809c17 	ldw	r2,624(sp)
    3df0:	15000017 	ldw	r20,0(r2)
    3df4:	10800104 	addi	r2,r2,4
    3df8:	d8809c15 	stw	r2,624(sp)
    3dfc:	003f8e06 	br	3c38 <__alt_mem_epcs_flash_controller_0+0xff802c38>
    3e00:	980b883a 	mov	r5,r19
    3e04:	b809883a 	mov	r4,r23
    3e08:	000e63c0 	call	e63c <__ssrefill_r>
    3e0c:	103f3626 	beq	r2,zero,3ae8 <__alt_mem_epcs_flash_controller_0+0xff802ae8>
    3e10:	003fed06 	br	3dc8 <__alt_mem_epcs_flash_controller_0+0xff802dc8>
    3e14:	013fff84 	movi	r4,-2
    3e18:	1100071e 	bne	r2,r4,3e38 <__ssvfscanf_r+0x9d8>
    3e1c:	98800117 	ldw	r2,4(r19)
    3e20:	8023883a 	mov	r17,r16
    3e24:	00bf8516 	blt	zero,r2,3c3c <__alt_mem_epcs_flash_controller_0+0xff802c3c>
    3e28:	003fa306 	br	3cb8 <__alt_mem_epcs_flash_controller_0+0xff802cb8>
    3e2c:	9425883a 	add	r18,r18,r16
    3e30:	e73fffc4 	addi	fp,fp,-1
    3e34:	003f9d06 	br	3cac <__alt_mem_epcs_flash_controller_0+0xff802cac>
    3e38:	d8c09f17 	ldw	r3,636(sp)
    3e3c:	9425883a 	add	r18,r18,r16
    3e40:	e73fffc4 	addi	fp,fp,-1
    3e44:	183f9826 	beq	r3,zero,3ca8 <__alt_mem_epcs_flash_controller_0+0xff802ca8>
    3e48:	003f9806 	br	3cac <__alt_mem_epcs_flash_controller_0+0xff802cac>
    3e4c:	8023883a 	mov	r17,r16
    3e50:	8821883a 	mov	r16,r17
    3e54:	003fce06 	br	3d90 <__alt_mem_epcs_flash_controller_0+0xff802d90>
    3e58:	803f3b1e 	bne	r16,zero,3b48 <__alt_mem_epcs_flash_controller_0+0xff802b48>
    3e5c:	003fda06 	br	3dc8 <__alt_mem_epcs_flash_controller_0+0xff802dc8>
    3e60:	1839883a 	mov	fp,r3
    3e64:	003fc306 	br	3d74 <__alt_mem_epcs_flash_controller_0+0xff802d74>
    3e68:	803fc91e 	bne	r16,zero,3d90 <__alt_mem_epcs_flash_controller_0+0xff802d90>
    3e6c:	003dbd06 	br	3564 <__alt_mem_epcs_flash_controller_0+0xff802564>
    3e70:	d8809c17 	ldw	r2,624(sp)
    3e74:	dcc00015 	stw	r19,0(sp)
    3e78:	b809883a 	mov	r4,r23
    3e7c:	11400017 	ldw	r5,0(r2)
    3e80:	e00f883a 	mov	r7,fp
    3e84:	01800044 	movi	r6,1
    3e88:	000e6ac0 	call	e6ac <_sfread_r>
    3e8c:	d9009c17 	ldw	r4,624(sp)
    3e90:	20c00104 	addi	r3,r4,4
    3e94:	103fcc26 	beq	r2,zero,3dc8 <__alt_mem_epcs_flash_controller_0+0xff802dc8>
    3e98:	d940a017 	ldw	r5,640(sp)
    3e9c:	dd009d17 	ldw	r20,628(sp)
    3ea0:	90a5883a 	add	r18,r18,r2
    3ea4:	29400044 	addi	r5,r5,1
    3ea8:	d940a015 	stw	r5,640(sp)
    3eac:	d8c09c15 	stw	r3,624(sp)
    3eb0:	a00d883a 	mov	r6,r20
    3eb4:	003da706 	br	3554 <__alt_mem_epcs_flash_controller_0+0xff802554>
    3eb8:	980b883a 	mov	r5,r19
    3ebc:	b809883a 	mov	r4,r23
    3ec0:	000e63c0 	call	e63c <__ssrefill_r>
    3ec4:	103e3626 	beq	r2,zero,37a0 <__alt_mem_epcs_flash_controller_0+0xff8027a0>
    3ec8:	003fbf06 	br	3dc8 <__alt_mem_epcs_flash_controller_0+0xff802dc8>
    3ecc:	98800117 	ldw	r2,4(r19)
    3ed0:	88e2b03a 	or	r17,r17,r3
    3ed4:	0080210e 	bge	zero,r2,3f5c <__ssvfscanf_r+0xafc>
    3ed8:	01400074 	movhi	r5,1
    3edc:	29768204 	addi	r5,r5,-9720
    3ee0:	00800284 	movi	r2,10
    3ee4:	d940a115 	stw	r5,644(sp)
    3ee8:	d8809e15 	stw	r2,632(sp)
    3eec:	050000c4 	movi	r20,3
    3ef0:	003e6906 	br	3898 <__alt_mem_epcs_flash_controller_0+0xff802898>
    3ef4:	a1400083 	ldbu	r5,2(r20)
    3ef8:	8c400094 	ori	r17,r17,2
    3efc:	a5000084 	addi	r20,r20,2
    3f00:	2d403fcc 	andi	r21,r5,255
    3f04:	003da106 	br	358c <__alt_mem_epcs_flash_controller_0+0xff80258c>
    3f08:	8880004c 	andi	r2,r17,1
    3f0c:	10000c1e 	bne	r2,zero,3f40 <__ssvfscanf_r+0xae0>
    3f10:	8c40008c 	andi	r17,r17,2
    3f14:	88000a26 	beq	r17,zero,3f40 <__ssvfscanf_r+0xae0>
    3f18:	d8c09c17 	ldw	r3,624(sp)
    3f1c:	d9009c17 	ldw	r4,624(sp)
    3f20:	dd009d17 	ldw	r20,628(sp)
    3f24:	18800017 	ldw	r2,0(r3)
    3f28:	9007d7fa 	srai	r3,r18,31
    3f2c:	21000104 	addi	r4,r4,4
    3f30:	14800015 	stw	r18,0(r2)
    3f34:	10c00115 	stw	r3,4(r2)
    3f38:	d9009c15 	stw	r4,624(sp)
    3f3c:	003d8406 	br	3550 <__alt_mem_epcs_flash_controller_0+0xff802550>
    3f40:	d9409c17 	ldw	r5,624(sp)
    3f44:	dd009d17 	ldw	r20,628(sp)
    3f48:	28800017 	ldw	r2,0(r5)
    3f4c:	29400104 	addi	r5,r5,4
    3f50:	d9409c15 	stw	r5,624(sp)
    3f54:	14800015 	stw	r18,0(r2)
    3f58:	003d7d06 	br	3550 <__alt_mem_epcs_flash_controller_0+0xff802550>
    3f5c:	980b883a 	mov	r5,r19
    3f60:	b809883a 	mov	r4,r23
    3f64:	000e63c0 	call	e63c <__ssrefill_r>
    3f68:	103f971e 	bne	r2,zero,3dc8 <__alt_mem_epcs_flash_controller_0+0xff802dc8>
    3f6c:	b4000017 	ldw	r16,0(r22)
    3f70:	003ed206 	br	3abc <__alt_mem_epcs_flash_controller_0+0xff802abc>
    3f74:	980b883a 	mov	r5,r19
    3f78:	b809883a 	mov	r4,r23
    3f7c:	000e63c0 	call	e63c <__ssrefill_r>
    3f80:	103f911e 	bne	r2,zero,3dc8 <__alt_mem_epcs_flash_controller_0+0xff802dc8>
    3f84:	01000074 	movhi	r4,1
    3f88:	2137e004 	addi	r4,r4,-8320
    3f8c:	01400404 	movi	r5,16
    3f90:	b4000017 	ldw	r16,0(r22)
    3f94:	d900a115 	stw	r4,644(sp)
    3f98:	d9409e15 	stw	r5,632(sp)
    3f9c:	050000c4 	movi	r20,3
    3fa0:	003e3d06 	br	3898 <__alt_mem_epcs_flash_controller_0+0xff802898>
    3fa4:	980b883a 	mov	r5,r19
    3fa8:	b809883a 	mov	r4,r23
    3fac:	000e63c0 	call	e63c <__ssrefill_r>
    3fb0:	103f851e 	bne	r2,zero,3dc8 <__alt_mem_epcs_flash_controller_0+0xff802dc8>
    3fb4:	b4000017 	ldw	r16,0(r22)
    3fb8:	05000084 	movi	r20,2
    3fbc:	003e3606 	br	3898 <__alt_mem_epcs_flash_controller_0+0xff802898>
    3fc0:	980b883a 	mov	r5,r19
    3fc4:	b809883a 	mov	r4,r23
    3fc8:	000e63c0 	call	e63c <__ssrefill_r>
    3fcc:	103eea26 	beq	r2,zero,3b78 <__alt_mem_epcs_flash_controller_0+0xff802b78>
    3fd0:	003f7d06 	br	3dc8 <__alt_mem_epcs_flash_controller_0+0xff802dc8>
    3fd4:	980b883a 	mov	r5,r19
    3fd8:	b809883a 	mov	r4,r23
    3fdc:	000e63c0 	call	e63c <__ssrefill_r>
    3fe0:	103f791e 	bne	r2,zero,3dc8 <__alt_mem_epcs_flash_controller_0+0xff802dc8>
    3fe4:	b4000017 	ldw	r16,0(r22)
    3fe8:	05000104 	movi	r20,4
    3fec:	003e2a06 	br	3898 <__alt_mem_epcs_flash_controller_0+0xff802898>
    3ff0:	980b883a 	mov	r5,r19
    3ff4:	b809883a 	mov	r4,r23
    3ff8:	000e63c0 	call	e63c <__ssrefill_r>
    3ffc:	103f721e 	bne	r2,zero,3dc8 <__alt_mem_epcs_flash_controller_0+0xff802dc8>
    4000:	b4000017 	ldw	r16,0(r22)
    4004:	003e8c06 	br	3a38 <__alt_mem_epcs_flash_controller_0+0xff802a38>
    4008:	980b883a 	mov	r5,r19
    400c:	b809883a 	mov	r4,r23
    4010:	000e63c0 	call	e63c <__ssrefill_r>
    4014:	103f6c1e 	bne	r2,zero,3dc8 <__alt_mem_epcs_flash_controller_0+0xff802dc8>
    4018:	00800074 	movhi	r2,1
    401c:	10b7e004 	addi	r2,r2,-8320
    4020:	00c00284 	movi	r3,10
    4024:	b4000017 	ldw	r16,0(r22)
    4028:	d880a115 	stw	r2,644(sp)
    402c:	d8c09e15 	stw	r3,632(sp)
    4030:	050000c4 	movi	r20,3
    4034:	003e1806 	br	3898 <__alt_mem_epcs_flash_controller_0+0xff802898>
    4038:	980b883a 	mov	r5,r19
    403c:	b809883a 	mov	r4,r23
    4040:	000e63c0 	call	e63c <__ssrefill_r>
    4044:	103f601e 	bne	r2,zero,3dc8 <__alt_mem_epcs_flash_controller_0+0xff802dc8>
    4048:	00800074 	movhi	r2,1
    404c:	10b7e004 	addi	r2,r2,-8320
    4050:	00c00204 	movi	r3,8
    4054:	b4000017 	ldw	r16,0(r22)
    4058:	d880a115 	stw	r2,644(sp)
    405c:	d8c09e15 	stw	r3,632(sp)
    4060:	050000c4 	movi	r20,3
    4064:	003e0c06 	br	3898 <__alt_mem_epcs_flash_controller_0+0xff802898>
    4068:	980b883a 	mov	r5,r19
    406c:	b809883a 	mov	r4,r23
    4070:	000e63c0 	call	e63c <__ssrefill_r>
    4074:	103f541e 	bne	r2,zero,3dc8 <__alt_mem_epcs_flash_controller_0+0xff802dc8>
    4078:	00800074 	movhi	r2,1
    407c:	10b68204 	addi	r2,r2,-9720
    4080:	b4000017 	ldw	r16,0(r22)
    4084:	d880a115 	stw	r2,644(sp)
    4088:	d8009e15 	stw	zero,632(sp)
    408c:	050000c4 	movi	r20,3
    4090:	003e0106 	br	3898 <__alt_mem_epcs_flash_controller_0+0xff802898>
    4094:	980b883a 	mov	r5,r19
    4098:	b809883a 	mov	r4,r23
    409c:	000e63c0 	call	e63c <__ssrefill_r>
    40a0:	103f491e 	bne	r2,zero,3dc8 <__alt_mem_epcs_flash_controller_0+0xff802dc8>
    40a4:	00800074 	movhi	r2,1
    40a8:	10b7e004 	addi	r2,r2,-8320
    40ac:	00c00404 	movi	r3,16
    40b0:	b4000017 	ldw	r16,0(r22)
    40b4:	d880a115 	stw	r2,644(sp)
    40b8:	d8c09e15 	stw	r3,632(sp)
    40bc:	050000c4 	movi	r20,3
    40c0:	003df506 	br	3898 <__alt_mem_epcs_flash_controller_0+0xff802898>
    40c4:	014000c4 	movi	r5,3
    40c8:	a1416726 	beq	r20,r5,4668 <__ssvfscanf_r+0x1208>
    40cc:	01000104 	movi	r4,4
    40d0:	a101491e 	bne	r20,r4,45f8 <__ssvfscanf_r+0x1198>
    40d4:	b809883a 	mov	r4,r23
    40d8:	0009e100 	call	9e10 <_localeconv_r>
    40dc:	10800017 	ldw	r2,0(r2)
    40e0:	e0ffffc4 	addi	r3,fp,-1
    40e4:	d880a315 	stw	r2,652(sp)
    40e8:	00805704 	movi	r2,348
    40ec:	10c21e2e 	bgeu	r2,r3,4968 <__ssvfscanf_r+0x1508>
    40f0:	e73fa8c4 	addi	fp,fp,-349
    40f4:	df00a215 	stw	fp,648(sp)
    40f8:	07005744 	movi	fp,349
    40fc:	8d01e014 	ori	r20,r17,1920
    4100:	0023883a 	mov	r17,zero
    4104:	dc000104 	addi	r16,sp,4
    4108:	002b883a 	mov	r21,zero
    410c:	8805883a 	mov	r2,r17
    4110:	0007883a 	mov	r3,zero
    4114:	8023883a 	mov	r17,r16
    4118:	b80d883a 	mov	r6,r23
    411c:	e021883a 	mov	r16,fp
    4120:	a82f883a 	mov	r23,r21
    4124:	d800a515 	stw	zero,660(sp)
    4128:	d800a415 	stw	zero,656(sp)
    412c:	d8009f15 	stw	zero,636(sp)
    4130:	01c01384 	movi	r7,78
    4134:	182b883a 	mov	r21,r3
    4138:	1039883a 	mov	fp,r2
    413c:	99000017 	ldw	r4,0(r19)
    4140:	21400003 	ldbu	r5,0(r4)
    4144:	28bff544 	addi	r2,r5,-43
    4148:	10803fcc 	andi	r2,r2,255
    414c:	38810e36 	bltu	r7,r2,4588 <__ssvfscanf_r+0x1128>
    4150:	100490ba 	slli	r2,r2,2
    4154:	00c00034 	movhi	r3,0
    4158:	18d05a04 	addi	r3,r3,16744
    415c:	10c5883a 	add	r2,r2,r3
    4160:	10800017 	ldw	r2,0(r2)
    4164:	1000683a 	jmp	r2
    4168:	0000445c 	xori	zero,zero,273
    416c:	00004588 	cmpgei	zero,zero,278
    4170:	0000445c 	xori	zero,zero,273
    4174:	00004588 	cmpgei	zero,zero,278
    4178:	00004588 	cmpgei	zero,zero,278
    417c:	00004430 	cmpltui	zero,zero,272
    4180:	000042a4 	muli	zero,zero,266
    4184:	000042a4 	muli	zero,zero,266
    4188:	000042a4 	muli	zero,zero,266
    418c:	000042a4 	muli	zero,zero,266
    4190:	000042a4 	muli	zero,zero,266
    4194:	000042a4 	muli	zero,zero,266
    4198:	000042a4 	muli	zero,zero,266
    419c:	000042a4 	muli	zero,zero,266
    41a0:	000042a4 	muli	zero,zero,266
    41a4:	00004588 	cmpgei	zero,zero,278
    41a8:	00004588 	cmpgei	zero,zero,278
    41ac:	00004588 	cmpgei	zero,zero,278
    41b0:	00004588 	cmpgei	zero,zero,278
    41b4:	00004588 	cmpgei	zero,zero,278
    41b8:	00004588 	cmpgei	zero,zero,278
    41bc:	00004588 	cmpgei	zero,zero,278
    41c0:	00004578 	rdprs	zero,zero,277
    41c4:	00004588 	cmpgei	zero,zero,278
    41c8:	00004588 	cmpgei	zero,zero,278
    41cc:	00004588 	cmpgei	zero,zero,278
    41d0:	00004534 	movhi	zero,276
    41d4:	00004518 	cmpnei	zero,zero,276
    41d8:	00004588 	cmpgei	zero,zero,278
    41dc:	00004588 	cmpgei	zero,zero,278
    41e0:	000044e0 	cmpeqi	zero,zero,275
    41e4:	00004588 	cmpgei	zero,zero,278
    41e8:	00004588 	cmpgei	zero,zero,278
    41ec:	00004588 	cmpgei	zero,zero,278
    41f0:	00004588 	cmpgei	zero,zero,278
    41f4:	000044a8 	cmpgeui	zero,zero,274
    41f8:	00004588 	cmpgei	zero,zero,278
    41fc:	00004588 	cmpgei	zero,zero,278
    4200:	00004588 	cmpgei	zero,zero,278
    4204:	00004588 	cmpgei	zero,zero,278
    4208:	00004588 	cmpgei	zero,zero,278
    420c:	0000448c 	andi	zero,zero,274
    4210:	00004588 	cmpgei	zero,zero,278
    4214:	00004588 	cmpgei	zero,zero,278
    4218:	00004588 	cmpgei	zero,zero,278
    421c:	00004588 	cmpgei	zero,zero,278
    4220:	00004470 	cmpltui	zero,zero,273
    4224:	00004588 	cmpgei	zero,zero,278
    4228:	00004588 	cmpgei	zero,zero,278
    422c:	00004588 	cmpgei	zero,zero,278
    4230:	00004588 	cmpgei	zero,zero,278
    4234:	00004588 	cmpgei	zero,zero,278
    4238:	00004588 	cmpgei	zero,zero,278
    423c:	00004588 	cmpgei	zero,zero,278
    4240:	00004578 	rdprs	zero,zero,277
    4244:	00004588 	cmpgei	zero,zero,278
    4248:	00004588 	cmpgei	zero,zero,278
    424c:	00004588 	cmpgei	zero,zero,278
    4250:	00004534 	movhi	zero,276
    4254:	00004518 	cmpnei	zero,zero,276
    4258:	00004588 	cmpgei	zero,zero,278
    425c:	00004588 	cmpgei	zero,zero,278
    4260:	000044e0 	cmpeqi	zero,zero,275
    4264:	00004588 	cmpgei	zero,zero,278
    4268:	00004588 	cmpgei	zero,zero,278
    426c:	00004588 	cmpgei	zero,zero,278
    4270:	00004588 	cmpgei	zero,zero,278
    4274:	000044a8 	cmpgeui	zero,zero,274
    4278:	00004588 	cmpgei	zero,zero,278
    427c:	00004588 	cmpgei	zero,zero,278
    4280:	00004588 	cmpgei	zero,zero,278
    4284:	00004588 	cmpgei	zero,zero,278
    4288:	00004588 	cmpgei	zero,zero,278
    428c:	0000448c 	andi	zero,zero,274
    4290:	00004588 	cmpgei	zero,zero,278
    4294:	00004588 	cmpgei	zero,zero,278
    4298:	00004588 	cmpgei	zero,zero,278
    429c:	00004588 	cmpgei	zero,zero,278
    42a0:	00004470 	cmpltui	zero,zero,273
    42a4:	a8803fcc 	andi	r2,r21,255
    42a8:	1080201c 	xori	r2,r2,128
    42ac:	10bfe004 	addi	r2,r2,-128
    42b0:	b885883a 	add	r2,r23,r2
    42b4:	10000d1e 	bne	r2,zero,42ec <__ssvfscanf_r+0xe8c>
    42b8:	00bf9fc4 	movi	r2,-385
    42bc:	a0a8703a 	and	r20,r20,r2
    42c0:	89400005 	stb	r5,0(r17)
    42c4:	8c400044 	addi	r17,r17,1
    42c8:	98800117 	ldw	r2,4(r19)
    42cc:	843fffc4 	addi	r16,r16,-1
    42d0:	94800044 	addi	r18,r18,1
    42d4:	10bfffc4 	addi	r2,r2,-1
    42d8:	98800115 	stw	r2,4(r19)
    42dc:	0080b40e 	bge	zero,r2,45b0 <__ssvfscanf_r+0x1150>
    42e0:	21000044 	addi	r4,r4,1
    42e4:	99000015 	stw	r4,0(r19)
    42e8:	803f941e 	bne	r16,zero,413c <__alt_mem_epcs_flash_controller_0+0xff80313c>
    42ec:	8821883a 	mov	r16,r17
    42f0:	a807883a 	mov	r3,r21
    42f4:	e023883a 	mov	r17,fp
    42f8:	b82b883a 	mov	r21,r23
    42fc:	302f883a 	mov	r23,r6
    4300:	e001961e 	bne	fp,zero,495c <__ssvfscanf_r+0x14fc>
    4304:	ab3fffc4 	addi	r12,r21,-1
    4308:	00800044 	movi	r2,1
    430c:	1302a22e 	bgeu	r2,r12,4d98 <__ssvfscanf_r+0x1938>
    4310:	18803fcc 	andi	r2,r3,255
    4314:	1080201c 	xori	r2,r2,128
    4318:	10bfe004 	addi	r2,r2,-128
    431c:	113fffc4 	addi	r4,r2,-1
    4320:	01400184 	movi	r5,6
    4324:	29001136 	bltu	r5,r4,436c <__ssvfscanf_r+0xf0c>
    4328:	01000084 	movi	r4,2
    432c:	2082770e 	bge	r4,r2,4d0c <__ssvfscanf_r+0x18ac>
    4330:	054000c4 	movi	r21,3
    4334:	1839883a 	mov	fp,r3
    4338:	15400c26 	beq	r2,r21,436c <__ssvfscanf_r+0xf0c>
    433c:	9425c83a 	sub	r18,r18,r16
    4340:	843fffc4 	addi	r16,r16,-1
    4344:	81400007 	ldb	r5,0(r16)
    4348:	980d883a 	mov	r6,r19
    434c:	b809883a 	mov	r4,r23
    4350:	000e5340 	call	e534 <_sungetc_r>
    4354:	e0bfffc4 	addi	r2,fp,-1
    4358:	10c03fcc 	andi	r3,r2,255
    435c:	8493883a 	add	r9,r16,r18
    4360:	1039883a 	mov	fp,r2
    4364:	a8fff636 	bltu	r21,r3,4340 <__alt_mem_epcs_flash_controller_0+0xff803340>
    4368:	4825883a 	mov	r18,r9
    436c:	a080400c 	andi	r2,r20,256
    4370:	10001426 	beq	r2,zero,43c4 <__ssvfscanf_r+0xf64>
    4374:	a081000c 	andi	r2,r20,1024
    4378:	10027b1e 	bne	r2,zero,4d68 <__ssvfscanf_r+0x1908>
    437c:	817fffc7 	ldb	r5,-1(r16)
    4380:	00801944 	movi	r2,101
    4384:	873fffc4 	addi	fp,r16,-1
    4388:	957fffc4 	addi	r21,r18,-1
    438c:	28800826 	beq	r5,r2,43b0 <__ssvfscanf_r+0xf50>
    4390:	00801144 	movi	r2,69
    4394:	28800626 	beq	r5,r2,43b0 <__ssvfscanf_r+0xf50>
    4398:	980d883a 	mov	r6,r19
    439c:	b809883a 	mov	r4,r23
    43a0:	000e5340 	call	e534 <_sungetc_r>
    43a4:	817fff87 	ldb	r5,-2(r16)
    43a8:	873fff84 	addi	fp,r16,-2
    43ac:	957fff84 	addi	r21,r18,-2
    43b0:	980d883a 	mov	r6,r19
    43b4:	b809883a 	mov	r4,r23
    43b8:	000e5340 	call	e534 <_sungetc_r>
    43bc:	a825883a 	mov	r18,r21
    43c0:	e021883a 	mov	r16,fp
    43c4:	a080040c 	andi	r2,r20,16
    43c8:	103e451e 	bne	r2,zero,3ce0 <__alt_mem_epcs_flash_controller_0+0xff802ce0>
    43cc:	80000005 	stb	zero,0(r16)
    43d0:	a081800c 	andi	r2,r20,1536
    43d4:	01010004 	movi	r4,1024
    43d8:	1101ea26 	beq	r2,r4,4b84 <__ssvfscanf_r+0x1724>
    43dc:	d8c0a417 	ldw	r3,656(sp)
    43e0:	1801f41e 	bne	r3,zero,4bb4 <__ssvfscanf_r+0x1754>
    43e4:	000d883a 	mov	r6,zero
    43e8:	d9400104 	addi	r5,sp,4
    43ec:	b809883a 	mov	r4,r23
    43f0:	000c30c0 	call	c30c <_strtod_r>
    43f4:	1021883a 	mov	r16,r2
    43f8:	a080004c 	andi	r2,r20,1
    43fc:	1001b926 	beq	r2,zero,4ae4 <__ssvfscanf_r+0x1684>
    4400:	d9009c17 	ldw	r4,624(sp)
    4404:	20800017 	ldw	r2,0(r4)
    4408:	21000104 	addi	r4,r4,4
    440c:	d9009c15 	stw	r4,624(sp)
    4410:	14000015 	stw	r16,0(r2)
    4414:	10c00115 	stw	r3,4(r2)
    4418:	d8c0a017 	ldw	r3,640(sp)
    441c:	dd009d17 	ldw	r20,628(sp)
    4420:	18c00044 	addi	r3,r3,1
    4424:	d8c0a015 	stw	r3,640(sp)
    4428:	a00d883a 	mov	r6,r20
    442c:	003c4906 	br	3554 <__alt_mem_epcs_flash_controller_0+0xff802554>
    4430:	a080400c 	andi	r2,r20,256
    4434:	103f9b26 	beq	r2,zero,42a4 <__alt_mem_epcs_flash_controller_0+0xff8032a4>
    4438:	d8c0a217 	ldw	r3,648(sp)
    443c:	00bfdfc4 	movi	r2,-129
    4440:	a0a8703a 	and	r20,r20,r2
    4444:	e7000044 	addi	fp,fp,1
    4448:	183f9f26 	beq	r3,zero,42c8 <__alt_mem_epcs_flash_controller_0+0xff8032c8>
    444c:	18ffffc4 	addi	r3,r3,-1
    4450:	d8c0a215 	stw	r3,648(sp)
    4454:	84000044 	addi	r16,r16,1
    4458:	003f9b06 	br	42c8 <__alt_mem_epcs_flash_controller_0+0xff8032c8>
    445c:	a080200c 	andi	r2,r20,128
    4460:	103fa226 	beq	r2,zero,42ec <__alt_mem_epcs_flash_controller_0+0xff8032ec>
    4464:	00bfdfc4 	movi	r2,-129
    4468:	a0a8703a 	and	r20,r20,r2
    446c:	003f9406 	br	42c0 <__alt_mem_epcs_flash_controller_0+0xff8032c0>
    4470:	a8803fcc 	andi	r2,r21,255
    4474:	1080201c 	xori	r2,r2,128
    4478:	10bfe004 	addi	r2,r2,-128
    447c:	00c001c4 	movi	r3,7
    4480:	10ff9a1e 	bne	r2,r3,42ec <__alt_mem_epcs_flash_controller_0+0xff8032ec>
    4484:	05400204 	movi	r21,8
    4488:	003f8d06 	br	42c0 <__alt_mem_epcs_flash_controller_0+0xff8032c0>
    448c:	a8803fcc 	andi	r2,r21,255
    4490:	1080201c 	xori	r2,r2,128
    4494:	10bfe004 	addi	r2,r2,-128
    4498:	02000184 	movi	r8,6
    449c:	123f931e 	bne	r2,r8,42ec <__alt_mem_epcs_flash_controller_0+0xff8032ec>
    44a0:	054001c4 	movi	r21,7
    44a4:	003f8606 	br	42c0 <__alt_mem_epcs_flash_controller_0+0xff8032c0>
    44a8:	b8004f1e 	bne	r23,zero,45e8 <__ssvfscanf_r+0x1188>
    44ac:	e000031e 	bne	fp,zero,44bc <__ssvfscanf_r+0x105c>
    44b0:	a081c00c 	andi	r2,r20,1792
    44b4:	0201c004 	movi	r8,1792
    44b8:	1201a226 	beq	r2,r8,4b44 <__ssvfscanf_r+0x16e4>
    44bc:	a8803fcc 	andi	r2,r21,255
    44c0:	1080201c 	xori	r2,r2,128
    44c4:	10bfe004 	addi	r2,r2,-128
    44c8:	02000044 	movi	r8,1
    44cc:	12000226 	beq	r2,r8,44d8 <__ssvfscanf_r+0x1078>
    44d0:	02000104 	movi	r8,4
    44d4:	123f851e 	bne	r2,r8,42ec <__alt_mem_epcs_flash_controller_0+0xff8032ec>
    44d8:	ad400044 	addi	r21,r21,1
    44dc:	003f7806 	br	42c0 <__alt_mem_epcs_flash_controller_0+0xff8032c0>
    44e0:	a8803fcc 	andi	r2,r21,255
    44e4:	1080201c 	xori	r2,r2,128
    44e8:	10bfe004 	addi	r2,r2,-128
    44ec:	1000391e 	bne	r2,zero,45d4 <__ssvfscanf_r+0x1174>
    44f0:	e001151e 	bne	fp,zero,4948 <__ssvfscanf_r+0x14e8>
    44f4:	a081c00c 	andi	r2,r20,1792
    44f8:	0201c004 	movi	r8,1792
    44fc:	12019b26 	beq	r2,r8,4b6c <__ssvfscanf_r+0x170c>
    4500:	8821883a 	mov	r16,r17
    4504:	a807883a 	mov	r3,r21
    4508:	e023883a 	mov	r17,fp
    450c:	b82b883a 	mov	r21,r23
    4510:	302f883a 	mov	r23,r6
    4514:	003f7b06 	br	4304 <__alt_mem_epcs_flash_controller_0+0xff803304>
    4518:	a8803fcc 	andi	r2,r21,255
    451c:	1080201c 	xori	r2,r2,128
    4520:	10bfe004 	addi	r2,r2,-128
    4524:	02000084 	movi	r8,2
    4528:	123f701e 	bne	r2,r8,42ec <__alt_mem_epcs_flash_controller_0+0xff8032ec>
    452c:	054000c4 	movi	r21,3
    4530:	003f6306 	br	42c0 <__alt_mem_epcs_flash_controller_0+0xff8032c0>
    4534:	a081400c 	andi	r2,r20,1280
    4538:	00c10004 	movi	r3,1024
    453c:	10c00326 	beq	r2,r3,454c <__ssvfscanf_r+0x10ec>
    4540:	a0c4703a 	and	r2,r20,r3
    4544:	103f6926 	beq	r2,zero,42ec <__alt_mem_epcs_flash_controller_0+0xff8032ec>
    4548:	e03fed26 	beq	fp,zero,4500 <__alt_mem_epcs_flash_controller_0+0xff803500>
    454c:	a080800c 	andi	r2,r20,512
    4550:	1000041e 	bne	r2,zero,4564 <__ssvfscanf_r+0x1104>
    4554:	d8c09f17 	ldw	r3,636(sp)
    4558:	dc40a515 	stw	r17,660(sp)
    455c:	e0f9c83a 	sub	fp,fp,r3
    4560:	df00a415 	stw	fp,656(sp)
    4564:	00be1fc4 	movi	r2,-1921
    4568:	a0a8703a 	and	r20,r20,r2
    456c:	a5006014 	ori	r20,r20,384
    4570:	0039883a 	mov	fp,zero
    4574:	003f5206 	br	42c0 <__alt_mem_epcs_flash_controller_0+0xff8032c0>
    4578:	00800044 	movi	r2,1
    457c:	b8bf5b1e 	bne	r23,r2,42ec <__alt_mem_epcs_flash_controller_0+0xff8032ec>
    4580:	05c00084 	movi	r23,2
    4584:	003f4e06 	br	42c0 <__alt_mem_epcs_flash_controller_0+0xff8032c0>
    4588:	d8c0a317 	ldw	r3,652(sp)
    458c:	2a003fcc 	andi	r8,r5,255
    4590:	18800003 	ldbu	r2,0(r3)
    4594:	40bf551e 	bne	r8,r2,42ec <__alt_mem_epcs_flash_controller_0+0xff8032ec>
    4598:	a080800c 	andi	r2,r20,512
    459c:	103f5326 	beq	r2,zero,42ec <__alt_mem_epcs_flash_controller_0+0xff8032ec>
    45a0:	00bf5fc4 	movi	r2,-641
    45a4:	a0a8703a 	and	r20,r20,r2
    45a8:	df009f15 	stw	fp,636(sp)
    45ac:	003f4406 	br	42c0 <__alt_mem_epcs_flash_controller_0+0xff8032c0>
    45b0:	3009883a 	mov	r4,r6
    45b4:	980b883a 	mov	r5,r19
    45b8:	d980a915 	stw	r6,676(sp)
    45bc:	d9c0aa15 	stw	r7,680(sp)
    45c0:	000e63c0 	call	e63c <__ssrefill_r>
    45c4:	d980a917 	ldw	r6,676(sp)
    45c8:	d9c0aa17 	ldw	r7,680(sp)
    45cc:	103f4626 	beq	r2,zero,42e8 <__alt_mem_epcs_flash_controller_0+0xff8032e8>
    45d0:	003f4606 	br	42ec <__alt_mem_epcs_flash_controller_0+0xff8032ec>
    45d4:	020000c4 	movi	r8,3
    45d8:	123fbf26 	beq	r2,r8,44d8 <__alt_mem_epcs_flash_controller_0+0xff8034d8>
    45dc:	02000144 	movi	r8,5
    45e0:	123fbd26 	beq	r2,r8,44d8 <__alt_mem_epcs_flash_controller_0+0xff8034d8>
    45e4:	003f4106 	br	42ec <__alt_mem_epcs_flash_controller_0+0xff8032ec>
    45e8:	00800084 	movi	r2,2
    45ec:	b8bfb31e 	bne	r23,r2,44bc <__alt_mem_epcs_flash_controller_0+0xff8034bc>
    45f0:	05c000c4 	movi	r23,3
    45f4:	003f3206 	br	42c0 <__alt_mem_epcs_flash_controller_0+0xff8032c0>
    45f8:	e000011e 	bne	fp,zero,4600 <__ssvfscanf_r+0x11a0>
    45fc:	073fffc4 	movi	fp,-1
    4600:	8900004c 	andi	r4,r17,1
    4604:	20011d1e 	bne	r4,zero,4a7c <__ssvfscanf_r+0x161c>
    4608:	8c40040c 	andi	r17,r17,16
    460c:	8800da26 	beq	r17,zero,4978 <__ssvfscanf_r+0x1518>
    4610:	0023883a 	mov	r17,zero
    4614:	00000306 	br	4624 <__ssvfscanf_r+0x11c4>
    4618:	18800003 	ldbu	r2,0(r3)
    461c:	8085883a 	add	r2,r16,r2
    4620:	10800043 	ldbu	r2,1(r2)
    4624:	1080020c 	andi	r2,r2,8
    4628:	1000fc1e 	bne	r2,zero,4a1c <__ssvfscanf_r+0x15bc>
    462c:	98800117 	ldw	r2,4(r19)
    4630:	18c00044 	addi	r3,r3,1
    4634:	8c400044 	addi	r17,r17,1
    4638:	10bfffc4 	addi	r2,r2,-1
    463c:	98800115 	stw	r2,4(r19)
    4640:	98c00015 	stw	r3,0(r19)
    4644:	8f00f526 	beq	r17,fp,4a1c <__ssvfscanf_r+0x15bc>
    4648:	00bff316 	blt	zero,r2,4618 <__alt_mem_epcs_flash_controller_0+0xff803618>
    464c:	980b883a 	mov	r5,r19
    4650:	b809883a 	mov	r4,r23
    4654:	000e63c0 	call	e63c <__ssrefill_r>
    4658:	1000f01e 	bne	r2,zero,4a1c <__ssvfscanf_r+0x15bc>
    465c:	b4000017 	ldw	r16,0(r22)
    4660:	98c00017 	ldw	r3,0(r19)
    4664:	003fec06 	br	4618 <__alt_mem_epcs_flash_controller_0+0xff803618>
    4668:	e0bfffc4 	addi	r2,fp,-1
    466c:	01405704 	movi	r5,348
    4670:	2880bf2e 	bgeu	r5,r2,4970 <__ssvfscanf_r+0x1510>
    4674:	e1ffa8c4 	addi	r7,fp,-349
    4678:	07005744 	movi	fp,349
    467c:	8c436014 	ori	r17,r17,3456
    4680:	9013883a 	mov	r9,r18
    4684:	8825883a 	mov	r18,r17
    4688:	dc409e17 	ldw	r17,632(sp)
    468c:	0029883a 	mov	r20,zero
    4690:	dc000104 	addi	r16,sp,4
    4694:	05401344 	movi	r21,77
    4698:	02c08004 	movi	r11,512
    469c:	01bf7fc4 	movi	r6,-513
    46a0:	023fdfc4 	movi	r8,-129
    46a4:	20bff544 	addi	r2,r4,-43
    46a8:	10803fcc 	andi	r2,r2,255
    46ac:	a8807236 	bltu	r21,r2,4878 <__ssvfscanf_r+0x1418>
    46b0:	100490ba 	slli	r2,r2,2
    46b4:	01400034 	movhi	r5,0
    46b8:	2951b204 	addi	r5,r5,18120
    46bc:	1145883a 	add	r2,r2,r5
    46c0:	10800017 	ldw	r2,0(r2)
    46c4:	1000683a 	jmp	r2
    46c8:	000048fc 	xorhi	zero,zero,291
    46cc:	00004878 	rdprs	zero,zero,289
    46d0:	000048fc 	xorhi	zero,zero,291
    46d4:	00004878 	rdprs	zero,zero,289
    46d8:	00004878 	rdprs	zero,zero,289
    46dc:	000048d4 	movui	zero,291
    46e0:	000048b4 	movhi	zero,290
    46e4:	000048b4 	movhi	zero,290
    46e8:	000048b4 	movhi	zero,290
    46ec:	000048b4 	movhi	zero,290
    46f0:	000048b4 	movhi	zero,290
    46f4:	000048b4 	movhi	zero,290
    46f8:	000048b4 	movhi	zero,290
    46fc:	0000485c 	xori	zero,zero,289
    4700:	0000485c 	xori	zero,zero,289
    4704:	00004878 	rdprs	zero,zero,289
    4708:	00004878 	rdprs	zero,zero,289
    470c:	00004878 	rdprs	zero,zero,289
    4710:	00004878 	rdprs	zero,zero,289
    4714:	00004878 	rdprs	zero,zero,289
    4718:	00004878 	rdprs	zero,zero,289
    471c:	00004878 	rdprs	zero,zero,289
    4720:	00004848 	cmpgei	zero,zero,289
    4724:	00004848 	cmpgei	zero,zero,289
    4728:	00004848 	cmpgei	zero,zero,289
    472c:	00004848 	cmpgei	zero,zero,289
    4730:	00004848 	cmpgei	zero,zero,289
    4734:	00004848 	cmpgei	zero,zero,289
    4738:	00004878 	rdprs	zero,zero,289
    473c:	00004878 	rdprs	zero,zero,289
    4740:	00004878 	rdprs	zero,zero,289
    4744:	00004878 	rdprs	zero,zero,289
    4748:	00004878 	rdprs	zero,zero,289
    474c:	00004878 	rdprs	zero,zero,289
    4750:	00004878 	rdprs	zero,zero,289
    4754:	00004878 	rdprs	zero,zero,289
    4758:	00004878 	rdprs	zero,zero,289
    475c:	00004878 	rdprs	zero,zero,289
    4760:	00004878 	rdprs	zero,zero,289
    4764:	00004878 	rdprs	zero,zero,289
    4768:	00004878 	rdprs	zero,zero,289
    476c:	00004878 	rdprs	zero,zero,289
    4770:	00004878 	rdprs	zero,zero,289
    4774:	00004878 	rdprs	zero,zero,289
    4778:	00004878 	rdprs	zero,zero,289
    477c:	00004800 	call	480 <MenuEnd+0x64>
    4780:	00004878 	rdprs	zero,zero,289
    4784:	00004878 	rdprs	zero,zero,289
    4788:	00004878 	rdprs	zero,zero,289
    478c:	00004878 	rdprs	zero,zero,289
    4790:	00004878 	rdprs	zero,zero,289
    4794:	00004878 	rdprs	zero,zero,289
    4798:	00004878 	rdprs	zero,zero,289
    479c:	00004878 	rdprs	zero,zero,289
    47a0:	00004848 	cmpgei	zero,zero,289
    47a4:	00004848 	cmpgei	zero,zero,289
    47a8:	00004848 	cmpgei	zero,zero,289
    47ac:	00004848 	cmpgei	zero,zero,289
    47b0:	00004848 	cmpgei	zero,zero,289
    47b4:	00004848 	cmpgei	zero,zero,289
    47b8:	00004878 	rdprs	zero,zero,289
    47bc:	00004878 	rdprs	zero,zero,289
    47c0:	00004878 	rdprs	zero,zero,289
    47c4:	00004878 	rdprs	zero,zero,289
    47c8:	00004878 	rdprs	zero,zero,289
    47cc:	00004878 	rdprs	zero,zero,289
    47d0:	00004878 	rdprs	zero,zero,289
    47d4:	00004878 	rdprs	zero,zero,289
    47d8:	00004878 	rdprs	zero,zero,289
    47dc:	00004878 	rdprs	zero,zero,289
    47e0:	00004878 	rdprs	zero,zero,289
    47e4:	00004878 	rdprs	zero,zero,289
    47e8:	00004878 	rdprs	zero,zero,289
    47ec:	00004878 	rdprs	zero,zero,289
    47f0:	00004878 	rdprs	zero,zero,289
    47f4:	00004878 	rdprs	zero,zero,289
    47f8:	00004878 	rdprs	zero,zero,289
    47fc:	00004800 	call	480 <MenuEnd+0x64>
    4800:	9081800c 	andi	r2,r18,1536
    4804:	12c01c1e 	bne	r2,r11,4878 <__ssvfscanf_r+0x1418>
    4808:	91a4703a 	and	r18,r18,r6
    480c:	94814014 	ori	r18,r18,1280
    4810:	04400404 	movi	r17,16
    4814:	81000005 	stb	r4,0(r16)
    4818:	84000044 	addi	r16,r16,1
    481c:	98800117 	ldw	r2,4(r19)
    4820:	10bfffc4 	addi	r2,r2,-1
    4824:	98800115 	stw	r2,4(r19)
    4828:	0080380e 	bge	zero,r2,490c <__ssvfscanf_r+0x14ac>
    482c:	18c00044 	addi	r3,r3,1
    4830:	98c00015 	stw	r3,0(r19)
    4834:	e73fffc4 	addi	fp,fp,-1
    4838:	e0000f26 	beq	fp,zero,4878 <__ssvfscanf_r+0x1418>
    483c:	98c00017 	ldw	r3,0(r19)
    4840:	19000003 	ldbu	r4,0(r3)
    4844:	003f9706 	br	46a4 <__alt_mem_epcs_flash_controller_0+0xff8036a4>
    4848:	00800284 	movi	r2,10
    484c:	14400a0e 	bge	r2,r17,4878 <__ssvfscanf_r+0x1418>
    4850:	00bd1fc4 	movi	r2,-2945
    4854:	90a4703a 	and	r18,r18,r2
    4858:	003fee06 	br	4814 <__alt_mem_epcs_flash_controller_0+0xff803814>
    485c:	014000b4 	movhi	r5,2
    4860:	8c63883a 	add	r17,r17,r17
    4864:	29775d84 	addi	r5,r5,-8842
    4868:	2c45883a 	add	r2,r5,r17
    486c:	1440000f 	ldh	r17,0(r2)
    4870:	00800204 	movi	r2,8
    4874:	147ff616 	blt	r2,r17,4850 <__alt_mem_epcs_flash_controller_0+0xff803850>
    4878:	dc409e15 	stw	r17,632(sp)
    487c:	9023883a 	mov	r17,r18
    4880:	8880400c 	andi	r2,r17,256
    4884:	4825883a 	mov	r18,r9
    4888:	10000426 	beq	r2,zero,489c <__ssvfscanf_r+0x143c>
    488c:	d8800104 	addi	r2,sp,4
    4890:	1400b036 	bltu	r2,r16,4b54 <__ssvfscanf_r+0x16f4>
    4894:	d8c00104 	addi	r3,sp,4
    4898:	1c3b3226 	beq	r3,r16,3564 <__alt_mem_epcs_flash_controller_0+0xff802564>
    489c:	8880040c 	andi	r2,r17,16
    48a0:	10006226 	beq	r2,zero,4a2c <__ssvfscanf_r+0x15cc>
    48a4:	d8800104 	addi	r2,sp,4
    48a8:	80a1c83a 	sub	r16,r16,r2
    48ac:	8521883a 	add	r16,r16,r20
    48b0:	003ca506 	br	3b48 <__alt_mem_epcs_flash_controller_0+0xff802b48>
    48b4:	014000b4 	movhi	r5,2
    48b8:	8c63883a 	add	r17,r17,r17
    48bc:	29775d84 	addi	r5,r5,-8842
    48c0:	2c45883a 	add	r2,r5,r17
    48c4:	1440000f 	ldh	r17,0(r2)
    48c8:	00bd1fc4 	movi	r2,-2945
    48cc:	90a4703a 	and	r18,r18,r2
    48d0:	003fd006 	br	4814 <__alt_mem_epcs_flash_controller_0+0xff803814>
    48d4:	9082000c 	andi	r2,r18,2048
    48d8:	103fce26 	beq	r2,zero,4814 <__alt_mem_epcs_flash_controller_0+0xff803814>
    48dc:	8800021e 	bne	r17,zero,48e8 <__ssvfscanf_r+0x1488>
    48e0:	94808014 	ori	r18,r18,512
    48e4:	04400204 	movi	r17,8
    48e8:	9081000c 	andi	r2,r18,1024
    48ec:	10008626 	beq	r2,zero,4b08 <__ssvfscanf_r+0x16a8>
    48f0:	00be9fc4 	movi	r2,-1409
    48f4:	90a4703a 	and	r18,r18,r2
    48f8:	003fc606 	br	4814 <__alt_mem_epcs_flash_controller_0+0xff803814>
    48fc:	9080200c 	andi	r2,r18,128
    4900:	103fdd26 	beq	r2,zero,4878 <__alt_mem_epcs_flash_controller_0+0xff803878>
    4904:	9224703a 	and	r18,r18,r8
    4908:	003fc206 	br	4814 <__alt_mem_epcs_flash_controller_0+0xff803814>
    490c:	980b883a 	mov	r5,r19
    4910:	b809883a 	mov	r4,r23
    4914:	d980a915 	stw	r6,676(sp)
    4918:	d9c0aa15 	stw	r7,680(sp)
    491c:	da00a715 	stw	r8,668(sp)
    4920:	da40a815 	stw	r9,672(sp)
    4924:	dac0a615 	stw	r11,664(sp)
    4928:	000e63c0 	call	e63c <__ssrefill_r>
    492c:	d980a917 	ldw	r6,676(sp)
    4930:	d9c0aa17 	ldw	r7,680(sp)
    4934:	da00a717 	ldw	r8,668(sp)
    4938:	da40a817 	ldw	r9,672(sp)
    493c:	dac0a617 	ldw	r11,664(sp)
    4940:	103fbc26 	beq	r2,zero,4834 <__alt_mem_epcs_flash_controller_0+0xff803834>
    4944:	003fcc06 	br	4878 <__alt_mem_epcs_flash_controller_0+0xff803878>
    4948:	8821883a 	mov	r16,r17
    494c:	a807883a 	mov	r3,r21
    4950:	e023883a 	mov	r17,fp
    4954:	b82b883a 	mov	r21,r23
    4958:	302f883a 	mov	r23,r6
    495c:	00bfbfc4 	movi	r2,-257
    4960:	a0a8703a 	and	r20,r20,r2
    4964:	003e6706 	br	4304 <__alt_mem_epcs_flash_controller_0+0xff803304>
    4968:	d800a215 	stw	zero,648(sp)
    496c:	003de306 	br	40fc <__alt_mem_epcs_flash_controller_0+0xff8030fc>
    4970:	000f883a 	mov	r7,zero
    4974:	003f4106 	br	467c <__alt_mem_epcs_flash_controller_0+0xff80367c>
    4978:	d9409c17 	ldw	r5,624(sp)
    497c:	e2bfffc4 	addi	r10,fp,-1
    4980:	2c400017 	ldw	r17,0(r5)
    4984:	2c000104 	addi	r16,r5,4
    4988:	8aa9883a 	add	r20,r17,r10
    498c:	880b883a 	mov	r5,r17
    4990:	00000606 	br	49ac <__ssvfscanf_r+0x154c>
    4994:	98c00017 	ldw	r3,0(r19)
    4998:	b1000017 	ldw	r4,0(r22)
    499c:	a80b883a 	mov	r5,r21
    49a0:	18800003 	ldbu	r2,0(r3)
    49a4:	2085883a 	add	r2,r4,r2
    49a8:	10800043 	ldbu	r2,1(r2)
    49ac:	1080020c 	andi	r2,r2,8
    49b0:	1000621e 	bne	r2,zero,4b3c <__ssvfscanf_r+0x16dc>
    49b4:	98800117 	ldw	r2,4(r19)
    49b8:	19000044 	addi	r4,r3,1
    49bc:	99000015 	stw	r4,0(r19)
    49c0:	10bfffc4 	addi	r2,r2,-1
    49c4:	98800115 	stw	r2,4(r19)
    49c8:	18800003 	ldbu	r2,0(r3)
    49cc:	2d400044 	addi	r21,r5,1
    49d0:	a839883a 	mov	fp,r21
    49d4:	28800005 	stb	r2,0(r5)
    49d8:	2d000626 	beq	r5,r20,49f4 <__ssvfscanf_r+0x1594>
    49dc:	98800117 	ldw	r2,4(r19)
    49e0:	00bfec16 	blt	zero,r2,4994 <__alt_mem_epcs_flash_controller_0+0xff803994>
    49e4:	980b883a 	mov	r5,r19
    49e8:	b809883a 	mov	r4,r23
    49ec:	000e63c0 	call	e63c <__ssrefill_r>
    49f0:	103fe826 	beq	r2,zero,4994 <__alt_mem_epcs_flash_controller_0+0xff803994>
    49f4:	d880a017 	ldw	r2,640(sp)
    49f8:	dd009d17 	ldw	r20,628(sp)
    49fc:	e463c83a 	sub	r17,fp,r17
    4a00:	10800044 	addi	r2,r2,1
    4a04:	e0000005 	stb	zero,0(fp)
    4a08:	9465883a 	add	r18,r18,r17
    4a0c:	d880a015 	stw	r2,640(sp)
    4a10:	dc009c15 	stw	r16,624(sp)
    4a14:	a00d883a 	mov	r6,r20
    4a18:	003ace06 	br	3554 <__alt_mem_epcs_flash_controller_0+0xff802554>
    4a1c:	dd009d17 	ldw	r20,628(sp)
    4a20:	9465883a 	add	r18,r18,r17
    4a24:	a00d883a 	mov	r6,r20
    4a28:	003aca06 	br	3554 <__alt_mem_epcs_flash_controller_0+0xff802554>
    4a2c:	d8c0a117 	ldw	r3,644(sp)
    4a30:	d9c09e17 	ldw	r7,632(sp)
    4a34:	000d883a 	mov	r6,zero
    4a38:	d9400104 	addi	r5,sp,4
    4a3c:	b809883a 	mov	r4,r23
    4a40:	80000005 	stb	zero,0(r16)
    4a44:	183ee83a 	callr	r3
    4a48:	88c0080c 	andi	r3,r17,32
    4a4c:	1800351e 	bne	r3,zero,4b24 <__ssvfscanf_r+0x16c4>
    4a50:	88c0010c 	andi	r3,r17,4
    4a54:	18007026 	beq	r3,zero,4c18 <__ssvfscanf_r+0x17b8>
    4a58:	d9409c17 	ldw	r5,624(sp)
    4a5c:	28c00017 	ldw	r3,0(r5)
    4a60:	29400104 	addi	r5,r5,4
    4a64:	d9409c15 	stw	r5,624(sp)
    4a68:	1880000d 	sth	r2,0(r3)
    4a6c:	d940a017 	ldw	r5,640(sp)
    4a70:	29400044 	addi	r5,r5,1
    4a74:	d940a015 	stw	r5,640(sp)
    4a78:	003f8a06 	br	48a4 <__alt_mem_epcs_flash_controller_0+0xff8038a4>
    4a7c:	dd409904 	addi	r21,sp,612
    4a80:	8c40040c 	andi	r17,r17,16
    4a84:	01800204 	movi	r6,8
    4a88:	000b883a 	mov	r5,zero
    4a8c:	a809883a 	mov	r4,r21
    4a90:	000a4c00 	call	a4c0 <memset>
    4a94:	8800391e 	bne	r17,zero,4b7c <__ssvfscanf_r+0x171c>
    4a98:	d8c09c17 	ldw	r3,624(sp)
    4a9c:	1d000017 	ldw	r20,0(r3)
    4aa0:	18c00104 	addi	r3,r3,4
    4aa4:	d8c09c15 	stw	r3,624(sp)
    4aa8:	000d883a 	mov	r6,zero
    4aac:	3021883a 	mov	r16,r6
    4ab0:	dc409f15 	stw	r17,636(sp)
    4ab4:	98800017 	ldw	r2,0(r19)
    4ab8:	b0c00017 	ldw	r3,0(r22)
    4abc:	10800003 	ldbu	r2,0(r2)
    4ac0:	1885883a 	add	r2,r3,r2
    4ac4:	10800043 	ldbu	r2,1(r2)
    4ac8:	1080020c 	andi	r2,r2,8
    4acc:	1000011e 	bne	r2,zero,4ad4 <__ssvfscanf_r+0x1674>
    4ad0:	e000651e 	bne	fp,zero,4c68 <__ssvfscanf_r+0x1808>
    4ad4:	dc409f17 	ldw	r17,636(sp)
    4ad8:	883c811e 	bne	r17,zero,3ce0 <__alt_mem_epcs_flash_controller_0+0xff802ce0>
    4adc:	a0000015 	stw	zero,0(r20)
    4ae0:	003c7c06 	br	3cd4 <__alt_mem_epcs_flash_controller_0+0xff802cd4>
    4ae4:	a2c0008c 	andi	r11,r20,2
    4ae8:	58003c26 	beq	r11,zero,4bdc <__ssvfscanf_r+0x177c>
    4aec:	d9409c17 	ldw	r5,624(sp)
    4af0:	28800017 	ldw	r2,0(r5)
    4af4:	29400104 	addi	r5,r5,4
    4af8:	d9409c15 	stw	r5,624(sp)
    4afc:	14000015 	stw	r16,0(r2)
    4b00:	10c00115 	stw	r3,4(r2)
    4b04:	003e4406 	br	4418 <__alt_mem_epcs_flash_controller_0+0xff803418>
    4b08:	00bf1fc4 	movi	r2,-897
    4b0c:	90a4703a 	and	r18,r18,r2
    4b10:	38000226 	beq	r7,zero,4b1c <__ssvfscanf_r+0x16bc>
    4b14:	39ffffc4 	addi	r7,r7,-1
    4b18:	e7000044 	addi	fp,fp,1
    4b1c:	a5000044 	addi	r20,r20,1
    4b20:	003f3e06 	br	481c <__alt_mem_epcs_flash_controller_0+0xff80381c>
    4b24:	d9009c17 	ldw	r4,624(sp)
    4b28:	20c00017 	ldw	r3,0(r4)
    4b2c:	21000104 	addi	r4,r4,4
    4b30:	d9009c15 	stw	r4,624(sp)
    4b34:	18800015 	stw	r2,0(r3)
    4b38:	003fcc06 	br	4a6c <__alt_mem_epcs_flash_controller_0+0xff803a6c>
    4b3c:	2839883a 	mov	fp,r5
    4b40:	003fac06 	br	49f4 <__alt_mem_epcs_flash_controller_0+0xff8039f4>
    4b44:	00be1fc4 	movi	r2,-1921
    4b48:	a0a8703a 	and	r20,r20,r2
    4b4c:	05c00044 	movi	r23,1
    4b50:	003ddb06 	br	42c0 <__alt_mem_epcs_flash_controller_0+0xff8032c0>
    4b54:	817fffc7 	ldb	r5,-1(r16)
    4b58:	980d883a 	mov	r6,r19
    4b5c:	b809883a 	mov	r4,r23
    4b60:	843fffc4 	addi	r16,r16,-1
    4b64:	000e5340 	call	e534 <_sungetc_r>
    4b68:	003f4a06 	br	4894 <__alt_mem_epcs_flash_controller_0+0xff803894>
    4b6c:	00fe1fc4 	movi	r3,-1921
    4b70:	a0e8703a 	and	r20,r20,r3
    4b74:	05400044 	movi	r21,1
    4b78:	003dd106 	br	42c0 <__alt_mem_epcs_flash_controller_0+0xff8032c0>
    4b7c:	dd009b04 	addi	r20,sp,620
    4b80:	003fc906 	br	4aa8 <__alt_mem_epcs_flash_controller_0+0xff803aa8>
    4b84:	d8c09f17 	ldw	r3,636(sp)
    4b88:	88e3c83a 	sub	r17,r17,r3
    4b8c:	044dc83a 	sub	r6,zero,r17
    4b90:	883e1426 	beq	r17,zero,43e4 <__alt_mem_epcs_flash_controller_0+0xff8033e4>
    4b94:	d88055c4 	addi	r2,sp,343
    4b98:	80800136 	bltu	r16,r2,4ba0 <__ssvfscanf_r+0x1740>
    4b9c:	dc005584 	addi	r16,sp,342
    4ba0:	014000b4 	movhi	r5,2
    4ba4:	29775c04 	addi	r5,r5,-8848
    4ba8:	8009883a 	mov	r4,r16
    4bac:	000c1600 	call	c160 <sprintf>
    4bb0:	003e0c06 	br	43e4 <__alt_mem_epcs_flash_controller_0+0xff8033e4>
    4bb4:	d8c0a517 	ldw	r3,660(sp)
    4bb8:	000d883a 	mov	r6,zero
    4bbc:	01c00284 	movi	r7,10
    4bc0:	19400044 	addi	r5,r3,1
    4bc4:	b809883a 	mov	r4,r23
    4bc8:	000da080 	call	da08 <_strtol_r>
    4bcc:	d8c0a417 	ldw	r3,656(sp)
    4bd0:	dc00a517 	ldw	r16,660(sp)
    4bd4:	10cdc83a 	sub	r6,r2,r3
    4bd8:	003fee06 	br	4b94 <__alt_mem_epcs_flash_controller_0+0xff803b94>
    4bdc:	d8809c17 	ldw	r2,624(sp)
    4be0:	180b883a 	mov	r5,r3
    4be4:	8009883a 	mov	r4,r16
    4be8:	15000017 	ldw	r20,0(r2)
    4bec:	14400104 	addi	r17,r2,4
    4bf0:	d8c0a615 	stw	r3,664(sp)
    4bf4:	000bfbc0 	call	bfbc <__fpclassifyd>
    4bf8:	d8c0a617 	ldw	r3,664(sp)
    4bfc:	10007226 	beq	r2,zero,4dc8 <__ssvfscanf_r+0x1968>
    4c00:	8009883a 	mov	r4,r16
    4c04:	180b883a 	mov	r5,r3
    4c08:	001966c0 	call	1966c <__truncdfsf2>
    4c0c:	a0800015 	stw	r2,0(r20)
    4c10:	dc409c15 	stw	r17,624(sp)
    4c14:	003e0006 	br	4418 <__alt_mem_epcs_flash_controller_0+0xff803418>
    4c18:	88c0004c 	andi	r3,r17,1
    4c1c:	183fc11e 	bne	r3,zero,4b24 <__alt_mem_epcs_flash_controller_0+0xff803b24>
    4c20:	8c40008c 	andi	r17,r17,2
    4c24:	883fbf26 	beq	r17,zero,4b24 <__alt_mem_epcs_flash_controller_0+0xff803b24>
    4c28:	d940a117 	ldw	r5,644(sp)
    4c2c:	00800074 	movhi	r2,1
    4c30:	10b7e004 	addi	r2,r2,-8320
    4c34:	d9c09e17 	ldw	r7,632(sp)
    4c38:	000d883a 	mov	r6,zero
    4c3c:	28806726 	beq	r5,r2,4ddc <__ssvfscanf_r+0x197c>
    4c40:	d9400104 	addi	r5,sp,4
    4c44:	b809883a 	mov	r4,r23
    4c48:	000dc7c0 	call	dc7c <_strtoll_r>
    4c4c:	d9409c17 	ldw	r5,624(sp)
    4c50:	29000017 	ldw	r4,0(r5)
    4c54:	29400104 	addi	r5,r5,4
    4c58:	d9409c15 	stw	r5,624(sp)
    4c5c:	20800015 	stw	r2,0(r4)
    4c60:	20c00115 	stw	r3,4(r4)
    4c64:	003f8106 	br	4a6c <__alt_mem_epcs_flash_controller_0+0xff803a6c>
    4c68:	0009dec0 	call	9dec <__locale_mb_cur_max>
    4c6c:	80bc5626 	beq	r16,r2,3dc8 <__alt_mem_epcs_flash_controller_0+0xff802dc8>
    4c70:	98800017 	ldw	r2,0(r19)
    4c74:	99000117 	ldw	r4,4(r19)
    4c78:	d9400104 	addi	r5,sp,4
    4c7c:	12000003 	ldbu	r8,0(r2)
    4c80:	213fffc4 	addi	r4,r4,-1
    4c84:	10800044 	addi	r2,r2,1
    4c88:	99000115 	stw	r4,4(r19)
    4c8c:	98800015 	stw	r2,0(r19)
    4c90:	84400044 	addi	r17,r16,1
    4c94:	dd400015 	stw	r21,0(sp)
    4c98:	2c21883a 	add	r16,r5,r16
    4c9c:	280d883a 	mov	r6,r5
    4ca0:	880f883a 	mov	r7,r17
    4ca4:	a00b883a 	mov	r5,r20
    4ca8:	b809883a 	mov	r4,r23
    4cac:	82000005 	stb	r8,0(r16)
    4cb0:	000a05c0 	call	a05c <_mbrtowc_r>
    4cb4:	00ffffc4 	movi	r3,-1
    4cb8:	10fc4326 	beq	r2,r3,3dc8 <__alt_mem_epcs_flash_controller_0+0xff802dc8>
    4cbc:	103c371e 	bne	r2,zero,3d9c <__alt_mem_epcs_flash_controller_0+0xff802d9c>
    4cc0:	a0000015 	stw	zero,0(r20)
    4cc4:	0009883a 	mov	r4,zero
    4cc8:	0009d340 	call	9d34 <iswspace>
    4ccc:	10001b26 	beq	r2,zero,4d3c <__ssvfscanf_r+0x18dc>
    4cd0:	8821883a 	mov	r16,r17
    4cd4:	dc409f17 	ldw	r17,636(sp)
    4cd8:	803f7f26 	beq	r16,zero,4ad8 <__alt_mem_epcs_flash_controller_0+0xff803ad8>
    4cdc:	843fffc4 	addi	r16,r16,-1
    4ce0:	d9400104 	addi	r5,sp,4
    4ce4:	2c2b883a 	add	r21,r5,r16
    4ce8:	00000106 	br	4cf0 <__ssvfscanf_r+0x1890>
    4cec:	843fffc4 	addi	r16,r16,-1
    4cf0:	a9400003 	ldbu	r5,0(r21)
    4cf4:	980d883a 	mov	r6,r19
    4cf8:	b809883a 	mov	r4,r23
    4cfc:	000e5340 	call	e534 <_sungetc_r>
    4d00:	ad7fffc4 	addi	r21,r21,-1
    4d04:	803ff91e 	bne	r16,zero,4cec <__alt_mem_epcs_flash_controller_0+0xff803cec>
    4d08:	003f7306 	br	4ad8 <__alt_mem_epcs_flash_controller_0+0xff803ad8>
    4d0c:	d9400104 	addi	r5,sp,4
    4d10:	802b883a 	mov	r21,r16
    4d14:	9839883a 	mov	fp,r19
    4d18:	2c3a122e 	bgeu	r5,r16,3564 <__alt_mem_epcs_flash_controller_0+0xff802564>
    4d1c:	ad7fffc4 	addi	r21,r21,-1
    4d20:	a9400007 	ldb	r5,0(r21)
    4d24:	e00d883a 	mov	r6,fp
    4d28:	b809883a 	mov	r4,r23
    4d2c:	000e5340 	call	e534 <_sungetc_r>
    4d30:	d8800104 	addi	r2,sp,4
    4d34:	157ff91e 	bne	r2,r21,4d1c <__alt_mem_epcs_flash_controller_0+0xff803d1c>
    4d38:	003a0a06 	br	3564 <__alt_mem_epcs_flash_controller_0+0xff802564>
    4d3c:	d8c09f17 	ldw	r3,636(sp)
    4d40:	9465883a 	add	r18,r18,r17
    4d44:	e73fffc4 	addi	fp,fp,-1
    4d48:	1800051e 	bne	r3,zero,4d60 <__ssvfscanf_r+0x1900>
    4d4c:	a5000104 	addi	r20,r20,4
    4d50:	0021883a 	mov	r16,zero
    4d54:	003c1406 	br	3da8 <__alt_mem_epcs_flash_controller_0+0xff802da8>
    4d58:	a1000017 	ldw	r4,0(r20)
    4d5c:	003fda06 	br	4cc8 <__alt_mem_epcs_flash_controller_0+0xff803cc8>
    4d60:	0021883a 	mov	r16,zero
    4d64:	003c1006 	br	3da8 <__alt_mem_epcs_flash_controller_0+0xff802da8>
    4d68:	d8c00104 	addi	r3,sp,4
    4d6c:	802b883a 	mov	r21,r16
    4d70:	9839883a 	mov	fp,r19
    4d74:	1c39fb2e 	bgeu	r3,r16,3564 <__alt_mem_epcs_flash_controller_0+0xff802564>
    4d78:	ad7fffc4 	addi	r21,r21,-1
    4d7c:	a9400007 	ldb	r5,0(r21)
    4d80:	b809883a 	mov	r4,r23
    4d84:	e00d883a 	mov	r6,fp
    4d88:	000e5340 	call	e534 <_sungetc_r>
    4d8c:	d9000104 	addi	r4,sp,4
    4d90:	257ff91e 	bne	r4,r21,4d78 <__alt_mem_epcs_flash_controller_0+0xff803d78>
    4d94:	0039f306 	br	3564 <__alt_mem_epcs_flash_controller_0+0xff802564>
    4d98:	d8c00104 	addi	r3,sp,4
    4d9c:	802b883a 	mov	r21,r16
    4da0:	9839883a 	mov	fp,r19
    4da4:	1c39ef2e 	bgeu	r3,r16,3564 <__alt_mem_epcs_flash_controller_0+0xff802564>
    4da8:	ad7fffc4 	addi	r21,r21,-1
    4dac:	a9400007 	ldb	r5,0(r21)
    4db0:	b809883a 	mov	r4,r23
    4db4:	e00d883a 	mov	r6,fp
    4db8:	000e5340 	call	e534 <_sungetc_r>
    4dbc:	d9000104 	addi	r4,sp,4
    4dc0:	257ff91e 	bne	r4,r21,4da8 <__alt_mem_epcs_flash_controller_0+0xff803da8>
    4dc4:	0039e706 	br	3564 <__alt_mem_epcs_flash_controller_0+0xff802564>
    4dc8:	0009883a 	mov	r4,zero
    4dcc:	000c1000 	call	c100 <nanf>
    4dd0:	a0800015 	stw	r2,0(r20)
    4dd4:	dc409c15 	stw	r17,624(sp)
    4dd8:	003d8f06 	br	4418 <__alt_mem_epcs_flash_controller_0+0xff803418>
    4ddc:	d9400104 	addi	r5,sp,4
    4de0:	b809883a 	mov	r4,r23
    4de4:	000e2140 	call	e214 <_strtoull_r>
    4de8:	003f9806 	br	4c4c <__alt_mem_epcs_flash_controller_0+0xff803c4c>

00004dec <___vfprintf_internal_r>:
    4dec:	deffb804 	addi	sp,sp,-288
    4df0:	dfc04715 	stw	ra,284(sp)
    4df4:	ddc04515 	stw	r23,276(sp)
    4df8:	dd404315 	stw	r21,268(sp)
    4dfc:	d9002d15 	stw	r4,180(sp)
    4e00:	282f883a 	mov	r23,r5
    4e04:	302b883a 	mov	r21,r6
    4e08:	d9c02e15 	stw	r7,184(sp)
    4e0c:	df004615 	stw	fp,280(sp)
    4e10:	dd804415 	stw	r22,272(sp)
    4e14:	dd004215 	stw	r20,264(sp)
    4e18:	dcc04115 	stw	r19,260(sp)
    4e1c:	dc804015 	stw	r18,256(sp)
    4e20:	dc403f15 	stw	r17,252(sp)
    4e24:	dc003e15 	stw	r16,248(sp)
    4e28:	0009e100 	call	9e10 <_localeconv_r>
    4e2c:	10800017 	ldw	r2,0(r2)
    4e30:	1009883a 	mov	r4,r2
    4e34:	d8803415 	stw	r2,208(sp)
    4e38:	00033c80 	call	33c8 <strlen>
    4e3c:	d8803715 	stw	r2,220(sp)
    4e40:	d8802d17 	ldw	r2,180(sp)
    4e44:	10000226 	beq	r2,zero,4e50 <___vfprintf_internal_r+0x64>
    4e48:	10800e17 	ldw	r2,56(r2)
    4e4c:	1000fb26 	beq	r2,zero,523c <___vfprintf_internal_r+0x450>
    4e50:	b880030b 	ldhu	r2,12(r23)
    4e54:	10c8000c 	andi	r3,r2,8192
    4e58:	1800061e 	bne	r3,zero,4e74 <___vfprintf_internal_r+0x88>
    4e5c:	b9001917 	ldw	r4,100(r23)
    4e60:	00f7ffc4 	movi	r3,-8193
    4e64:	10880014 	ori	r2,r2,8192
    4e68:	20c6703a 	and	r3,r4,r3
    4e6c:	b880030d 	sth	r2,12(r23)
    4e70:	b8c01915 	stw	r3,100(r23)
    4e74:	10c0020c 	andi	r3,r2,8
    4e78:	1800c326 	beq	r3,zero,5188 <___vfprintf_internal_r+0x39c>
    4e7c:	b8c00417 	ldw	r3,16(r23)
    4e80:	1800c126 	beq	r3,zero,5188 <___vfprintf_internal_r+0x39c>
    4e84:	1080068c 	andi	r2,r2,26
    4e88:	00c00284 	movi	r3,10
    4e8c:	10c0c626 	beq	r2,r3,51a8 <___vfprintf_internal_r+0x3bc>
    4e90:	d8c00404 	addi	r3,sp,16
    4e94:	050000b4 	movhi	r20,2
    4e98:	d9001e04 	addi	r4,sp,120
    4e9c:	a5377684 	addi	r20,r20,-8742
    4ea0:	d8c01e15 	stw	r3,120(sp)
    4ea4:	d8002015 	stw	zero,128(sp)
    4ea8:	d8001f15 	stw	zero,124(sp)
    4eac:	d8003315 	stw	zero,204(sp)
    4eb0:	d8003615 	stw	zero,216(sp)
    4eb4:	d8003815 	stw	zero,224(sp)
    4eb8:	1811883a 	mov	r8,r3
    4ebc:	d8003915 	stw	zero,228(sp)
    4ec0:	d8003a15 	stw	zero,232(sp)
    4ec4:	d8002f15 	stw	zero,188(sp)
    4ec8:	d9002815 	stw	r4,160(sp)
    4ecc:	a8800007 	ldb	r2,0(r21)
    4ed0:	10028b26 	beq	r2,zero,5900 <___vfprintf_internal_r+0xb14>
    4ed4:	00c00944 	movi	r3,37
    4ed8:	a823883a 	mov	r17,r21
    4edc:	10c0021e 	bne	r2,r3,4ee8 <___vfprintf_internal_r+0xfc>
    4ee0:	00001406 	br	4f34 <___vfprintf_internal_r+0x148>
    4ee4:	10c00326 	beq	r2,r3,4ef4 <___vfprintf_internal_r+0x108>
    4ee8:	8c400044 	addi	r17,r17,1
    4eec:	88800007 	ldb	r2,0(r17)
    4ef0:	103ffc1e 	bne	r2,zero,4ee4 <__alt_mem_epcs_flash_controller_0+0xff803ee4>
    4ef4:	8d61c83a 	sub	r16,r17,r21
    4ef8:	80000e26 	beq	r16,zero,4f34 <___vfprintf_internal_r+0x148>
    4efc:	d8c02017 	ldw	r3,128(sp)
    4f00:	d8801f17 	ldw	r2,124(sp)
    4f04:	45400015 	stw	r21,0(r8)
    4f08:	1c07883a 	add	r3,r3,r16
    4f0c:	10800044 	addi	r2,r2,1
    4f10:	d8c02015 	stw	r3,128(sp)
    4f14:	44000115 	stw	r16,4(r8)
    4f18:	d8801f15 	stw	r2,124(sp)
    4f1c:	00c001c4 	movi	r3,7
    4f20:	1880a916 	blt	r3,r2,51c8 <___vfprintf_internal_r+0x3dc>
    4f24:	42000204 	addi	r8,r8,8
    4f28:	d9402f17 	ldw	r5,188(sp)
    4f2c:	2c0b883a 	add	r5,r5,r16
    4f30:	d9402f15 	stw	r5,188(sp)
    4f34:	88800007 	ldb	r2,0(r17)
    4f38:	1000aa26 	beq	r2,zero,51e4 <___vfprintf_internal_r+0x3f8>
    4f3c:	8d400044 	addi	r21,r17,1
    4f40:	8c400047 	ldb	r17,1(r17)
    4f44:	0021883a 	mov	r16,zero
    4f48:	00bfffc4 	movi	r2,-1
    4f4c:	0025883a 	mov	r18,zero
    4f50:	dc002905 	stb	r16,164(sp)
    4f54:	d8002785 	stb	zero,158(sp)
    4f58:	d8002b05 	stb	zero,172(sp)
    4f5c:	d8802a15 	stw	r2,168(sp)
    4f60:	d8003115 	stw	zero,196(sp)
    4f64:	04c01604 	movi	r19,88
    4f68:	05800244 	movi	r22,9
    4f6c:	9021883a 	mov	r16,r18
    4f70:	4039883a 	mov	fp,r8
    4f74:	ad400044 	addi	r21,r21,1
    4f78:	88bff804 	addi	r2,r17,-32
    4f7c:	98833236 	bltu	r19,r2,5c48 <___vfprintf_internal_r+0xe5c>
    4f80:	100490ba 	slli	r2,r2,2
    4f84:	00c00034 	movhi	r3,0
    4f88:	18d3e604 	addi	r3,r3,20376
    4f8c:	10c5883a 	add	r2,r2,r3
    4f90:	10800017 	ldw	r2,0(r2)
    4f94:	1000683a 	jmp	r2
    4f98:	00005b40 	call	5b4 <MemGetAddressRange+0x94>
    4f9c:	00005c48 	cmpgei	zero,zero,369
    4fa0:	00005c48 	cmpgei	zero,zero,369
    4fa4:	00005b60 	cmpeqi	zero,zero,365
    4fa8:	00005c48 	cmpgei	zero,zero,369
    4fac:	00005c48 	cmpgei	zero,zero,369
    4fb0:	00005c48 	cmpgei	zero,zero,369
    4fb4:	00005c48 	cmpgei	zero,zero,369
    4fb8:	00005c48 	cmpgei	zero,zero,369
    4fbc:	00005c48 	cmpgei	zero,zero,369
    4fc0:	00005248 	cmpgei	zero,zero,329
    4fc4:	00005a50 	cmplti	zero,zero,361
    4fc8:	00005c48 	cmpgei	zero,zero,369
    4fcc:	0000510c 	andi	zero,zero,324
    4fd0:	0000526c 	andhi	zero,zero,329
    4fd4:	00005c48 	cmpgei	zero,zero,369
    4fd8:	000052bc 	xorhi	zero,zero,330
    4fdc:	000052c8 	cmpgei	zero,zero,331
    4fe0:	000052c8 	cmpgei	zero,zero,331
    4fe4:	000052c8 	cmpgei	zero,zero,331
    4fe8:	000052c8 	cmpgei	zero,zero,331
    4fec:	000052c8 	cmpgei	zero,zero,331
    4ff0:	000052c8 	cmpgei	zero,zero,331
    4ff4:	000052c8 	cmpgei	zero,zero,331
    4ff8:	000052c8 	cmpgei	zero,zero,331
    4ffc:	000052c8 	cmpgei	zero,zero,331
    5000:	00005c48 	cmpgei	zero,zero,369
    5004:	00005c48 	cmpgei	zero,zero,369
    5008:	00005c48 	cmpgei	zero,zero,369
    500c:	00005c48 	cmpgei	zero,zero,369
    5010:	00005c48 	cmpgei	zero,zero,369
    5014:	00005c48 	cmpgei	zero,zero,369
    5018:	00005c48 	cmpgei	zero,zero,369
    501c:	00005c48 	cmpgei	zero,zero,369
    5020:	00005c48 	cmpgei	zero,zero,369
    5024:	00005c48 	cmpgei	zero,zero,369
    5028:	00005304 	movi	zero,332
    502c:	000053cc 	andi	zero,zero,335
    5030:	00005c48 	cmpgei	zero,zero,369
    5034:	000053cc 	andi	zero,zero,335
    5038:	00005c48 	cmpgei	zero,zero,369
    503c:	00005c48 	cmpgei	zero,zero,369
    5040:	00005c48 	cmpgei	zero,zero,369
    5044:	00005c48 	cmpgei	zero,zero,369
    5048:	00005478 	rdprs	zero,zero,337
    504c:	00005c48 	cmpgei	zero,zero,369
    5050:	00005c48 	cmpgei	zero,zero,369
    5054:	00005484 	movi	zero,338
    5058:	00005c48 	cmpgei	zero,zero,369
    505c:	00005c48 	cmpgei	zero,zero,369
    5060:	00005c48 	cmpgei	zero,zero,369
    5064:	00005c48 	cmpgei	zero,zero,369
    5068:	00005c48 	cmpgei	zero,zero,369
    506c:	00005908 	cmpgei	zero,zero,356
    5070:	00005c48 	cmpgei	zero,zero,369
    5074:	00005c48 	cmpgei	zero,zero,369
    5078:	00005974 	movhi	zero,357
    507c:	00005c48 	cmpgei	zero,zero,369
    5080:	00005c48 	cmpgei	zero,zero,369
    5084:	00005c48 	cmpgei	zero,zero,369
    5088:	00005c48 	cmpgei	zero,zero,369
    508c:	00005c48 	cmpgei	zero,zero,369
    5090:	00005c48 	cmpgei	zero,zero,369
    5094:	00005c48 	cmpgei	zero,zero,369
    5098:	00005c48 	cmpgei	zero,zero,369
    509c:	00005c48 	cmpgei	zero,zero,369
    50a0:	00005c48 	cmpgei	zero,zero,369
    50a4:	00005bec 	andhi	zero,zero,367
    50a8:	00005b6c 	andhi	zero,zero,365
    50ac:	000053cc 	andi	zero,zero,335
    50b0:	000053cc 	andi	zero,zero,335
    50b4:	000053cc 	andi	zero,zero,335
    50b8:	00005b8c 	andi	zero,zero,366
    50bc:	00005b6c 	andhi	zero,zero,365
    50c0:	00005c48 	cmpgei	zero,zero,369
    50c4:	00005c48 	cmpgei	zero,zero,369
    50c8:	00005b98 	cmpnei	zero,zero,366
    50cc:	00005c48 	cmpgei	zero,zero,369
    50d0:	00005bac 	andhi	zero,zero,366
    50d4:	00005a30 	cmpltui	zero,zero,360
    50d8:	00005118 	cmpnei	zero,zero,324
    50dc:	00005a68 	cmpgeui	zero,zero,361
    50e0:	00005c48 	cmpgei	zero,zero,369
    50e4:	00005a74 	movhi	zero,361
    50e8:	00005c48 	cmpgei	zero,zero,369
    50ec:	00005ad8 	cmpnei	zero,zero,363
    50f0:	00005c48 	cmpgei	zero,zero,369
    50f4:	00005c48 	cmpgei	zero,zero,369
    50f8:	00005af8 	rdprs	zero,zero,363
    50fc:	d8c03117 	ldw	r3,196(sp)
    5100:	d8802e15 	stw	r2,184(sp)
    5104:	00c7c83a 	sub	r3,zero,r3
    5108:	d8c03115 	stw	r3,196(sp)
    510c:	84000114 	ori	r16,r16,4
    5110:	ac400007 	ldb	r17,0(r21)
    5114:	003f9706 	br	4f74 <__alt_mem_epcs_flash_controller_0+0xff803f74>
    5118:	00800c04 	movi	r2,48
    511c:	d8802705 	stb	r2,156(sp)
    5120:	00801e04 	movi	r2,120
    5124:	d8802745 	stb	r2,157(sp)
    5128:	d9002a17 	ldw	r4,168(sp)
    512c:	d8802e17 	ldw	r2,184(sp)
    5130:	d8002785 	stb	zero,158(sp)
    5134:	e011883a 	mov	r8,fp
    5138:	10c00104 	addi	r3,r2,4
    513c:	14c00017 	ldw	r19,0(r2)
    5140:	002d883a 	mov	r22,zero
    5144:	80800094 	ori	r2,r16,2
    5148:	2002ca16 	blt	r4,zero,5c74 <___vfprintf_internal_r+0xe88>
    514c:	00bfdfc4 	movi	r2,-129
    5150:	80a4703a 	and	r18,r16,r2
    5154:	d8c02e15 	stw	r3,184(sp)
    5158:	94800094 	ori	r18,r18,2
    515c:	9802b41e 	bne	r19,zero,5c30 <___vfprintf_internal_r+0xe44>
    5160:	014000b4 	movhi	r5,2
    5164:	29776f04 	addi	r5,r5,-8772
    5168:	d9403915 	stw	r5,228(sp)
    516c:	04401e04 	movi	r17,120
    5170:	d8802a17 	ldw	r2,168(sp)
    5174:	0039883a 	mov	fp,zero
    5178:	1001fa26 	beq	r2,zero,5964 <___vfprintf_internal_r+0xb78>
    517c:	0027883a 	mov	r19,zero
    5180:	002d883a 	mov	r22,zero
    5184:	00021906 	br	59ec <___vfprintf_internal_r+0xc00>
    5188:	d9002d17 	ldw	r4,180(sp)
    518c:	b80b883a 	mov	r5,r23
    5190:	00072000 	call	7200 <__swsetup_r>
    5194:	1005dc1e 	bne	r2,zero,6908 <___vfprintf_internal_r+0x1b1c>
    5198:	b880030b 	ldhu	r2,12(r23)
    519c:	00c00284 	movi	r3,10
    51a0:	1080068c 	andi	r2,r2,26
    51a4:	10ff3a1e 	bne	r2,r3,4e90 <__alt_mem_epcs_flash_controller_0+0xff803e90>
    51a8:	b880038f 	ldh	r2,14(r23)
    51ac:	103f3816 	blt	r2,zero,4e90 <__alt_mem_epcs_flash_controller_0+0xff803e90>
    51b0:	d9c02e17 	ldw	r7,184(sp)
    51b4:	d9002d17 	ldw	r4,180(sp)
    51b8:	a80d883a 	mov	r6,r21
    51bc:	b80b883a 	mov	r5,r23
    51c0:	00070e40 	call	70e4 <__sbprintf>
    51c4:	00001106 	br	520c <___vfprintf_internal_r+0x420>
    51c8:	d9002d17 	ldw	r4,180(sp)
    51cc:	d9801e04 	addi	r6,sp,120
    51d0:	b80b883a 	mov	r5,r23
    51d4:	0011f300 	call	11f30 <__sprint_r>
    51d8:	1000081e 	bne	r2,zero,51fc <___vfprintf_internal_r+0x410>
    51dc:	da000404 	addi	r8,sp,16
    51e0:	003f5106 	br	4f28 <__alt_mem_epcs_flash_controller_0+0xff803f28>
    51e4:	d8802017 	ldw	r2,128(sp)
    51e8:	10000426 	beq	r2,zero,51fc <___vfprintf_internal_r+0x410>
    51ec:	d9002d17 	ldw	r4,180(sp)
    51f0:	d9801e04 	addi	r6,sp,120
    51f4:	b80b883a 	mov	r5,r23
    51f8:	0011f300 	call	11f30 <__sprint_r>
    51fc:	b880030b 	ldhu	r2,12(r23)
    5200:	1080100c 	andi	r2,r2,64
    5204:	1005c01e 	bne	r2,zero,6908 <___vfprintf_internal_r+0x1b1c>
    5208:	d8802f17 	ldw	r2,188(sp)
    520c:	dfc04717 	ldw	ra,284(sp)
    5210:	df004617 	ldw	fp,280(sp)
    5214:	ddc04517 	ldw	r23,276(sp)
    5218:	dd804417 	ldw	r22,272(sp)
    521c:	dd404317 	ldw	r21,268(sp)
    5220:	dd004217 	ldw	r20,264(sp)
    5224:	dcc04117 	ldw	r19,260(sp)
    5228:	dc804017 	ldw	r18,256(sp)
    522c:	dc403f17 	ldw	r17,252(sp)
    5230:	dc003e17 	ldw	r16,248(sp)
    5234:	dec04804 	addi	sp,sp,288
    5238:	f800283a 	ret
    523c:	d9002d17 	ldw	r4,180(sp)
    5240:	00092600 	call	9260 <__sinit>
    5244:	003f0206 	br	4e50 <__alt_mem_epcs_flash_controller_0+0xff803e50>
    5248:	d9002e17 	ldw	r4,184(sp)
    524c:	d9402e17 	ldw	r5,184(sp)
    5250:	21000017 	ldw	r4,0(r4)
    5254:	28800104 	addi	r2,r5,4
    5258:	d9003115 	stw	r4,196(sp)
    525c:	203fa716 	blt	r4,zero,50fc <__alt_mem_epcs_flash_controller_0+0xff8040fc>
    5260:	d8802e15 	stw	r2,184(sp)
    5264:	ac400007 	ldb	r17,0(r21)
    5268:	003f4206 	br	4f74 <__alt_mem_epcs_flash_controller_0+0xff803f74>
    526c:	ac400007 	ldb	r17,0(r21)
    5270:	01000a84 	movi	r4,42
    5274:	a8c00044 	addi	r3,r21,1
    5278:	89075826 	beq	r17,r4,6fdc <___vfprintf_internal_r+0x21f0>
    527c:	8cbff404 	addi	r18,r17,-48
    5280:	b486ae36 	bltu	r22,r18,6d3c <___vfprintf_internal_r+0x1f50>
    5284:	0009883a 	mov	r4,zero
    5288:	1823883a 	mov	r17,r3
    528c:	01400284 	movi	r5,10
    5290:	00024440 	call	2444 <__mulsi3>
    5294:	88c00007 	ldb	r3,0(r17)
    5298:	1489883a 	add	r4,r2,r18
    529c:	8d400044 	addi	r21,r17,1
    52a0:	1cbff404 	addi	r18,r3,-48
    52a4:	a823883a 	mov	r17,r21
    52a8:	b4bff82e 	bgeu	r22,r18,528c <__alt_mem_epcs_flash_controller_0+0xff80428c>
    52ac:	1823883a 	mov	r17,r3
    52b0:	2005f616 	blt	r4,zero,6a8c <___vfprintf_internal_r+0x1ca0>
    52b4:	d9002a15 	stw	r4,168(sp)
    52b8:	003f2f06 	br	4f78 <__alt_mem_epcs_flash_controller_0+0xff803f78>
    52bc:	84002014 	ori	r16,r16,128
    52c0:	ac400007 	ldb	r17,0(r21)
    52c4:	003f2b06 	br	4f74 <__alt_mem_epcs_flash_controller_0+0xff803f74>
    52c8:	8cbff404 	addi	r18,r17,-48
    52cc:	d8003115 	stw	zero,196(sp)
    52d0:	0009883a 	mov	r4,zero
    52d4:	a823883a 	mov	r17,r21
    52d8:	01400284 	movi	r5,10
    52dc:	00024440 	call	2444 <__mulsi3>
    52e0:	88c00007 	ldb	r3,0(r17)
    52e4:	9089883a 	add	r4,r18,r2
    52e8:	ad400044 	addi	r21,r21,1
    52ec:	1cbff404 	addi	r18,r3,-48
    52f0:	a823883a 	mov	r17,r21
    52f4:	b4bff82e 	bgeu	r22,r18,52d8 <__alt_mem_epcs_flash_controller_0+0xff8042d8>
    52f8:	1823883a 	mov	r17,r3
    52fc:	d9003115 	stw	r4,196(sp)
    5300:	003f1d06 	br	4f78 <__alt_mem_epcs_flash_controller_0+0xff803f78>
    5304:	8025883a 	mov	r18,r16
    5308:	dc002903 	ldbu	r16,164(sp)
    530c:	e011883a 	mov	r8,fp
    5310:	84003fcc 	andi	r16,r16,255
    5314:	8007531e 	bne	r16,zero,7064 <___vfprintf_internal_r+0x2278>
    5318:	94800414 	ori	r18,r18,16
    531c:	9080080c 	andi	r2,r18,32
    5320:	1003a326 	beq	r2,zero,61b0 <___vfprintf_internal_r+0x13c4>
    5324:	d9002e17 	ldw	r4,184(sp)
    5328:	20800117 	ldw	r2,4(r4)
    532c:	24c00017 	ldw	r19,0(r4)
    5330:	21000204 	addi	r4,r4,8
    5334:	d9002e15 	stw	r4,184(sp)
    5338:	102d883a 	mov	r22,r2
    533c:	10047316 	blt	r2,zero,650c <___vfprintf_internal_r+0x1720>
    5340:	d9002a17 	ldw	r4,168(sp)
    5344:	df002783 	ldbu	fp,158(sp)
    5348:	2003e416 	blt	r4,zero,62dc <___vfprintf_internal_r+0x14f0>
    534c:	00ffdfc4 	movi	r3,-129
    5350:	9d84b03a 	or	r2,r19,r22
    5354:	90e4703a 	and	r18,r18,r3
    5358:	10018026 	beq	r2,zero,595c <___vfprintf_internal_r+0xb70>
    535c:	b003ab26 	beq	r22,zero,620c <___vfprintf_internal_r+0x1420>
    5360:	dc402915 	stw	r17,164(sp)
    5364:	dc001e04 	addi	r16,sp,120
    5368:	b023883a 	mov	r17,r22
    536c:	402d883a 	mov	r22,r8
    5370:	9809883a 	mov	r4,r19
    5374:	880b883a 	mov	r5,r17
    5378:	01800284 	movi	r6,10
    537c:	000f883a 	mov	r7,zero
    5380:	001666c0 	call	1666c <__umoddi3>
    5384:	10800c04 	addi	r2,r2,48
    5388:	843fffc4 	addi	r16,r16,-1
    538c:	9809883a 	mov	r4,r19
    5390:	880b883a 	mov	r5,r17
    5394:	80800005 	stb	r2,0(r16)
    5398:	01800284 	movi	r6,10
    539c:	000f883a 	mov	r7,zero
    53a0:	00160700 	call	16070 <__udivdi3>
    53a4:	1027883a 	mov	r19,r2
    53a8:	10c4b03a 	or	r2,r2,r3
    53ac:	1823883a 	mov	r17,r3
    53b0:	103fef1e 	bne	r2,zero,5370 <__alt_mem_epcs_flash_controller_0+0xff804370>
    53b4:	d8c02817 	ldw	r3,160(sp)
    53b8:	dc402917 	ldw	r17,164(sp)
    53bc:	b011883a 	mov	r8,r22
    53c0:	1c07c83a 	sub	r3,r3,r16
    53c4:	d8c02b15 	stw	r3,172(sp)
    53c8:	00005f06 	br	5548 <___vfprintf_internal_r+0x75c>
    53cc:	8025883a 	mov	r18,r16
    53d0:	dc002903 	ldbu	r16,164(sp)
    53d4:	e011883a 	mov	r8,fp
    53d8:	84003fcc 	andi	r16,r16,255
    53dc:	80071e1e 	bne	r16,zero,7058 <___vfprintf_internal_r+0x226c>
    53e0:	9080020c 	andi	r2,r18,8
    53e4:	1004af26 	beq	r2,zero,66a4 <___vfprintf_internal_r+0x18b8>
    53e8:	d9002e17 	ldw	r4,184(sp)
    53ec:	d9402e17 	ldw	r5,184(sp)
    53f0:	d8802e17 	ldw	r2,184(sp)
    53f4:	21000017 	ldw	r4,0(r4)
    53f8:	29400117 	ldw	r5,4(r5)
    53fc:	10800204 	addi	r2,r2,8
    5400:	d9003615 	stw	r4,216(sp)
    5404:	d9403815 	stw	r5,224(sp)
    5408:	d8802e15 	stw	r2,184(sp)
    540c:	d9003617 	ldw	r4,216(sp)
    5410:	d9403817 	ldw	r5,224(sp)
    5414:	da003d15 	stw	r8,244(sp)
    5418:	04000044 	movi	r16,1
    541c:	000bfbc0 	call	bfbc <__fpclassifyd>
    5420:	da003d17 	ldw	r8,244(sp)
    5424:	1404441e 	bne	r2,r16,6538 <___vfprintf_internal_r+0x174c>
    5428:	d9003617 	ldw	r4,216(sp)
    542c:	d9403817 	ldw	r5,224(sp)
    5430:	000d883a 	mov	r6,zero
    5434:	000f883a 	mov	r7,zero
    5438:	001820c0 	call	1820c <__ledf2>
    543c:	da003d17 	ldw	r8,244(sp)
    5440:	1005e316 	blt	r2,zero,6bd0 <___vfprintf_internal_r+0x1de4>
    5444:	df002783 	ldbu	fp,158(sp)
    5448:	008011c4 	movi	r2,71
    544c:	1445580e 	bge	r2,r17,69b0 <___vfprintf_internal_r+0x1bc4>
    5450:	040000b4 	movhi	r16,2
    5454:	84376704 	addi	r16,r16,-8804
    5458:	00c000c4 	movi	r3,3
    545c:	00bfdfc4 	movi	r2,-129
    5460:	d8c02915 	stw	r3,164(sp)
    5464:	90a4703a 	and	r18,r18,r2
    5468:	d8c02b15 	stw	r3,172(sp)
    546c:	d8002a15 	stw	zero,168(sp)
    5470:	d8003215 	stw	zero,200(sp)
    5474:	00003a06 	br	5560 <___vfprintf_internal_r+0x774>
    5478:	84000214 	ori	r16,r16,8
    547c:	ac400007 	ldb	r17,0(r21)
    5480:	003ebc06 	br	4f74 <__alt_mem_epcs_flash_controller_0+0xff803f74>
    5484:	8025883a 	mov	r18,r16
    5488:	dc002903 	ldbu	r16,164(sp)
    548c:	e011883a 	mov	r8,fp
    5490:	84003fcc 	andi	r16,r16,255
    5494:	8007001e 	bne	r16,zero,7098 <___vfprintf_internal_r+0x22ac>
    5498:	94800414 	ori	r18,r18,16
    549c:	9080080c 	andi	r2,r18,32
    54a0:	1002fa26 	beq	r2,zero,608c <___vfprintf_internal_r+0x12a0>
    54a4:	d9002e17 	ldw	r4,184(sp)
    54a8:	d9402a17 	ldw	r5,168(sp)
    54ac:	d8002785 	stb	zero,158(sp)
    54b0:	20800204 	addi	r2,r4,8
    54b4:	24c00017 	ldw	r19,0(r4)
    54b8:	25800117 	ldw	r22,4(r4)
    54bc:	2804b116 	blt	r5,zero,6784 <___vfprintf_internal_r+0x1998>
    54c0:	013fdfc4 	movi	r4,-129
    54c4:	9d86b03a 	or	r3,r19,r22
    54c8:	d8802e15 	stw	r2,184(sp)
    54cc:	9124703a 	and	r18,r18,r4
    54d0:	1802fb1e 	bne	r3,zero,60c0 <___vfprintf_internal_r+0x12d4>
    54d4:	d8c02a17 	ldw	r3,168(sp)
    54d8:	0039883a 	mov	fp,zero
    54dc:	1805e526 	beq	r3,zero,6c74 <___vfprintf_internal_r+0x1e88>
    54e0:	0027883a 	mov	r19,zero
    54e4:	002d883a 	mov	r22,zero
    54e8:	dc001e04 	addi	r16,sp,120
    54ec:	9806d0fa 	srli	r3,r19,3
    54f0:	b008977a 	slli	r4,r22,29
    54f4:	b02cd0fa 	srli	r22,r22,3
    54f8:	9cc001cc 	andi	r19,r19,7
    54fc:	98800c04 	addi	r2,r19,48
    5500:	843fffc4 	addi	r16,r16,-1
    5504:	20e6b03a 	or	r19,r4,r3
    5508:	80800005 	stb	r2,0(r16)
    550c:	9d86b03a 	or	r3,r19,r22
    5510:	183ff61e 	bne	r3,zero,54ec <__alt_mem_epcs_flash_controller_0+0xff8044ec>
    5514:	90c0004c 	andi	r3,r18,1
    5518:	18014126 	beq	r3,zero,5a20 <___vfprintf_internal_r+0xc34>
    551c:	10803fcc 	andi	r2,r2,255
    5520:	1080201c 	xori	r2,r2,128
    5524:	10bfe004 	addi	r2,r2,-128
    5528:	00c00c04 	movi	r3,48
    552c:	10c13c26 	beq	r2,r3,5a20 <___vfprintf_internal_r+0xc34>
    5530:	80ffffc5 	stb	r3,-1(r16)
    5534:	d8c02817 	ldw	r3,160(sp)
    5538:	80bfffc4 	addi	r2,r16,-1
    553c:	1021883a 	mov	r16,r2
    5540:	1887c83a 	sub	r3,r3,r2
    5544:	d8c02b15 	stw	r3,172(sp)
    5548:	d8802b17 	ldw	r2,172(sp)
    554c:	d9002a17 	ldw	r4,168(sp)
    5550:	1100010e 	bge	r2,r4,5558 <___vfprintf_internal_r+0x76c>
    5554:	2005883a 	mov	r2,r4
    5558:	d8802915 	stw	r2,164(sp)
    555c:	d8003215 	stw	zero,200(sp)
    5560:	e7003fcc 	andi	fp,fp,255
    5564:	e700201c 	xori	fp,fp,128
    5568:	e73fe004 	addi	fp,fp,-128
    556c:	e0000326 	beq	fp,zero,557c <___vfprintf_internal_r+0x790>
    5570:	d8c02917 	ldw	r3,164(sp)
    5574:	18c00044 	addi	r3,r3,1
    5578:	d8c02915 	stw	r3,164(sp)
    557c:	90c0008c 	andi	r3,r18,2
    5580:	d8c02c15 	stw	r3,176(sp)
    5584:	18000326 	beq	r3,zero,5594 <___vfprintf_internal_r+0x7a8>
    5588:	d8c02917 	ldw	r3,164(sp)
    558c:	18c00084 	addi	r3,r3,2
    5590:	d8c02915 	stw	r3,164(sp)
    5594:	90c0210c 	andi	r3,r18,132
    5598:	d8c03015 	stw	r3,192(sp)
    559c:	1801c51e 	bne	r3,zero,5cb4 <___vfprintf_internal_r+0xec8>
    55a0:	d9003117 	ldw	r4,196(sp)
    55a4:	d8c02917 	ldw	r3,164(sp)
    55a8:	20e7c83a 	sub	r19,r4,r3
    55ac:	04c1c10e 	bge	zero,r19,5cb4 <___vfprintf_internal_r+0xec8>
    55b0:	02400404 	movi	r9,16
    55b4:	d8c02017 	ldw	r3,128(sp)
    55b8:	d8801f17 	ldw	r2,124(sp)
    55bc:	4cc52f0e 	bge	r9,r19,6a7c <___vfprintf_internal_r+0x1c90>
    55c0:	014000b4 	movhi	r5,2
    55c4:	29777a84 	addi	r5,r5,-8726
    55c8:	dc403b15 	stw	r17,236(sp)
    55cc:	d9403515 	stw	r5,212(sp)
    55d0:	9823883a 	mov	r17,r19
    55d4:	482d883a 	mov	r22,r9
    55d8:	9027883a 	mov	r19,r18
    55dc:	070001c4 	movi	fp,7
    55e0:	8025883a 	mov	r18,r16
    55e4:	dc002d17 	ldw	r16,180(sp)
    55e8:	00000306 	br	55f8 <___vfprintf_internal_r+0x80c>
    55ec:	8c7ffc04 	addi	r17,r17,-16
    55f0:	42000204 	addi	r8,r8,8
    55f4:	b440130e 	bge	r22,r17,5644 <___vfprintf_internal_r+0x858>
    55f8:	010000b4 	movhi	r4,2
    55fc:	18c00404 	addi	r3,r3,16
    5600:	10800044 	addi	r2,r2,1
    5604:	21377a84 	addi	r4,r4,-8726
    5608:	41000015 	stw	r4,0(r8)
    560c:	45800115 	stw	r22,4(r8)
    5610:	d8c02015 	stw	r3,128(sp)
    5614:	d8801f15 	stw	r2,124(sp)
    5618:	e0bff40e 	bge	fp,r2,55ec <__alt_mem_epcs_flash_controller_0+0xff8045ec>
    561c:	d9801e04 	addi	r6,sp,120
    5620:	b80b883a 	mov	r5,r23
    5624:	8009883a 	mov	r4,r16
    5628:	0011f300 	call	11f30 <__sprint_r>
    562c:	103ef31e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    5630:	8c7ffc04 	addi	r17,r17,-16
    5634:	d8c02017 	ldw	r3,128(sp)
    5638:	d8801f17 	ldw	r2,124(sp)
    563c:	da000404 	addi	r8,sp,16
    5640:	b47fed16 	blt	r22,r17,55f8 <__alt_mem_epcs_flash_controller_0+0xff8045f8>
    5644:	9021883a 	mov	r16,r18
    5648:	9825883a 	mov	r18,r19
    564c:	8827883a 	mov	r19,r17
    5650:	dc403b17 	ldw	r17,236(sp)
    5654:	d9403517 	ldw	r5,212(sp)
    5658:	98c7883a 	add	r3,r19,r3
    565c:	10800044 	addi	r2,r2,1
    5660:	41400015 	stw	r5,0(r8)
    5664:	44c00115 	stw	r19,4(r8)
    5668:	d8c02015 	stw	r3,128(sp)
    566c:	d8801f15 	stw	r2,124(sp)
    5670:	010001c4 	movi	r4,7
    5674:	2082c516 	blt	r4,r2,618c <___vfprintf_internal_r+0x13a0>
    5678:	df002787 	ldb	fp,158(sp)
    567c:	42000204 	addi	r8,r8,8
    5680:	e0000c26 	beq	fp,zero,56b4 <___vfprintf_internal_r+0x8c8>
    5684:	d8801f17 	ldw	r2,124(sp)
    5688:	d9002784 	addi	r4,sp,158
    568c:	18c00044 	addi	r3,r3,1
    5690:	10800044 	addi	r2,r2,1
    5694:	41000015 	stw	r4,0(r8)
    5698:	01000044 	movi	r4,1
    569c:	41000115 	stw	r4,4(r8)
    56a0:	d8c02015 	stw	r3,128(sp)
    56a4:	d8801f15 	stw	r2,124(sp)
    56a8:	010001c4 	movi	r4,7
    56ac:	20825e16 	blt	r4,r2,6028 <___vfprintf_internal_r+0x123c>
    56b0:	42000204 	addi	r8,r8,8
    56b4:	d8802c17 	ldw	r2,176(sp)
    56b8:	10000c26 	beq	r2,zero,56ec <___vfprintf_internal_r+0x900>
    56bc:	d8801f17 	ldw	r2,124(sp)
    56c0:	d9002704 	addi	r4,sp,156
    56c4:	18c00084 	addi	r3,r3,2
    56c8:	10800044 	addi	r2,r2,1
    56cc:	41000015 	stw	r4,0(r8)
    56d0:	01000084 	movi	r4,2
    56d4:	41000115 	stw	r4,4(r8)
    56d8:	d8c02015 	stw	r3,128(sp)
    56dc:	d8801f15 	stw	r2,124(sp)
    56e0:	010001c4 	movi	r4,7
    56e4:	20825816 	blt	r4,r2,6048 <___vfprintf_internal_r+0x125c>
    56e8:	42000204 	addi	r8,r8,8
    56ec:	d9003017 	ldw	r4,192(sp)
    56f0:	00802004 	movi	r2,128
    56f4:	2081bb26 	beq	r4,r2,5de4 <___vfprintf_internal_r+0xff8>
    56f8:	d9402a17 	ldw	r5,168(sp)
    56fc:	d8802b17 	ldw	r2,172(sp)
    5700:	28adc83a 	sub	r22,r5,r2
    5704:	0580310e 	bge	zero,r22,57cc <___vfprintf_internal_r+0x9e0>
    5708:	07000404 	movi	fp,16
    570c:	d8801f17 	ldw	r2,124(sp)
    5710:	e584360e 	bge	fp,r22,67ec <___vfprintf_internal_r+0x1a00>
    5714:	014000b4 	movhi	r5,2
    5718:	29777684 	addi	r5,r5,-8742
    571c:	dc402a15 	stw	r17,168(sp)
    5720:	d9402c15 	stw	r5,176(sp)
    5724:	b023883a 	mov	r17,r22
    5728:	04c001c4 	movi	r19,7
    572c:	a82d883a 	mov	r22,r21
    5730:	902b883a 	mov	r21,r18
    5734:	8025883a 	mov	r18,r16
    5738:	dc002d17 	ldw	r16,180(sp)
    573c:	00000306 	br	574c <___vfprintf_internal_r+0x960>
    5740:	8c7ffc04 	addi	r17,r17,-16
    5744:	42000204 	addi	r8,r8,8
    5748:	e440110e 	bge	fp,r17,5790 <___vfprintf_internal_r+0x9a4>
    574c:	18c00404 	addi	r3,r3,16
    5750:	10800044 	addi	r2,r2,1
    5754:	45000015 	stw	r20,0(r8)
    5758:	47000115 	stw	fp,4(r8)
    575c:	d8c02015 	stw	r3,128(sp)
    5760:	d8801f15 	stw	r2,124(sp)
    5764:	98bff60e 	bge	r19,r2,5740 <__alt_mem_epcs_flash_controller_0+0xff804740>
    5768:	d9801e04 	addi	r6,sp,120
    576c:	b80b883a 	mov	r5,r23
    5770:	8009883a 	mov	r4,r16
    5774:	0011f300 	call	11f30 <__sprint_r>
    5778:	103ea01e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    577c:	8c7ffc04 	addi	r17,r17,-16
    5780:	d8c02017 	ldw	r3,128(sp)
    5784:	d8801f17 	ldw	r2,124(sp)
    5788:	da000404 	addi	r8,sp,16
    578c:	e47fef16 	blt	fp,r17,574c <__alt_mem_epcs_flash_controller_0+0xff80474c>
    5790:	9021883a 	mov	r16,r18
    5794:	a825883a 	mov	r18,r21
    5798:	b02b883a 	mov	r21,r22
    579c:	882d883a 	mov	r22,r17
    57a0:	dc402a17 	ldw	r17,168(sp)
    57a4:	d9002c17 	ldw	r4,176(sp)
    57a8:	1d87883a 	add	r3,r3,r22
    57ac:	10800044 	addi	r2,r2,1
    57b0:	41000015 	stw	r4,0(r8)
    57b4:	45800115 	stw	r22,4(r8)
    57b8:	d8c02015 	stw	r3,128(sp)
    57bc:	d8801f15 	stw	r2,124(sp)
    57c0:	010001c4 	movi	r4,7
    57c4:	20821016 	blt	r4,r2,6008 <___vfprintf_internal_r+0x121c>
    57c8:	42000204 	addi	r8,r8,8
    57cc:	9080400c 	andi	r2,r18,256
    57d0:	10013a1e 	bne	r2,zero,5cbc <___vfprintf_internal_r+0xed0>
    57d4:	d9402b17 	ldw	r5,172(sp)
    57d8:	d8801f17 	ldw	r2,124(sp)
    57dc:	44000015 	stw	r16,0(r8)
    57e0:	1947883a 	add	r3,r3,r5
    57e4:	10800044 	addi	r2,r2,1
    57e8:	41400115 	stw	r5,4(r8)
    57ec:	d8c02015 	stw	r3,128(sp)
    57f0:	d8801f15 	stw	r2,124(sp)
    57f4:	010001c4 	movi	r4,7
    57f8:	2081f516 	blt	r4,r2,5fd0 <___vfprintf_internal_r+0x11e4>
    57fc:	42000204 	addi	r8,r8,8
    5800:	9480010c 	andi	r18,r18,4
    5804:	90003226 	beq	r18,zero,58d0 <___vfprintf_internal_r+0xae4>
    5808:	d9403117 	ldw	r5,196(sp)
    580c:	d8802917 	ldw	r2,164(sp)
    5810:	28a1c83a 	sub	r16,r5,r2
    5814:	04002e0e 	bge	zero,r16,58d0 <___vfprintf_internal_r+0xae4>
    5818:	04400404 	movi	r17,16
    581c:	d8801f17 	ldw	r2,124(sp)
    5820:	8c04c40e 	bge	r17,r16,6b34 <___vfprintf_internal_r+0x1d48>
    5824:	014000b4 	movhi	r5,2
    5828:	29777a84 	addi	r5,r5,-8726
    582c:	d9403515 	stw	r5,212(sp)
    5830:	048001c4 	movi	r18,7
    5834:	dcc02d17 	ldw	r19,180(sp)
    5838:	00000306 	br	5848 <___vfprintf_internal_r+0xa5c>
    583c:	843ffc04 	addi	r16,r16,-16
    5840:	42000204 	addi	r8,r8,8
    5844:	8c00130e 	bge	r17,r16,5894 <___vfprintf_internal_r+0xaa8>
    5848:	010000b4 	movhi	r4,2
    584c:	18c00404 	addi	r3,r3,16
    5850:	10800044 	addi	r2,r2,1
    5854:	21377a84 	addi	r4,r4,-8726
    5858:	41000015 	stw	r4,0(r8)
    585c:	44400115 	stw	r17,4(r8)
    5860:	d8c02015 	stw	r3,128(sp)
    5864:	d8801f15 	stw	r2,124(sp)
    5868:	90bff40e 	bge	r18,r2,583c <__alt_mem_epcs_flash_controller_0+0xff80483c>
    586c:	d9801e04 	addi	r6,sp,120
    5870:	b80b883a 	mov	r5,r23
    5874:	9809883a 	mov	r4,r19
    5878:	0011f300 	call	11f30 <__sprint_r>
    587c:	103e5f1e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    5880:	843ffc04 	addi	r16,r16,-16
    5884:	d8c02017 	ldw	r3,128(sp)
    5888:	d8801f17 	ldw	r2,124(sp)
    588c:	da000404 	addi	r8,sp,16
    5890:	8c3fed16 	blt	r17,r16,5848 <__alt_mem_epcs_flash_controller_0+0xff804848>
    5894:	d9403517 	ldw	r5,212(sp)
    5898:	1c07883a 	add	r3,r3,r16
    589c:	10800044 	addi	r2,r2,1
    58a0:	41400015 	stw	r5,0(r8)
    58a4:	44000115 	stw	r16,4(r8)
    58a8:	d8c02015 	stw	r3,128(sp)
    58ac:	d8801f15 	stw	r2,124(sp)
    58b0:	010001c4 	movi	r4,7
    58b4:	2080060e 	bge	r4,r2,58d0 <___vfprintf_internal_r+0xae4>
    58b8:	d9002d17 	ldw	r4,180(sp)
    58bc:	d9801e04 	addi	r6,sp,120
    58c0:	b80b883a 	mov	r5,r23
    58c4:	0011f300 	call	11f30 <__sprint_r>
    58c8:	103e4c1e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    58cc:	d8c02017 	ldw	r3,128(sp)
    58d0:	d8803117 	ldw	r2,196(sp)
    58d4:	d9002917 	ldw	r4,164(sp)
    58d8:	1100010e 	bge	r2,r4,58e0 <___vfprintf_internal_r+0xaf4>
    58dc:	2005883a 	mov	r2,r4
    58e0:	d9402f17 	ldw	r5,188(sp)
    58e4:	288b883a 	add	r5,r5,r2
    58e8:	d9402f15 	stw	r5,188(sp)
    58ec:	1801c01e 	bne	r3,zero,5ff0 <___vfprintf_internal_r+0x1204>
    58f0:	a8800007 	ldb	r2,0(r21)
    58f4:	d8001f15 	stw	zero,124(sp)
    58f8:	da000404 	addi	r8,sp,16
    58fc:	103d751e 	bne	r2,zero,4ed4 <__alt_mem_epcs_flash_controller_0+0xff803ed4>
    5900:	a823883a 	mov	r17,r21
    5904:	003d8b06 	br	4f34 <__alt_mem_epcs_flash_controller_0+0xff803f34>
    5908:	8025883a 	mov	r18,r16
    590c:	dc002903 	ldbu	r16,164(sp)
    5910:	e011883a 	mov	r8,fp
    5914:	84003fcc 	andi	r16,r16,255
    5918:	8005e51e 	bne	r16,zero,70b0 <___vfprintf_internal_r+0x22c4>
    591c:	94800414 	ori	r18,r18,16
    5920:	9080080c 	andi	r2,r18,32
    5924:	10022b26 	beq	r2,zero,61d4 <___vfprintf_internal_r+0x13e8>
    5928:	d9002e17 	ldw	r4,184(sp)
    592c:	d9402a17 	ldw	r5,168(sp)
    5930:	d8002785 	stb	zero,158(sp)
    5934:	20c00204 	addi	r3,r4,8
    5938:	24c00017 	ldw	r19,0(r4)
    593c:	25800117 	ldw	r22,4(r4)
    5940:	28042e16 	blt	r5,zero,69fc <___vfprintf_internal_r+0x1c10>
    5944:	013fdfc4 	movi	r4,-129
    5948:	9d84b03a 	or	r2,r19,r22
    594c:	d8c02e15 	stw	r3,184(sp)
    5950:	9124703a 	and	r18,r18,r4
    5954:	0039883a 	mov	fp,zero
    5958:	103e801e 	bne	r2,zero,535c <__alt_mem_epcs_flash_controller_0+0xff80435c>
    595c:	d9002a17 	ldw	r4,168(sp)
    5960:	2002e01e 	bne	r4,zero,64e4 <___vfprintf_internal_r+0x16f8>
    5964:	d8002a15 	stw	zero,168(sp)
    5968:	d8002b15 	stw	zero,172(sp)
    596c:	dc001e04 	addi	r16,sp,120
    5970:	003ef506 	br	5548 <__alt_mem_epcs_flash_controller_0+0xff804548>
    5974:	8025883a 	mov	r18,r16
    5978:	dc002903 	ldbu	r16,164(sp)
    597c:	e011883a 	mov	r8,fp
    5980:	84003fcc 	andi	r16,r16,255
    5984:	8005ba1e 	bne	r16,zero,7070 <___vfprintf_internal_r+0x2284>
    5988:	010000b4 	movhi	r4,2
    598c:	21376a04 	addi	r4,r4,-8792
    5990:	d9003915 	stw	r4,228(sp)
    5994:	9080080c 	andi	r2,r18,32
    5998:	10006126 	beq	r2,zero,5b20 <___vfprintf_internal_r+0xd34>
    599c:	d9402e17 	ldw	r5,184(sp)
    59a0:	2cc00017 	ldw	r19,0(r5)
    59a4:	2d800117 	ldw	r22,4(r5)
    59a8:	29400204 	addi	r5,r5,8
    59ac:	d9402e15 	stw	r5,184(sp)
    59b0:	9080004c 	andi	r2,r18,1
    59b4:	1001ac26 	beq	r2,zero,6068 <___vfprintf_internal_r+0x127c>
    59b8:	9d84b03a 	or	r2,r19,r22
    59bc:	10038526 	beq	r2,zero,67d4 <___vfprintf_internal_r+0x19e8>
    59c0:	d8c02a17 	ldw	r3,168(sp)
    59c4:	00800c04 	movi	r2,48
    59c8:	d8802705 	stb	r2,156(sp)
    59cc:	dc402745 	stb	r17,157(sp)
    59d0:	d8002785 	stb	zero,158(sp)
    59d4:	90800094 	ori	r2,r18,2
    59d8:	18047916 	blt	r3,zero,6bc0 <___vfprintf_internal_r+0x1dd4>
    59dc:	00bfdfc4 	movi	r2,-129
    59e0:	90a4703a 	and	r18,r18,r2
    59e4:	94800094 	ori	r18,r18,2
    59e8:	0039883a 	mov	fp,zero
    59ec:	d9003917 	ldw	r4,228(sp)
    59f0:	dc001e04 	addi	r16,sp,120
    59f4:	988003cc 	andi	r2,r19,15
    59f8:	b006973a 	slli	r3,r22,28
    59fc:	2085883a 	add	r2,r4,r2
    5a00:	9826d13a 	srli	r19,r19,4
    5a04:	10800003 	ldbu	r2,0(r2)
    5a08:	b02cd13a 	srli	r22,r22,4
    5a0c:	843fffc4 	addi	r16,r16,-1
    5a10:	1ce6b03a 	or	r19,r3,r19
    5a14:	80800005 	stb	r2,0(r16)
    5a18:	9d84b03a 	or	r2,r19,r22
    5a1c:	103ff51e 	bne	r2,zero,59f4 <__alt_mem_epcs_flash_controller_0+0xff8049f4>
    5a20:	d8c02817 	ldw	r3,160(sp)
    5a24:	1c07c83a 	sub	r3,r3,r16
    5a28:	d8c02b15 	stw	r3,172(sp)
    5a2c:	003ec606 	br	5548 <__alt_mem_epcs_flash_controller_0+0xff804548>
    5a30:	8025883a 	mov	r18,r16
    5a34:	dc002903 	ldbu	r16,164(sp)
    5a38:	e011883a 	mov	r8,fp
    5a3c:	84003fcc 	andi	r16,r16,255
    5a40:	803e9626 	beq	r16,zero,549c <__alt_mem_epcs_flash_controller_0+0xff80449c>
    5a44:	d8c02b03 	ldbu	r3,172(sp)
    5a48:	d8c02785 	stb	r3,158(sp)
    5a4c:	003e9306 	br	549c <__alt_mem_epcs_flash_controller_0+0xff80449c>
    5a50:	00c00044 	movi	r3,1
    5a54:	d8c02905 	stb	r3,164(sp)
    5a58:	00c00ac4 	movi	r3,43
    5a5c:	d8c02b05 	stb	r3,172(sp)
    5a60:	ac400007 	ldb	r17,0(r21)
    5a64:	003d4306 	br	4f74 <__alt_mem_epcs_flash_controller_0+0xff803f74>
    5a68:	84000814 	ori	r16,r16,32
    5a6c:	ac400007 	ldb	r17,0(r21)
    5a70:	003d4006 	br	4f74 <__alt_mem_epcs_flash_controller_0+0xff803f74>
    5a74:	d8802e17 	ldw	r2,184(sp)
    5a78:	8025883a 	mov	r18,r16
    5a7c:	d8002785 	stb	zero,158(sp)
    5a80:	14000017 	ldw	r16,0(r2)
    5a84:	e011883a 	mov	r8,fp
    5a88:	14c00104 	addi	r19,r2,4
    5a8c:	80042d26 	beq	r16,zero,6b44 <___vfprintf_internal_r+0x1d58>
    5a90:	d8c02a17 	ldw	r3,168(sp)
    5a94:	1803e416 	blt	r3,zero,6a28 <___vfprintf_internal_r+0x1c3c>
    5a98:	180d883a 	mov	r6,r3
    5a9c:	000b883a 	mov	r5,zero
    5aa0:	8009883a 	mov	r4,r16
    5aa4:	df003d15 	stw	fp,244(sp)
    5aa8:	000a2800 	call	a280 <memchr>
    5aac:	da003d17 	ldw	r8,244(sp)
    5ab0:	10046826 	beq	r2,zero,6c54 <___vfprintf_internal_r+0x1e68>
    5ab4:	1405c83a 	sub	r2,r2,r16
    5ab8:	d8802b15 	stw	r2,172(sp)
    5abc:	1003e016 	blt	r2,zero,6a40 <___vfprintf_internal_r+0x1c54>
    5ac0:	df002783 	ldbu	fp,158(sp)
    5ac4:	d8802915 	stw	r2,164(sp)
    5ac8:	dcc02e15 	stw	r19,184(sp)
    5acc:	d8002a15 	stw	zero,168(sp)
    5ad0:	d8003215 	stw	zero,200(sp)
    5ad4:	003ea206 	br	5560 <__alt_mem_epcs_flash_controller_0+0xff804560>
    5ad8:	8025883a 	mov	r18,r16
    5adc:	dc002903 	ldbu	r16,164(sp)
    5ae0:	e011883a 	mov	r8,fp
    5ae4:	84003fcc 	andi	r16,r16,255
    5ae8:	803f8d26 	beq	r16,zero,5920 <__alt_mem_epcs_flash_controller_0+0xff804920>
    5aec:	d8c02b03 	ldbu	r3,172(sp)
    5af0:	d8c02785 	stb	r3,158(sp)
    5af4:	003f8a06 	br	5920 <__alt_mem_epcs_flash_controller_0+0xff804920>
    5af8:	8025883a 	mov	r18,r16
    5afc:	dc002903 	ldbu	r16,164(sp)
    5b00:	e011883a 	mov	r8,fp
    5b04:	84003fcc 	andi	r16,r16,255
    5b08:	8005661e 	bne	r16,zero,70a4 <___vfprintf_internal_r+0x22b8>
    5b0c:	010000b4 	movhi	r4,2
    5b10:	21376f04 	addi	r4,r4,-8772
    5b14:	d9003915 	stw	r4,228(sp)
    5b18:	9080080c 	andi	r2,r18,32
    5b1c:	103f9f1e 	bne	r2,zero,599c <__alt_mem_epcs_flash_controller_0+0xff80499c>
    5b20:	9080040c 	andi	r2,r18,16
    5b24:	1002eb26 	beq	r2,zero,66d4 <___vfprintf_internal_r+0x18e8>
    5b28:	d8802e17 	ldw	r2,184(sp)
    5b2c:	002d883a 	mov	r22,zero
    5b30:	14c00017 	ldw	r19,0(r2)
    5b34:	10800104 	addi	r2,r2,4
    5b38:	d8802e15 	stw	r2,184(sp)
    5b3c:	003f9c06 	br	59b0 <__alt_mem_epcs_flash_controller_0+0xff8049b0>
    5b40:	d8802b07 	ldb	r2,172(sp)
    5b44:	1002e11e 	bne	r2,zero,66cc <___vfprintf_internal_r+0x18e0>
    5b48:	00c00044 	movi	r3,1
    5b4c:	d8c02905 	stb	r3,164(sp)
    5b50:	00c00804 	movi	r3,32
    5b54:	d8c02b05 	stb	r3,172(sp)
    5b58:	ac400007 	ldb	r17,0(r21)
    5b5c:	003d0506 	br	4f74 <__alt_mem_epcs_flash_controller_0+0xff803f74>
    5b60:	84000054 	ori	r16,r16,1
    5b64:	ac400007 	ldb	r17,0(r21)
    5b68:	003d0206 	br	4f74 <__alt_mem_epcs_flash_controller_0+0xff803f74>
    5b6c:	8025883a 	mov	r18,r16
    5b70:	dc002903 	ldbu	r16,164(sp)
    5b74:	e011883a 	mov	r8,fp
    5b78:	84003fcc 	andi	r16,r16,255
    5b7c:	803de726 	beq	r16,zero,531c <__alt_mem_epcs_flash_controller_0+0xff80431c>
    5b80:	d8c02b03 	ldbu	r3,172(sp)
    5b84:	d8c02785 	stb	r3,158(sp)
    5b88:	003de406 	br	531c <__alt_mem_epcs_flash_controller_0+0xff80431c>
    5b8c:	84001014 	ori	r16,r16,64
    5b90:	ac400007 	ldb	r17,0(r21)
    5b94:	003cf706 	br	4f74 <__alt_mem_epcs_flash_controller_0+0xff803f74>
    5b98:	ac400007 	ldb	r17,0(r21)
    5b9c:	00801b04 	movi	r2,108
    5ba0:	88838f26 	beq	r17,r2,69e0 <___vfprintf_internal_r+0x1bf4>
    5ba4:	84000414 	ori	r16,r16,16
    5ba8:	003cf206 	br	4f74 <__alt_mem_epcs_flash_controller_0+0xff803f74>
    5bac:	8025883a 	mov	r18,r16
    5bb0:	dc002903 	ldbu	r16,164(sp)
    5bb4:	e011883a 	mov	r8,fp
    5bb8:	84003fcc 	andi	r16,r16,255
    5bbc:	80053f1e 	bne	r16,zero,70bc <___vfprintf_internal_r+0x22d0>
    5bc0:	9080080c 	andi	r2,r18,32
    5bc4:	1002d226 	beq	r2,zero,6710 <___vfprintf_internal_r+0x1924>
    5bc8:	d9002e17 	ldw	r4,184(sp)
    5bcc:	d9402f17 	ldw	r5,188(sp)
    5bd0:	20800017 	ldw	r2,0(r4)
    5bd4:	2807d7fa 	srai	r3,r5,31
    5bd8:	21000104 	addi	r4,r4,4
    5bdc:	d9002e15 	stw	r4,184(sp)
    5be0:	11400015 	stw	r5,0(r2)
    5be4:	10c00115 	stw	r3,4(r2)
    5be8:	003cb806 	br	4ecc <__alt_mem_epcs_flash_controller_0+0xff803ecc>
    5bec:	d8c02e17 	ldw	r3,184(sp)
    5bf0:	d9002e17 	ldw	r4,184(sp)
    5bf4:	8025883a 	mov	r18,r16
    5bf8:	18800017 	ldw	r2,0(r3)
    5bfc:	21000104 	addi	r4,r4,4
    5c00:	00c00044 	movi	r3,1
    5c04:	e011883a 	mov	r8,fp
    5c08:	d8c02915 	stw	r3,164(sp)
    5c0c:	d8002785 	stb	zero,158(sp)
    5c10:	d8801405 	stb	r2,80(sp)
    5c14:	d9002e15 	stw	r4,184(sp)
    5c18:	d8c02b15 	stw	r3,172(sp)
    5c1c:	d8002a15 	stw	zero,168(sp)
    5c20:	d8003215 	stw	zero,200(sp)
    5c24:	dc001404 	addi	r16,sp,80
    5c28:	0039883a 	mov	fp,zero
    5c2c:	003e5306 	br	557c <__alt_mem_epcs_flash_controller_0+0xff80457c>
    5c30:	010000b4 	movhi	r4,2
    5c34:	21376f04 	addi	r4,r4,-8772
    5c38:	0039883a 	mov	fp,zero
    5c3c:	d9003915 	stw	r4,228(sp)
    5c40:	04401e04 	movi	r17,120
    5c44:	003f6906 	br	59ec <__alt_mem_epcs_flash_controller_0+0xff8049ec>
    5c48:	8025883a 	mov	r18,r16
    5c4c:	dc002903 	ldbu	r16,164(sp)
    5c50:	e011883a 	mov	r8,fp
    5c54:	84003fcc 	andi	r16,r16,255
    5c58:	8005081e 	bne	r16,zero,707c <___vfprintf_internal_r+0x2290>
    5c5c:	883d6126 	beq	r17,zero,51e4 <__alt_mem_epcs_flash_controller_0+0xff8041e4>
    5c60:	00c00044 	movi	r3,1
    5c64:	d8c02915 	stw	r3,164(sp)
    5c68:	dc401405 	stb	r17,80(sp)
    5c6c:	d8002785 	stb	zero,158(sp)
    5c70:	003fe906 	br	5c18 <__alt_mem_epcs_flash_controller_0+0xff804c18>
    5c74:	014000b4 	movhi	r5,2
    5c78:	29776f04 	addi	r5,r5,-8772
    5c7c:	d9403915 	stw	r5,228(sp)
    5c80:	d8c02e15 	stw	r3,184(sp)
    5c84:	1025883a 	mov	r18,r2
    5c88:	04401e04 	movi	r17,120
    5c8c:	9d84b03a 	or	r2,r19,r22
    5c90:	1000fc1e 	bne	r2,zero,6084 <___vfprintf_internal_r+0x1298>
    5c94:	0039883a 	mov	fp,zero
    5c98:	00800084 	movi	r2,2
    5c9c:	10803fcc 	andi	r2,r2,255
    5ca0:	00c00044 	movi	r3,1
    5ca4:	10c20f26 	beq	r2,r3,64e4 <___vfprintf_internal_r+0x16f8>
    5ca8:	00c00084 	movi	r3,2
    5cac:	10fd3326 	beq	r2,r3,517c <__alt_mem_epcs_flash_controller_0+0xff80417c>
    5cb0:	003e0b06 	br	54e0 <__alt_mem_epcs_flash_controller_0+0xff8044e0>
    5cb4:	d8c02017 	ldw	r3,128(sp)
    5cb8:	003e7106 	br	5680 <__alt_mem_epcs_flash_controller_0+0xff804680>
    5cbc:	00801944 	movi	r2,101
    5cc0:	14407e0e 	bge	r2,r17,5ebc <___vfprintf_internal_r+0x10d0>
    5cc4:	d9003617 	ldw	r4,216(sp)
    5cc8:	d9403817 	ldw	r5,224(sp)
    5ccc:	000d883a 	mov	r6,zero
    5cd0:	000f883a 	mov	r7,zero
    5cd4:	d8c03c15 	stw	r3,240(sp)
    5cd8:	da003d15 	stw	r8,244(sp)
    5cdc:	00180a80 	call	180a8 <__eqdf2>
    5ce0:	d8c03c17 	ldw	r3,240(sp)
    5ce4:	da003d17 	ldw	r8,244(sp)
    5ce8:	1000f71e 	bne	r2,zero,60c8 <___vfprintf_internal_r+0x12dc>
    5cec:	d8801f17 	ldw	r2,124(sp)
    5cf0:	010000b4 	movhi	r4,2
    5cf4:	21377604 	addi	r4,r4,-8744
    5cf8:	18c00044 	addi	r3,r3,1
    5cfc:	10800044 	addi	r2,r2,1
    5d00:	41000015 	stw	r4,0(r8)
    5d04:	01000044 	movi	r4,1
    5d08:	41000115 	stw	r4,4(r8)
    5d0c:	d8c02015 	stw	r3,128(sp)
    5d10:	d8801f15 	stw	r2,124(sp)
    5d14:	010001c4 	movi	r4,7
    5d18:	2082b816 	blt	r4,r2,67fc <___vfprintf_internal_r+0x1a10>
    5d1c:	42000204 	addi	r8,r8,8
    5d20:	d8802617 	ldw	r2,152(sp)
    5d24:	d9403317 	ldw	r5,204(sp)
    5d28:	11400216 	blt	r2,r5,5d34 <___vfprintf_internal_r+0xf48>
    5d2c:	9080004c 	andi	r2,r18,1
    5d30:	103eb326 	beq	r2,zero,5800 <__alt_mem_epcs_flash_controller_0+0xff804800>
    5d34:	d8803717 	ldw	r2,220(sp)
    5d38:	d9003417 	ldw	r4,208(sp)
    5d3c:	d9403717 	ldw	r5,220(sp)
    5d40:	1887883a 	add	r3,r3,r2
    5d44:	d8801f17 	ldw	r2,124(sp)
    5d48:	41000015 	stw	r4,0(r8)
    5d4c:	41400115 	stw	r5,4(r8)
    5d50:	10800044 	addi	r2,r2,1
    5d54:	d8c02015 	stw	r3,128(sp)
    5d58:	d8801f15 	stw	r2,124(sp)
    5d5c:	010001c4 	movi	r4,7
    5d60:	20832916 	blt	r4,r2,6a08 <___vfprintf_internal_r+0x1c1c>
    5d64:	42000204 	addi	r8,r8,8
    5d68:	d8803317 	ldw	r2,204(sp)
    5d6c:	143fffc4 	addi	r16,r2,-1
    5d70:	043ea30e 	bge	zero,r16,5800 <__alt_mem_epcs_flash_controller_0+0xff804800>
    5d74:	04400404 	movi	r17,16
    5d78:	d8801f17 	ldw	r2,124(sp)
    5d7c:	8c00880e 	bge	r17,r16,5fa0 <___vfprintf_internal_r+0x11b4>
    5d80:	014000b4 	movhi	r5,2
    5d84:	29777684 	addi	r5,r5,-8742
    5d88:	d9402c15 	stw	r5,176(sp)
    5d8c:	058001c4 	movi	r22,7
    5d90:	dcc02d17 	ldw	r19,180(sp)
    5d94:	00000306 	br	5da4 <___vfprintf_internal_r+0xfb8>
    5d98:	42000204 	addi	r8,r8,8
    5d9c:	843ffc04 	addi	r16,r16,-16
    5da0:	8c00820e 	bge	r17,r16,5fac <___vfprintf_internal_r+0x11c0>
    5da4:	18c00404 	addi	r3,r3,16
    5da8:	10800044 	addi	r2,r2,1
    5dac:	45000015 	stw	r20,0(r8)
    5db0:	44400115 	stw	r17,4(r8)
    5db4:	d8c02015 	stw	r3,128(sp)
    5db8:	d8801f15 	stw	r2,124(sp)
    5dbc:	b0bff60e 	bge	r22,r2,5d98 <__alt_mem_epcs_flash_controller_0+0xff804d98>
    5dc0:	d9801e04 	addi	r6,sp,120
    5dc4:	b80b883a 	mov	r5,r23
    5dc8:	9809883a 	mov	r4,r19
    5dcc:	0011f300 	call	11f30 <__sprint_r>
    5dd0:	103d0a1e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    5dd4:	d8c02017 	ldw	r3,128(sp)
    5dd8:	d8801f17 	ldw	r2,124(sp)
    5ddc:	da000404 	addi	r8,sp,16
    5de0:	003fee06 	br	5d9c <__alt_mem_epcs_flash_controller_0+0xff804d9c>
    5de4:	d9403117 	ldw	r5,196(sp)
    5de8:	d8802917 	ldw	r2,164(sp)
    5dec:	28adc83a 	sub	r22,r5,r2
    5df0:	05be410e 	bge	zero,r22,56f8 <__alt_mem_epcs_flash_controller_0+0xff8046f8>
    5df4:	07000404 	movi	fp,16
    5df8:	d8801f17 	ldw	r2,124(sp)
    5dfc:	e5838f0e 	bge	fp,r22,6c3c <___vfprintf_internal_r+0x1e50>
    5e00:	014000b4 	movhi	r5,2
    5e04:	29777684 	addi	r5,r5,-8742
    5e08:	dc403015 	stw	r17,192(sp)
    5e0c:	d9402c15 	stw	r5,176(sp)
    5e10:	b023883a 	mov	r17,r22
    5e14:	04c001c4 	movi	r19,7
    5e18:	a82d883a 	mov	r22,r21
    5e1c:	902b883a 	mov	r21,r18
    5e20:	8025883a 	mov	r18,r16
    5e24:	dc002d17 	ldw	r16,180(sp)
    5e28:	00000306 	br	5e38 <___vfprintf_internal_r+0x104c>
    5e2c:	8c7ffc04 	addi	r17,r17,-16
    5e30:	42000204 	addi	r8,r8,8
    5e34:	e440110e 	bge	fp,r17,5e7c <___vfprintf_internal_r+0x1090>
    5e38:	18c00404 	addi	r3,r3,16
    5e3c:	10800044 	addi	r2,r2,1
    5e40:	45000015 	stw	r20,0(r8)
    5e44:	47000115 	stw	fp,4(r8)
    5e48:	d8c02015 	stw	r3,128(sp)
    5e4c:	d8801f15 	stw	r2,124(sp)
    5e50:	98bff60e 	bge	r19,r2,5e2c <__alt_mem_epcs_flash_controller_0+0xff804e2c>
    5e54:	d9801e04 	addi	r6,sp,120
    5e58:	b80b883a 	mov	r5,r23
    5e5c:	8009883a 	mov	r4,r16
    5e60:	0011f300 	call	11f30 <__sprint_r>
    5e64:	103ce51e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    5e68:	8c7ffc04 	addi	r17,r17,-16
    5e6c:	d8c02017 	ldw	r3,128(sp)
    5e70:	d8801f17 	ldw	r2,124(sp)
    5e74:	da000404 	addi	r8,sp,16
    5e78:	e47fef16 	blt	fp,r17,5e38 <__alt_mem_epcs_flash_controller_0+0xff804e38>
    5e7c:	9021883a 	mov	r16,r18
    5e80:	a825883a 	mov	r18,r21
    5e84:	b02b883a 	mov	r21,r22
    5e88:	882d883a 	mov	r22,r17
    5e8c:	dc403017 	ldw	r17,192(sp)
    5e90:	d9002c17 	ldw	r4,176(sp)
    5e94:	1d87883a 	add	r3,r3,r22
    5e98:	10800044 	addi	r2,r2,1
    5e9c:	41000015 	stw	r4,0(r8)
    5ea0:	45800115 	stw	r22,4(r8)
    5ea4:	d8c02015 	stw	r3,128(sp)
    5ea8:	d8801f15 	stw	r2,124(sp)
    5eac:	010001c4 	movi	r4,7
    5eb0:	20818e16 	blt	r4,r2,64ec <___vfprintf_internal_r+0x1700>
    5eb4:	42000204 	addi	r8,r8,8
    5eb8:	003e0f06 	br	56f8 <__alt_mem_epcs_flash_controller_0+0xff8046f8>
    5ebc:	d9403317 	ldw	r5,204(sp)
    5ec0:	00800044 	movi	r2,1
    5ec4:	18c00044 	addi	r3,r3,1
    5ec8:	1141530e 	bge	r2,r5,6418 <___vfprintf_internal_r+0x162c>
    5ecc:	dc401f17 	ldw	r17,124(sp)
    5ed0:	00800044 	movi	r2,1
    5ed4:	40800115 	stw	r2,4(r8)
    5ed8:	8c400044 	addi	r17,r17,1
    5edc:	44000015 	stw	r16,0(r8)
    5ee0:	d8c02015 	stw	r3,128(sp)
    5ee4:	dc401f15 	stw	r17,124(sp)
    5ee8:	008001c4 	movi	r2,7
    5eec:	14416b16 	blt	r2,r17,649c <___vfprintf_internal_r+0x16b0>
    5ef0:	42000204 	addi	r8,r8,8
    5ef4:	d8803717 	ldw	r2,220(sp)
    5ef8:	d9003417 	ldw	r4,208(sp)
    5efc:	8c400044 	addi	r17,r17,1
    5f00:	10c7883a 	add	r3,r2,r3
    5f04:	40800115 	stw	r2,4(r8)
    5f08:	41000015 	stw	r4,0(r8)
    5f0c:	d8c02015 	stw	r3,128(sp)
    5f10:	dc401f15 	stw	r17,124(sp)
    5f14:	008001c4 	movi	r2,7
    5f18:	14416916 	blt	r2,r17,64c0 <___vfprintf_internal_r+0x16d4>
    5f1c:	45800204 	addi	r22,r8,8
    5f20:	d9003617 	ldw	r4,216(sp)
    5f24:	d9403817 	ldw	r5,224(sp)
    5f28:	000d883a 	mov	r6,zero
    5f2c:	000f883a 	mov	r7,zero
    5f30:	d8c03c15 	stw	r3,240(sp)
    5f34:	00180a80 	call	180a8 <__eqdf2>
    5f38:	d8c03c17 	ldw	r3,240(sp)
    5f3c:	1000bc26 	beq	r2,zero,6230 <___vfprintf_internal_r+0x1444>
    5f40:	d9403317 	ldw	r5,204(sp)
    5f44:	84000044 	addi	r16,r16,1
    5f48:	8c400044 	addi	r17,r17,1
    5f4c:	28bfffc4 	addi	r2,r5,-1
    5f50:	1887883a 	add	r3,r3,r2
    5f54:	b0800115 	stw	r2,4(r22)
    5f58:	b4000015 	stw	r16,0(r22)
    5f5c:	d8c02015 	stw	r3,128(sp)
    5f60:	dc401f15 	stw	r17,124(sp)
    5f64:	008001c4 	movi	r2,7
    5f68:	14414316 	blt	r2,r17,6478 <___vfprintf_internal_r+0x168c>
    5f6c:	b5800204 	addi	r22,r22,8
    5f70:	d9003a17 	ldw	r4,232(sp)
    5f74:	df0022c4 	addi	fp,sp,139
    5f78:	8c400044 	addi	r17,r17,1
    5f7c:	20c7883a 	add	r3,r4,r3
    5f80:	b7000015 	stw	fp,0(r22)
    5f84:	b1000115 	stw	r4,4(r22)
    5f88:	d8c02015 	stw	r3,128(sp)
    5f8c:	dc401f15 	stw	r17,124(sp)
    5f90:	008001c4 	movi	r2,7
    5f94:	14400e16 	blt	r2,r17,5fd0 <___vfprintf_internal_r+0x11e4>
    5f98:	b2000204 	addi	r8,r22,8
    5f9c:	003e1806 	br	5800 <__alt_mem_epcs_flash_controller_0+0xff804800>
    5fa0:	010000b4 	movhi	r4,2
    5fa4:	21377684 	addi	r4,r4,-8742
    5fa8:	d9002c15 	stw	r4,176(sp)
    5fac:	d9002c17 	ldw	r4,176(sp)
    5fb0:	1c07883a 	add	r3,r3,r16
    5fb4:	44000115 	stw	r16,4(r8)
    5fb8:	41000015 	stw	r4,0(r8)
    5fbc:	10800044 	addi	r2,r2,1
    5fc0:	d8c02015 	stw	r3,128(sp)
    5fc4:	d8801f15 	stw	r2,124(sp)
    5fc8:	010001c4 	movi	r4,7
    5fcc:	20be0b0e 	bge	r4,r2,57fc <__alt_mem_epcs_flash_controller_0+0xff8047fc>
    5fd0:	d9002d17 	ldw	r4,180(sp)
    5fd4:	d9801e04 	addi	r6,sp,120
    5fd8:	b80b883a 	mov	r5,r23
    5fdc:	0011f300 	call	11f30 <__sprint_r>
    5fe0:	103c861e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    5fe4:	d8c02017 	ldw	r3,128(sp)
    5fe8:	da000404 	addi	r8,sp,16
    5fec:	003e0406 	br	5800 <__alt_mem_epcs_flash_controller_0+0xff804800>
    5ff0:	d9002d17 	ldw	r4,180(sp)
    5ff4:	d9801e04 	addi	r6,sp,120
    5ff8:	b80b883a 	mov	r5,r23
    5ffc:	0011f300 	call	11f30 <__sprint_r>
    6000:	103e3b26 	beq	r2,zero,58f0 <__alt_mem_epcs_flash_controller_0+0xff8048f0>
    6004:	003c7d06 	br	51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    6008:	d9002d17 	ldw	r4,180(sp)
    600c:	d9801e04 	addi	r6,sp,120
    6010:	b80b883a 	mov	r5,r23
    6014:	0011f300 	call	11f30 <__sprint_r>
    6018:	103c781e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    601c:	d8c02017 	ldw	r3,128(sp)
    6020:	da000404 	addi	r8,sp,16
    6024:	003de906 	br	57cc <__alt_mem_epcs_flash_controller_0+0xff8047cc>
    6028:	d9002d17 	ldw	r4,180(sp)
    602c:	d9801e04 	addi	r6,sp,120
    6030:	b80b883a 	mov	r5,r23
    6034:	0011f300 	call	11f30 <__sprint_r>
    6038:	103c701e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    603c:	d8c02017 	ldw	r3,128(sp)
    6040:	da000404 	addi	r8,sp,16
    6044:	003d9b06 	br	56b4 <__alt_mem_epcs_flash_controller_0+0xff8046b4>
    6048:	d9002d17 	ldw	r4,180(sp)
    604c:	d9801e04 	addi	r6,sp,120
    6050:	b80b883a 	mov	r5,r23
    6054:	0011f300 	call	11f30 <__sprint_r>
    6058:	103c681e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    605c:	d8c02017 	ldw	r3,128(sp)
    6060:	da000404 	addi	r8,sp,16
    6064:	003da106 	br	56ec <__alt_mem_epcs_flash_controller_0+0xff8046ec>
    6068:	d9402a17 	ldw	r5,168(sp)
    606c:	d8002785 	stb	zero,158(sp)
    6070:	283f0616 	blt	r5,zero,5c8c <__alt_mem_epcs_flash_controller_0+0xff804c8c>
    6074:	00ffdfc4 	movi	r3,-129
    6078:	9d84b03a 	or	r2,r19,r22
    607c:	90e4703a 	and	r18,r18,r3
    6080:	103c3b26 	beq	r2,zero,5170 <__alt_mem_epcs_flash_controller_0+0xff804170>
    6084:	0039883a 	mov	fp,zero
    6088:	003e5806 	br	59ec <__alt_mem_epcs_flash_controller_0+0xff8049ec>
    608c:	9080040c 	andi	r2,r18,16
    6090:	1001b326 	beq	r2,zero,6760 <___vfprintf_internal_r+0x1974>
    6094:	d8c02e17 	ldw	r3,184(sp)
    6098:	d9002a17 	ldw	r4,168(sp)
    609c:	d8002785 	stb	zero,158(sp)
    60a0:	18800104 	addi	r2,r3,4
    60a4:	1cc00017 	ldw	r19,0(r3)
    60a8:	002d883a 	mov	r22,zero
    60ac:	2001b516 	blt	r4,zero,6784 <___vfprintf_internal_r+0x1998>
    60b0:	00ffdfc4 	movi	r3,-129
    60b4:	d8802e15 	stw	r2,184(sp)
    60b8:	90e4703a 	and	r18,r18,r3
    60bc:	983d0526 	beq	r19,zero,54d4 <__alt_mem_epcs_flash_controller_0+0xff8044d4>
    60c0:	0039883a 	mov	fp,zero
    60c4:	003d0806 	br	54e8 <__alt_mem_epcs_flash_controller_0+0xff8044e8>
    60c8:	dc402617 	ldw	r17,152(sp)
    60cc:	0441d30e 	bge	zero,r17,681c <___vfprintf_internal_r+0x1a30>
    60d0:	dc403217 	ldw	r17,200(sp)
    60d4:	d8803317 	ldw	r2,204(sp)
    60d8:	1440010e 	bge	r2,r17,60e0 <___vfprintf_internal_r+0x12f4>
    60dc:	1023883a 	mov	r17,r2
    60e0:	04400a0e 	bge	zero,r17,610c <___vfprintf_internal_r+0x1320>
    60e4:	d8801f17 	ldw	r2,124(sp)
    60e8:	1c47883a 	add	r3,r3,r17
    60ec:	44000015 	stw	r16,0(r8)
    60f0:	10800044 	addi	r2,r2,1
    60f4:	44400115 	stw	r17,4(r8)
    60f8:	d8c02015 	stw	r3,128(sp)
    60fc:	d8801f15 	stw	r2,124(sp)
    6100:	010001c4 	movi	r4,7
    6104:	20826516 	blt	r4,r2,6a9c <___vfprintf_internal_r+0x1cb0>
    6108:	42000204 	addi	r8,r8,8
    610c:	88026116 	blt	r17,zero,6a94 <___vfprintf_internal_r+0x1ca8>
    6110:	d9003217 	ldw	r4,200(sp)
    6114:	2463c83a 	sub	r17,r4,r17
    6118:	04407b0e 	bge	zero,r17,6308 <___vfprintf_internal_r+0x151c>
    611c:	05800404 	movi	r22,16
    6120:	d8801f17 	ldw	r2,124(sp)
    6124:	b4419d0e 	bge	r22,r17,679c <___vfprintf_internal_r+0x19b0>
    6128:	010000b4 	movhi	r4,2
    612c:	21377684 	addi	r4,r4,-8742
    6130:	d9002c15 	stw	r4,176(sp)
    6134:	070001c4 	movi	fp,7
    6138:	dcc02d17 	ldw	r19,180(sp)
    613c:	00000306 	br	614c <___vfprintf_internal_r+0x1360>
    6140:	42000204 	addi	r8,r8,8
    6144:	8c7ffc04 	addi	r17,r17,-16
    6148:	b441970e 	bge	r22,r17,67a8 <___vfprintf_internal_r+0x19bc>
    614c:	18c00404 	addi	r3,r3,16
    6150:	10800044 	addi	r2,r2,1
    6154:	45000015 	stw	r20,0(r8)
    6158:	45800115 	stw	r22,4(r8)
    615c:	d8c02015 	stw	r3,128(sp)
    6160:	d8801f15 	stw	r2,124(sp)
    6164:	e0bff60e 	bge	fp,r2,6140 <__alt_mem_epcs_flash_controller_0+0xff805140>
    6168:	d9801e04 	addi	r6,sp,120
    616c:	b80b883a 	mov	r5,r23
    6170:	9809883a 	mov	r4,r19
    6174:	0011f300 	call	11f30 <__sprint_r>
    6178:	103c201e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    617c:	d8c02017 	ldw	r3,128(sp)
    6180:	d8801f17 	ldw	r2,124(sp)
    6184:	da000404 	addi	r8,sp,16
    6188:	003fee06 	br	6144 <__alt_mem_epcs_flash_controller_0+0xff805144>
    618c:	d9002d17 	ldw	r4,180(sp)
    6190:	d9801e04 	addi	r6,sp,120
    6194:	b80b883a 	mov	r5,r23
    6198:	0011f300 	call	11f30 <__sprint_r>
    619c:	103c171e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    61a0:	d8c02017 	ldw	r3,128(sp)
    61a4:	df002787 	ldb	fp,158(sp)
    61a8:	da000404 	addi	r8,sp,16
    61ac:	003d3406 	br	5680 <__alt_mem_epcs_flash_controller_0+0xff804680>
    61b0:	9080040c 	andi	r2,r18,16
    61b4:	10016126 	beq	r2,zero,673c <___vfprintf_internal_r+0x1950>
    61b8:	d9402e17 	ldw	r5,184(sp)
    61bc:	2cc00017 	ldw	r19,0(r5)
    61c0:	29400104 	addi	r5,r5,4
    61c4:	d9402e15 	stw	r5,184(sp)
    61c8:	982dd7fa 	srai	r22,r19,31
    61cc:	b005883a 	mov	r2,r22
    61d0:	003c5a06 	br	533c <__alt_mem_epcs_flash_controller_0+0xff80433c>
    61d4:	9080040c 	andi	r2,r18,16
    61d8:	10003526 	beq	r2,zero,62b0 <___vfprintf_internal_r+0x14c4>
    61dc:	d8c02e17 	ldw	r3,184(sp)
    61e0:	d9002a17 	ldw	r4,168(sp)
    61e4:	d8002785 	stb	zero,158(sp)
    61e8:	18800104 	addi	r2,r3,4
    61ec:	1cc00017 	ldw	r19,0(r3)
    61f0:	002d883a 	mov	r22,zero
    61f4:	20003716 	blt	r4,zero,62d4 <___vfprintf_internal_r+0x14e8>
    61f8:	00ffdfc4 	movi	r3,-129
    61fc:	d8802e15 	stw	r2,184(sp)
    6200:	90e4703a 	and	r18,r18,r3
    6204:	0039883a 	mov	fp,zero
    6208:	983dd426 	beq	r19,zero,595c <__alt_mem_epcs_flash_controller_0+0xff80495c>
    620c:	00800244 	movi	r2,9
    6210:	14fc5336 	bltu	r2,r19,5360 <__alt_mem_epcs_flash_controller_0+0xff804360>
    6214:	d8c02817 	ldw	r3,160(sp)
    6218:	dc001dc4 	addi	r16,sp,119
    621c:	9cc00c04 	addi	r19,r19,48
    6220:	1c07c83a 	sub	r3,r3,r16
    6224:	dcc01dc5 	stb	r19,119(sp)
    6228:	d8c02b15 	stw	r3,172(sp)
    622c:	003cc606 	br	5548 <__alt_mem_epcs_flash_controller_0+0xff804548>
    6230:	d8803317 	ldw	r2,204(sp)
    6234:	143fffc4 	addi	r16,r2,-1
    6238:	043f4d0e 	bge	zero,r16,5f70 <__alt_mem_epcs_flash_controller_0+0xff804f70>
    623c:	07000404 	movi	fp,16
    6240:	e400810e 	bge	fp,r16,6448 <___vfprintf_internal_r+0x165c>
    6244:	014000b4 	movhi	r5,2
    6248:	29777684 	addi	r5,r5,-8742
    624c:	d9402c15 	stw	r5,176(sp)
    6250:	01c001c4 	movi	r7,7
    6254:	dcc02d17 	ldw	r19,180(sp)
    6258:	00000306 	br	6268 <___vfprintf_internal_r+0x147c>
    625c:	b5800204 	addi	r22,r22,8
    6260:	843ffc04 	addi	r16,r16,-16
    6264:	e4007b0e 	bge	fp,r16,6454 <___vfprintf_internal_r+0x1668>
    6268:	18c00404 	addi	r3,r3,16
    626c:	8c400044 	addi	r17,r17,1
    6270:	b5000015 	stw	r20,0(r22)
    6274:	b7000115 	stw	fp,4(r22)
    6278:	d8c02015 	stw	r3,128(sp)
    627c:	dc401f15 	stw	r17,124(sp)
    6280:	3c7ff60e 	bge	r7,r17,625c <__alt_mem_epcs_flash_controller_0+0xff80525c>
    6284:	d9801e04 	addi	r6,sp,120
    6288:	b80b883a 	mov	r5,r23
    628c:	9809883a 	mov	r4,r19
    6290:	d9c03c15 	stw	r7,240(sp)
    6294:	0011f300 	call	11f30 <__sprint_r>
    6298:	d9c03c17 	ldw	r7,240(sp)
    629c:	103bd71e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    62a0:	d8c02017 	ldw	r3,128(sp)
    62a4:	dc401f17 	ldw	r17,124(sp)
    62a8:	dd800404 	addi	r22,sp,16
    62ac:	003fec06 	br	6260 <__alt_mem_epcs_flash_controller_0+0xff805260>
    62b0:	9080100c 	andi	r2,r18,64
    62b4:	d8002785 	stb	zero,158(sp)
    62b8:	10010e26 	beq	r2,zero,66f4 <___vfprintf_internal_r+0x1908>
    62bc:	d9402e17 	ldw	r5,184(sp)
    62c0:	d8c02a17 	ldw	r3,168(sp)
    62c4:	002d883a 	mov	r22,zero
    62c8:	28800104 	addi	r2,r5,4
    62cc:	2cc0000b 	ldhu	r19,0(r5)
    62d0:	183fc90e 	bge	r3,zero,61f8 <__alt_mem_epcs_flash_controller_0+0xff8051f8>
    62d4:	d8802e15 	stw	r2,184(sp)
    62d8:	0039883a 	mov	fp,zero
    62dc:	9d84b03a 	or	r2,r19,r22
    62e0:	103c1e1e 	bne	r2,zero,535c <__alt_mem_epcs_flash_controller_0+0xff80435c>
    62e4:	00800044 	movi	r2,1
    62e8:	003e6c06 	br	5c9c <__alt_mem_epcs_flash_controller_0+0xff804c9c>
    62ec:	d9002d17 	ldw	r4,180(sp)
    62f0:	d9801e04 	addi	r6,sp,120
    62f4:	b80b883a 	mov	r5,r23
    62f8:	0011f300 	call	11f30 <__sprint_r>
    62fc:	103bbf1e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    6300:	d8c02017 	ldw	r3,128(sp)
    6304:	da000404 	addi	r8,sp,16
    6308:	d9003217 	ldw	r4,200(sp)
    630c:	d8802617 	ldw	r2,152(sp)
    6310:	d9403317 	ldw	r5,204(sp)
    6314:	8123883a 	add	r17,r16,r4
    6318:	11400216 	blt	r2,r5,6324 <___vfprintf_internal_r+0x1538>
    631c:	9100004c 	andi	r4,r18,1
    6320:	20000d26 	beq	r4,zero,6358 <___vfprintf_internal_r+0x156c>
    6324:	d9003717 	ldw	r4,220(sp)
    6328:	d9403417 	ldw	r5,208(sp)
    632c:	1907883a 	add	r3,r3,r4
    6330:	d9001f17 	ldw	r4,124(sp)
    6334:	41400015 	stw	r5,0(r8)
    6338:	d9403717 	ldw	r5,220(sp)
    633c:	21000044 	addi	r4,r4,1
    6340:	d8c02015 	stw	r3,128(sp)
    6344:	41400115 	stw	r5,4(r8)
    6348:	d9001f15 	stw	r4,124(sp)
    634c:	014001c4 	movi	r5,7
    6350:	2901e816 	blt	r5,r4,6af4 <___vfprintf_internal_r+0x1d08>
    6354:	42000204 	addi	r8,r8,8
    6358:	d9003317 	ldw	r4,204(sp)
    635c:	8121883a 	add	r16,r16,r4
    6360:	2085c83a 	sub	r2,r4,r2
    6364:	8461c83a 	sub	r16,r16,r17
    6368:	1400010e 	bge	r2,r16,6370 <___vfprintf_internal_r+0x1584>
    636c:	1021883a 	mov	r16,r2
    6370:	04000a0e 	bge	zero,r16,639c <___vfprintf_internal_r+0x15b0>
    6374:	d9001f17 	ldw	r4,124(sp)
    6378:	1c07883a 	add	r3,r3,r16
    637c:	44400015 	stw	r17,0(r8)
    6380:	21000044 	addi	r4,r4,1
    6384:	44000115 	stw	r16,4(r8)
    6388:	d8c02015 	stw	r3,128(sp)
    638c:	d9001f15 	stw	r4,124(sp)
    6390:	014001c4 	movi	r5,7
    6394:	2901fb16 	blt	r5,r4,6b84 <___vfprintf_internal_r+0x1d98>
    6398:	42000204 	addi	r8,r8,8
    639c:	8001f716 	blt	r16,zero,6b7c <___vfprintf_internal_r+0x1d90>
    63a0:	1421c83a 	sub	r16,r2,r16
    63a4:	043d160e 	bge	zero,r16,5800 <__alt_mem_epcs_flash_controller_0+0xff804800>
    63a8:	04400404 	movi	r17,16
    63ac:	d8801f17 	ldw	r2,124(sp)
    63b0:	8c3efb0e 	bge	r17,r16,5fa0 <__alt_mem_epcs_flash_controller_0+0xff804fa0>
    63b4:	014000b4 	movhi	r5,2
    63b8:	29777684 	addi	r5,r5,-8742
    63bc:	d9402c15 	stw	r5,176(sp)
    63c0:	058001c4 	movi	r22,7
    63c4:	dcc02d17 	ldw	r19,180(sp)
    63c8:	00000306 	br	63d8 <___vfprintf_internal_r+0x15ec>
    63cc:	42000204 	addi	r8,r8,8
    63d0:	843ffc04 	addi	r16,r16,-16
    63d4:	8c3ef50e 	bge	r17,r16,5fac <__alt_mem_epcs_flash_controller_0+0xff804fac>
    63d8:	18c00404 	addi	r3,r3,16
    63dc:	10800044 	addi	r2,r2,1
    63e0:	45000015 	stw	r20,0(r8)
    63e4:	44400115 	stw	r17,4(r8)
    63e8:	d8c02015 	stw	r3,128(sp)
    63ec:	d8801f15 	stw	r2,124(sp)
    63f0:	b0bff60e 	bge	r22,r2,63cc <__alt_mem_epcs_flash_controller_0+0xff8053cc>
    63f4:	d9801e04 	addi	r6,sp,120
    63f8:	b80b883a 	mov	r5,r23
    63fc:	9809883a 	mov	r4,r19
    6400:	0011f300 	call	11f30 <__sprint_r>
    6404:	103b7d1e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    6408:	d8c02017 	ldw	r3,128(sp)
    640c:	d8801f17 	ldw	r2,124(sp)
    6410:	da000404 	addi	r8,sp,16
    6414:	003fee06 	br	63d0 <__alt_mem_epcs_flash_controller_0+0xff8053d0>
    6418:	9088703a 	and	r4,r18,r2
    641c:	203eab1e 	bne	r4,zero,5ecc <__alt_mem_epcs_flash_controller_0+0xff804ecc>
    6420:	dc401f17 	ldw	r17,124(sp)
    6424:	40800115 	stw	r2,4(r8)
    6428:	44000015 	stw	r16,0(r8)
    642c:	8c400044 	addi	r17,r17,1
    6430:	d8c02015 	stw	r3,128(sp)
    6434:	dc401f15 	stw	r17,124(sp)
    6438:	008001c4 	movi	r2,7
    643c:	14400e16 	blt	r2,r17,6478 <___vfprintf_internal_r+0x168c>
    6440:	45800204 	addi	r22,r8,8
    6444:	003eca06 	br	5f70 <__alt_mem_epcs_flash_controller_0+0xff804f70>
    6448:	010000b4 	movhi	r4,2
    644c:	21377684 	addi	r4,r4,-8742
    6450:	d9002c15 	stw	r4,176(sp)
    6454:	d8802c17 	ldw	r2,176(sp)
    6458:	1c07883a 	add	r3,r3,r16
    645c:	8c400044 	addi	r17,r17,1
    6460:	b0800015 	stw	r2,0(r22)
    6464:	b4000115 	stw	r16,4(r22)
    6468:	d8c02015 	stw	r3,128(sp)
    646c:	dc401f15 	stw	r17,124(sp)
    6470:	008001c4 	movi	r2,7
    6474:	147ebd0e 	bge	r2,r17,5f6c <__alt_mem_epcs_flash_controller_0+0xff804f6c>
    6478:	d9002d17 	ldw	r4,180(sp)
    647c:	d9801e04 	addi	r6,sp,120
    6480:	b80b883a 	mov	r5,r23
    6484:	0011f300 	call	11f30 <__sprint_r>
    6488:	103b5c1e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    648c:	d8c02017 	ldw	r3,128(sp)
    6490:	dc401f17 	ldw	r17,124(sp)
    6494:	dd800404 	addi	r22,sp,16
    6498:	003eb506 	br	5f70 <__alt_mem_epcs_flash_controller_0+0xff804f70>
    649c:	d9002d17 	ldw	r4,180(sp)
    64a0:	d9801e04 	addi	r6,sp,120
    64a4:	b80b883a 	mov	r5,r23
    64a8:	0011f300 	call	11f30 <__sprint_r>
    64ac:	103b531e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    64b0:	d8c02017 	ldw	r3,128(sp)
    64b4:	dc401f17 	ldw	r17,124(sp)
    64b8:	da000404 	addi	r8,sp,16
    64bc:	003e8d06 	br	5ef4 <__alt_mem_epcs_flash_controller_0+0xff804ef4>
    64c0:	d9002d17 	ldw	r4,180(sp)
    64c4:	d9801e04 	addi	r6,sp,120
    64c8:	b80b883a 	mov	r5,r23
    64cc:	0011f300 	call	11f30 <__sprint_r>
    64d0:	103b4a1e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    64d4:	d8c02017 	ldw	r3,128(sp)
    64d8:	dc401f17 	ldw	r17,124(sp)
    64dc:	dd800404 	addi	r22,sp,16
    64e0:	003e8f06 	br	5f20 <__alt_mem_epcs_flash_controller_0+0xff804f20>
    64e4:	0027883a 	mov	r19,zero
    64e8:	003f4a06 	br	6214 <__alt_mem_epcs_flash_controller_0+0xff805214>
    64ec:	d9002d17 	ldw	r4,180(sp)
    64f0:	d9801e04 	addi	r6,sp,120
    64f4:	b80b883a 	mov	r5,r23
    64f8:	0011f300 	call	11f30 <__sprint_r>
    64fc:	103b3f1e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    6500:	d8c02017 	ldw	r3,128(sp)
    6504:	da000404 	addi	r8,sp,16
    6508:	003c7b06 	br	56f8 <__alt_mem_epcs_flash_controller_0+0xff8046f8>
    650c:	d9402a17 	ldw	r5,168(sp)
    6510:	04e7c83a 	sub	r19,zero,r19
    6514:	07000b44 	movi	fp,45
    6518:	9804c03a 	cmpne	r2,r19,zero
    651c:	05adc83a 	sub	r22,zero,r22
    6520:	df002785 	stb	fp,158(sp)
    6524:	b0adc83a 	sub	r22,r22,r2
    6528:	28017b16 	blt	r5,zero,6b18 <___vfprintf_internal_r+0x1d2c>
    652c:	00bfdfc4 	movi	r2,-129
    6530:	90a4703a 	and	r18,r18,r2
    6534:	003b8906 	br	535c <__alt_mem_epcs_flash_controller_0+0xff80435c>
    6538:	d9003617 	ldw	r4,216(sp)
    653c:	d9403817 	ldw	r5,224(sp)
    6540:	da003d15 	stw	r8,244(sp)
    6544:	000bfbc0 	call	bfbc <__fpclassifyd>
    6548:	da003d17 	ldw	r8,244(sp)
    654c:	1000f026 	beq	r2,zero,6910 <___vfprintf_internal_r+0x1b24>
    6550:	d9002a17 	ldw	r4,168(sp)
    6554:	05bff7c4 	movi	r22,-33
    6558:	00bfffc4 	movi	r2,-1
    655c:	8dac703a 	and	r22,r17,r22
    6560:	20820026 	beq	r4,r2,6d64 <___vfprintf_internal_r+0x1f78>
    6564:	008011c4 	movi	r2,71
    6568:	b081f726 	beq	r22,r2,6d48 <___vfprintf_internal_r+0x1f5c>
    656c:	d9003817 	ldw	r4,224(sp)
    6570:	90c04014 	ori	r3,r18,256
    6574:	d8c02c15 	stw	r3,176(sp)
    6578:	20021516 	blt	r4,zero,6dd0 <___vfprintf_internal_r+0x1fe4>
    657c:	dcc03817 	ldw	r19,224(sp)
    6580:	d8002905 	stb	zero,164(sp)
    6584:	00801984 	movi	r2,102
    6588:	8881f926 	beq	r17,r2,6d70 <___vfprintf_internal_r+0x1f84>
    658c:	00801184 	movi	r2,70
    6590:	88821c26 	beq	r17,r2,6e04 <___vfprintf_internal_r+0x2018>
    6594:	00801144 	movi	r2,69
    6598:	b081ef26 	beq	r22,r2,6d58 <___vfprintf_internal_r+0x1f6c>
    659c:	d8c02a17 	ldw	r3,168(sp)
    65a0:	d8802104 	addi	r2,sp,132
    65a4:	d8800315 	stw	r2,12(sp)
    65a8:	d9403617 	ldw	r5,216(sp)
    65ac:	d8802504 	addi	r2,sp,148
    65b0:	d9002d17 	ldw	r4,180(sp)
    65b4:	d8800215 	stw	r2,8(sp)
    65b8:	d8802604 	addi	r2,sp,152
    65bc:	d8c00015 	stw	r3,0(sp)
    65c0:	d8800115 	stw	r2,4(sp)
    65c4:	01c00084 	movi	r7,2
    65c8:	980d883a 	mov	r6,r19
    65cc:	d8c03c15 	stw	r3,240(sp)
    65d0:	da003d15 	stw	r8,244(sp)
    65d4:	00075d00 	call	75d0 <_dtoa_r>
    65d8:	1021883a 	mov	r16,r2
    65dc:	008019c4 	movi	r2,103
    65e0:	d8c03c17 	ldw	r3,240(sp)
    65e4:	da003d17 	ldw	r8,244(sp)
    65e8:	88817126 	beq	r17,r2,6bb0 <___vfprintf_internal_r+0x1dc4>
    65ec:	008011c4 	movi	r2,71
    65f0:	88829126 	beq	r17,r2,7038 <___vfprintf_internal_r+0x224c>
    65f4:	80f9883a 	add	fp,r16,r3
    65f8:	d9003617 	ldw	r4,216(sp)
    65fc:	000d883a 	mov	r6,zero
    6600:	000f883a 	mov	r7,zero
    6604:	980b883a 	mov	r5,r19
    6608:	da003d15 	stw	r8,244(sp)
    660c:	00180a80 	call	180a8 <__eqdf2>
    6610:	da003d17 	ldw	r8,244(sp)
    6614:	10018d26 	beq	r2,zero,6c4c <___vfprintf_internal_r+0x1e60>
    6618:	d8802117 	ldw	r2,132(sp)
    661c:	1700062e 	bgeu	r2,fp,6638 <___vfprintf_internal_r+0x184c>
    6620:	01000c04 	movi	r4,48
    6624:	10c00044 	addi	r3,r2,1
    6628:	d8c02115 	stw	r3,132(sp)
    662c:	11000005 	stb	r4,0(r2)
    6630:	d8802117 	ldw	r2,132(sp)
    6634:	173ffb36 	bltu	r2,fp,6624 <__alt_mem_epcs_flash_controller_0+0xff805624>
    6638:	1405c83a 	sub	r2,r2,r16
    663c:	d8803315 	stw	r2,204(sp)
    6640:	008011c4 	movi	r2,71
    6644:	b0817626 	beq	r22,r2,6c20 <___vfprintf_internal_r+0x1e34>
    6648:	00801944 	movi	r2,101
    664c:	1442800e 	bge	r2,r17,7050 <___vfprintf_internal_r+0x2264>
    6650:	d8c02617 	ldw	r3,152(sp)
    6654:	00801984 	movi	r2,102
    6658:	d8c03215 	stw	r3,200(sp)
    665c:	8881fe26 	beq	r17,r2,6e58 <___vfprintf_internal_r+0x206c>
    6660:	d8c03217 	ldw	r3,200(sp)
    6664:	d9003317 	ldw	r4,204(sp)
    6668:	1901dd16 	blt	r3,r4,6de0 <___vfprintf_internal_r+0x1ff4>
    666c:	9480004c 	andi	r18,r18,1
    6670:	90022b1e 	bne	r18,zero,6f20 <___vfprintf_internal_r+0x2134>
    6674:	1805883a 	mov	r2,r3
    6678:	18028316 	blt	r3,zero,7088 <___vfprintf_internal_r+0x229c>
    667c:	d8c03217 	ldw	r3,200(sp)
    6680:	044019c4 	movi	r17,103
    6684:	d8c02b15 	stw	r3,172(sp)
    6688:	df002907 	ldb	fp,164(sp)
    668c:	e001531e 	bne	fp,zero,6bdc <___vfprintf_internal_r+0x1df0>
    6690:	df002783 	ldbu	fp,158(sp)
    6694:	d8802915 	stw	r2,164(sp)
    6698:	dc802c17 	ldw	r18,176(sp)
    669c:	d8002a15 	stw	zero,168(sp)
    66a0:	003baf06 	br	5560 <__alt_mem_epcs_flash_controller_0+0xff804560>
    66a4:	d8c02e17 	ldw	r3,184(sp)
    66a8:	d9002e17 	ldw	r4,184(sp)
    66ac:	d9402e17 	ldw	r5,184(sp)
    66b0:	18c00017 	ldw	r3,0(r3)
    66b4:	21000117 	ldw	r4,4(r4)
    66b8:	29400204 	addi	r5,r5,8
    66bc:	d8c03615 	stw	r3,216(sp)
    66c0:	d9003815 	stw	r4,224(sp)
    66c4:	d9402e15 	stw	r5,184(sp)
    66c8:	003b5006 	br	540c <__alt_mem_epcs_flash_controller_0+0xff80440c>
    66cc:	ac400007 	ldb	r17,0(r21)
    66d0:	003a2806 	br	4f74 <__alt_mem_epcs_flash_controller_0+0xff803f74>
    66d4:	9080100c 	andi	r2,r18,64
    66d8:	1000a826 	beq	r2,zero,697c <___vfprintf_internal_r+0x1b90>
    66dc:	d8c02e17 	ldw	r3,184(sp)
    66e0:	002d883a 	mov	r22,zero
    66e4:	1cc0000b 	ldhu	r19,0(r3)
    66e8:	18c00104 	addi	r3,r3,4
    66ec:	d8c02e15 	stw	r3,184(sp)
    66f0:	003caf06 	br	59b0 <__alt_mem_epcs_flash_controller_0+0xff8049b0>
    66f4:	d9002e17 	ldw	r4,184(sp)
    66f8:	d9402a17 	ldw	r5,168(sp)
    66fc:	002d883a 	mov	r22,zero
    6700:	20800104 	addi	r2,r4,4
    6704:	24c00017 	ldw	r19,0(r4)
    6708:	283ebb0e 	bge	r5,zero,61f8 <__alt_mem_epcs_flash_controller_0+0xff8051f8>
    670c:	003ef106 	br	62d4 <__alt_mem_epcs_flash_controller_0+0xff8052d4>
    6710:	9080040c 	andi	r2,r18,16
    6714:	1000921e 	bne	r2,zero,6960 <___vfprintf_internal_r+0x1b74>
    6718:	9480100c 	andi	r18,r18,64
    671c:	90013926 	beq	r18,zero,6c04 <___vfprintf_internal_r+0x1e18>
    6720:	d9402e17 	ldw	r5,184(sp)
    6724:	d8c02f17 	ldw	r3,188(sp)
    6728:	28800017 	ldw	r2,0(r5)
    672c:	29400104 	addi	r5,r5,4
    6730:	d9402e15 	stw	r5,184(sp)
    6734:	10c0000d 	sth	r3,0(r2)
    6738:	0039e406 	br	4ecc <__alt_mem_epcs_flash_controller_0+0xff803ecc>
    673c:	9080100c 	andi	r2,r18,64
    6740:	10008026 	beq	r2,zero,6944 <___vfprintf_internal_r+0x1b58>
    6744:	d8802e17 	ldw	r2,184(sp)
    6748:	14c0000f 	ldh	r19,0(r2)
    674c:	10800104 	addi	r2,r2,4
    6750:	d8802e15 	stw	r2,184(sp)
    6754:	982dd7fa 	srai	r22,r19,31
    6758:	b005883a 	mov	r2,r22
    675c:	003af706 	br	533c <__alt_mem_epcs_flash_controller_0+0xff80433c>
    6760:	9080100c 	andi	r2,r18,64
    6764:	d8002785 	stb	zero,158(sp)
    6768:	10008a1e 	bne	r2,zero,6994 <___vfprintf_internal_r+0x1ba8>
    676c:	d9002e17 	ldw	r4,184(sp)
    6770:	d9402a17 	ldw	r5,168(sp)
    6774:	002d883a 	mov	r22,zero
    6778:	20800104 	addi	r2,r4,4
    677c:	24c00017 	ldw	r19,0(r4)
    6780:	283e4b0e 	bge	r5,zero,60b0 <__alt_mem_epcs_flash_controller_0+0xff8050b0>
    6784:	9d86b03a 	or	r3,r19,r22
    6788:	d8802e15 	stw	r2,184(sp)
    678c:	183e4c1e 	bne	r3,zero,60c0 <__alt_mem_epcs_flash_controller_0+0xff8050c0>
    6790:	0039883a 	mov	fp,zero
    6794:	0005883a 	mov	r2,zero
    6798:	003d4006 	br	5c9c <__alt_mem_epcs_flash_controller_0+0xff804c9c>
    679c:	014000b4 	movhi	r5,2
    67a0:	29777684 	addi	r5,r5,-8742
    67a4:	d9402c15 	stw	r5,176(sp)
    67a8:	d9402c17 	ldw	r5,176(sp)
    67ac:	1c47883a 	add	r3,r3,r17
    67b0:	10800044 	addi	r2,r2,1
    67b4:	41400015 	stw	r5,0(r8)
    67b8:	44400115 	stw	r17,4(r8)
    67bc:	d8c02015 	stw	r3,128(sp)
    67c0:	d8801f15 	stw	r2,124(sp)
    67c4:	010001c4 	movi	r4,7
    67c8:	20bec816 	blt	r4,r2,62ec <__alt_mem_epcs_flash_controller_0+0xff8052ec>
    67cc:	42000204 	addi	r8,r8,8
    67d0:	003ecd06 	br	6308 <__alt_mem_epcs_flash_controller_0+0xff805308>
    67d4:	d9002a17 	ldw	r4,168(sp)
    67d8:	d8002785 	stb	zero,158(sp)
    67dc:	203d2d16 	blt	r4,zero,5c94 <__alt_mem_epcs_flash_controller_0+0xff804c94>
    67e0:	00bfdfc4 	movi	r2,-129
    67e4:	90a4703a 	and	r18,r18,r2
    67e8:	003a6106 	br	5170 <__alt_mem_epcs_flash_controller_0+0xff804170>
    67ec:	010000b4 	movhi	r4,2
    67f0:	21377684 	addi	r4,r4,-8742
    67f4:	d9002c15 	stw	r4,176(sp)
    67f8:	003bea06 	br	57a4 <__alt_mem_epcs_flash_controller_0+0xff8047a4>
    67fc:	d9002d17 	ldw	r4,180(sp)
    6800:	d9801e04 	addi	r6,sp,120
    6804:	b80b883a 	mov	r5,r23
    6808:	0011f300 	call	11f30 <__sprint_r>
    680c:	103a7b1e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    6810:	d8c02017 	ldw	r3,128(sp)
    6814:	da000404 	addi	r8,sp,16
    6818:	003d4106 	br	5d20 <__alt_mem_epcs_flash_controller_0+0xff804d20>
    681c:	d8801f17 	ldw	r2,124(sp)
    6820:	014000b4 	movhi	r5,2
    6824:	01000044 	movi	r4,1
    6828:	18c00044 	addi	r3,r3,1
    682c:	10800044 	addi	r2,r2,1
    6830:	29777604 	addi	r5,r5,-8744
    6834:	41000115 	stw	r4,4(r8)
    6838:	41400015 	stw	r5,0(r8)
    683c:	d8c02015 	stw	r3,128(sp)
    6840:	d8801f15 	stw	r2,124(sp)
    6844:	010001c4 	movi	r4,7
    6848:	20805c16 	blt	r4,r2,69bc <___vfprintf_internal_r+0x1bd0>
    684c:	42000204 	addi	r8,r8,8
    6850:	8800041e 	bne	r17,zero,6864 <___vfprintf_internal_r+0x1a78>
    6854:	d8803317 	ldw	r2,204(sp)
    6858:	1000021e 	bne	r2,zero,6864 <___vfprintf_internal_r+0x1a78>
    685c:	9080004c 	andi	r2,r18,1
    6860:	103be726 	beq	r2,zero,5800 <__alt_mem_epcs_flash_controller_0+0xff804800>
    6864:	d9003717 	ldw	r4,220(sp)
    6868:	d8801f17 	ldw	r2,124(sp)
    686c:	d9403417 	ldw	r5,208(sp)
    6870:	20c7883a 	add	r3,r4,r3
    6874:	10800044 	addi	r2,r2,1
    6878:	41000115 	stw	r4,4(r8)
    687c:	41400015 	stw	r5,0(r8)
    6880:	d8c02015 	stw	r3,128(sp)
    6884:	d8801f15 	stw	r2,124(sp)
    6888:	010001c4 	movi	r4,7
    688c:	20812116 	blt	r4,r2,6d14 <___vfprintf_internal_r+0x1f28>
    6890:	42000204 	addi	r8,r8,8
    6894:	0463c83a 	sub	r17,zero,r17
    6898:	0440730e 	bge	zero,r17,6a68 <___vfprintf_internal_r+0x1c7c>
    689c:	05800404 	movi	r22,16
    68a0:	b440860e 	bge	r22,r17,6abc <___vfprintf_internal_r+0x1cd0>
    68a4:	014000b4 	movhi	r5,2
    68a8:	29777684 	addi	r5,r5,-8742
    68ac:	d9402c15 	stw	r5,176(sp)
    68b0:	070001c4 	movi	fp,7
    68b4:	dcc02d17 	ldw	r19,180(sp)
    68b8:	00000306 	br	68c8 <___vfprintf_internal_r+0x1adc>
    68bc:	42000204 	addi	r8,r8,8
    68c0:	8c7ffc04 	addi	r17,r17,-16
    68c4:	b440800e 	bge	r22,r17,6ac8 <___vfprintf_internal_r+0x1cdc>
    68c8:	18c00404 	addi	r3,r3,16
    68cc:	10800044 	addi	r2,r2,1
    68d0:	45000015 	stw	r20,0(r8)
    68d4:	45800115 	stw	r22,4(r8)
    68d8:	d8c02015 	stw	r3,128(sp)
    68dc:	d8801f15 	stw	r2,124(sp)
    68e0:	e0bff60e 	bge	fp,r2,68bc <__alt_mem_epcs_flash_controller_0+0xff8058bc>
    68e4:	d9801e04 	addi	r6,sp,120
    68e8:	b80b883a 	mov	r5,r23
    68ec:	9809883a 	mov	r4,r19
    68f0:	0011f300 	call	11f30 <__sprint_r>
    68f4:	103a411e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    68f8:	d8c02017 	ldw	r3,128(sp)
    68fc:	d8801f17 	ldw	r2,124(sp)
    6900:	da000404 	addi	r8,sp,16
    6904:	003fee06 	br	68c0 <__alt_mem_epcs_flash_controller_0+0xff8058c0>
    6908:	00bfffc4 	movi	r2,-1
    690c:	003a3f06 	br	520c <__alt_mem_epcs_flash_controller_0+0xff80420c>
    6910:	008011c4 	movi	r2,71
    6914:	1440b816 	blt	r2,r17,6bf8 <___vfprintf_internal_r+0x1e0c>
    6918:	040000b4 	movhi	r16,2
    691c:	84376804 	addi	r16,r16,-8800
    6920:	00c000c4 	movi	r3,3
    6924:	00bfdfc4 	movi	r2,-129
    6928:	d8c02915 	stw	r3,164(sp)
    692c:	90a4703a 	and	r18,r18,r2
    6930:	df002783 	ldbu	fp,158(sp)
    6934:	d8c02b15 	stw	r3,172(sp)
    6938:	d8002a15 	stw	zero,168(sp)
    693c:	d8003215 	stw	zero,200(sp)
    6940:	003b0706 	br	5560 <__alt_mem_epcs_flash_controller_0+0xff804560>
    6944:	d8c02e17 	ldw	r3,184(sp)
    6948:	1cc00017 	ldw	r19,0(r3)
    694c:	18c00104 	addi	r3,r3,4
    6950:	d8c02e15 	stw	r3,184(sp)
    6954:	982dd7fa 	srai	r22,r19,31
    6958:	b005883a 	mov	r2,r22
    695c:	003a7706 	br	533c <__alt_mem_epcs_flash_controller_0+0xff80433c>
    6960:	d8c02e17 	ldw	r3,184(sp)
    6964:	d9002f17 	ldw	r4,188(sp)
    6968:	18800017 	ldw	r2,0(r3)
    696c:	18c00104 	addi	r3,r3,4
    6970:	d8c02e15 	stw	r3,184(sp)
    6974:	11000015 	stw	r4,0(r2)
    6978:	00395406 	br	4ecc <__alt_mem_epcs_flash_controller_0+0xff803ecc>
    697c:	d9002e17 	ldw	r4,184(sp)
    6980:	002d883a 	mov	r22,zero
    6984:	24c00017 	ldw	r19,0(r4)
    6988:	21000104 	addi	r4,r4,4
    698c:	d9002e15 	stw	r4,184(sp)
    6990:	003c0706 	br	59b0 <__alt_mem_epcs_flash_controller_0+0xff8049b0>
    6994:	d9402e17 	ldw	r5,184(sp)
    6998:	d8c02a17 	ldw	r3,168(sp)
    699c:	002d883a 	mov	r22,zero
    69a0:	28800104 	addi	r2,r5,4
    69a4:	2cc0000b 	ldhu	r19,0(r5)
    69a8:	183dc10e 	bge	r3,zero,60b0 <__alt_mem_epcs_flash_controller_0+0xff8050b0>
    69ac:	003f7506 	br	6784 <__alt_mem_epcs_flash_controller_0+0xff805784>
    69b0:	040000b4 	movhi	r16,2
    69b4:	84376604 	addi	r16,r16,-8808
    69b8:	003aa706 	br	5458 <__alt_mem_epcs_flash_controller_0+0xff804458>
    69bc:	d9002d17 	ldw	r4,180(sp)
    69c0:	d9801e04 	addi	r6,sp,120
    69c4:	b80b883a 	mov	r5,r23
    69c8:	0011f300 	call	11f30 <__sprint_r>
    69cc:	103a0b1e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    69d0:	dc402617 	ldw	r17,152(sp)
    69d4:	d8c02017 	ldw	r3,128(sp)
    69d8:	da000404 	addi	r8,sp,16
    69dc:	003f9c06 	br	6850 <__alt_mem_epcs_flash_controller_0+0xff805850>
    69e0:	ac400043 	ldbu	r17,1(r21)
    69e4:	84000814 	ori	r16,r16,32
    69e8:	ad400044 	addi	r21,r21,1
    69ec:	8c403fcc 	andi	r17,r17,255
    69f0:	8c40201c 	xori	r17,r17,128
    69f4:	8c7fe004 	addi	r17,r17,-128
    69f8:	00395e06 	br	4f74 <__alt_mem_epcs_flash_controller_0+0xff803f74>
    69fc:	d8c02e15 	stw	r3,184(sp)
    6a00:	0039883a 	mov	fp,zero
    6a04:	003e3506 	br	62dc <__alt_mem_epcs_flash_controller_0+0xff8052dc>
    6a08:	d9002d17 	ldw	r4,180(sp)
    6a0c:	d9801e04 	addi	r6,sp,120
    6a10:	b80b883a 	mov	r5,r23
    6a14:	0011f300 	call	11f30 <__sprint_r>
    6a18:	1039f81e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    6a1c:	d8c02017 	ldw	r3,128(sp)
    6a20:	da000404 	addi	r8,sp,16
    6a24:	003cd006 	br	5d68 <__alt_mem_epcs_flash_controller_0+0xff804d68>
    6a28:	8009883a 	mov	r4,r16
    6a2c:	df003d15 	stw	fp,244(sp)
    6a30:	00033c80 	call	33c8 <strlen>
    6a34:	d8802b15 	stw	r2,172(sp)
    6a38:	da003d17 	ldw	r8,244(sp)
    6a3c:	103c200e 	bge	r2,zero,5ac0 <__alt_mem_epcs_flash_controller_0+0xff804ac0>
    6a40:	0005883a 	mov	r2,zero
    6a44:	003c1e06 	br	5ac0 <__alt_mem_epcs_flash_controller_0+0xff804ac0>
    6a48:	d9002d17 	ldw	r4,180(sp)
    6a4c:	d9801e04 	addi	r6,sp,120
    6a50:	b80b883a 	mov	r5,r23
    6a54:	0011f300 	call	11f30 <__sprint_r>
    6a58:	1039e81e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    6a5c:	d8c02017 	ldw	r3,128(sp)
    6a60:	d8801f17 	ldw	r2,124(sp)
    6a64:	da000404 	addi	r8,sp,16
    6a68:	d9403317 	ldw	r5,204(sp)
    6a6c:	10800044 	addi	r2,r2,1
    6a70:	44000015 	stw	r16,0(r8)
    6a74:	28c7883a 	add	r3,r5,r3
    6a78:	003b5b06 	br	57e8 <__alt_mem_epcs_flash_controller_0+0xff8047e8>
    6a7c:	010000b4 	movhi	r4,2
    6a80:	21377a84 	addi	r4,r4,-8726
    6a84:	d9003515 	stw	r4,212(sp)
    6a88:	003af206 	br	5654 <__alt_mem_epcs_flash_controller_0+0xff804654>
    6a8c:	013fffc4 	movi	r4,-1
    6a90:	003a0806 	br	52b4 <__alt_mem_epcs_flash_controller_0+0xff8042b4>
    6a94:	0023883a 	mov	r17,zero
    6a98:	003d9d06 	br	6110 <__alt_mem_epcs_flash_controller_0+0xff805110>
    6a9c:	d9002d17 	ldw	r4,180(sp)
    6aa0:	d9801e04 	addi	r6,sp,120
    6aa4:	b80b883a 	mov	r5,r23
    6aa8:	0011f300 	call	11f30 <__sprint_r>
    6aac:	1039d31e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    6ab0:	d8c02017 	ldw	r3,128(sp)
    6ab4:	da000404 	addi	r8,sp,16
    6ab8:	003d9406 	br	610c <__alt_mem_epcs_flash_controller_0+0xff80510c>
    6abc:	010000b4 	movhi	r4,2
    6ac0:	21377684 	addi	r4,r4,-8742
    6ac4:	d9002c15 	stw	r4,176(sp)
    6ac8:	d9002c17 	ldw	r4,176(sp)
    6acc:	1c47883a 	add	r3,r3,r17
    6ad0:	10800044 	addi	r2,r2,1
    6ad4:	41000015 	stw	r4,0(r8)
    6ad8:	44400115 	stw	r17,4(r8)
    6adc:	d8c02015 	stw	r3,128(sp)
    6ae0:	d8801f15 	stw	r2,124(sp)
    6ae4:	010001c4 	movi	r4,7
    6ae8:	20bfd716 	blt	r4,r2,6a48 <__alt_mem_epcs_flash_controller_0+0xff805a48>
    6aec:	42000204 	addi	r8,r8,8
    6af0:	003fdd06 	br	6a68 <__alt_mem_epcs_flash_controller_0+0xff805a68>
    6af4:	d9002d17 	ldw	r4,180(sp)
    6af8:	d9801e04 	addi	r6,sp,120
    6afc:	b80b883a 	mov	r5,r23
    6b00:	0011f300 	call	11f30 <__sprint_r>
    6b04:	1039bd1e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    6b08:	d8802617 	ldw	r2,152(sp)
    6b0c:	d8c02017 	ldw	r3,128(sp)
    6b10:	da000404 	addi	r8,sp,16
    6b14:	003e1006 	br	6358 <__alt_mem_epcs_flash_controller_0+0xff805358>
    6b18:	00800044 	movi	r2,1
    6b1c:	10803fcc 	andi	r2,r2,255
    6b20:	00c00044 	movi	r3,1
    6b24:	10fa0d26 	beq	r2,r3,535c <__alt_mem_epcs_flash_controller_0+0xff80435c>
    6b28:	00c00084 	movi	r3,2
    6b2c:	10fbaf26 	beq	r2,r3,59ec <__alt_mem_epcs_flash_controller_0+0xff8049ec>
    6b30:	003a6d06 	br	54e8 <__alt_mem_epcs_flash_controller_0+0xff8044e8>
    6b34:	010000b4 	movhi	r4,2
    6b38:	21377a84 	addi	r4,r4,-8726
    6b3c:	d9003515 	stw	r4,212(sp)
    6b40:	003b5406 	br	5894 <__alt_mem_epcs_flash_controller_0+0xff804894>
    6b44:	d8802a17 	ldw	r2,168(sp)
    6b48:	00c00184 	movi	r3,6
    6b4c:	1880012e 	bgeu	r3,r2,6b54 <___vfprintf_internal_r+0x1d68>
    6b50:	1805883a 	mov	r2,r3
    6b54:	d8802b15 	stw	r2,172(sp)
    6b58:	1000ef16 	blt	r2,zero,6f18 <___vfprintf_internal_r+0x212c>
    6b5c:	040000b4 	movhi	r16,2
    6b60:	d8802915 	stw	r2,164(sp)
    6b64:	dcc02e15 	stw	r19,184(sp)
    6b68:	d8002a15 	stw	zero,168(sp)
    6b6c:	d8003215 	stw	zero,200(sp)
    6b70:	84377404 	addi	r16,r16,-8752
    6b74:	0039883a 	mov	fp,zero
    6b78:	003a8006 	br	557c <__alt_mem_epcs_flash_controller_0+0xff80457c>
    6b7c:	0021883a 	mov	r16,zero
    6b80:	003e0706 	br	63a0 <__alt_mem_epcs_flash_controller_0+0xff8053a0>
    6b84:	d9002d17 	ldw	r4,180(sp)
    6b88:	d9801e04 	addi	r6,sp,120
    6b8c:	b80b883a 	mov	r5,r23
    6b90:	0011f300 	call	11f30 <__sprint_r>
    6b94:	1039991e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    6b98:	d8802617 	ldw	r2,152(sp)
    6b9c:	d9403317 	ldw	r5,204(sp)
    6ba0:	d8c02017 	ldw	r3,128(sp)
    6ba4:	da000404 	addi	r8,sp,16
    6ba8:	2885c83a 	sub	r2,r5,r2
    6bac:	003dfb06 	br	639c <__alt_mem_epcs_flash_controller_0+0xff80539c>
    6bb0:	9080004c 	andi	r2,r18,1
    6bb4:	103e8f1e 	bne	r2,zero,65f4 <__alt_mem_epcs_flash_controller_0+0xff8055f4>
    6bb8:	d8802117 	ldw	r2,132(sp)
    6bbc:	003e9e06 	br	6638 <__alt_mem_epcs_flash_controller_0+0xff805638>
    6bc0:	1025883a 	mov	r18,r2
    6bc4:	0039883a 	mov	fp,zero
    6bc8:	00800084 	movi	r2,2
    6bcc:	003fd306 	br	6b1c <__alt_mem_epcs_flash_controller_0+0xff805b1c>
    6bd0:	07000b44 	movi	fp,45
    6bd4:	df002785 	stb	fp,158(sp)
    6bd8:	003a1b06 	br	5448 <__alt_mem_epcs_flash_controller_0+0xff804448>
    6bdc:	00c00b44 	movi	r3,45
    6be0:	d8c02785 	stb	r3,158(sp)
    6be4:	d8802915 	stw	r2,164(sp)
    6be8:	dc802c17 	ldw	r18,176(sp)
    6bec:	d8002a15 	stw	zero,168(sp)
    6bf0:	07000b44 	movi	fp,45
    6bf4:	003a5e06 	br	5570 <__alt_mem_epcs_flash_controller_0+0xff804570>
    6bf8:	040000b4 	movhi	r16,2
    6bfc:	84376904 	addi	r16,r16,-8796
    6c00:	003f4706 	br	6920 <__alt_mem_epcs_flash_controller_0+0xff805920>
    6c04:	d9002e17 	ldw	r4,184(sp)
    6c08:	d9402f17 	ldw	r5,188(sp)
    6c0c:	20800017 	ldw	r2,0(r4)
    6c10:	21000104 	addi	r4,r4,4
    6c14:	d9002e15 	stw	r4,184(sp)
    6c18:	11400015 	stw	r5,0(r2)
    6c1c:	0038ab06 	br	4ecc <__alt_mem_epcs_flash_controller_0+0xff803ecc>
    6c20:	dd802617 	ldw	r22,152(sp)
    6c24:	00bfff44 	movi	r2,-3
    6c28:	b0801c16 	blt	r22,r2,6c9c <___vfprintf_internal_r+0x1eb0>
    6c2c:	d9402a17 	ldw	r5,168(sp)
    6c30:	2d801a16 	blt	r5,r22,6c9c <___vfprintf_internal_r+0x1eb0>
    6c34:	dd803215 	stw	r22,200(sp)
    6c38:	003e8906 	br	6660 <__alt_mem_epcs_flash_controller_0+0xff805660>
    6c3c:	010000b4 	movhi	r4,2
    6c40:	21377684 	addi	r4,r4,-8742
    6c44:	d9002c15 	stw	r4,176(sp)
    6c48:	003c9106 	br	5e90 <__alt_mem_epcs_flash_controller_0+0xff804e90>
    6c4c:	e005883a 	mov	r2,fp
    6c50:	003e7906 	br	6638 <__alt_mem_epcs_flash_controller_0+0xff805638>
    6c54:	d9002a17 	ldw	r4,168(sp)
    6c58:	df002783 	ldbu	fp,158(sp)
    6c5c:	dcc02e15 	stw	r19,184(sp)
    6c60:	d9002915 	stw	r4,164(sp)
    6c64:	d9002b15 	stw	r4,172(sp)
    6c68:	d8002a15 	stw	zero,168(sp)
    6c6c:	d8003215 	stw	zero,200(sp)
    6c70:	003a3b06 	br	5560 <__alt_mem_epcs_flash_controller_0+0xff804560>
    6c74:	9080004c 	andi	r2,r18,1
    6c78:	0039883a 	mov	fp,zero
    6c7c:	10000426 	beq	r2,zero,6c90 <___vfprintf_internal_r+0x1ea4>
    6c80:	00800c04 	movi	r2,48
    6c84:	dc001dc4 	addi	r16,sp,119
    6c88:	d8801dc5 	stb	r2,119(sp)
    6c8c:	003b6406 	br	5a20 <__alt_mem_epcs_flash_controller_0+0xff804a20>
    6c90:	d8002b15 	stw	zero,172(sp)
    6c94:	dc001e04 	addi	r16,sp,120
    6c98:	003a2b06 	br	5548 <__alt_mem_epcs_flash_controller_0+0xff804548>
    6c9c:	8c7fff84 	addi	r17,r17,-2
    6ca0:	b5bfffc4 	addi	r22,r22,-1
    6ca4:	dd802615 	stw	r22,152(sp)
    6ca8:	dc4022c5 	stb	r17,139(sp)
    6cac:	b000bf16 	blt	r22,zero,6fac <___vfprintf_internal_r+0x21c0>
    6cb0:	00800ac4 	movi	r2,43
    6cb4:	d8802305 	stb	r2,140(sp)
    6cb8:	00800244 	movi	r2,9
    6cbc:	15807016 	blt	r2,r22,6e80 <___vfprintf_internal_r+0x2094>
    6cc0:	00800c04 	movi	r2,48
    6cc4:	b5800c04 	addi	r22,r22,48
    6cc8:	d8802345 	stb	r2,141(sp)
    6ccc:	dd802385 	stb	r22,142(sp)
    6cd0:	d88023c4 	addi	r2,sp,143
    6cd4:	df0022c4 	addi	fp,sp,139
    6cd8:	d8c03317 	ldw	r3,204(sp)
    6cdc:	1739c83a 	sub	fp,r2,fp
    6ce0:	d9003317 	ldw	r4,204(sp)
    6ce4:	e0c7883a 	add	r3,fp,r3
    6ce8:	df003a15 	stw	fp,232(sp)
    6cec:	d8c02b15 	stw	r3,172(sp)
    6cf0:	00800044 	movi	r2,1
    6cf4:	1100b30e 	bge	r2,r4,6fc4 <___vfprintf_internal_r+0x21d8>
    6cf8:	d8c02b17 	ldw	r3,172(sp)
    6cfc:	18c00044 	addi	r3,r3,1
    6d00:	d8c02b15 	stw	r3,172(sp)
    6d04:	1805883a 	mov	r2,r3
    6d08:	1800ac16 	blt	r3,zero,6fbc <___vfprintf_internal_r+0x21d0>
    6d0c:	d8003215 	stw	zero,200(sp)
    6d10:	003e5d06 	br	6688 <__alt_mem_epcs_flash_controller_0+0xff805688>
    6d14:	d9002d17 	ldw	r4,180(sp)
    6d18:	d9801e04 	addi	r6,sp,120
    6d1c:	b80b883a 	mov	r5,r23
    6d20:	0011f300 	call	11f30 <__sprint_r>
    6d24:	1039351e 	bne	r2,zero,51fc <__alt_mem_epcs_flash_controller_0+0xff8041fc>
    6d28:	dc402617 	ldw	r17,152(sp)
    6d2c:	d8c02017 	ldw	r3,128(sp)
    6d30:	d8801f17 	ldw	r2,124(sp)
    6d34:	da000404 	addi	r8,sp,16
    6d38:	003ed606 	br	6894 <__alt_mem_epcs_flash_controller_0+0xff805894>
    6d3c:	182b883a 	mov	r21,r3
    6d40:	d8002a15 	stw	zero,168(sp)
    6d44:	00388c06 	br	4f78 <__alt_mem_epcs_flash_controller_0+0xff803f78>
    6d48:	d8802a17 	ldw	r2,168(sp)
    6d4c:	103e071e 	bne	r2,zero,656c <__alt_mem_epcs_flash_controller_0+0xff80556c>
    6d50:	dc002a15 	stw	r16,168(sp)
    6d54:	003e0506 	br	656c <__alt_mem_epcs_flash_controller_0+0xff80556c>
    6d58:	d9002a17 	ldw	r4,168(sp)
    6d5c:	20c00044 	addi	r3,r4,1
    6d60:	003e0f06 	br	65a0 <__alt_mem_epcs_flash_controller_0+0xff8055a0>
    6d64:	01400184 	movi	r5,6
    6d68:	d9402a15 	stw	r5,168(sp)
    6d6c:	003dff06 	br	656c <__alt_mem_epcs_flash_controller_0+0xff80556c>
    6d70:	d8802104 	addi	r2,sp,132
    6d74:	d8800315 	stw	r2,12(sp)
    6d78:	d8802504 	addi	r2,sp,148
    6d7c:	d8800215 	stw	r2,8(sp)
    6d80:	d8802604 	addi	r2,sp,152
    6d84:	d8800115 	stw	r2,4(sp)
    6d88:	d8802a17 	ldw	r2,168(sp)
    6d8c:	d9403617 	ldw	r5,216(sp)
    6d90:	d9002d17 	ldw	r4,180(sp)
    6d94:	d8800015 	stw	r2,0(sp)
    6d98:	01c000c4 	movi	r7,3
    6d9c:	980d883a 	mov	r6,r19
    6da0:	da003d15 	stw	r8,244(sp)
    6da4:	00075d00 	call	75d0 <_dtoa_r>
    6da8:	d8c02a17 	ldw	r3,168(sp)
    6dac:	da003d17 	ldw	r8,244(sp)
    6db0:	1021883a 	mov	r16,r2
    6db4:	10f9883a 	add	fp,r2,r3
    6db8:	81000007 	ldb	r4,0(r16)
    6dbc:	00800c04 	movi	r2,48
    6dc0:	20805e26 	beq	r4,r2,6f3c <___vfprintf_internal_r+0x2150>
    6dc4:	d8c02617 	ldw	r3,152(sp)
    6dc8:	e0f9883a 	add	fp,fp,r3
    6dcc:	003e0a06 	br	65f8 <__alt_mem_epcs_flash_controller_0+0xff8055f8>
    6dd0:	00c00b44 	movi	r3,45
    6dd4:	24e0003c 	xorhi	r19,r4,32768
    6dd8:	d8c02905 	stb	r3,164(sp)
    6ddc:	003de906 	br	6584 <__alt_mem_epcs_flash_controller_0+0xff805584>
    6de0:	d8c03217 	ldw	r3,200(sp)
    6de4:	00c07a0e 	bge	zero,r3,6fd0 <___vfprintf_internal_r+0x21e4>
    6de8:	00800044 	movi	r2,1
    6dec:	d9003317 	ldw	r4,204(sp)
    6df0:	1105883a 	add	r2,r2,r4
    6df4:	d8802b15 	stw	r2,172(sp)
    6df8:	10004e16 	blt	r2,zero,6f34 <___vfprintf_internal_r+0x2148>
    6dfc:	044019c4 	movi	r17,103
    6e00:	003e2106 	br	6688 <__alt_mem_epcs_flash_controller_0+0xff805688>
    6e04:	d9002a17 	ldw	r4,168(sp)
    6e08:	d8802104 	addi	r2,sp,132
    6e0c:	d8800315 	stw	r2,12(sp)
    6e10:	d9000015 	stw	r4,0(sp)
    6e14:	d8802504 	addi	r2,sp,148
    6e18:	d9403617 	ldw	r5,216(sp)
    6e1c:	d9002d17 	ldw	r4,180(sp)
    6e20:	d8800215 	stw	r2,8(sp)
    6e24:	d8802604 	addi	r2,sp,152
    6e28:	d8800115 	stw	r2,4(sp)
    6e2c:	01c000c4 	movi	r7,3
    6e30:	980d883a 	mov	r6,r19
    6e34:	da003d15 	stw	r8,244(sp)
    6e38:	00075d00 	call	75d0 <_dtoa_r>
    6e3c:	d8c02a17 	ldw	r3,168(sp)
    6e40:	da003d17 	ldw	r8,244(sp)
    6e44:	1021883a 	mov	r16,r2
    6e48:	00801184 	movi	r2,70
    6e4c:	80f9883a 	add	fp,r16,r3
    6e50:	88bfd926 	beq	r17,r2,6db8 <__alt_mem_epcs_flash_controller_0+0xff805db8>
    6e54:	003de806 	br	65f8 <__alt_mem_epcs_flash_controller_0+0xff8055f8>
    6e58:	d9002a17 	ldw	r4,168(sp)
    6e5c:	00c04d0e 	bge	zero,r3,6f94 <___vfprintf_internal_r+0x21a8>
    6e60:	2000441e 	bne	r4,zero,6f74 <___vfprintf_internal_r+0x2188>
    6e64:	9480004c 	andi	r18,r18,1
    6e68:	9000421e 	bne	r18,zero,6f74 <___vfprintf_internal_r+0x2188>
    6e6c:	1805883a 	mov	r2,r3
    6e70:	18006f16 	blt	r3,zero,7030 <___vfprintf_internal_r+0x2244>
    6e74:	d8c03217 	ldw	r3,200(sp)
    6e78:	d8c02b15 	stw	r3,172(sp)
    6e7c:	003e0206 	br	6688 <__alt_mem_epcs_flash_controller_0+0xff805688>
    6e80:	df0022c4 	addi	fp,sp,139
    6e84:	dc002a15 	stw	r16,168(sp)
    6e88:	4027883a 	mov	r19,r8
    6e8c:	e021883a 	mov	r16,fp
    6e90:	b009883a 	mov	r4,r22
    6e94:	01400284 	movi	r5,10
    6e98:	00023140 	call	2314 <__modsi3>
    6e9c:	10800c04 	addi	r2,r2,48
    6ea0:	843fffc4 	addi	r16,r16,-1
    6ea4:	b009883a 	mov	r4,r22
    6ea8:	01400284 	movi	r5,10
    6eac:	80800005 	stb	r2,0(r16)
    6eb0:	00022900 	call	2290 <__divsi3>
    6eb4:	102d883a 	mov	r22,r2
    6eb8:	00800244 	movi	r2,9
    6ebc:	15bff416 	blt	r2,r22,6e90 <__alt_mem_epcs_flash_controller_0+0xff805e90>
    6ec0:	9811883a 	mov	r8,r19
    6ec4:	b0800c04 	addi	r2,r22,48
    6ec8:	8027883a 	mov	r19,r16
    6ecc:	997fffc4 	addi	r5,r19,-1
    6ed0:	98bfffc5 	stb	r2,-1(r19)
    6ed4:	dc002a17 	ldw	r16,168(sp)
    6ed8:	2f006d2e 	bgeu	r5,fp,7090 <___vfprintf_internal_r+0x22a4>
    6edc:	d9c02384 	addi	r7,sp,142
    6ee0:	3ccfc83a 	sub	r7,r7,r19
    6ee4:	d9002344 	addi	r4,sp,141
    6ee8:	e1cf883a 	add	r7,fp,r7
    6eec:	00000106 	br	6ef4 <___vfprintf_internal_r+0x2108>
    6ef0:	28800003 	ldbu	r2,0(r5)
    6ef4:	20800005 	stb	r2,0(r4)
    6ef8:	21000044 	addi	r4,r4,1
    6efc:	29400044 	addi	r5,r5,1
    6f00:	393ffb1e 	bne	r7,r4,6ef0 <__alt_mem_epcs_flash_controller_0+0xff805ef0>
    6f04:	d8802304 	addi	r2,sp,140
    6f08:	14c5c83a 	sub	r2,r2,r19
    6f0c:	d8c02344 	addi	r3,sp,141
    6f10:	1885883a 	add	r2,r3,r2
    6f14:	003f7006 	br	6cd8 <__alt_mem_epcs_flash_controller_0+0xff805cd8>
    6f18:	0005883a 	mov	r2,zero
    6f1c:	003f0f06 	br	6b5c <__alt_mem_epcs_flash_controller_0+0xff805b5c>
    6f20:	d8c03217 	ldw	r3,200(sp)
    6f24:	18c00044 	addi	r3,r3,1
    6f28:	d8c02b15 	stw	r3,172(sp)
    6f2c:	1805883a 	mov	r2,r3
    6f30:	183fb20e 	bge	r3,zero,6dfc <__alt_mem_epcs_flash_controller_0+0xff805dfc>
    6f34:	0005883a 	mov	r2,zero
    6f38:	003fb006 	br	6dfc <__alt_mem_epcs_flash_controller_0+0xff805dfc>
    6f3c:	d9003617 	ldw	r4,216(sp)
    6f40:	000d883a 	mov	r6,zero
    6f44:	000f883a 	mov	r7,zero
    6f48:	980b883a 	mov	r5,r19
    6f4c:	d8c03c15 	stw	r3,240(sp)
    6f50:	da003d15 	stw	r8,244(sp)
    6f54:	00180a80 	call	180a8 <__eqdf2>
    6f58:	d8c03c17 	ldw	r3,240(sp)
    6f5c:	da003d17 	ldw	r8,244(sp)
    6f60:	103f9826 	beq	r2,zero,6dc4 <__alt_mem_epcs_flash_controller_0+0xff805dc4>
    6f64:	00800044 	movi	r2,1
    6f68:	10c7c83a 	sub	r3,r2,r3
    6f6c:	d8c02615 	stw	r3,152(sp)
    6f70:	003f9506 	br	6dc8 <__alt_mem_epcs_flash_controller_0+0xff805dc8>
    6f74:	d9002a17 	ldw	r4,168(sp)
    6f78:	d8c03217 	ldw	r3,200(sp)
    6f7c:	20800044 	addi	r2,r4,1
    6f80:	1885883a 	add	r2,r3,r2
    6f84:	d8802b15 	stw	r2,172(sp)
    6f88:	103dbf0e 	bge	r2,zero,6688 <__alt_mem_epcs_flash_controller_0+0xff805688>
    6f8c:	0005883a 	mov	r2,zero
    6f90:	003dbd06 	br	6688 <__alt_mem_epcs_flash_controller_0+0xff805688>
    6f94:	2000201e 	bne	r4,zero,7018 <___vfprintf_internal_r+0x222c>
    6f98:	9480004c 	andi	r18,r18,1
    6f9c:	90001e1e 	bne	r18,zero,7018 <___vfprintf_internal_r+0x222c>
    6fa0:	00800044 	movi	r2,1
    6fa4:	d8802b15 	stw	r2,172(sp)
    6fa8:	003db706 	br	6688 <__alt_mem_epcs_flash_controller_0+0xff805688>
    6fac:	00800b44 	movi	r2,45
    6fb0:	05adc83a 	sub	r22,zero,r22
    6fb4:	d8802305 	stb	r2,140(sp)
    6fb8:	003f3f06 	br	6cb8 <__alt_mem_epcs_flash_controller_0+0xff805cb8>
    6fbc:	0005883a 	mov	r2,zero
    6fc0:	003f5206 	br	6d0c <__alt_mem_epcs_flash_controller_0+0xff805d0c>
    6fc4:	90a4703a 	and	r18,r18,r2
    6fc8:	903f4e26 	beq	r18,zero,6d04 <__alt_mem_epcs_flash_controller_0+0xff805d04>
    6fcc:	003f4a06 	br	6cf8 <__alt_mem_epcs_flash_controller_0+0xff805cf8>
    6fd0:	00800084 	movi	r2,2
    6fd4:	10c5c83a 	sub	r2,r2,r3
    6fd8:	003f8406 	br	6dec <__alt_mem_epcs_flash_controller_0+0xff805dec>
    6fdc:	d9402e17 	ldw	r5,184(sp)
    6fe0:	d9002e17 	ldw	r4,184(sp)
    6fe4:	ac400043 	ldbu	r17,1(r21)
    6fe8:	29400017 	ldw	r5,0(r5)
    6fec:	20800104 	addi	r2,r4,4
    6ff0:	d8802e15 	stw	r2,184(sp)
    6ff4:	d9402a15 	stw	r5,168(sp)
    6ff8:	182b883a 	mov	r21,r3
    6ffc:	283e7b0e 	bge	r5,zero,69ec <__alt_mem_epcs_flash_controller_0+0xff8059ec>
    7000:	8c403fcc 	andi	r17,r17,255
    7004:	017fffc4 	movi	r5,-1
    7008:	8c40201c 	xori	r17,r17,128
    700c:	d9402a15 	stw	r5,168(sp)
    7010:	8c7fe004 	addi	r17,r17,-128
    7014:	0037d706 	br	4f74 <__alt_mem_epcs_flash_controller_0+0xff803f74>
    7018:	d8c02a17 	ldw	r3,168(sp)
    701c:	18c00084 	addi	r3,r3,2
    7020:	d8c02b15 	stw	r3,172(sp)
    7024:	1805883a 	mov	r2,r3
    7028:	183d970e 	bge	r3,zero,6688 <__alt_mem_epcs_flash_controller_0+0xff805688>
    702c:	003fd706 	br	6f8c <__alt_mem_epcs_flash_controller_0+0xff805f8c>
    7030:	0005883a 	mov	r2,zero
    7034:	003f8f06 	br	6e74 <__alt_mem_epcs_flash_controller_0+0xff805e74>
    7038:	9080004c 	andi	r2,r18,1
    703c:	103f821e 	bne	r2,zero,6e48 <__alt_mem_epcs_flash_controller_0+0xff805e48>
    7040:	d8802117 	ldw	r2,132(sp)
    7044:	1405c83a 	sub	r2,r2,r16
    7048:	d8803315 	stw	r2,204(sp)
    704c:	b47ef426 	beq	r22,r17,6c20 <__alt_mem_epcs_flash_controller_0+0xff805c20>
    7050:	dd802617 	ldw	r22,152(sp)
    7054:	003f1206 	br	6ca0 <__alt_mem_epcs_flash_controller_0+0xff805ca0>
    7058:	d8c02b03 	ldbu	r3,172(sp)
    705c:	d8c02785 	stb	r3,158(sp)
    7060:	0038df06 	br	53e0 <__alt_mem_epcs_flash_controller_0+0xff8043e0>
    7064:	d8c02b03 	ldbu	r3,172(sp)
    7068:	d8c02785 	stb	r3,158(sp)
    706c:	0038aa06 	br	5318 <__alt_mem_epcs_flash_controller_0+0xff804318>
    7070:	d8c02b03 	ldbu	r3,172(sp)
    7074:	d8c02785 	stb	r3,158(sp)
    7078:	003a4306 	br	5988 <__alt_mem_epcs_flash_controller_0+0xff804988>
    707c:	d8c02b03 	ldbu	r3,172(sp)
    7080:	d8c02785 	stb	r3,158(sp)
    7084:	003af506 	br	5c5c <__alt_mem_epcs_flash_controller_0+0xff804c5c>
    7088:	0005883a 	mov	r2,zero
    708c:	003d7b06 	br	667c <__alt_mem_epcs_flash_controller_0+0xff80567c>
    7090:	d8802344 	addi	r2,sp,141
    7094:	003f1006 	br	6cd8 <__alt_mem_epcs_flash_controller_0+0xff805cd8>
    7098:	d8c02b03 	ldbu	r3,172(sp)
    709c:	d8c02785 	stb	r3,158(sp)
    70a0:	0038fd06 	br	5498 <__alt_mem_epcs_flash_controller_0+0xff804498>
    70a4:	d8c02b03 	ldbu	r3,172(sp)
    70a8:	d8c02785 	stb	r3,158(sp)
    70ac:	003a9706 	br	5b0c <__alt_mem_epcs_flash_controller_0+0xff804b0c>
    70b0:	d8c02b03 	ldbu	r3,172(sp)
    70b4:	d8c02785 	stb	r3,158(sp)
    70b8:	003a1806 	br	591c <__alt_mem_epcs_flash_controller_0+0xff80491c>
    70bc:	d8c02b03 	ldbu	r3,172(sp)
    70c0:	d8c02785 	stb	r3,158(sp)
    70c4:	003abe06 	br	5bc0 <__alt_mem_epcs_flash_controller_0+0xff804bc0>

000070c8 <__vfprintf_internal>:
    70c8:	008000b4 	movhi	r2,2
    70cc:	10801c04 	addi	r2,r2,112
    70d0:	300f883a 	mov	r7,r6
    70d4:	280d883a 	mov	r6,r5
    70d8:	200b883a 	mov	r5,r4
    70dc:	11000017 	ldw	r4,0(r2)
    70e0:	0004dec1 	jmpi	4dec <___vfprintf_internal_r>

000070e4 <__sbprintf>:
    70e4:	2880030b 	ldhu	r2,12(r5)
    70e8:	2ac01917 	ldw	r11,100(r5)
    70ec:	2a80038b 	ldhu	r10,14(r5)
    70f0:	2a400717 	ldw	r9,28(r5)
    70f4:	2a000917 	ldw	r8,36(r5)
    70f8:	defee204 	addi	sp,sp,-1144
    70fc:	00c10004 	movi	r3,1024
    7100:	dc011a15 	stw	r16,1128(sp)
    7104:	10bfff4c 	andi	r2,r2,65533
    7108:	2821883a 	mov	r16,r5
    710c:	d8cb883a 	add	r5,sp,r3
    7110:	dc811c15 	stw	r18,1136(sp)
    7114:	dc411b15 	stw	r17,1132(sp)
    7118:	dfc11d15 	stw	ra,1140(sp)
    711c:	2025883a 	mov	r18,r4
    7120:	d881030d 	sth	r2,1036(sp)
    7124:	dac11915 	stw	r11,1124(sp)
    7128:	da81038d 	sth	r10,1038(sp)
    712c:	da410715 	stw	r9,1052(sp)
    7130:	da010915 	stw	r8,1060(sp)
    7134:	dec10015 	stw	sp,1024(sp)
    7138:	dec10415 	stw	sp,1040(sp)
    713c:	d8c10215 	stw	r3,1032(sp)
    7140:	d8c10515 	stw	r3,1044(sp)
    7144:	d8010615 	stw	zero,1048(sp)
    7148:	0004dec0 	call	4dec <___vfprintf_internal_r>
    714c:	1023883a 	mov	r17,r2
    7150:	10000416 	blt	r2,zero,7164 <__sbprintf+0x80>
    7154:	d9410004 	addi	r5,sp,1024
    7158:	9009883a 	mov	r4,r18
    715c:	0008e740 	call	8e74 <_fflush_r>
    7160:	10000d1e 	bne	r2,zero,7198 <__sbprintf+0xb4>
    7164:	d881030b 	ldhu	r2,1036(sp)
    7168:	1080100c 	andi	r2,r2,64
    716c:	10000326 	beq	r2,zero,717c <__sbprintf+0x98>
    7170:	8080030b 	ldhu	r2,12(r16)
    7174:	10801014 	ori	r2,r2,64
    7178:	8080030d 	sth	r2,12(r16)
    717c:	8805883a 	mov	r2,r17
    7180:	dfc11d17 	ldw	ra,1140(sp)
    7184:	dc811c17 	ldw	r18,1136(sp)
    7188:	dc411b17 	ldw	r17,1132(sp)
    718c:	dc011a17 	ldw	r16,1128(sp)
    7190:	dec11e04 	addi	sp,sp,1144
    7194:	f800283a 	ret
    7198:	047fffc4 	movi	r17,-1
    719c:	003ff106 	br	7164 <__alt_mem_epcs_flash_controller_0+0xff806164>

000071a0 <_write_r>:
    71a0:	defffd04 	addi	sp,sp,-12
    71a4:	2805883a 	mov	r2,r5
    71a8:	dc000015 	stw	r16,0(sp)
    71ac:	040000b4 	movhi	r16,2
    71b0:	dc400115 	stw	r17,4(sp)
    71b4:	300b883a 	mov	r5,r6
    71b8:	84072604 	addi	r16,r16,7320
    71bc:	2023883a 	mov	r17,r4
    71c0:	380d883a 	mov	r6,r7
    71c4:	1009883a 	mov	r4,r2
    71c8:	dfc00215 	stw	ra,8(sp)
    71cc:	80000015 	stw	zero,0(r16)
    71d0:	001a1c80 	call	1a1c8 <write>
    71d4:	00ffffc4 	movi	r3,-1
    71d8:	10c00526 	beq	r2,r3,71f0 <_write_r+0x50>
    71dc:	dfc00217 	ldw	ra,8(sp)
    71e0:	dc400117 	ldw	r17,4(sp)
    71e4:	dc000017 	ldw	r16,0(sp)
    71e8:	dec00304 	addi	sp,sp,12
    71ec:	f800283a 	ret
    71f0:	80c00017 	ldw	r3,0(r16)
    71f4:	183ff926 	beq	r3,zero,71dc <__alt_mem_epcs_flash_controller_0+0xff8061dc>
    71f8:	88c00015 	stw	r3,0(r17)
    71fc:	003ff706 	br	71dc <__alt_mem_epcs_flash_controller_0+0xff8061dc>

00007200 <__swsetup_r>:
    7200:	008000b4 	movhi	r2,2
    7204:	defffd04 	addi	sp,sp,-12
    7208:	10801c04 	addi	r2,r2,112
    720c:	dc400115 	stw	r17,4(sp)
    7210:	2023883a 	mov	r17,r4
    7214:	11000017 	ldw	r4,0(r2)
    7218:	dc000015 	stw	r16,0(sp)
    721c:	dfc00215 	stw	ra,8(sp)
    7220:	2821883a 	mov	r16,r5
    7224:	20000226 	beq	r4,zero,7230 <__swsetup_r+0x30>
    7228:	20800e17 	ldw	r2,56(r4)
    722c:	10003126 	beq	r2,zero,72f4 <__swsetup_r+0xf4>
    7230:	8080030b 	ldhu	r2,12(r16)
    7234:	10c0020c 	andi	r3,r2,8
    7238:	1009883a 	mov	r4,r2
    723c:	18000f26 	beq	r3,zero,727c <__swsetup_r+0x7c>
    7240:	80c00417 	ldw	r3,16(r16)
    7244:	18001526 	beq	r3,zero,729c <__swsetup_r+0x9c>
    7248:	1100004c 	andi	r4,r2,1
    724c:	20001c1e 	bne	r4,zero,72c0 <__swsetup_r+0xc0>
    7250:	1080008c 	andi	r2,r2,2
    7254:	1000291e 	bne	r2,zero,72fc <__swsetup_r+0xfc>
    7258:	80800517 	ldw	r2,20(r16)
    725c:	80800215 	stw	r2,8(r16)
    7260:	18001c26 	beq	r3,zero,72d4 <__swsetup_r+0xd4>
    7264:	0005883a 	mov	r2,zero
    7268:	dfc00217 	ldw	ra,8(sp)
    726c:	dc400117 	ldw	r17,4(sp)
    7270:	dc000017 	ldw	r16,0(sp)
    7274:	dec00304 	addi	sp,sp,12
    7278:	f800283a 	ret
    727c:	2080040c 	andi	r2,r4,16
    7280:	10002e26 	beq	r2,zero,733c <__swsetup_r+0x13c>
    7284:	2080010c 	andi	r2,r4,4
    7288:	10001e1e 	bne	r2,zero,7304 <__swsetup_r+0x104>
    728c:	80c00417 	ldw	r3,16(r16)
    7290:	20800214 	ori	r2,r4,8
    7294:	8080030d 	sth	r2,12(r16)
    7298:	183feb1e 	bne	r3,zero,7248 <__alt_mem_epcs_flash_controller_0+0xff806248>
    729c:	1100a00c 	andi	r4,r2,640
    72a0:	01408004 	movi	r5,512
    72a4:	217fe826 	beq	r4,r5,7248 <__alt_mem_epcs_flash_controller_0+0xff806248>
    72a8:	800b883a 	mov	r5,r16
    72ac:	8809883a 	mov	r4,r17
    72b0:	0009ea00 	call	9ea0 <__smakebuf_r>
    72b4:	8080030b 	ldhu	r2,12(r16)
    72b8:	80c00417 	ldw	r3,16(r16)
    72bc:	003fe206 	br	7248 <__alt_mem_epcs_flash_controller_0+0xff806248>
    72c0:	80800517 	ldw	r2,20(r16)
    72c4:	80000215 	stw	zero,8(r16)
    72c8:	0085c83a 	sub	r2,zero,r2
    72cc:	80800615 	stw	r2,24(r16)
    72d0:	183fe41e 	bne	r3,zero,7264 <__alt_mem_epcs_flash_controller_0+0xff806264>
    72d4:	80c0030b 	ldhu	r3,12(r16)
    72d8:	0005883a 	mov	r2,zero
    72dc:	1900200c 	andi	r4,r3,128
    72e0:	203fe126 	beq	r4,zero,7268 <__alt_mem_epcs_flash_controller_0+0xff806268>
    72e4:	18c01014 	ori	r3,r3,64
    72e8:	80c0030d 	sth	r3,12(r16)
    72ec:	00bfffc4 	movi	r2,-1
    72f0:	003fdd06 	br	7268 <__alt_mem_epcs_flash_controller_0+0xff806268>
    72f4:	00092600 	call	9260 <__sinit>
    72f8:	003fcd06 	br	7230 <__alt_mem_epcs_flash_controller_0+0xff806230>
    72fc:	0005883a 	mov	r2,zero
    7300:	003fd606 	br	725c <__alt_mem_epcs_flash_controller_0+0xff80625c>
    7304:	81400c17 	ldw	r5,48(r16)
    7308:	28000626 	beq	r5,zero,7324 <__swsetup_r+0x124>
    730c:	80801004 	addi	r2,r16,64
    7310:	28800326 	beq	r5,r2,7320 <__swsetup_r+0x120>
    7314:	8809883a 	mov	r4,r17
    7318:	00093d40 	call	93d4 <_free_r>
    731c:	8100030b 	ldhu	r4,12(r16)
    7320:	80000c15 	stw	zero,48(r16)
    7324:	80c00417 	ldw	r3,16(r16)
    7328:	00bff6c4 	movi	r2,-37
    732c:	1108703a 	and	r4,r2,r4
    7330:	80000115 	stw	zero,4(r16)
    7334:	80c00015 	stw	r3,0(r16)
    7338:	003fd506 	br	7290 <__alt_mem_epcs_flash_controller_0+0xff806290>
    733c:	00800244 	movi	r2,9
    7340:	88800015 	stw	r2,0(r17)
    7344:	20801014 	ori	r2,r4,64
    7348:	8080030d 	sth	r2,12(r16)
    734c:	00bfffc4 	movi	r2,-1
    7350:	003fc506 	br	7268 <__alt_mem_epcs_flash_controller_0+0xff806268>

00007354 <_close_r>:
    7354:	defffd04 	addi	sp,sp,-12
    7358:	dc000015 	stw	r16,0(sp)
    735c:	040000b4 	movhi	r16,2
    7360:	dc400115 	stw	r17,4(sp)
    7364:	84072604 	addi	r16,r16,7320
    7368:	2023883a 	mov	r17,r4
    736c:	2809883a 	mov	r4,r5
    7370:	dfc00215 	stw	ra,8(sp)
    7374:	80000015 	stw	zero,0(r16)
    7378:	00198b40 	call	198b4 <close>
    737c:	00ffffc4 	movi	r3,-1
    7380:	10c00526 	beq	r2,r3,7398 <_close_r+0x44>
    7384:	dfc00217 	ldw	ra,8(sp)
    7388:	dc400117 	ldw	r17,4(sp)
    738c:	dc000017 	ldw	r16,0(sp)
    7390:	dec00304 	addi	sp,sp,12
    7394:	f800283a 	ret
    7398:	80c00017 	ldw	r3,0(r16)
    739c:	183ff926 	beq	r3,zero,7384 <__alt_mem_epcs_flash_controller_0+0xff806384>
    73a0:	88c00015 	stw	r3,0(r17)
    73a4:	003ff706 	br	7384 <__alt_mem_epcs_flash_controller_0+0xff806384>

000073a8 <quorem>:
    73a8:	defff204 	addi	sp,sp,-56
    73ac:	ddc00b15 	stw	r23,44(sp)
    73b0:	20800417 	ldw	r2,16(r4)
    73b4:	2dc00417 	ldw	r23,16(r5)
    73b8:	dfc00d15 	stw	ra,52(sp)
    73bc:	df000c15 	stw	fp,48(sp)
    73c0:	dd800a15 	stw	r22,40(sp)
    73c4:	dd400915 	stw	r21,36(sp)
    73c8:	dd000815 	stw	r20,32(sp)
    73cc:	dcc00715 	stw	r19,28(sp)
    73d0:	dc800615 	stw	r18,24(sp)
    73d4:	dc400515 	stw	r17,20(sp)
    73d8:	dc000415 	stw	r16,16(sp)
    73dc:	15c07a16 	blt	r2,r23,75c8 <quorem+0x220>
    73e0:	bdffffc4 	addi	r23,r23,-1
    73e4:	bde9883a 	add	r20,r23,r23
    73e8:	28c00504 	addi	r3,r5,20
    73ec:	a529883a 	add	r20,r20,r20
    73f0:	1d39883a 	add	fp,r3,r20
    73f4:	24c00504 	addi	r19,r4,20
    73f8:	d9400215 	stw	r5,8(sp)
    73fc:	9d29883a 	add	r20,r19,r20
    7400:	e1400017 	ldw	r5,0(fp)
    7404:	d9000015 	stw	r4,0(sp)
    7408:	a1000017 	ldw	r4,0(r20)
    740c:	29400044 	addi	r5,r5,1
    7410:	d8c00115 	stw	r3,4(sp)
    7414:	dd000315 	stw	r20,12(sp)
    7418:	00023880 	call	2388 <__udivsi3>
    741c:	1025883a 	mov	r18,r2
    7420:	10003026 	beq	r2,zero,74e4 <quorem+0x13c>
    7424:	dc400117 	ldw	r17,4(sp)
    7428:	9829883a 	mov	r20,r19
    742c:	002d883a 	mov	r22,zero
    7430:	0021883a 	mov	r16,zero
    7434:	8d400017 	ldw	r21,0(r17)
    7438:	900b883a 	mov	r5,r18
    743c:	8c400104 	addi	r17,r17,4
    7440:	a93fffcc 	andi	r4,r21,65535
    7444:	00024440 	call	2444 <__mulsi3>
    7448:	a808d43a 	srli	r4,r21,16
    744c:	900b883a 	mov	r5,r18
    7450:	15ad883a 	add	r22,r2,r22
    7454:	00024440 	call	2444 <__mulsi3>
    7458:	a1000017 	ldw	r4,0(r20)
    745c:	b00cd43a 	srli	r6,r22,16
    7460:	b0ffffcc 	andi	r3,r22,65535
    7464:	217fffcc 	andi	r5,r4,65535
    7468:	2c21883a 	add	r16,r5,r16
    746c:	80c7c83a 	sub	r3,r16,r3
    7470:	2008d43a 	srli	r4,r4,16
    7474:	1185883a 	add	r2,r2,r6
    7478:	1821d43a 	srai	r16,r3,16
    747c:	117fffcc 	andi	r5,r2,65535
    7480:	2149c83a 	sub	r4,r4,r5
    7484:	2421883a 	add	r16,r4,r16
    7488:	8008943a 	slli	r4,r16,16
    748c:	18ffffcc 	andi	r3,r3,65535
    7490:	102cd43a 	srli	r22,r2,16
    7494:	20c8b03a 	or	r4,r4,r3
    7498:	a1000015 	stw	r4,0(r20)
    749c:	8021d43a 	srai	r16,r16,16
    74a0:	a5000104 	addi	r20,r20,4
    74a4:	e47fe32e 	bgeu	fp,r17,7434 <__alt_mem_epcs_flash_controller_0+0xff806434>
    74a8:	d8c00317 	ldw	r3,12(sp)
    74ac:	18800017 	ldw	r2,0(r3)
    74b0:	10000c1e 	bne	r2,zero,74e4 <quorem+0x13c>
    74b4:	18bfff04 	addi	r2,r3,-4
    74b8:	9880082e 	bgeu	r19,r2,74dc <quorem+0x134>
    74bc:	18ffff17 	ldw	r3,-4(r3)
    74c0:	18000326 	beq	r3,zero,74d0 <quorem+0x128>
    74c4:	00000506 	br	74dc <quorem+0x134>
    74c8:	10c00017 	ldw	r3,0(r2)
    74cc:	1800031e 	bne	r3,zero,74dc <quorem+0x134>
    74d0:	10bfff04 	addi	r2,r2,-4
    74d4:	bdffffc4 	addi	r23,r23,-1
    74d8:	98bffb36 	bltu	r19,r2,74c8 <__alt_mem_epcs_flash_controller_0+0xff8064c8>
    74dc:	d8c00017 	ldw	r3,0(sp)
    74e0:	1dc00415 	stw	r23,16(r3)
    74e4:	d9400217 	ldw	r5,8(sp)
    74e8:	d9000017 	ldw	r4,0(sp)
    74ec:	000af6c0 	call	af6c <__mcmp>
    74f0:	10002816 	blt	r2,zero,7594 <quorem+0x1ec>
    74f4:	dc400117 	ldw	r17,4(sp)
    74f8:	94800044 	addi	r18,r18,1
    74fc:	980d883a 	mov	r6,r19
    7500:	0007883a 	mov	r3,zero
    7504:	31000017 	ldw	r4,0(r6)
    7508:	89400017 	ldw	r5,0(r17)
    750c:	31800104 	addi	r6,r6,4
    7510:	20bfffcc 	andi	r2,r4,65535
    7514:	10c7883a 	add	r3,r2,r3
    7518:	28bfffcc 	andi	r2,r5,65535
    751c:	1885c83a 	sub	r2,r3,r2
    7520:	280ad43a 	srli	r5,r5,16
    7524:	2008d43a 	srli	r4,r4,16
    7528:	1007d43a 	srai	r3,r2,16
    752c:	10bfffcc 	andi	r2,r2,65535
    7530:	2149c83a 	sub	r4,r4,r5
    7534:	20c9883a 	add	r4,r4,r3
    7538:	200a943a 	slli	r5,r4,16
    753c:	8c400104 	addi	r17,r17,4
    7540:	2007d43a 	srai	r3,r4,16
    7544:	2884b03a 	or	r2,r5,r2
    7548:	30bfff15 	stw	r2,-4(r6)
    754c:	e47fed2e 	bgeu	fp,r17,7504 <__alt_mem_epcs_flash_controller_0+0xff806504>
    7550:	bdc5883a 	add	r2,r23,r23
    7554:	1085883a 	add	r2,r2,r2
    7558:	9887883a 	add	r3,r19,r2
    755c:	18800017 	ldw	r2,0(r3)
    7560:	10000c1e 	bne	r2,zero,7594 <quorem+0x1ec>
    7564:	18bfff04 	addi	r2,r3,-4
    7568:	9880082e 	bgeu	r19,r2,758c <quorem+0x1e4>
    756c:	18ffff17 	ldw	r3,-4(r3)
    7570:	18000326 	beq	r3,zero,7580 <quorem+0x1d8>
    7574:	00000506 	br	758c <quorem+0x1e4>
    7578:	10c00017 	ldw	r3,0(r2)
    757c:	1800031e 	bne	r3,zero,758c <quorem+0x1e4>
    7580:	10bfff04 	addi	r2,r2,-4
    7584:	bdffffc4 	addi	r23,r23,-1
    7588:	98bffb36 	bltu	r19,r2,7578 <__alt_mem_epcs_flash_controller_0+0xff806578>
    758c:	d8c00017 	ldw	r3,0(sp)
    7590:	1dc00415 	stw	r23,16(r3)
    7594:	9005883a 	mov	r2,r18
    7598:	dfc00d17 	ldw	ra,52(sp)
    759c:	df000c17 	ldw	fp,48(sp)
    75a0:	ddc00b17 	ldw	r23,44(sp)
    75a4:	dd800a17 	ldw	r22,40(sp)
    75a8:	dd400917 	ldw	r21,36(sp)
    75ac:	dd000817 	ldw	r20,32(sp)
    75b0:	dcc00717 	ldw	r19,28(sp)
    75b4:	dc800617 	ldw	r18,24(sp)
    75b8:	dc400517 	ldw	r17,20(sp)
    75bc:	dc000417 	ldw	r16,16(sp)
    75c0:	dec00e04 	addi	sp,sp,56
    75c4:	f800283a 	ret
    75c8:	0005883a 	mov	r2,zero
    75cc:	003ff206 	br	7598 <__alt_mem_epcs_flash_controller_0+0xff806598>

000075d0 <_dtoa_r>:
    75d0:	20801017 	ldw	r2,64(r4)
    75d4:	deffde04 	addi	sp,sp,-136
    75d8:	df002015 	stw	fp,128(sp)
    75dc:	dcc01b15 	stw	r19,108(sp)
    75e0:	dc801a15 	stw	r18,104(sp)
    75e4:	dc401915 	stw	r17,100(sp)
    75e8:	dc001815 	stw	r16,96(sp)
    75ec:	dfc02115 	stw	ra,132(sp)
    75f0:	ddc01f15 	stw	r23,124(sp)
    75f4:	dd801e15 	stw	r22,120(sp)
    75f8:	dd401d15 	stw	r21,116(sp)
    75fc:	dd001c15 	stw	r20,112(sp)
    7600:	d9c00315 	stw	r7,12(sp)
    7604:	2039883a 	mov	fp,r4
    7608:	3023883a 	mov	r17,r6
    760c:	2825883a 	mov	r18,r5
    7610:	dc002417 	ldw	r16,144(sp)
    7614:	3027883a 	mov	r19,r6
    7618:	10000826 	beq	r2,zero,763c <_dtoa_r+0x6c>
    761c:	21801117 	ldw	r6,68(r4)
    7620:	00c00044 	movi	r3,1
    7624:	100b883a 	mov	r5,r2
    7628:	1986983a 	sll	r3,r3,r6
    762c:	11800115 	stw	r6,4(r2)
    7630:	10c00215 	stw	r3,8(r2)
    7634:	000a6900 	call	a690 <_Bfree>
    7638:	e0001015 	stw	zero,64(fp)
    763c:	88002e16 	blt	r17,zero,76f8 <_dtoa_r+0x128>
    7640:	80000015 	stw	zero,0(r16)
    7644:	889ffc2c 	andhi	r2,r17,32752
    7648:	00dffc34 	movhi	r3,32752
    764c:	10c01c26 	beq	r2,r3,76c0 <_dtoa_r+0xf0>
    7650:	000d883a 	mov	r6,zero
    7654:	000f883a 	mov	r7,zero
    7658:	9009883a 	mov	r4,r18
    765c:	980b883a 	mov	r5,r19
    7660:	00180a80 	call	180a8 <__eqdf2>
    7664:	10002b1e 	bne	r2,zero,7714 <_dtoa_r+0x144>
    7668:	d9c02317 	ldw	r7,140(sp)
    766c:	00800044 	movi	r2,1
    7670:	38800015 	stw	r2,0(r7)
    7674:	d8802517 	ldw	r2,148(sp)
    7678:	10019e26 	beq	r2,zero,7cf4 <_dtoa_r+0x724>
    767c:	d8c02517 	ldw	r3,148(sp)
    7680:	008000b4 	movhi	r2,2
    7684:	10b77644 	addi	r2,r2,-8743
    7688:	18800015 	stw	r2,0(r3)
    768c:	10bfffc4 	addi	r2,r2,-1
    7690:	dfc02117 	ldw	ra,132(sp)
    7694:	df002017 	ldw	fp,128(sp)
    7698:	ddc01f17 	ldw	r23,124(sp)
    769c:	dd801e17 	ldw	r22,120(sp)
    76a0:	dd401d17 	ldw	r21,116(sp)
    76a4:	dd001c17 	ldw	r20,112(sp)
    76a8:	dcc01b17 	ldw	r19,108(sp)
    76ac:	dc801a17 	ldw	r18,104(sp)
    76b0:	dc401917 	ldw	r17,100(sp)
    76b4:	dc001817 	ldw	r16,96(sp)
    76b8:	dec02204 	addi	sp,sp,136
    76bc:	f800283a 	ret
    76c0:	d8c02317 	ldw	r3,140(sp)
    76c4:	0089c3c4 	movi	r2,9999
    76c8:	18800015 	stw	r2,0(r3)
    76cc:	90017726 	beq	r18,zero,7cac <_dtoa_r+0x6dc>
    76d0:	008000b4 	movhi	r2,2
    76d4:	10b82204 	addi	r2,r2,-8056
    76d8:	d9002517 	ldw	r4,148(sp)
    76dc:	203fec26 	beq	r4,zero,7690 <__alt_mem_epcs_flash_controller_0+0xff806690>
    76e0:	10c000c7 	ldb	r3,3(r2)
    76e4:	1801781e 	bne	r3,zero,7cc8 <_dtoa_r+0x6f8>
    76e8:	10c000c4 	addi	r3,r2,3
    76ec:	d9802517 	ldw	r6,148(sp)
    76f0:	30c00015 	stw	r3,0(r6)
    76f4:	003fe606 	br	7690 <__alt_mem_epcs_flash_controller_0+0xff806690>
    76f8:	04e00034 	movhi	r19,32768
    76fc:	9cffffc4 	addi	r19,r19,-1
    7700:	00800044 	movi	r2,1
    7704:	8ce6703a 	and	r19,r17,r19
    7708:	80800015 	stw	r2,0(r16)
    770c:	9823883a 	mov	r17,r19
    7710:	003fcc06 	br	7644 <__alt_mem_epcs_flash_controller_0+0xff806644>
    7714:	d8800204 	addi	r2,sp,8
    7718:	d8800015 	stw	r2,0(sp)
    771c:	d9c00104 	addi	r7,sp,4
    7720:	900b883a 	mov	r5,r18
    7724:	980d883a 	mov	r6,r19
    7728:	e009883a 	mov	r4,fp
    772c:	8820d53a 	srli	r16,r17,20
    7730:	000b3380 	call	b338 <__d2b>
    7734:	d8800915 	stw	r2,36(sp)
    7738:	8001651e 	bne	r16,zero,7cd0 <_dtoa_r+0x700>
    773c:	dd800217 	ldw	r22,8(sp)
    7740:	dc000117 	ldw	r16,4(sp)
    7744:	00800804 	movi	r2,32
    7748:	b421883a 	add	r16,r22,r16
    774c:	80c10c84 	addi	r3,r16,1074
    7750:	10c2d10e 	bge	r2,r3,8298 <_dtoa_r+0xcc8>
    7754:	00801004 	movi	r2,64
    7758:	81010484 	addi	r4,r16,1042
    775c:	10c7c83a 	sub	r3,r2,r3
    7760:	9108d83a 	srl	r4,r18,r4
    7764:	88e2983a 	sll	r17,r17,r3
    7768:	2448b03a 	or	r4,r4,r17
    776c:	00195c40 	call	195c4 <__floatunsidf>
    7770:	017f8434 	movhi	r5,65040
    7774:	01800044 	movi	r6,1
    7778:	1009883a 	mov	r4,r2
    777c:	194b883a 	add	r5,r3,r5
    7780:	843fffc4 	addi	r16,r16,-1
    7784:	d9801115 	stw	r6,68(sp)
    7788:	000d883a 	mov	r6,zero
    778c:	01cffe34 	movhi	r7,16376
    7790:	0018b6c0 	call	18b6c <__subdf3>
    7794:	0198dbf4 	movhi	r6,25455
    7798:	01cff4f4 	movhi	r7,16339
    779c:	3190d844 	addi	r6,r6,17249
    77a0:	39e1e9c4 	addi	r7,r7,-30809
    77a4:	1009883a 	mov	r4,r2
    77a8:	180b883a 	mov	r5,r3
    77ac:	00183000 	call	18300 <__muldf3>
    77b0:	01a2d874 	movhi	r6,35681
    77b4:	01cff1f4 	movhi	r7,16327
    77b8:	31b22cc4 	addi	r6,r6,-14157
    77bc:	39e28a04 	addi	r7,r7,-30168
    77c0:	180b883a 	mov	r5,r3
    77c4:	1009883a 	mov	r4,r2
    77c8:	0016e2c0 	call	16e2c <__adddf3>
    77cc:	8009883a 	mov	r4,r16
    77d0:	1029883a 	mov	r20,r2
    77d4:	1823883a 	mov	r17,r3
    77d8:	00194e80 	call	194e8 <__floatsidf>
    77dc:	019427f4 	movhi	r6,20639
    77e0:	01cff4f4 	movhi	r7,16339
    77e4:	319e7ec4 	addi	r6,r6,31227
    77e8:	39d104c4 	addi	r7,r7,17427
    77ec:	1009883a 	mov	r4,r2
    77f0:	180b883a 	mov	r5,r3
    77f4:	00183000 	call	18300 <__muldf3>
    77f8:	100d883a 	mov	r6,r2
    77fc:	180f883a 	mov	r7,r3
    7800:	a009883a 	mov	r4,r20
    7804:	880b883a 	mov	r5,r17
    7808:	0016e2c0 	call	16e2c <__adddf3>
    780c:	1009883a 	mov	r4,r2
    7810:	180b883a 	mov	r5,r3
    7814:	1029883a 	mov	r20,r2
    7818:	1823883a 	mov	r17,r3
    781c:	00194680 	call	19468 <__fixdfsi>
    7820:	000d883a 	mov	r6,zero
    7824:	000f883a 	mov	r7,zero
    7828:	a009883a 	mov	r4,r20
    782c:	880b883a 	mov	r5,r17
    7830:	d8800515 	stw	r2,20(sp)
    7834:	001820c0 	call	1820c <__ledf2>
    7838:	10028716 	blt	r2,zero,8258 <_dtoa_r+0xc88>
    783c:	d8c00517 	ldw	r3,20(sp)
    7840:	00800584 	movi	r2,22
    7844:	10c27536 	bltu	r2,r3,821c <_dtoa_r+0xc4c>
    7848:	180490fa 	slli	r2,r3,3
    784c:	00c000b4 	movhi	r3,2
    7850:	18f83d04 	addi	r3,r3,-7948
    7854:	1885883a 	add	r2,r3,r2
    7858:	11000017 	ldw	r4,0(r2)
    785c:	11400117 	ldw	r5,4(r2)
    7860:	900d883a 	mov	r6,r18
    7864:	980f883a 	mov	r7,r19
    7868:	00181300 	call	18130 <__gedf2>
    786c:	00828d0e 	bge	zero,r2,82a4 <_dtoa_r+0xcd4>
    7870:	d9000517 	ldw	r4,20(sp)
    7874:	d8000e15 	stw	zero,56(sp)
    7878:	213fffc4 	addi	r4,r4,-1
    787c:	d9000515 	stw	r4,20(sp)
    7880:	b42dc83a 	sub	r22,r22,r16
    7884:	b5bfffc4 	addi	r22,r22,-1
    7888:	b0026f16 	blt	r22,zero,8248 <_dtoa_r+0xc78>
    788c:	d8000815 	stw	zero,32(sp)
    7890:	d9c00517 	ldw	r7,20(sp)
    7894:	38026416 	blt	r7,zero,8228 <_dtoa_r+0xc58>
    7898:	b1ed883a 	add	r22,r22,r7
    789c:	d9c00d15 	stw	r7,52(sp)
    78a0:	d8000a15 	stw	zero,40(sp)
    78a4:	d9800317 	ldw	r6,12(sp)
    78a8:	00800244 	movi	r2,9
    78ac:	11811436 	bltu	r2,r6,7d00 <_dtoa_r+0x730>
    78b0:	00800144 	movi	r2,5
    78b4:	1184e10e 	bge	r2,r6,8c3c <_dtoa_r+0x166c>
    78b8:	31bfff04 	addi	r6,r6,-4
    78bc:	d9800315 	stw	r6,12(sp)
    78c0:	0023883a 	mov	r17,zero
    78c4:	d9800317 	ldw	r6,12(sp)
    78c8:	008000c4 	movi	r2,3
    78cc:	30836726 	beq	r6,r2,866c <_dtoa_r+0x109c>
    78d0:	1183410e 	bge	r2,r6,85d8 <_dtoa_r+0x1008>
    78d4:	d9c00317 	ldw	r7,12(sp)
    78d8:	00800104 	movi	r2,4
    78dc:	38827c26 	beq	r7,r2,82d0 <_dtoa_r+0xd00>
    78e0:	00800144 	movi	r2,5
    78e4:	3884c41e 	bne	r7,r2,8bf8 <_dtoa_r+0x1628>
    78e8:	00800044 	movi	r2,1
    78ec:	d8800b15 	stw	r2,44(sp)
    78f0:	d8c00517 	ldw	r3,20(sp)
    78f4:	d9002217 	ldw	r4,136(sp)
    78f8:	1907883a 	add	r3,r3,r4
    78fc:	19800044 	addi	r6,r3,1
    7900:	d8c00c15 	stw	r3,48(sp)
    7904:	d9800615 	stw	r6,24(sp)
    7908:	0183a40e 	bge	zero,r6,879c <_dtoa_r+0x11cc>
    790c:	d9800617 	ldw	r6,24(sp)
    7910:	3021883a 	mov	r16,r6
    7914:	e0001115 	stw	zero,68(fp)
    7918:	008005c4 	movi	r2,23
    791c:	1184c92e 	bgeu	r2,r6,8c44 <_dtoa_r+0x1674>
    7920:	00c00044 	movi	r3,1
    7924:	00800104 	movi	r2,4
    7928:	1085883a 	add	r2,r2,r2
    792c:	11000504 	addi	r4,r2,20
    7930:	180b883a 	mov	r5,r3
    7934:	18c00044 	addi	r3,r3,1
    7938:	313ffb2e 	bgeu	r6,r4,7928 <__alt_mem_epcs_flash_controller_0+0xff806928>
    793c:	e1401115 	stw	r5,68(fp)
    7940:	e009883a 	mov	r4,fp
    7944:	000a5e80 	call	a5e8 <_Balloc>
    7948:	d8800715 	stw	r2,28(sp)
    794c:	e0801015 	stw	r2,64(fp)
    7950:	00800384 	movi	r2,14
    7954:	1400f736 	bltu	r2,r16,7d34 <_dtoa_r+0x764>
    7958:	8800f626 	beq	r17,zero,7d34 <_dtoa_r+0x764>
    795c:	d9c00517 	ldw	r7,20(sp)
    7960:	01c39a0e 	bge	zero,r7,87cc <_dtoa_r+0x11fc>
    7964:	388003cc 	andi	r2,r7,15
    7968:	100490fa 	slli	r2,r2,3
    796c:	382bd13a 	srai	r21,r7,4
    7970:	00c000b4 	movhi	r3,2
    7974:	18f83d04 	addi	r3,r3,-7948
    7978:	1885883a 	add	r2,r3,r2
    797c:	a8c0040c 	andi	r3,r21,16
    7980:	12400017 	ldw	r9,0(r2)
    7984:	12000117 	ldw	r8,4(r2)
    7988:	18037926 	beq	r3,zero,8770 <_dtoa_r+0x11a0>
    798c:	008000b4 	movhi	r2,2
    7990:	10b83304 	addi	r2,r2,-7988
    7994:	11800817 	ldw	r6,32(r2)
    7998:	11c00917 	ldw	r7,36(r2)
    799c:	9009883a 	mov	r4,r18
    79a0:	980b883a 	mov	r5,r19
    79a4:	da001715 	stw	r8,92(sp)
    79a8:	da401615 	stw	r9,88(sp)
    79ac:	00176d80 	call	176d8 <__divdf3>
    79b0:	da001717 	ldw	r8,92(sp)
    79b4:	da401617 	ldw	r9,88(sp)
    79b8:	ad4003cc 	andi	r21,r21,15
    79bc:	040000c4 	movi	r16,3
    79c0:	1023883a 	mov	r17,r2
    79c4:	1829883a 	mov	r20,r3
    79c8:	a8001126 	beq	r21,zero,7a10 <_dtoa_r+0x440>
    79cc:	05c000b4 	movhi	r23,2
    79d0:	bdf83304 	addi	r23,r23,-7988
    79d4:	4805883a 	mov	r2,r9
    79d8:	4007883a 	mov	r3,r8
    79dc:	a980004c 	andi	r6,r21,1
    79e0:	1009883a 	mov	r4,r2
    79e4:	a82bd07a 	srai	r21,r21,1
    79e8:	180b883a 	mov	r5,r3
    79ec:	30000426 	beq	r6,zero,7a00 <_dtoa_r+0x430>
    79f0:	b9800017 	ldw	r6,0(r23)
    79f4:	b9c00117 	ldw	r7,4(r23)
    79f8:	84000044 	addi	r16,r16,1
    79fc:	00183000 	call	18300 <__muldf3>
    7a00:	bdc00204 	addi	r23,r23,8
    7a04:	a83ff51e 	bne	r21,zero,79dc <__alt_mem_epcs_flash_controller_0+0xff8069dc>
    7a08:	1013883a 	mov	r9,r2
    7a0c:	1811883a 	mov	r8,r3
    7a10:	480d883a 	mov	r6,r9
    7a14:	400f883a 	mov	r7,r8
    7a18:	8809883a 	mov	r4,r17
    7a1c:	a00b883a 	mov	r5,r20
    7a20:	00176d80 	call	176d8 <__divdf3>
    7a24:	d8800f15 	stw	r2,60(sp)
    7a28:	d8c01015 	stw	r3,64(sp)
    7a2c:	d8c00e17 	ldw	r3,56(sp)
    7a30:	18000626 	beq	r3,zero,7a4c <_dtoa_r+0x47c>
    7a34:	d9000f17 	ldw	r4,60(sp)
    7a38:	d9401017 	ldw	r5,64(sp)
    7a3c:	000d883a 	mov	r6,zero
    7a40:	01cffc34 	movhi	r7,16368
    7a44:	001820c0 	call	1820c <__ledf2>
    7a48:	10040b16 	blt	r2,zero,8a78 <_dtoa_r+0x14a8>
    7a4c:	8009883a 	mov	r4,r16
    7a50:	00194e80 	call	194e8 <__floatsidf>
    7a54:	d9800f17 	ldw	r6,60(sp)
    7a58:	d9c01017 	ldw	r7,64(sp)
    7a5c:	1009883a 	mov	r4,r2
    7a60:	180b883a 	mov	r5,r3
    7a64:	00183000 	call	18300 <__muldf3>
    7a68:	000d883a 	mov	r6,zero
    7a6c:	01d00734 	movhi	r7,16412
    7a70:	1009883a 	mov	r4,r2
    7a74:	180b883a 	mov	r5,r3
    7a78:	0016e2c0 	call	16e2c <__adddf3>
    7a7c:	1021883a 	mov	r16,r2
    7a80:	d8800617 	ldw	r2,24(sp)
    7a84:	047f3034 	movhi	r17,64704
    7a88:	1c63883a 	add	r17,r3,r17
    7a8c:	10031826 	beq	r2,zero,86f0 <_dtoa_r+0x1120>
    7a90:	d8c00517 	ldw	r3,20(sp)
    7a94:	db000617 	ldw	r12,24(sp)
    7a98:	d8c01315 	stw	r3,76(sp)
    7a9c:	d9000b17 	ldw	r4,44(sp)
    7aa0:	20038f26 	beq	r4,zero,88e0 <_dtoa_r+0x1310>
    7aa4:	60bfffc4 	addi	r2,r12,-1
    7aa8:	100490fa 	slli	r2,r2,3
    7aac:	00c000b4 	movhi	r3,2
    7ab0:	18f83d04 	addi	r3,r3,-7948
    7ab4:	1885883a 	add	r2,r3,r2
    7ab8:	11800017 	ldw	r6,0(r2)
    7abc:	11c00117 	ldw	r7,4(r2)
    7ac0:	d8800717 	ldw	r2,28(sp)
    7ac4:	0009883a 	mov	r4,zero
    7ac8:	014ff834 	movhi	r5,16352
    7acc:	db001615 	stw	r12,88(sp)
    7ad0:	15c00044 	addi	r23,r2,1
    7ad4:	00176d80 	call	176d8 <__divdf3>
    7ad8:	800d883a 	mov	r6,r16
    7adc:	880f883a 	mov	r7,r17
    7ae0:	1009883a 	mov	r4,r2
    7ae4:	180b883a 	mov	r5,r3
    7ae8:	0018b6c0 	call	18b6c <__subdf3>
    7aec:	d9401017 	ldw	r5,64(sp)
    7af0:	d9000f17 	ldw	r4,60(sp)
    7af4:	102b883a 	mov	r21,r2
    7af8:	d8c01215 	stw	r3,72(sp)
    7afc:	00194680 	call	19468 <__fixdfsi>
    7b00:	1009883a 	mov	r4,r2
    7b04:	1029883a 	mov	r20,r2
    7b08:	00194e80 	call	194e8 <__floatsidf>
    7b0c:	d9000f17 	ldw	r4,60(sp)
    7b10:	d9401017 	ldw	r5,64(sp)
    7b14:	100d883a 	mov	r6,r2
    7b18:	180f883a 	mov	r7,r3
    7b1c:	0018b6c0 	call	18b6c <__subdf3>
    7b20:	1823883a 	mov	r17,r3
    7b24:	d8c00717 	ldw	r3,28(sp)
    7b28:	d9401217 	ldw	r5,72(sp)
    7b2c:	a2000c04 	addi	r8,r20,48
    7b30:	1021883a 	mov	r16,r2
    7b34:	1a000005 	stb	r8,0(r3)
    7b38:	800d883a 	mov	r6,r16
    7b3c:	880f883a 	mov	r7,r17
    7b40:	a809883a 	mov	r4,r21
    7b44:	4029883a 	mov	r20,r8
    7b48:	00181300 	call	18130 <__gedf2>
    7b4c:	00841d16 	blt	zero,r2,8bc4 <_dtoa_r+0x15f4>
    7b50:	800d883a 	mov	r6,r16
    7b54:	880f883a 	mov	r7,r17
    7b58:	0009883a 	mov	r4,zero
    7b5c:	014ffc34 	movhi	r5,16368
    7b60:	0018b6c0 	call	18b6c <__subdf3>
    7b64:	d9401217 	ldw	r5,72(sp)
    7b68:	100d883a 	mov	r6,r2
    7b6c:	180f883a 	mov	r7,r3
    7b70:	a809883a 	mov	r4,r21
    7b74:	00181300 	call	18130 <__gedf2>
    7b78:	db001617 	ldw	r12,88(sp)
    7b7c:	00840e16 	blt	zero,r2,8bb8 <_dtoa_r+0x15e8>
    7b80:	00800044 	movi	r2,1
    7b84:	13006b0e 	bge	r2,r12,7d34 <_dtoa_r+0x764>
    7b88:	d9000717 	ldw	r4,28(sp)
    7b8c:	dd800f15 	stw	r22,60(sp)
    7b90:	dcc01015 	stw	r19,64(sp)
    7b94:	2319883a 	add	r12,r4,r12
    7b98:	dcc01217 	ldw	r19,72(sp)
    7b9c:	602d883a 	mov	r22,r12
    7ba0:	dc801215 	stw	r18,72(sp)
    7ba4:	b825883a 	mov	r18,r23
    7ba8:	00000906 	br	7bd0 <_dtoa_r+0x600>
    7bac:	0018b6c0 	call	18b6c <__subdf3>
    7bb0:	a80d883a 	mov	r6,r21
    7bb4:	980f883a 	mov	r7,r19
    7bb8:	1009883a 	mov	r4,r2
    7bbc:	180b883a 	mov	r5,r3
    7bc0:	001820c0 	call	1820c <__ledf2>
    7bc4:	1003e816 	blt	r2,zero,8b68 <_dtoa_r+0x1598>
    7bc8:	b825883a 	mov	r18,r23
    7bcc:	bd83e926 	beq	r23,r22,8b74 <_dtoa_r+0x15a4>
    7bd0:	a809883a 	mov	r4,r21
    7bd4:	980b883a 	mov	r5,r19
    7bd8:	000d883a 	mov	r6,zero
    7bdc:	01d00934 	movhi	r7,16420
    7be0:	00183000 	call	18300 <__muldf3>
    7be4:	000d883a 	mov	r6,zero
    7be8:	01d00934 	movhi	r7,16420
    7bec:	8009883a 	mov	r4,r16
    7bf0:	880b883a 	mov	r5,r17
    7bf4:	102b883a 	mov	r21,r2
    7bf8:	1827883a 	mov	r19,r3
    7bfc:	00183000 	call	18300 <__muldf3>
    7c00:	180b883a 	mov	r5,r3
    7c04:	1009883a 	mov	r4,r2
    7c08:	1821883a 	mov	r16,r3
    7c0c:	1023883a 	mov	r17,r2
    7c10:	00194680 	call	19468 <__fixdfsi>
    7c14:	1009883a 	mov	r4,r2
    7c18:	1029883a 	mov	r20,r2
    7c1c:	00194e80 	call	194e8 <__floatsidf>
    7c20:	8809883a 	mov	r4,r17
    7c24:	800b883a 	mov	r5,r16
    7c28:	100d883a 	mov	r6,r2
    7c2c:	180f883a 	mov	r7,r3
    7c30:	0018b6c0 	call	18b6c <__subdf3>
    7c34:	a5000c04 	addi	r20,r20,48
    7c38:	a80d883a 	mov	r6,r21
    7c3c:	980f883a 	mov	r7,r19
    7c40:	1009883a 	mov	r4,r2
    7c44:	180b883a 	mov	r5,r3
    7c48:	95000005 	stb	r20,0(r18)
    7c4c:	1021883a 	mov	r16,r2
    7c50:	1823883a 	mov	r17,r3
    7c54:	001820c0 	call	1820c <__ledf2>
    7c58:	bdc00044 	addi	r23,r23,1
    7c5c:	800d883a 	mov	r6,r16
    7c60:	880f883a 	mov	r7,r17
    7c64:	0009883a 	mov	r4,zero
    7c68:	014ffc34 	movhi	r5,16368
    7c6c:	103fcf0e 	bge	r2,zero,7bac <__alt_mem_epcs_flash_controller_0+0xff806bac>
    7c70:	d8c01317 	ldw	r3,76(sp)
    7c74:	d8c00515 	stw	r3,20(sp)
    7c78:	d9400917 	ldw	r5,36(sp)
    7c7c:	e009883a 	mov	r4,fp
    7c80:	000a6900 	call	a690 <_Bfree>
    7c84:	d9000517 	ldw	r4,20(sp)
    7c88:	d9802317 	ldw	r6,140(sp)
    7c8c:	d9c02517 	ldw	r7,148(sp)
    7c90:	b8000005 	stb	zero,0(r23)
    7c94:	20800044 	addi	r2,r4,1
    7c98:	30800015 	stw	r2,0(r6)
    7c9c:	3802aa26 	beq	r7,zero,8748 <_dtoa_r+0x1178>
    7ca0:	3dc00015 	stw	r23,0(r7)
    7ca4:	d8800717 	ldw	r2,28(sp)
    7ca8:	003e7906 	br	7690 <__alt_mem_epcs_flash_controller_0+0xff806690>
    7cac:	00800434 	movhi	r2,16
    7cb0:	10bfffc4 	addi	r2,r2,-1
    7cb4:	88a2703a 	and	r17,r17,r2
    7cb8:	883e851e 	bne	r17,zero,76d0 <__alt_mem_epcs_flash_controller_0+0xff8066d0>
    7cbc:	008000b4 	movhi	r2,2
    7cc0:	10b81f04 	addi	r2,r2,-8068
    7cc4:	003e8406 	br	76d8 <__alt_mem_epcs_flash_controller_0+0xff8066d8>
    7cc8:	10c00204 	addi	r3,r2,8
    7ccc:	003e8706 	br	76ec <__alt_mem_epcs_flash_controller_0+0xff8066ec>
    7cd0:	01400434 	movhi	r5,16
    7cd4:	297fffc4 	addi	r5,r5,-1
    7cd8:	994a703a 	and	r5,r19,r5
    7cdc:	9009883a 	mov	r4,r18
    7ce0:	843f0044 	addi	r16,r16,-1023
    7ce4:	294ffc34 	orhi	r5,r5,16368
    7ce8:	dd800217 	ldw	r22,8(sp)
    7cec:	d8001115 	stw	zero,68(sp)
    7cf0:	003ea506 	br	7788 <__alt_mem_epcs_flash_controller_0+0xff806788>
    7cf4:	008000b4 	movhi	r2,2
    7cf8:	10b77604 	addi	r2,r2,-8744
    7cfc:	003e6406 	br	7690 <__alt_mem_epcs_flash_controller_0+0xff806690>
    7d00:	e0001115 	stw	zero,68(fp)
    7d04:	000b883a 	mov	r5,zero
    7d08:	e009883a 	mov	r4,fp
    7d0c:	000a5e80 	call	a5e8 <_Balloc>
    7d10:	01bfffc4 	movi	r6,-1
    7d14:	01c00044 	movi	r7,1
    7d18:	d8800715 	stw	r2,28(sp)
    7d1c:	d9800c15 	stw	r6,48(sp)
    7d20:	e0801015 	stw	r2,64(fp)
    7d24:	d8000315 	stw	zero,12(sp)
    7d28:	d9c00b15 	stw	r7,44(sp)
    7d2c:	d9800615 	stw	r6,24(sp)
    7d30:	d8002215 	stw	zero,136(sp)
    7d34:	d8800117 	ldw	r2,4(sp)
    7d38:	10008916 	blt	r2,zero,7f60 <_dtoa_r+0x990>
    7d3c:	d9000517 	ldw	r4,20(sp)
    7d40:	00c00384 	movi	r3,14
    7d44:	19008616 	blt	r3,r4,7f60 <_dtoa_r+0x990>
    7d48:	200490fa 	slli	r2,r4,3
    7d4c:	00c000b4 	movhi	r3,2
    7d50:	d9802217 	ldw	r6,136(sp)
    7d54:	18f83d04 	addi	r3,r3,-7948
    7d58:	1885883a 	add	r2,r3,r2
    7d5c:	14000017 	ldw	r16,0(r2)
    7d60:	14400117 	ldw	r17,4(r2)
    7d64:	30016316 	blt	r6,zero,82f4 <_dtoa_r+0xd24>
    7d68:	800d883a 	mov	r6,r16
    7d6c:	880f883a 	mov	r7,r17
    7d70:	9009883a 	mov	r4,r18
    7d74:	980b883a 	mov	r5,r19
    7d78:	00176d80 	call	176d8 <__divdf3>
    7d7c:	180b883a 	mov	r5,r3
    7d80:	1009883a 	mov	r4,r2
    7d84:	00194680 	call	19468 <__fixdfsi>
    7d88:	1009883a 	mov	r4,r2
    7d8c:	102b883a 	mov	r21,r2
    7d90:	00194e80 	call	194e8 <__floatsidf>
    7d94:	800d883a 	mov	r6,r16
    7d98:	880f883a 	mov	r7,r17
    7d9c:	1009883a 	mov	r4,r2
    7da0:	180b883a 	mov	r5,r3
    7da4:	00183000 	call	18300 <__muldf3>
    7da8:	100d883a 	mov	r6,r2
    7dac:	180f883a 	mov	r7,r3
    7db0:	9009883a 	mov	r4,r18
    7db4:	980b883a 	mov	r5,r19
    7db8:	0018b6c0 	call	18b6c <__subdf3>
    7dbc:	d9c00717 	ldw	r7,28(sp)
    7dc0:	1009883a 	mov	r4,r2
    7dc4:	a8800c04 	addi	r2,r21,48
    7dc8:	38800005 	stb	r2,0(r7)
    7dcc:	3dc00044 	addi	r23,r7,1
    7dd0:	d9c00617 	ldw	r7,24(sp)
    7dd4:	01800044 	movi	r6,1
    7dd8:	180b883a 	mov	r5,r3
    7ddc:	2005883a 	mov	r2,r4
    7de0:	39803826 	beq	r7,r6,7ec4 <_dtoa_r+0x8f4>
    7de4:	000d883a 	mov	r6,zero
    7de8:	01d00934 	movhi	r7,16420
    7dec:	00183000 	call	18300 <__muldf3>
    7df0:	000d883a 	mov	r6,zero
    7df4:	000f883a 	mov	r7,zero
    7df8:	1009883a 	mov	r4,r2
    7dfc:	180b883a 	mov	r5,r3
    7e00:	1025883a 	mov	r18,r2
    7e04:	1827883a 	mov	r19,r3
    7e08:	00180a80 	call	180a8 <__eqdf2>
    7e0c:	103f9a26 	beq	r2,zero,7c78 <__alt_mem_epcs_flash_controller_0+0xff806c78>
    7e10:	d9c00617 	ldw	r7,24(sp)
    7e14:	d8c00717 	ldw	r3,28(sp)
    7e18:	b829883a 	mov	r20,r23
    7e1c:	38bfffc4 	addi	r2,r7,-1
    7e20:	18ad883a 	add	r22,r3,r2
    7e24:	00000a06 	br	7e50 <_dtoa_r+0x880>
    7e28:	00183000 	call	18300 <__muldf3>
    7e2c:	000d883a 	mov	r6,zero
    7e30:	000f883a 	mov	r7,zero
    7e34:	1009883a 	mov	r4,r2
    7e38:	180b883a 	mov	r5,r3
    7e3c:	1025883a 	mov	r18,r2
    7e40:	1827883a 	mov	r19,r3
    7e44:	b829883a 	mov	r20,r23
    7e48:	00180a80 	call	180a8 <__eqdf2>
    7e4c:	103f8a26 	beq	r2,zero,7c78 <__alt_mem_epcs_flash_controller_0+0xff806c78>
    7e50:	800d883a 	mov	r6,r16
    7e54:	880f883a 	mov	r7,r17
    7e58:	9009883a 	mov	r4,r18
    7e5c:	980b883a 	mov	r5,r19
    7e60:	00176d80 	call	176d8 <__divdf3>
    7e64:	180b883a 	mov	r5,r3
    7e68:	1009883a 	mov	r4,r2
    7e6c:	00194680 	call	19468 <__fixdfsi>
    7e70:	1009883a 	mov	r4,r2
    7e74:	102b883a 	mov	r21,r2
    7e78:	00194e80 	call	194e8 <__floatsidf>
    7e7c:	800d883a 	mov	r6,r16
    7e80:	880f883a 	mov	r7,r17
    7e84:	1009883a 	mov	r4,r2
    7e88:	180b883a 	mov	r5,r3
    7e8c:	00183000 	call	18300 <__muldf3>
    7e90:	100d883a 	mov	r6,r2
    7e94:	180f883a 	mov	r7,r3
    7e98:	9009883a 	mov	r4,r18
    7e9c:	980b883a 	mov	r5,r19
    7ea0:	0018b6c0 	call	18b6c <__subdf3>
    7ea4:	aa000c04 	addi	r8,r21,48
    7ea8:	a2000005 	stb	r8,0(r20)
    7eac:	000d883a 	mov	r6,zero
    7eb0:	01d00934 	movhi	r7,16420
    7eb4:	1009883a 	mov	r4,r2
    7eb8:	180b883a 	mov	r5,r3
    7ebc:	a5c00044 	addi	r23,r20,1
    7ec0:	b53fd91e 	bne	r22,r20,7e28 <__alt_mem_epcs_flash_controller_0+0xff806e28>
    7ec4:	100d883a 	mov	r6,r2
    7ec8:	180f883a 	mov	r7,r3
    7ecc:	1009883a 	mov	r4,r2
    7ed0:	180b883a 	mov	r5,r3
    7ed4:	0016e2c0 	call	16e2c <__adddf3>
    7ed8:	100d883a 	mov	r6,r2
    7edc:	180f883a 	mov	r7,r3
    7ee0:	8009883a 	mov	r4,r16
    7ee4:	880b883a 	mov	r5,r17
    7ee8:	1027883a 	mov	r19,r2
    7eec:	1825883a 	mov	r18,r3
    7ef0:	001820c0 	call	1820c <__ledf2>
    7ef4:	10000816 	blt	r2,zero,7f18 <_dtoa_r+0x948>
    7ef8:	980d883a 	mov	r6,r19
    7efc:	900f883a 	mov	r7,r18
    7f00:	8009883a 	mov	r4,r16
    7f04:	880b883a 	mov	r5,r17
    7f08:	00180a80 	call	180a8 <__eqdf2>
    7f0c:	103f5a1e 	bne	r2,zero,7c78 <__alt_mem_epcs_flash_controller_0+0xff806c78>
    7f10:	ad40004c 	andi	r21,r21,1
    7f14:	a83f5826 	beq	r21,zero,7c78 <__alt_mem_epcs_flash_controller_0+0xff806c78>
    7f18:	bd3fffc3 	ldbu	r20,-1(r23)
    7f1c:	b8bfffc4 	addi	r2,r23,-1
    7f20:	1007883a 	mov	r3,r2
    7f24:	01400e44 	movi	r5,57
    7f28:	d9800717 	ldw	r6,28(sp)
    7f2c:	00000506 	br	7f44 <_dtoa_r+0x974>
    7f30:	18ffffc4 	addi	r3,r3,-1
    7f34:	11824726 	beq	r2,r6,8854 <_dtoa_r+0x1284>
    7f38:	1d000003 	ldbu	r20,0(r3)
    7f3c:	102f883a 	mov	r23,r2
    7f40:	10bfffc4 	addi	r2,r2,-1
    7f44:	a1003fcc 	andi	r4,r20,255
    7f48:	2100201c 	xori	r4,r4,128
    7f4c:	213fe004 	addi	r4,r4,-128
    7f50:	217ff726 	beq	r4,r5,7f30 <__alt_mem_epcs_flash_controller_0+0xff806f30>
    7f54:	a2000044 	addi	r8,r20,1
    7f58:	12000005 	stb	r8,0(r2)
    7f5c:	003f4606 	br	7c78 <__alt_mem_epcs_flash_controller_0+0xff806c78>
    7f60:	d9000b17 	ldw	r4,44(sp)
    7f64:	2000c826 	beq	r4,zero,8288 <_dtoa_r+0xcb8>
    7f68:	d9800317 	ldw	r6,12(sp)
    7f6c:	00c00044 	movi	r3,1
    7f70:	1980f90e 	bge	r3,r6,8358 <_dtoa_r+0xd88>
    7f74:	d8800617 	ldw	r2,24(sp)
    7f78:	d8c00a17 	ldw	r3,40(sp)
    7f7c:	157fffc4 	addi	r21,r2,-1
    7f80:	1d41f316 	blt	r3,r21,8750 <_dtoa_r+0x1180>
    7f84:	1d6bc83a 	sub	r21,r3,r21
    7f88:	d9c00617 	ldw	r7,24(sp)
    7f8c:	3802aa16 	blt	r7,zero,8a38 <_dtoa_r+0x1468>
    7f90:	dd000817 	ldw	r20,32(sp)
    7f94:	d8800617 	ldw	r2,24(sp)
    7f98:	d8c00817 	ldw	r3,32(sp)
    7f9c:	01400044 	movi	r5,1
    7fa0:	e009883a 	mov	r4,fp
    7fa4:	1887883a 	add	r3,r3,r2
    7fa8:	d8c00815 	stw	r3,32(sp)
    7fac:	b0ad883a 	add	r22,r22,r2
    7fb0:	000aa1c0 	call	aa1c <__i2b>
    7fb4:	1023883a 	mov	r17,r2
    7fb8:	a0000826 	beq	r20,zero,7fdc <_dtoa_r+0xa0c>
    7fbc:	0580070e 	bge	zero,r22,7fdc <_dtoa_r+0xa0c>
    7fc0:	a005883a 	mov	r2,r20
    7fc4:	b500b916 	blt	r22,r20,82ac <_dtoa_r+0xcdc>
    7fc8:	d9000817 	ldw	r4,32(sp)
    7fcc:	a0a9c83a 	sub	r20,r20,r2
    7fd0:	b0adc83a 	sub	r22,r22,r2
    7fd4:	2089c83a 	sub	r4,r4,r2
    7fd8:	d9000815 	stw	r4,32(sp)
    7fdc:	d9800a17 	ldw	r6,40(sp)
    7fe0:	0181810e 	bge	zero,r6,85e8 <_dtoa_r+0x1018>
    7fe4:	d9c00b17 	ldw	r7,44(sp)
    7fe8:	3800b326 	beq	r7,zero,82b8 <_dtoa_r+0xce8>
    7fec:	a800b226 	beq	r21,zero,82b8 <_dtoa_r+0xce8>
    7ff0:	880b883a 	mov	r5,r17
    7ff4:	a80d883a 	mov	r6,r21
    7ff8:	e009883a 	mov	r4,fp
    7ffc:	000ace40 	call	ace4 <__pow5mult>
    8000:	d9800917 	ldw	r6,36(sp)
    8004:	100b883a 	mov	r5,r2
    8008:	e009883a 	mov	r4,fp
    800c:	1023883a 	mov	r17,r2
    8010:	000aa580 	call	aa58 <__multiply>
    8014:	1021883a 	mov	r16,r2
    8018:	d8800a17 	ldw	r2,40(sp)
    801c:	d9400917 	ldw	r5,36(sp)
    8020:	e009883a 	mov	r4,fp
    8024:	1545c83a 	sub	r2,r2,r21
    8028:	d8800a15 	stw	r2,40(sp)
    802c:	000a6900 	call	a690 <_Bfree>
    8030:	d8c00a17 	ldw	r3,40(sp)
    8034:	18009f1e 	bne	r3,zero,82b4 <_dtoa_r+0xce4>
    8038:	05c00044 	movi	r23,1
    803c:	e009883a 	mov	r4,fp
    8040:	b80b883a 	mov	r5,r23
    8044:	000aa1c0 	call	aa1c <__i2b>
    8048:	d9000d17 	ldw	r4,52(sp)
    804c:	102b883a 	mov	r21,r2
    8050:	2000ce26 	beq	r4,zero,838c <_dtoa_r+0xdbc>
    8054:	200d883a 	mov	r6,r4
    8058:	100b883a 	mov	r5,r2
    805c:	e009883a 	mov	r4,fp
    8060:	000ace40 	call	ace4 <__pow5mult>
    8064:	d9800317 	ldw	r6,12(sp)
    8068:	102b883a 	mov	r21,r2
    806c:	b981810e 	bge	r23,r6,8674 <_dtoa_r+0x10a4>
    8070:	0027883a 	mov	r19,zero
    8074:	a8800417 	ldw	r2,16(r21)
    8078:	05c00804 	movi	r23,32
    807c:	10800104 	addi	r2,r2,4
    8080:	1085883a 	add	r2,r2,r2
    8084:	1085883a 	add	r2,r2,r2
    8088:	a885883a 	add	r2,r21,r2
    808c:	11000017 	ldw	r4,0(r2)
    8090:	000a9040 	call	a904 <__hi0bits>
    8094:	b885c83a 	sub	r2,r23,r2
    8098:	1585883a 	add	r2,r2,r22
    809c:	108007cc 	andi	r2,r2,31
    80a0:	1000b326 	beq	r2,zero,8370 <_dtoa_r+0xda0>
    80a4:	00c00804 	movi	r3,32
    80a8:	1887c83a 	sub	r3,r3,r2
    80ac:	01000104 	movi	r4,4
    80b0:	20c2cd0e 	bge	r4,r3,8be8 <_dtoa_r+0x1618>
    80b4:	00c00704 	movi	r3,28
    80b8:	1885c83a 	sub	r2,r3,r2
    80bc:	d8c00817 	ldw	r3,32(sp)
    80c0:	a0a9883a 	add	r20,r20,r2
    80c4:	b0ad883a 	add	r22,r22,r2
    80c8:	1887883a 	add	r3,r3,r2
    80cc:	d8c00815 	stw	r3,32(sp)
    80d0:	d9800817 	ldw	r6,32(sp)
    80d4:	0180040e 	bge	zero,r6,80e8 <_dtoa_r+0xb18>
    80d8:	800b883a 	mov	r5,r16
    80dc:	e009883a 	mov	r4,fp
    80e0:	000ae240 	call	ae24 <__lshift>
    80e4:	1021883a 	mov	r16,r2
    80e8:	0580050e 	bge	zero,r22,8100 <_dtoa_r+0xb30>
    80ec:	a80b883a 	mov	r5,r21
    80f0:	b00d883a 	mov	r6,r22
    80f4:	e009883a 	mov	r4,fp
    80f8:	000ae240 	call	ae24 <__lshift>
    80fc:	102b883a 	mov	r21,r2
    8100:	d9c00e17 	ldw	r7,56(sp)
    8104:	3801211e 	bne	r7,zero,858c <_dtoa_r+0xfbc>
    8108:	d9800617 	ldw	r6,24(sp)
    810c:	0181380e 	bge	zero,r6,85f0 <_dtoa_r+0x1020>
    8110:	d8c00b17 	ldw	r3,44(sp)
    8114:	1800ab1e 	bne	r3,zero,83c4 <_dtoa_r+0xdf4>
    8118:	dc800717 	ldw	r18,28(sp)
    811c:	dcc00617 	ldw	r19,24(sp)
    8120:	9029883a 	mov	r20,r18
    8124:	00000206 	br	8130 <_dtoa_r+0xb60>
    8128:	000a6b80 	call	a6b8 <__multadd>
    812c:	1021883a 	mov	r16,r2
    8130:	a80b883a 	mov	r5,r21
    8134:	8009883a 	mov	r4,r16
    8138:	00073a80 	call	73a8 <quorem>
    813c:	10800c04 	addi	r2,r2,48
    8140:	90800005 	stb	r2,0(r18)
    8144:	94800044 	addi	r18,r18,1
    8148:	9507c83a 	sub	r3,r18,r20
    814c:	000f883a 	mov	r7,zero
    8150:	01800284 	movi	r6,10
    8154:	800b883a 	mov	r5,r16
    8158:	e009883a 	mov	r4,fp
    815c:	1cfff216 	blt	r3,r19,8128 <__alt_mem_epcs_flash_controller_0+0xff807128>
    8160:	1011883a 	mov	r8,r2
    8164:	d8800617 	ldw	r2,24(sp)
    8168:	0082370e 	bge	zero,r2,8a48 <_dtoa_r+0x1478>
    816c:	d9000717 	ldw	r4,28(sp)
    8170:	0025883a 	mov	r18,zero
    8174:	20af883a 	add	r23,r4,r2
    8178:	01800044 	movi	r6,1
    817c:	800b883a 	mov	r5,r16
    8180:	e009883a 	mov	r4,fp
    8184:	da001715 	stw	r8,92(sp)
    8188:	000ae240 	call	ae24 <__lshift>
    818c:	a80b883a 	mov	r5,r21
    8190:	1009883a 	mov	r4,r2
    8194:	d8800915 	stw	r2,36(sp)
    8198:	000af6c0 	call	af6c <__mcmp>
    819c:	da001717 	ldw	r8,92(sp)
    81a0:	0081800e 	bge	zero,r2,87a4 <_dtoa_r+0x11d4>
    81a4:	b93fffc3 	ldbu	r4,-1(r23)
    81a8:	b8bfffc4 	addi	r2,r23,-1
    81ac:	1007883a 	mov	r3,r2
    81b0:	01800e44 	movi	r6,57
    81b4:	d9c00717 	ldw	r7,28(sp)
    81b8:	00000506 	br	81d0 <_dtoa_r+0xc00>
    81bc:	18ffffc4 	addi	r3,r3,-1
    81c0:	11c12326 	beq	r2,r7,8650 <_dtoa_r+0x1080>
    81c4:	19000003 	ldbu	r4,0(r3)
    81c8:	102f883a 	mov	r23,r2
    81cc:	10bfffc4 	addi	r2,r2,-1
    81d0:	21403fcc 	andi	r5,r4,255
    81d4:	2940201c 	xori	r5,r5,128
    81d8:	297fe004 	addi	r5,r5,-128
    81dc:	29bff726 	beq	r5,r6,81bc <__alt_mem_epcs_flash_controller_0+0xff8071bc>
    81e0:	21000044 	addi	r4,r4,1
    81e4:	11000005 	stb	r4,0(r2)
    81e8:	a80b883a 	mov	r5,r21
    81ec:	e009883a 	mov	r4,fp
    81f0:	000a6900 	call	a690 <_Bfree>
    81f4:	883ea026 	beq	r17,zero,7c78 <__alt_mem_epcs_flash_controller_0+0xff806c78>
    81f8:	90000426 	beq	r18,zero,820c <_dtoa_r+0xc3c>
    81fc:	94400326 	beq	r18,r17,820c <_dtoa_r+0xc3c>
    8200:	900b883a 	mov	r5,r18
    8204:	e009883a 	mov	r4,fp
    8208:	000a6900 	call	a690 <_Bfree>
    820c:	880b883a 	mov	r5,r17
    8210:	e009883a 	mov	r4,fp
    8214:	000a6900 	call	a690 <_Bfree>
    8218:	003e9706 	br	7c78 <__alt_mem_epcs_flash_controller_0+0xff806c78>
    821c:	01800044 	movi	r6,1
    8220:	d9800e15 	stw	r6,56(sp)
    8224:	003d9606 	br	7880 <__alt_mem_epcs_flash_controller_0+0xff806880>
    8228:	d8800817 	ldw	r2,32(sp)
    822c:	d8c00517 	ldw	r3,20(sp)
    8230:	d8000d15 	stw	zero,52(sp)
    8234:	10c5c83a 	sub	r2,r2,r3
    8238:	00c9c83a 	sub	r4,zero,r3
    823c:	d8800815 	stw	r2,32(sp)
    8240:	d9000a15 	stw	r4,40(sp)
    8244:	003d9706 	br	78a4 <__alt_mem_epcs_flash_controller_0+0xff8068a4>
    8248:	05adc83a 	sub	r22,zero,r22
    824c:	dd800815 	stw	r22,32(sp)
    8250:	002d883a 	mov	r22,zero
    8254:	003d8e06 	br	7890 <__alt_mem_epcs_flash_controller_0+0xff806890>
    8258:	d9000517 	ldw	r4,20(sp)
    825c:	00194e80 	call	194e8 <__floatsidf>
    8260:	100d883a 	mov	r6,r2
    8264:	180f883a 	mov	r7,r3
    8268:	a009883a 	mov	r4,r20
    826c:	880b883a 	mov	r5,r17
    8270:	00180a80 	call	180a8 <__eqdf2>
    8274:	103d7126 	beq	r2,zero,783c <__alt_mem_epcs_flash_controller_0+0xff80683c>
    8278:	d9c00517 	ldw	r7,20(sp)
    827c:	39ffffc4 	addi	r7,r7,-1
    8280:	d9c00515 	stw	r7,20(sp)
    8284:	003d6d06 	br	783c <__alt_mem_epcs_flash_controller_0+0xff80683c>
    8288:	dd400a17 	ldw	r21,40(sp)
    828c:	dd000817 	ldw	r20,32(sp)
    8290:	0023883a 	mov	r17,zero
    8294:	003f4806 	br	7fb8 <__alt_mem_epcs_flash_controller_0+0xff806fb8>
    8298:	10e3c83a 	sub	r17,r2,r3
    829c:	9448983a 	sll	r4,r18,r17
    82a0:	003d3206 	br	776c <__alt_mem_epcs_flash_controller_0+0xff80676c>
    82a4:	d8000e15 	stw	zero,56(sp)
    82a8:	003d7506 	br	7880 <__alt_mem_epcs_flash_controller_0+0xff806880>
    82ac:	b005883a 	mov	r2,r22
    82b0:	003f4506 	br	7fc8 <__alt_mem_epcs_flash_controller_0+0xff806fc8>
    82b4:	dc000915 	stw	r16,36(sp)
    82b8:	d9800a17 	ldw	r6,40(sp)
    82bc:	d9400917 	ldw	r5,36(sp)
    82c0:	e009883a 	mov	r4,fp
    82c4:	000ace40 	call	ace4 <__pow5mult>
    82c8:	1021883a 	mov	r16,r2
    82cc:	003f5a06 	br	8038 <__alt_mem_epcs_flash_controller_0+0xff807038>
    82d0:	01c00044 	movi	r7,1
    82d4:	d9c00b15 	stw	r7,44(sp)
    82d8:	d8802217 	ldw	r2,136(sp)
    82dc:	0081280e 	bge	zero,r2,8780 <_dtoa_r+0x11b0>
    82e0:	100d883a 	mov	r6,r2
    82e4:	1021883a 	mov	r16,r2
    82e8:	d8800c15 	stw	r2,48(sp)
    82ec:	d8800615 	stw	r2,24(sp)
    82f0:	003d8806 	br	7914 <__alt_mem_epcs_flash_controller_0+0xff806914>
    82f4:	d8800617 	ldw	r2,24(sp)
    82f8:	00be9b16 	blt	zero,r2,7d68 <__alt_mem_epcs_flash_controller_0+0xff806d68>
    82fc:	10010f1e 	bne	r2,zero,873c <_dtoa_r+0x116c>
    8300:	880b883a 	mov	r5,r17
    8304:	000d883a 	mov	r6,zero
    8308:	01d00534 	movhi	r7,16404
    830c:	8009883a 	mov	r4,r16
    8310:	00183000 	call	18300 <__muldf3>
    8314:	900d883a 	mov	r6,r18
    8318:	980f883a 	mov	r7,r19
    831c:	1009883a 	mov	r4,r2
    8320:	180b883a 	mov	r5,r3
    8324:	00181300 	call	18130 <__gedf2>
    8328:	002b883a 	mov	r21,zero
    832c:	0023883a 	mov	r17,zero
    8330:	1000bf16 	blt	r2,zero,8630 <_dtoa_r+0x1060>
    8334:	d9802217 	ldw	r6,136(sp)
    8338:	ddc00717 	ldw	r23,28(sp)
    833c:	018c303a 	nor	r6,zero,r6
    8340:	d9800515 	stw	r6,20(sp)
    8344:	a80b883a 	mov	r5,r21
    8348:	e009883a 	mov	r4,fp
    834c:	000a6900 	call	a690 <_Bfree>
    8350:	883e4926 	beq	r17,zero,7c78 <__alt_mem_epcs_flash_controller_0+0xff806c78>
    8354:	003fad06 	br	820c <__alt_mem_epcs_flash_controller_0+0xff80720c>
    8358:	d9c01117 	ldw	r7,68(sp)
    835c:	3801bc26 	beq	r7,zero,8a50 <_dtoa_r+0x1480>
    8360:	10810cc4 	addi	r2,r2,1075
    8364:	dd400a17 	ldw	r21,40(sp)
    8368:	dd000817 	ldw	r20,32(sp)
    836c:	003f0a06 	br	7f98 <__alt_mem_epcs_flash_controller_0+0xff806f98>
    8370:	00800704 	movi	r2,28
    8374:	d9000817 	ldw	r4,32(sp)
    8378:	a0a9883a 	add	r20,r20,r2
    837c:	b0ad883a 	add	r22,r22,r2
    8380:	2089883a 	add	r4,r4,r2
    8384:	d9000815 	stw	r4,32(sp)
    8388:	003f5106 	br	80d0 <__alt_mem_epcs_flash_controller_0+0xff8070d0>
    838c:	d8c00317 	ldw	r3,12(sp)
    8390:	b8c1fc0e 	bge	r23,r3,8b84 <_dtoa_r+0x15b4>
    8394:	0027883a 	mov	r19,zero
    8398:	b805883a 	mov	r2,r23
    839c:	003f3e06 	br	8098 <__alt_mem_epcs_flash_controller_0+0xff807098>
    83a0:	880b883a 	mov	r5,r17
    83a4:	e009883a 	mov	r4,fp
    83a8:	000f883a 	mov	r7,zero
    83ac:	01800284 	movi	r6,10
    83b0:	000a6b80 	call	a6b8 <__multadd>
    83b4:	d9000c17 	ldw	r4,48(sp)
    83b8:	1023883a 	mov	r17,r2
    83bc:	0102040e 	bge	zero,r4,8bd0 <_dtoa_r+0x1600>
    83c0:	d9000615 	stw	r4,24(sp)
    83c4:	0500050e 	bge	zero,r20,83dc <_dtoa_r+0xe0c>
    83c8:	880b883a 	mov	r5,r17
    83cc:	a00d883a 	mov	r6,r20
    83d0:	e009883a 	mov	r4,fp
    83d4:	000ae240 	call	ae24 <__lshift>
    83d8:	1023883a 	mov	r17,r2
    83dc:	9801241e 	bne	r19,zero,8870 <_dtoa_r+0x12a0>
    83e0:	8829883a 	mov	r20,r17
    83e4:	d9000617 	ldw	r4,24(sp)
    83e8:	dcc00717 	ldw	r19,28(sp)
    83ec:	9480004c 	andi	r18,r18,1
    83f0:	20bfffc4 	addi	r2,r4,-1
    83f4:	9885883a 	add	r2,r19,r2
    83f8:	d8800415 	stw	r2,16(sp)
    83fc:	dc800615 	stw	r18,24(sp)
    8400:	a80b883a 	mov	r5,r21
    8404:	8009883a 	mov	r4,r16
    8408:	00073a80 	call	73a8 <quorem>
    840c:	880b883a 	mov	r5,r17
    8410:	8009883a 	mov	r4,r16
    8414:	102f883a 	mov	r23,r2
    8418:	000af6c0 	call	af6c <__mcmp>
    841c:	a80b883a 	mov	r5,r21
    8420:	a00d883a 	mov	r6,r20
    8424:	e009883a 	mov	r4,fp
    8428:	102d883a 	mov	r22,r2
    842c:	000afcc0 	call	afcc <__mdiff>
    8430:	1007883a 	mov	r3,r2
    8434:	10800317 	ldw	r2,12(r2)
    8438:	bc800c04 	addi	r18,r23,48
    843c:	180b883a 	mov	r5,r3
    8440:	10004e1e 	bne	r2,zero,857c <_dtoa_r+0xfac>
    8444:	8009883a 	mov	r4,r16
    8448:	d8c01615 	stw	r3,88(sp)
    844c:	000af6c0 	call	af6c <__mcmp>
    8450:	d8c01617 	ldw	r3,88(sp)
    8454:	e009883a 	mov	r4,fp
    8458:	d8801615 	stw	r2,88(sp)
    845c:	180b883a 	mov	r5,r3
    8460:	000a6900 	call	a690 <_Bfree>
    8464:	d8801617 	ldw	r2,88(sp)
    8468:	1000041e 	bne	r2,zero,847c <_dtoa_r+0xeac>
    846c:	d9800317 	ldw	r6,12(sp)
    8470:	3000021e 	bne	r6,zero,847c <_dtoa_r+0xeac>
    8474:	d8c00617 	ldw	r3,24(sp)
    8478:	18003726 	beq	r3,zero,8558 <_dtoa_r+0xf88>
    847c:	b0002016 	blt	r22,zero,8500 <_dtoa_r+0xf30>
    8480:	b000041e 	bne	r22,zero,8494 <_dtoa_r+0xec4>
    8484:	d9000317 	ldw	r4,12(sp)
    8488:	2000021e 	bne	r4,zero,8494 <_dtoa_r+0xec4>
    848c:	d8c00617 	ldw	r3,24(sp)
    8490:	18001b26 	beq	r3,zero,8500 <_dtoa_r+0xf30>
    8494:	00810716 	blt	zero,r2,88b4 <_dtoa_r+0x12e4>
    8498:	d8c00417 	ldw	r3,16(sp)
    849c:	9d800044 	addi	r22,r19,1
    84a0:	9c800005 	stb	r18,0(r19)
    84a4:	b02f883a 	mov	r23,r22
    84a8:	98c10626 	beq	r19,r3,88c4 <_dtoa_r+0x12f4>
    84ac:	800b883a 	mov	r5,r16
    84b0:	000f883a 	mov	r7,zero
    84b4:	01800284 	movi	r6,10
    84b8:	e009883a 	mov	r4,fp
    84bc:	000a6b80 	call	a6b8 <__multadd>
    84c0:	1021883a 	mov	r16,r2
    84c4:	000f883a 	mov	r7,zero
    84c8:	01800284 	movi	r6,10
    84cc:	880b883a 	mov	r5,r17
    84d0:	e009883a 	mov	r4,fp
    84d4:	8d002526 	beq	r17,r20,856c <_dtoa_r+0xf9c>
    84d8:	000a6b80 	call	a6b8 <__multadd>
    84dc:	a00b883a 	mov	r5,r20
    84e0:	000f883a 	mov	r7,zero
    84e4:	01800284 	movi	r6,10
    84e8:	e009883a 	mov	r4,fp
    84ec:	1023883a 	mov	r17,r2
    84f0:	000a6b80 	call	a6b8 <__multadd>
    84f4:	1029883a 	mov	r20,r2
    84f8:	b027883a 	mov	r19,r22
    84fc:	003fc006 	br	8400 <__alt_mem_epcs_flash_controller_0+0xff807400>
    8500:	9011883a 	mov	r8,r18
    8504:	00800e0e 	bge	zero,r2,8540 <_dtoa_r+0xf70>
    8508:	800b883a 	mov	r5,r16
    850c:	01800044 	movi	r6,1
    8510:	e009883a 	mov	r4,fp
    8514:	da001715 	stw	r8,92(sp)
    8518:	000ae240 	call	ae24 <__lshift>
    851c:	a80b883a 	mov	r5,r21
    8520:	1009883a 	mov	r4,r2
    8524:	1021883a 	mov	r16,r2
    8528:	000af6c0 	call	af6c <__mcmp>
    852c:	da001717 	ldw	r8,92(sp)
    8530:	0081960e 	bge	zero,r2,8b8c <_dtoa_r+0x15bc>
    8534:	00800e44 	movi	r2,57
    8538:	40817026 	beq	r8,r2,8afc <_dtoa_r+0x152c>
    853c:	ba000c44 	addi	r8,r23,49
    8540:	8825883a 	mov	r18,r17
    8544:	9dc00044 	addi	r23,r19,1
    8548:	9a000005 	stb	r8,0(r19)
    854c:	a023883a 	mov	r17,r20
    8550:	dc000915 	stw	r16,36(sp)
    8554:	003f2406 	br	81e8 <__alt_mem_epcs_flash_controller_0+0xff8071e8>
    8558:	00800e44 	movi	r2,57
    855c:	9011883a 	mov	r8,r18
    8560:	90816626 	beq	r18,r2,8afc <_dtoa_r+0x152c>
    8564:	05bff516 	blt	zero,r22,853c <__alt_mem_epcs_flash_controller_0+0xff80753c>
    8568:	003ff506 	br	8540 <__alt_mem_epcs_flash_controller_0+0xff807540>
    856c:	000a6b80 	call	a6b8 <__multadd>
    8570:	1023883a 	mov	r17,r2
    8574:	1029883a 	mov	r20,r2
    8578:	003fdf06 	br	84f8 <__alt_mem_epcs_flash_controller_0+0xff8074f8>
    857c:	e009883a 	mov	r4,fp
    8580:	000a6900 	call	a690 <_Bfree>
    8584:	00800044 	movi	r2,1
    8588:	003fbc06 	br	847c <__alt_mem_epcs_flash_controller_0+0xff80747c>
    858c:	a80b883a 	mov	r5,r21
    8590:	8009883a 	mov	r4,r16
    8594:	000af6c0 	call	af6c <__mcmp>
    8598:	103edb0e 	bge	r2,zero,8108 <__alt_mem_epcs_flash_controller_0+0xff807108>
    859c:	800b883a 	mov	r5,r16
    85a0:	000f883a 	mov	r7,zero
    85a4:	01800284 	movi	r6,10
    85a8:	e009883a 	mov	r4,fp
    85ac:	000a6b80 	call	a6b8 <__multadd>
    85b0:	1021883a 	mov	r16,r2
    85b4:	d8800517 	ldw	r2,20(sp)
    85b8:	d8c00b17 	ldw	r3,44(sp)
    85bc:	10bfffc4 	addi	r2,r2,-1
    85c0:	d8800515 	stw	r2,20(sp)
    85c4:	183f761e 	bne	r3,zero,83a0 <__alt_mem_epcs_flash_controller_0+0xff8073a0>
    85c8:	d9000c17 	ldw	r4,48(sp)
    85cc:	0101730e 	bge	zero,r4,8b9c <_dtoa_r+0x15cc>
    85d0:	d9000615 	stw	r4,24(sp)
    85d4:	003ed006 	br	8118 <__alt_mem_epcs_flash_controller_0+0xff807118>
    85d8:	00800084 	movi	r2,2
    85dc:	3081861e 	bne	r6,r2,8bf8 <_dtoa_r+0x1628>
    85e0:	d8000b15 	stw	zero,44(sp)
    85e4:	003f3c06 	br	82d8 <__alt_mem_epcs_flash_controller_0+0xff8072d8>
    85e8:	dc000917 	ldw	r16,36(sp)
    85ec:	003e9206 	br	8038 <__alt_mem_epcs_flash_controller_0+0xff807038>
    85f0:	d9c00317 	ldw	r7,12(sp)
    85f4:	00800084 	movi	r2,2
    85f8:	11fec50e 	bge	r2,r7,8110 <__alt_mem_epcs_flash_controller_0+0xff807110>
    85fc:	d9000617 	ldw	r4,24(sp)
    8600:	20013c1e 	bne	r4,zero,8af4 <_dtoa_r+0x1524>
    8604:	a80b883a 	mov	r5,r21
    8608:	000f883a 	mov	r7,zero
    860c:	01800144 	movi	r6,5
    8610:	e009883a 	mov	r4,fp
    8614:	000a6b80 	call	a6b8 <__multadd>
    8618:	100b883a 	mov	r5,r2
    861c:	8009883a 	mov	r4,r16
    8620:	102b883a 	mov	r21,r2
    8624:	000af6c0 	call	af6c <__mcmp>
    8628:	dc000915 	stw	r16,36(sp)
    862c:	00bf410e 	bge	zero,r2,8334 <__alt_mem_epcs_flash_controller_0+0xff807334>
    8630:	d9c00717 	ldw	r7,28(sp)
    8634:	00800c44 	movi	r2,49
    8638:	38800005 	stb	r2,0(r7)
    863c:	d8800517 	ldw	r2,20(sp)
    8640:	3dc00044 	addi	r23,r7,1
    8644:	10800044 	addi	r2,r2,1
    8648:	d8800515 	stw	r2,20(sp)
    864c:	003f3d06 	br	8344 <__alt_mem_epcs_flash_controller_0+0xff807344>
    8650:	d9800517 	ldw	r6,20(sp)
    8654:	d9c00717 	ldw	r7,28(sp)
    8658:	00800c44 	movi	r2,49
    865c:	31800044 	addi	r6,r6,1
    8660:	d9800515 	stw	r6,20(sp)
    8664:	38800005 	stb	r2,0(r7)
    8668:	003edf06 	br	81e8 <__alt_mem_epcs_flash_controller_0+0xff8071e8>
    866c:	d8000b15 	stw	zero,44(sp)
    8670:	003c9f06 	br	78f0 <__alt_mem_epcs_flash_controller_0+0xff8068f0>
    8674:	903e7e1e 	bne	r18,zero,8070 <__alt_mem_epcs_flash_controller_0+0xff807070>
    8678:	00800434 	movhi	r2,16
    867c:	10bfffc4 	addi	r2,r2,-1
    8680:	9884703a 	and	r2,r19,r2
    8684:	1000ea1e 	bne	r2,zero,8a30 <_dtoa_r+0x1460>
    8688:	9cdffc2c 	andhi	r19,r19,32752
    868c:	9800e826 	beq	r19,zero,8a30 <_dtoa_r+0x1460>
    8690:	d9c00817 	ldw	r7,32(sp)
    8694:	b5800044 	addi	r22,r22,1
    8698:	04c00044 	movi	r19,1
    869c:	39c00044 	addi	r7,r7,1
    86a0:	d9c00815 	stw	r7,32(sp)
    86a4:	d8800d17 	ldw	r2,52(sp)
    86a8:	103e721e 	bne	r2,zero,8074 <__alt_mem_epcs_flash_controller_0+0xff807074>
    86ac:	00800044 	movi	r2,1
    86b0:	003e7906 	br	8098 <__alt_mem_epcs_flash_controller_0+0xff807098>
    86b4:	8009883a 	mov	r4,r16
    86b8:	00194e80 	call	194e8 <__floatsidf>
    86bc:	d9800f17 	ldw	r6,60(sp)
    86c0:	d9c01017 	ldw	r7,64(sp)
    86c4:	1009883a 	mov	r4,r2
    86c8:	180b883a 	mov	r5,r3
    86cc:	00183000 	call	18300 <__muldf3>
    86d0:	000d883a 	mov	r6,zero
    86d4:	01d00734 	movhi	r7,16412
    86d8:	1009883a 	mov	r4,r2
    86dc:	180b883a 	mov	r5,r3
    86e0:	0016e2c0 	call	16e2c <__adddf3>
    86e4:	047f3034 	movhi	r17,64704
    86e8:	1021883a 	mov	r16,r2
    86ec:	1c63883a 	add	r17,r3,r17
    86f0:	d9000f17 	ldw	r4,60(sp)
    86f4:	d9401017 	ldw	r5,64(sp)
    86f8:	000d883a 	mov	r6,zero
    86fc:	01d00534 	movhi	r7,16404
    8700:	0018b6c0 	call	18b6c <__subdf3>
    8704:	800d883a 	mov	r6,r16
    8708:	880f883a 	mov	r7,r17
    870c:	1009883a 	mov	r4,r2
    8710:	180b883a 	mov	r5,r3
    8714:	102b883a 	mov	r21,r2
    8718:	1829883a 	mov	r20,r3
    871c:	00181300 	call	18130 <__gedf2>
    8720:	00806c16 	blt	zero,r2,88d4 <_dtoa_r+0x1304>
    8724:	89e0003c 	xorhi	r7,r17,32768
    8728:	800d883a 	mov	r6,r16
    872c:	a809883a 	mov	r4,r21
    8730:	a00b883a 	mov	r5,r20
    8734:	001820c0 	call	1820c <__ledf2>
    8738:	103d7e0e 	bge	r2,zero,7d34 <__alt_mem_epcs_flash_controller_0+0xff806d34>
    873c:	002b883a 	mov	r21,zero
    8740:	0023883a 	mov	r17,zero
    8744:	003efb06 	br	8334 <__alt_mem_epcs_flash_controller_0+0xff807334>
    8748:	d8800717 	ldw	r2,28(sp)
    874c:	003bd006 	br	7690 <__alt_mem_epcs_flash_controller_0+0xff806690>
    8750:	d9000a17 	ldw	r4,40(sp)
    8754:	d9800d17 	ldw	r6,52(sp)
    8758:	dd400a15 	stw	r21,40(sp)
    875c:	a905c83a 	sub	r2,r21,r4
    8760:	308d883a 	add	r6,r6,r2
    8764:	d9800d15 	stw	r6,52(sp)
    8768:	002b883a 	mov	r21,zero
    876c:	003e0606 	br	7f88 <__alt_mem_epcs_flash_controller_0+0xff806f88>
    8770:	9023883a 	mov	r17,r18
    8774:	9829883a 	mov	r20,r19
    8778:	04000084 	movi	r16,2
    877c:	003c9206 	br	79c8 <__alt_mem_epcs_flash_controller_0+0xff8069c8>
    8780:	04000044 	movi	r16,1
    8784:	dc000c15 	stw	r16,48(sp)
    8788:	dc000615 	stw	r16,24(sp)
    878c:	dc002215 	stw	r16,136(sp)
    8790:	e0001115 	stw	zero,68(fp)
    8794:	000b883a 	mov	r5,zero
    8798:	003c6906 	br	7940 <__alt_mem_epcs_flash_controller_0+0xff806940>
    879c:	3021883a 	mov	r16,r6
    87a0:	003ffb06 	br	8790 <__alt_mem_epcs_flash_controller_0+0xff807790>
    87a4:	1000021e 	bne	r2,zero,87b0 <_dtoa_r+0x11e0>
    87a8:	4200004c 	andi	r8,r8,1
    87ac:	403e7d1e 	bne	r8,zero,81a4 <__alt_mem_epcs_flash_controller_0+0xff8071a4>
    87b0:	01000c04 	movi	r4,48
    87b4:	00000106 	br	87bc <_dtoa_r+0x11ec>
    87b8:	102f883a 	mov	r23,r2
    87bc:	b8bfffc4 	addi	r2,r23,-1
    87c0:	10c00007 	ldb	r3,0(r2)
    87c4:	193ffc26 	beq	r3,r4,87b8 <__alt_mem_epcs_flash_controller_0+0xff8077b8>
    87c8:	003e8706 	br	81e8 <__alt_mem_epcs_flash_controller_0+0xff8071e8>
    87cc:	d8800517 	ldw	r2,20(sp)
    87d0:	00a3c83a 	sub	r17,zero,r2
    87d4:	8800a426 	beq	r17,zero,8a68 <_dtoa_r+0x1498>
    87d8:	888003cc 	andi	r2,r17,15
    87dc:	100490fa 	slli	r2,r2,3
    87e0:	00c000b4 	movhi	r3,2
    87e4:	18f83d04 	addi	r3,r3,-7948
    87e8:	1885883a 	add	r2,r3,r2
    87ec:	11800017 	ldw	r6,0(r2)
    87f0:	11c00117 	ldw	r7,4(r2)
    87f4:	9009883a 	mov	r4,r18
    87f8:	980b883a 	mov	r5,r19
    87fc:	8823d13a 	srai	r17,r17,4
    8800:	00183000 	call	18300 <__muldf3>
    8804:	d8800f15 	stw	r2,60(sp)
    8808:	d8c01015 	stw	r3,64(sp)
    880c:	8800e826 	beq	r17,zero,8bb0 <_dtoa_r+0x15e0>
    8810:	050000b4 	movhi	r20,2
    8814:	a5383304 	addi	r20,r20,-7988
    8818:	04000084 	movi	r16,2
    881c:	8980004c 	andi	r6,r17,1
    8820:	1009883a 	mov	r4,r2
    8824:	8823d07a 	srai	r17,r17,1
    8828:	180b883a 	mov	r5,r3
    882c:	30000426 	beq	r6,zero,8840 <_dtoa_r+0x1270>
    8830:	a1800017 	ldw	r6,0(r20)
    8834:	a1c00117 	ldw	r7,4(r20)
    8838:	84000044 	addi	r16,r16,1
    883c:	00183000 	call	18300 <__muldf3>
    8840:	a5000204 	addi	r20,r20,8
    8844:	883ff51e 	bne	r17,zero,881c <__alt_mem_epcs_flash_controller_0+0xff80781c>
    8848:	d8800f15 	stw	r2,60(sp)
    884c:	d8c01015 	stw	r3,64(sp)
    8850:	003c7606 	br	7a2c <__alt_mem_epcs_flash_controller_0+0xff806a2c>
    8854:	00c00c04 	movi	r3,48
    8858:	10c00005 	stb	r3,0(r2)
    885c:	d8c00517 	ldw	r3,20(sp)
    8860:	bd3fffc3 	ldbu	r20,-1(r23)
    8864:	18c00044 	addi	r3,r3,1
    8868:	d8c00515 	stw	r3,20(sp)
    886c:	003db906 	br	7f54 <__alt_mem_epcs_flash_controller_0+0xff806f54>
    8870:	89400117 	ldw	r5,4(r17)
    8874:	e009883a 	mov	r4,fp
    8878:	000a5e80 	call	a5e8 <_Balloc>
    887c:	89800417 	ldw	r6,16(r17)
    8880:	89400304 	addi	r5,r17,12
    8884:	11000304 	addi	r4,r2,12
    8888:	31800084 	addi	r6,r6,2
    888c:	318d883a 	add	r6,r6,r6
    8890:	318d883a 	add	r6,r6,r6
    8894:	1027883a 	mov	r19,r2
    8898:	0002e140 	call	2e14 <memcpy>
    889c:	01800044 	movi	r6,1
    88a0:	980b883a 	mov	r5,r19
    88a4:	e009883a 	mov	r4,fp
    88a8:	000ae240 	call	ae24 <__lshift>
    88ac:	1029883a 	mov	r20,r2
    88b0:	003ecc06 	br	83e4 <__alt_mem_epcs_flash_controller_0+0xff8073e4>
    88b4:	00800e44 	movi	r2,57
    88b8:	90809026 	beq	r18,r2,8afc <_dtoa_r+0x152c>
    88bc:	92000044 	addi	r8,r18,1
    88c0:	003f1f06 	br	8540 <__alt_mem_epcs_flash_controller_0+0xff807540>
    88c4:	9011883a 	mov	r8,r18
    88c8:	8825883a 	mov	r18,r17
    88cc:	a023883a 	mov	r17,r20
    88d0:	003e2906 	br	8178 <__alt_mem_epcs_flash_controller_0+0xff807178>
    88d4:	002b883a 	mov	r21,zero
    88d8:	0023883a 	mov	r17,zero
    88dc:	003f5406 	br	8630 <__alt_mem_epcs_flash_controller_0+0xff807630>
    88e0:	61bfffc4 	addi	r6,r12,-1
    88e4:	300490fa 	slli	r2,r6,3
    88e8:	00c000b4 	movhi	r3,2
    88ec:	18f83d04 	addi	r3,r3,-7948
    88f0:	1885883a 	add	r2,r3,r2
    88f4:	11000017 	ldw	r4,0(r2)
    88f8:	11400117 	ldw	r5,4(r2)
    88fc:	d8800717 	ldw	r2,28(sp)
    8900:	880f883a 	mov	r7,r17
    8904:	d9801215 	stw	r6,72(sp)
    8908:	800d883a 	mov	r6,r16
    890c:	db001615 	stw	r12,88(sp)
    8910:	15c00044 	addi	r23,r2,1
    8914:	00183000 	call	18300 <__muldf3>
    8918:	d9401017 	ldw	r5,64(sp)
    891c:	d9000f17 	ldw	r4,60(sp)
    8920:	d8c01515 	stw	r3,84(sp)
    8924:	d8801415 	stw	r2,80(sp)
    8928:	00194680 	call	19468 <__fixdfsi>
    892c:	1009883a 	mov	r4,r2
    8930:	1021883a 	mov	r16,r2
    8934:	00194e80 	call	194e8 <__floatsidf>
    8938:	d9000f17 	ldw	r4,60(sp)
    893c:	d9401017 	ldw	r5,64(sp)
    8940:	100d883a 	mov	r6,r2
    8944:	180f883a 	mov	r7,r3
    8948:	0018b6c0 	call	18b6c <__subdf3>
    894c:	1829883a 	mov	r20,r3
    8950:	d8c00717 	ldw	r3,28(sp)
    8954:	84000c04 	addi	r16,r16,48
    8958:	1023883a 	mov	r17,r2
    895c:	1c000005 	stb	r16,0(r3)
    8960:	db001617 	ldw	r12,88(sp)
    8964:	00800044 	movi	r2,1
    8968:	60802226 	beq	r12,r2,89f4 <_dtoa_r+0x1424>
    896c:	d9c00717 	ldw	r7,28(sp)
    8970:	8805883a 	mov	r2,r17
    8974:	b82b883a 	mov	r21,r23
    8978:	3b19883a 	add	r12,r7,r12
    897c:	6023883a 	mov	r17,r12
    8980:	a007883a 	mov	r3,r20
    8984:	dc800f15 	stw	r18,60(sp)
    8988:	000d883a 	mov	r6,zero
    898c:	01d00934 	movhi	r7,16420
    8990:	1009883a 	mov	r4,r2
    8994:	180b883a 	mov	r5,r3
    8998:	00183000 	call	18300 <__muldf3>
    899c:	180b883a 	mov	r5,r3
    89a0:	1009883a 	mov	r4,r2
    89a4:	1829883a 	mov	r20,r3
    89a8:	1025883a 	mov	r18,r2
    89ac:	00194680 	call	19468 <__fixdfsi>
    89b0:	1009883a 	mov	r4,r2
    89b4:	1021883a 	mov	r16,r2
    89b8:	00194e80 	call	194e8 <__floatsidf>
    89bc:	100d883a 	mov	r6,r2
    89c0:	180f883a 	mov	r7,r3
    89c4:	9009883a 	mov	r4,r18
    89c8:	a00b883a 	mov	r5,r20
    89cc:	84000c04 	addi	r16,r16,48
    89d0:	0018b6c0 	call	18b6c <__subdf3>
    89d4:	ad400044 	addi	r21,r21,1
    89d8:	ac3fffc5 	stb	r16,-1(r21)
    89dc:	ac7fea1e 	bne	r21,r17,8988 <__alt_mem_epcs_flash_controller_0+0xff807988>
    89e0:	1023883a 	mov	r17,r2
    89e4:	d8801217 	ldw	r2,72(sp)
    89e8:	dc800f17 	ldw	r18,60(sp)
    89ec:	1829883a 	mov	r20,r3
    89f0:	b8af883a 	add	r23,r23,r2
    89f4:	d9001417 	ldw	r4,80(sp)
    89f8:	d9401517 	ldw	r5,84(sp)
    89fc:	000d883a 	mov	r6,zero
    8a00:	01cff834 	movhi	r7,16352
    8a04:	0016e2c0 	call	16e2c <__adddf3>
    8a08:	880d883a 	mov	r6,r17
    8a0c:	a00f883a 	mov	r7,r20
    8a10:	1009883a 	mov	r4,r2
    8a14:	180b883a 	mov	r5,r3
    8a18:	001820c0 	call	1820c <__ledf2>
    8a1c:	10003e0e 	bge	r2,zero,8b18 <_dtoa_r+0x1548>
    8a20:	d9001317 	ldw	r4,76(sp)
    8a24:	bd3fffc3 	ldbu	r20,-1(r23)
    8a28:	d9000515 	stw	r4,20(sp)
    8a2c:	003d3b06 	br	7f1c <__alt_mem_epcs_flash_controller_0+0xff806f1c>
    8a30:	0027883a 	mov	r19,zero
    8a34:	003f1b06 	br	86a4 <__alt_mem_epcs_flash_controller_0+0xff8076a4>
    8a38:	d8800817 	ldw	r2,32(sp)
    8a3c:	11e9c83a 	sub	r20,r2,r7
    8a40:	0005883a 	mov	r2,zero
    8a44:	003d5406 	br	7f98 <__alt_mem_epcs_flash_controller_0+0xff806f98>
    8a48:	00800044 	movi	r2,1
    8a4c:	003dc706 	br	816c <__alt_mem_epcs_flash_controller_0+0xff80716c>
    8a50:	d8c00217 	ldw	r3,8(sp)
    8a54:	00800d84 	movi	r2,54
    8a58:	dd400a17 	ldw	r21,40(sp)
    8a5c:	10c5c83a 	sub	r2,r2,r3
    8a60:	dd000817 	ldw	r20,32(sp)
    8a64:	003d4c06 	br	7f98 <__alt_mem_epcs_flash_controller_0+0xff806f98>
    8a68:	dc800f15 	stw	r18,60(sp)
    8a6c:	dcc01015 	stw	r19,64(sp)
    8a70:	04000084 	movi	r16,2
    8a74:	003bed06 	br	7a2c <__alt_mem_epcs_flash_controller_0+0xff806a2c>
    8a78:	d9000617 	ldw	r4,24(sp)
    8a7c:	203f0d26 	beq	r4,zero,86b4 <__alt_mem_epcs_flash_controller_0+0xff8076b4>
    8a80:	d9800c17 	ldw	r6,48(sp)
    8a84:	01bcab0e 	bge	zero,r6,7d34 <__alt_mem_epcs_flash_controller_0+0xff806d34>
    8a88:	d9401017 	ldw	r5,64(sp)
    8a8c:	d9000f17 	ldw	r4,60(sp)
    8a90:	000d883a 	mov	r6,zero
    8a94:	01d00934 	movhi	r7,16420
    8a98:	00183000 	call	18300 <__muldf3>
    8a9c:	81000044 	addi	r4,r16,1
    8aa0:	d8800f15 	stw	r2,60(sp)
    8aa4:	d8c01015 	stw	r3,64(sp)
    8aa8:	00194e80 	call	194e8 <__floatsidf>
    8aac:	d9800f17 	ldw	r6,60(sp)
    8ab0:	d9c01017 	ldw	r7,64(sp)
    8ab4:	1009883a 	mov	r4,r2
    8ab8:	180b883a 	mov	r5,r3
    8abc:	00183000 	call	18300 <__muldf3>
    8ac0:	01d00734 	movhi	r7,16412
    8ac4:	000d883a 	mov	r6,zero
    8ac8:	1009883a 	mov	r4,r2
    8acc:	180b883a 	mov	r5,r3
    8ad0:	0016e2c0 	call	16e2c <__adddf3>
    8ad4:	d9c00517 	ldw	r7,20(sp)
    8ad8:	047f3034 	movhi	r17,64704
    8adc:	1021883a 	mov	r16,r2
    8ae0:	39ffffc4 	addi	r7,r7,-1
    8ae4:	d9c01315 	stw	r7,76(sp)
    8ae8:	1c63883a 	add	r17,r3,r17
    8aec:	db000c17 	ldw	r12,48(sp)
    8af0:	003bea06 	br	7a9c <__alt_mem_epcs_flash_controller_0+0xff806a9c>
    8af4:	dc000915 	stw	r16,36(sp)
    8af8:	003e0e06 	br	8334 <__alt_mem_epcs_flash_controller_0+0xff807334>
    8afc:	01000e44 	movi	r4,57
    8b00:	8825883a 	mov	r18,r17
    8b04:	9dc00044 	addi	r23,r19,1
    8b08:	99000005 	stb	r4,0(r19)
    8b0c:	a023883a 	mov	r17,r20
    8b10:	dc000915 	stw	r16,36(sp)
    8b14:	003da406 	br	81a8 <__alt_mem_epcs_flash_controller_0+0xff8071a8>
    8b18:	d9801417 	ldw	r6,80(sp)
    8b1c:	d9c01517 	ldw	r7,84(sp)
    8b20:	0009883a 	mov	r4,zero
    8b24:	014ff834 	movhi	r5,16352
    8b28:	0018b6c0 	call	18b6c <__subdf3>
    8b2c:	880d883a 	mov	r6,r17
    8b30:	a00f883a 	mov	r7,r20
    8b34:	1009883a 	mov	r4,r2
    8b38:	180b883a 	mov	r5,r3
    8b3c:	00181300 	call	18130 <__gedf2>
    8b40:	00bc7c0e 	bge	zero,r2,7d34 <__alt_mem_epcs_flash_controller_0+0xff806d34>
    8b44:	01000c04 	movi	r4,48
    8b48:	00000106 	br	8b50 <_dtoa_r+0x1580>
    8b4c:	102f883a 	mov	r23,r2
    8b50:	b8bfffc4 	addi	r2,r23,-1
    8b54:	10c00007 	ldb	r3,0(r2)
    8b58:	193ffc26 	beq	r3,r4,8b4c <__alt_mem_epcs_flash_controller_0+0xff807b4c>
    8b5c:	d9801317 	ldw	r6,76(sp)
    8b60:	d9800515 	stw	r6,20(sp)
    8b64:	003c4406 	br	7c78 <__alt_mem_epcs_flash_controller_0+0xff806c78>
    8b68:	d9801317 	ldw	r6,76(sp)
    8b6c:	d9800515 	stw	r6,20(sp)
    8b70:	003cea06 	br	7f1c <__alt_mem_epcs_flash_controller_0+0xff806f1c>
    8b74:	dd800f17 	ldw	r22,60(sp)
    8b78:	dcc01017 	ldw	r19,64(sp)
    8b7c:	dc801217 	ldw	r18,72(sp)
    8b80:	003c6c06 	br	7d34 <__alt_mem_epcs_flash_controller_0+0xff806d34>
    8b84:	903e031e 	bne	r18,zero,8394 <__alt_mem_epcs_flash_controller_0+0xff807394>
    8b88:	003ebb06 	br	8678 <__alt_mem_epcs_flash_controller_0+0xff807678>
    8b8c:	103e6c1e 	bne	r2,zero,8540 <__alt_mem_epcs_flash_controller_0+0xff807540>
    8b90:	4080004c 	andi	r2,r8,1
    8b94:	103e6a26 	beq	r2,zero,8540 <__alt_mem_epcs_flash_controller_0+0xff807540>
    8b98:	003e6606 	br	8534 <__alt_mem_epcs_flash_controller_0+0xff807534>
    8b9c:	d8c00317 	ldw	r3,12(sp)
    8ba0:	00800084 	movi	r2,2
    8ba4:	10c02916 	blt	r2,r3,8c4c <_dtoa_r+0x167c>
    8ba8:	d9000c17 	ldw	r4,48(sp)
    8bac:	003e8806 	br	85d0 <__alt_mem_epcs_flash_controller_0+0xff8075d0>
    8bb0:	04000084 	movi	r16,2
    8bb4:	003b9d06 	br	7a2c <__alt_mem_epcs_flash_controller_0+0xff806a2c>
    8bb8:	d9001317 	ldw	r4,76(sp)
    8bbc:	d9000515 	stw	r4,20(sp)
    8bc0:	003cd606 	br	7f1c <__alt_mem_epcs_flash_controller_0+0xff806f1c>
    8bc4:	d8801317 	ldw	r2,76(sp)
    8bc8:	d8800515 	stw	r2,20(sp)
    8bcc:	003c2a06 	br	7c78 <__alt_mem_epcs_flash_controller_0+0xff806c78>
    8bd0:	d9800317 	ldw	r6,12(sp)
    8bd4:	00800084 	movi	r2,2
    8bd8:	11801516 	blt	r2,r6,8c30 <_dtoa_r+0x1660>
    8bdc:	d9c00c17 	ldw	r7,48(sp)
    8be0:	d9c00615 	stw	r7,24(sp)
    8be4:	003df706 	br	83c4 <__alt_mem_epcs_flash_controller_0+0xff8073c4>
    8be8:	193d3926 	beq	r3,r4,80d0 <__alt_mem_epcs_flash_controller_0+0xff8070d0>
    8bec:	00c00f04 	movi	r3,60
    8bf0:	1885c83a 	sub	r2,r3,r2
    8bf4:	003ddf06 	br	8374 <__alt_mem_epcs_flash_controller_0+0xff807374>
    8bf8:	e009883a 	mov	r4,fp
    8bfc:	e0001115 	stw	zero,68(fp)
    8c00:	000b883a 	mov	r5,zero
    8c04:	000a5e80 	call	a5e8 <_Balloc>
    8c08:	d8800715 	stw	r2,28(sp)
    8c0c:	d8c00717 	ldw	r3,28(sp)
    8c10:	00bfffc4 	movi	r2,-1
    8c14:	01000044 	movi	r4,1
    8c18:	d8800c15 	stw	r2,48(sp)
    8c1c:	e0c01015 	stw	r3,64(fp)
    8c20:	d9000b15 	stw	r4,44(sp)
    8c24:	d8800615 	stw	r2,24(sp)
    8c28:	d8002215 	stw	zero,136(sp)
    8c2c:	003c4106 	br	7d34 <__alt_mem_epcs_flash_controller_0+0xff806d34>
    8c30:	d8c00c17 	ldw	r3,48(sp)
    8c34:	d8c00615 	stw	r3,24(sp)
    8c38:	003e7006 	br	85fc <__alt_mem_epcs_flash_controller_0+0xff8075fc>
    8c3c:	04400044 	movi	r17,1
    8c40:	003b2006 	br	78c4 <__alt_mem_epcs_flash_controller_0+0xff8068c4>
    8c44:	000b883a 	mov	r5,zero
    8c48:	003b3d06 	br	7940 <__alt_mem_epcs_flash_controller_0+0xff806940>
    8c4c:	d8800c17 	ldw	r2,48(sp)
    8c50:	d8800615 	stw	r2,24(sp)
    8c54:	003e6906 	br	85fc <__alt_mem_epcs_flash_controller_0+0xff8075fc>

00008c58 <__sflush_r>:
    8c58:	2880030b 	ldhu	r2,12(r5)
    8c5c:	defffb04 	addi	sp,sp,-20
    8c60:	dcc00315 	stw	r19,12(sp)
    8c64:	dc400115 	stw	r17,4(sp)
    8c68:	dfc00415 	stw	ra,16(sp)
    8c6c:	dc800215 	stw	r18,8(sp)
    8c70:	dc000015 	stw	r16,0(sp)
    8c74:	10c0020c 	andi	r3,r2,8
    8c78:	2823883a 	mov	r17,r5
    8c7c:	2027883a 	mov	r19,r4
    8c80:	1800311e 	bne	r3,zero,8d48 <__sflush_r+0xf0>
    8c84:	28c00117 	ldw	r3,4(r5)
    8c88:	10820014 	ori	r2,r2,2048
    8c8c:	2880030d 	sth	r2,12(r5)
    8c90:	00c04b0e 	bge	zero,r3,8dc0 <__sflush_r+0x168>
    8c94:	8a000a17 	ldw	r8,40(r17)
    8c98:	40002326 	beq	r8,zero,8d28 <__sflush_r+0xd0>
    8c9c:	9c000017 	ldw	r16,0(r19)
    8ca0:	10c4000c 	andi	r3,r2,4096
    8ca4:	98000015 	stw	zero,0(r19)
    8ca8:	18004826 	beq	r3,zero,8dcc <__sflush_r+0x174>
    8cac:	89801417 	ldw	r6,80(r17)
    8cb0:	10c0010c 	andi	r3,r2,4
    8cb4:	18000626 	beq	r3,zero,8cd0 <__sflush_r+0x78>
    8cb8:	88c00117 	ldw	r3,4(r17)
    8cbc:	88800c17 	ldw	r2,48(r17)
    8cc0:	30cdc83a 	sub	r6,r6,r3
    8cc4:	10000226 	beq	r2,zero,8cd0 <__sflush_r+0x78>
    8cc8:	88800f17 	ldw	r2,60(r17)
    8ccc:	308dc83a 	sub	r6,r6,r2
    8cd0:	89400717 	ldw	r5,28(r17)
    8cd4:	000f883a 	mov	r7,zero
    8cd8:	9809883a 	mov	r4,r19
    8cdc:	403ee83a 	callr	r8
    8ce0:	00ffffc4 	movi	r3,-1
    8ce4:	10c04426 	beq	r2,r3,8df8 <__sflush_r+0x1a0>
    8ce8:	88c0030b 	ldhu	r3,12(r17)
    8cec:	89000417 	ldw	r4,16(r17)
    8cf0:	88000115 	stw	zero,4(r17)
    8cf4:	197dffcc 	andi	r5,r3,63487
    8cf8:	8940030d 	sth	r5,12(r17)
    8cfc:	89000015 	stw	r4,0(r17)
    8d00:	18c4000c 	andi	r3,r3,4096
    8d04:	18002c1e 	bne	r3,zero,8db8 <__sflush_r+0x160>
    8d08:	89400c17 	ldw	r5,48(r17)
    8d0c:	9c000015 	stw	r16,0(r19)
    8d10:	28000526 	beq	r5,zero,8d28 <__sflush_r+0xd0>
    8d14:	88801004 	addi	r2,r17,64
    8d18:	28800226 	beq	r5,r2,8d24 <__sflush_r+0xcc>
    8d1c:	9809883a 	mov	r4,r19
    8d20:	00093d40 	call	93d4 <_free_r>
    8d24:	88000c15 	stw	zero,48(r17)
    8d28:	0005883a 	mov	r2,zero
    8d2c:	dfc00417 	ldw	ra,16(sp)
    8d30:	dcc00317 	ldw	r19,12(sp)
    8d34:	dc800217 	ldw	r18,8(sp)
    8d38:	dc400117 	ldw	r17,4(sp)
    8d3c:	dc000017 	ldw	r16,0(sp)
    8d40:	dec00504 	addi	sp,sp,20
    8d44:	f800283a 	ret
    8d48:	2c800417 	ldw	r18,16(r5)
    8d4c:	903ff626 	beq	r18,zero,8d28 <__alt_mem_epcs_flash_controller_0+0xff807d28>
    8d50:	2c000017 	ldw	r16,0(r5)
    8d54:	108000cc 	andi	r2,r2,3
    8d58:	2c800015 	stw	r18,0(r5)
    8d5c:	84a1c83a 	sub	r16,r16,r18
    8d60:	1000131e 	bne	r2,zero,8db0 <__sflush_r+0x158>
    8d64:	28800517 	ldw	r2,20(r5)
    8d68:	88800215 	stw	r2,8(r17)
    8d6c:	04000316 	blt	zero,r16,8d7c <__sflush_r+0x124>
    8d70:	003fed06 	br	8d28 <__alt_mem_epcs_flash_controller_0+0xff807d28>
    8d74:	90a5883a 	add	r18,r18,r2
    8d78:	043feb0e 	bge	zero,r16,8d28 <__alt_mem_epcs_flash_controller_0+0xff807d28>
    8d7c:	88800917 	ldw	r2,36(r17)
    8d80:	89400717 	ldw	r5,28(r17)
    8d84:	800f883a 	mov	r7,r16
    8d88:	900d883a 	mov	r6,r18
    8d8c:	9809883a 	mov	r4,r19
    8d90:	103ee83a 	callr	r2
    8d94:	80a1c83a 	sub	r16,r16,r2
    8d98:	00bff616 	blt	zero,r2,8d74 <__alt_mem_epcs_flash_controller_0+0xff807d74>
    8d9c:	88c0030b 	ldhu	r3,12(r17)
    8da0:	00bfffc4 	movi	r2,-1
    8da4:	18c01014 	ori	r3,r3,64
    8da8:	88c0030d 	sth	r3,12(r17)
    8dac:	003fdf06 	br	8d2c <__alt_mem_epcs_flash_controller_0+0xff807d2c>
    8db0:	0005883a 	mov	r2,zero
    8db4:	003fec06 	br	8d68 <__alt_mem_epcs_flash_controller_0+0xff807d68>
    8db8:	88801415 	stw	r2,80(r17)
    8dbc:	003fd206 	br	8d08 <__alt_mem_epcs_flash_controller_0+0xff807d08>
    8dc0:	28c00f17 	ldw	r3,60(r5)
    8dc4:	00ffb316 	blt	zero,r3,8c94 <__alt_mem_epcs_flash_controller_0+0xff807c94>
    8dc8:	003fd706 	br	8d28 <__alt_mem_epcs_flash_controller_0+0xff807d28>
    8dcc:	89400717 	ldw	r5,28(r17)
    8dd0:	000d883a 	mov	r6,zero
    8dd4:	01c00044 	movi	r7,1
    8dd8:	9809883a 	mov	r4,r19
    8ddc:	403ee83a 	callr	r8
    8de0:	100d883a 	mov	r6,r2
    8de4:	00bfffc4 	movi	r2,-1
    8de8:	30801426 	beq	r6,r2,8e3c <__sflush_r+0x1e4>
    8dec:	8880030b 	ldhu	r2,12(r17)
    8df0:	8a000a17 	ldw	r8,40(r17)
    8df4:	003fae06 	br	8cb0 <__alt_mem_epcs_flash_controller_0+0xff807cb0>
    8df8:	98c00017 	ldw	r3,0(r19)
    8dfc:	183fba26 	beq	r3,zero,8ce8 <__alt_mem_epcs_flash_controller_0+0xff807ce8>
    8e00:	01000744 	movi	r4,29
    8e04:	19000626 	beq	r3,r4,8e20 <__sflush_r+0x1c8>
    8e08:	01000584 	movi	r4,22
    8e0c:	19000426 	beq	r3,r4,8e20 <__sflush_r+0x1c8>
    8e10:	88c0030b 	ldhu	r3,12(r17)
    8e14:	18c01014 	ori	r3,r3,64
    8e18:	88c0030d 	sth	r3,12(r17)
    8e1c:	003fc306 	br	8d2c <__alt_mem_epcs_flash_controller_0+0xff807d2c>
    8e20:	8880030b 	ldhu	r2,12(r17)
    8e24:	88c00417 	ldw	r3,16(r17)
    8e28:	88000115 	stw	zero,4(r17)
    8e2c:	10bdffcc 	andi	r2,r2,63487
    8e30:	8880030d 	sth	r2,12(r17)
    8e34:	88c00015 	stw	r3,0(r17)
    8e38:	003fb306 	br	8d08 <__alt_mem_epcs_flash_controller_0+0xff807d08>
    8e3c:	98800017 	ldw	r2,0(r19)
    8e40:	103fea26 	beq	r2,zero,8dec <__alt_mem_epcs_flash_controller_0+0xff807dec>
    8e44:	00c00744 	movi	r3,29
    8e48:	10c00226 	beq	r2,r3,8e54 <__sflush_r+0x1fc>
    8e4c:	00c00584 	movi	r3,22
    8e50:	10c0031e 	bne	r2,r3,8e60 <__sflush_r+0x208>
    8e54:	9c000015 	stw	r16,0(r19)
    8e58:	0005883a 	mov	r2,zero
    8e5c:	003fb306 	br	8d2c <__alt_mem_epcs_flash_controller_0+0xff807d2c>
    8e60:	88c0030b 	ldhu	r3,12(r17)
    8e64:	3005883a 	mov	r2,r6
    8e68:	18c01014 	ori	r3,r3,64
    8e6c:	88c0030d 	sth	r3,12(r17)
    8e70:	003fae06 	br	8d2c <__alt_mem_epcs_flash_controller_0+0xff807d2c>

00008e74 <_fflush_r>:
    8e74:	defffd04 	addi	sp,sp,-12
    8e78:	dc000115 	stw	r16,4(sp)
    8e7c:	dfc00215 	stw	ra,8(sp)
    8e80:	2021883a 	mov	r16,r4
    8e84:	20000226 	beq	r4,zero,8e90 <_fflush_r+0x1c>
    8e88:	20800e17 	ldw	r2,56(r4)
    8e8c:	10000c26 	beq	r2,zero,8ec0 <_fflush_r+0x4c>
    8e90:	2880030f 	ldh	r2,12(r5)
    8e94:	1000051e 	bne	r2,zero,8eac <_fflush_r+0x38>
    8e98:	0005883a 	mov	r2,zero
    8e9c:	dfc00217 	ldw	ra,8(sp)
    8ea0:	dc000117 	ldw	r16,4(sp)
    8ea4:	dec00304 	addi	sp,sp,12
    8ea8:	f800283a 	ret
    8eac:	8009883a 	mov	r4,r16
    8eb0:	dfc00217 	ldw	ra,8(sp)
    8eb4:	dc000117 	ldw	r16,4(sp)
    8eb8:	dec00304 	addi	sp,sp,12
    8ebc:	0008c581 	jmpi	8c58 <__sflush_r>
    8ec0:	d9400015 	stw	r5,0(sp)
    8ec4:	00092600 	call	9260 <__sinit>
    8ec8:	d9400017 	ldw	r5,0(sp)
    8ecc:	003ff006 	br	8e90 <__alt_mem_epcs_flash_controller_0+0xff807e90>

00008ed0 <fflush>:
    8ed0:	20000526 	beq	r4,zero,8ee8 <fflush+0x18>
    8ed4:	008000b4 	movhi	r2,2
    8ed8:	10801c04 	addi	r2,r2,112
    8edc:	200b883a 	mov	r5,r4
    8ee0:	11000017 	ldw	r4,0(r2)
    8ee4:	0008e741 	jmpi	8e74 <_fflush_r>
    8ee8:	008000b4 	movhi	r2,2
    8eec:	10801b04 	addi	r2,r2,108
    8ef0:	11000017 	ldw	r4,0(r2)
    8ef4:	01400074 	movhi	r5,1
    8ef8:	29639d04 	addi	r5,r5,-29068
    8efc:	0009c701 	jmpi	9c70 <_fwalk_reent>

00008f00 <__fp_unlock>:
    8f00:	0005883a 	mov	r2,zero
    8f04:	f800283a 	ret

00008f08 <_cleanup_r>:
    8f08:	01400074 	movhi	r5,1
    8f0c:	294dd804 	addi	r5,r5,14176
    8f10:	0009c701 	jmpi	9c70 <_fwalk_reent>

00008f14 <__sinit.part.1>:
    8f14:	defff704 	addi	sp,sp,-36
    8f18:	00c00074 	movhi	r3,1
    8f1c:	dfc00815 	stw	ra,32(sp)
    8f20:	ddc00715 	stw	r23,28(sp)
    8f24:	dd800615 	stw	r22,24(sp)
    8f28:	dd400515 	stw	r21,20(sp)
    8f2c:	dd000415 	stw	r20,16(sp)
    8f30:	dcc00315 	stw	r19,12(sp)
    8f34:	dc800215 	stw	r18,8(sp)
    8f38:	dc400115 	stw	r17,4(sp)
    8f3c:	dc000015 	stw	r16,0(sp)
    8f40:	18e3c204 	addi	r3,r3,-28920
    8f44:	24000117 	ldw	r16,4(r4)
    8f48:	20c00f15 	stw	r3,60(r4)
    8f4c:	2080bb04 	addi	r2,r4,748
    8f50:	00c000c4 	movi	r3,3
    8f54:	20c0b915 	stw	r3,740(r4)
    8f58:	2080ba15 	stw	r2,744(r4)
    8f5c:	2000b815 	stw	zero,736(r4)
    8f60:	05c00204 	movi	r23,8
    8f64:	00800104 	movi	r2,4
    8f68:	2025883a 	mov	r18,r4
    8f6c:	b80d883a 	mov	r6,r23
    8f70:	81001704 	addi	r4,r16,92
    8f74:	000b883a 	mov	r5,zero
    8f78:	80000015 	stw	zero,0(r16)
    8f7c:	80000115 	stw	zero,4(r16)
    8f80:	80000215 	stw	zero,8(r16)
    8f84:	8080030d 	sth	r2,12(r16)
    8f88:	80001915 	stw	zero,100(r16)
    8f8c:	8000038d 	sth	zero,14(r16)
    8f90:	80000415 	stw	zero,16(r16)
    8f94:	80000515 	stw	zero,20(r16)
    8f98:	80000615 	stw	zero,24(r16)
    8f9c:	000a4c00 	call	a4c0 <memset>
    8fa0:	05800034 	movhi	r22,0
    8fa4:	94400217 	ldw	r17,8(r18)
    8fa8:	05400034 	movhi	r21,0
    8fac:	05000034 	movhi	r20,0
    8fb0:	04c00034 	movhi	r19,0
    8fb4:	b58ca304 	addi	r22,r22,12940
    8fb8:	ad4cba04 	addi	r21,r21,13032
    8fbc:	a50cd904 	addi	r20,r20,13156
    8fc0:	9cccf004 	addi	r19,r19,13248
    8fc4:	85800815 	stw	r22,32(r16)
    8fc8:	85400915 	stw	r21,36(r16)
    8fcc:	85000a15 	stw	r20,40(r16)
    8fd0:	84c00b15 	stw	r19,44(r16)
    8fd4:	84000715 	stw	r16,28(r16)
    8fd8:	00800284 	movi	r2,10
    8fdc:	8880030d 	sth	r2,12(r17)
    8fe0:	00800044 	movi	r2,1
    8fe4:	b80d883a 	mov	r6,r23
    8fe8:	89001704 	addi	r4,r17,92
    8fec:	000b883a 	mov	r5,zero
    8ff0:	88000015 	stw	zero,0(r17)
    8ff4:	88000115 	stw	zero,4(r17)
    8ff8:	88000215 	stw	zero,8(r17)
    8ffc:	88001915 	stw	zero,100(r17)
    9000:	8880038d 	sth	r2,14(r17)
    9004:	88000415 	stw	zero,16(r17)
    9008:	88000515 	stw	zero,20(r17)
    900c:	88000615 	stw	zero,24(r17)
    9010:	000a4c00 	call	a4c0 <memset>
    9014:	94000317 	ldw	r16,12(r18)
    9018:	00800484 	movi	r2,18
    901c:	8c400715 	stw	r17,28(r17)
    9020:	8d800815 	stw	r22,32(r17)
    9024:	8d400915 	stw	r21,36(r17)
    9028:	8d000a15 	stw	r20,40(r17)
    902c:	8cc00b15 	stw	r19,44(r17)
    9030:	8080030d 	sth	r2,12(r16)
    9034:	00800084 	movi	r2,2
    9038:	80000015 	stw	zero,0(r16)
    903c:	80000115 	stw	zero,4(r16)
    9040:	80000215 	stw	zero,8(r16)
    9044:	80001915 	stw	zero,100(r16)
    9048:	8080038d 	sth	r2,14(r16)
    904c:	80000415 	stw	zero,16(r16)
    9050:	80000515 	stw	zero,20(r16)
    9054:	80000615 	stw	zero,24(r16)
    9058:	b80d883a 	mov	r6,r23
    905c:	000b883a 	mov	r5,zero
    9060:	81001704 	addi	r4,r16,92
    9064:	000a4c00 	call	a4c0 <memset>
    9068:	00800044 	movi	r2,1
    906c:	84000715 	stw	r16,28(r16)
    9070:	85800815 	stw	r22,32(r16)
    9074:	85400915 	stw	r21,36(r16)
    9078:	85000a15 	stw	r20,40(r16)
    907c:	84c00b15 	stw	r19,44(r16)
    9080:	90800e15 	stw	r2,56(r18)
    9084:	dfc00817 	ldw	ra,32(sp)
    9088:	ddc00717 	ldw	r23,28(sp)
    908c:	dd800617 	ldw	r22,24(sp)
    9090:	dd400517 	ldw	r21,20(sp)
    9094:	dd000417 	ldw	r20,16(sp)
    9098:	dcc00317 	ldw	r19,12(sp)
    909c:	dc800217 	ldw	r18,8(sp)
    90a0:	dc400117 	ldw	r17,4(sp)
    90a4:	dc000017 	ldw	r16,0(sp)
    90a8:	dec00904 	addi	sp,sp,36
    90ac:	f800283a 	ret

000090b0 <__fp_lock>:
    90b0:	0005883a 	mov	r2,zero
    90b4:	f800283a 	ret

000090b8 <__sfmoreglue>:
    90b8:	defffc04 	addi	sp,sp,-16
    90bc:	dc800215 	stw	r18,8(sp)
    90c0:	2825883a 	mov	r18,r5
    90c4:	dc000015 	stw	r16,0(sp)
    90c8:	01401a04 	movi	r5,104
    90cc:	2021883a 	mov	r16,r4
    90d0:	913fffc4 	addi	r4,r18,-1
    90d4:	dfc00315 	stw	ra,12(sp)
    90d8:	dc400115 	stw	r17,4(sp)
    90dc:	00024440 	call	2444 <__mulsi3>
    90e0:	8009883a 	mov	r4,r16
    90e4:	11401d04 	addi	r5,r2,116
    90e8:	1023883a 	mov	r17,r2
    90ec:	000258c0 	call	258c <_malloc_r>
    90f0:	1021883a 	mov	r16,r2
    90f4:	10000726 	beq	r2,zero,9114 <__sfmoreglue+0x5c>
    90f8:	11000304 	addi	r4,r2,12
    90fc:	10000015 	stw	zero,0(r2)
    9100:	14800115 	stw	r18,4(r2)
    9104:	11000215 	stw	r4,8(r2)
    9108:	89801a04 	addi	r6,r17,104
    910c:	000b883a 	mov	r5,zero
    9110:	000a4c00 	call	a4c0 <memset>
    9114:	8005883a 	mov	r2,r16
    9118:	dfc00317 	ldw	ra,12(sp)
    911c:	dc800217 	ldw	r18,8(sp)
    9120:	dc400117 	ldw	r17,4(sp)
    9124:	dc000017 	ldw	r16,0(sp)
    9128:	dec00404 	addi	sp,sp,16
    912c:	f800283a 	ret

00009130 <__sfp>:
    9130:	defffb04 	addi	sp,sp,-20
    9134:	dc000015 	stw	r16,0(sp)
    9138:	040000b4 	movhi	r16,2
    913c:	84001b04 	addi	r16,r16,108
    9140:	dcc00315 	stw	r19,12(sp)
    9144:	2027883a 	mov	r19,r4
    9148:	81000017 	ldw	r4,0(r16)
    914c:	dfc00415 	stw	ra,16(sp)
    9150:	dc800215 	stw	r18,8(sp)
    9154:	20800e17 	ldw	r2,56(r4)
    9158:	dc400115 	stw	r17,4(sp)
    915c:	1000021e 	bne	r2,zero,9168 <__sfp+0x38>
    9160:	0008f140 	call	8f14 <__sinit.part.1>
    9164:	81000017 	ldw	r4,0(r16)
    9168:	2480b804 	addi	r18,r4,736
    916c:	047fffc4 	movi	r17,-1
    9170:	91000117 	ldw	r4,4(r18)
    9174:	94000217 	ldw	r16,8(r18)
    9178:	213fffc4 	addi	r4,r4,-1
    917c:	20000a16 	blt	r4,zero,91a8 <__sfp+0x78>
    9180:	8080030f 	ldh	r2,12(r16)
    9184:	10000c26 	beq	r2,zero,91b8 <__sfp+0x88>
    9188:	80c01d04 	addi	r3,r16,116
    918c:	00000206 	br	9198 <__sfp+0x68>
    9190:	18bfe60f 	ldh	r2,-104(r3)
    9194:	10000826 	beq	r2,zero,91b8 <__sfp+0x88>
    9198:	213fffc4 	addi	r4,r4,-1
    919c:	1c3ffd04 	addi	r16,r3,-12
    91a0:	18c01a04 	addi	r3,r3,104
    91a4:	247ffa1e 	bne	r4,r17,9190 <__alt_mem_epcs_flash_controller_0+0xff808190>
    91a8:	90800017 	ldw	r2,0(r18)
    91ac:	10001d26 	beq	r2,zero,9224 <__sfp+0xf4>
    91b0:	1025883a 	mov	r18,r2
    91b4:	003fee06 	br	9170 <__alt_mem_epcs_flash_controller_0+0xff808170>
    91b8:	00bfffc4 	movi	r2,-1
    91bc:	8080038d 	sth	r2,14(r16)
    91c0:	00800044 	movi	r2,1
    91c4:	8080030d 	sth	r2,12(r16)
    91c8:	80001915 	stw	zero,100(r16)
    91cc:	80000015 	stw	zero,0(r16)
    91d0:	80000215 	stw	zero,8(r16)
    91d4:	80000115 	stw	zero,4(r16)
    91d8:	80000415 	stw	zero,16(r16)
    91dc:	80000515 	stw	zero,20(r16)
    91e0:	80000615 	stw	zero,24(r16)
    91e4:	01800204 	movi	r6,8
    91e8:	000b883a 	mov	r5,zero
    91ec:	81001704 	addi	r4,r16,92
    91f0:	000a4c00 	call	a4c0 <memset>
    91f4:	8005883a 	mov	r2,r16
    91f8:	80000c15 	stw	zero,48(r16)
    91fc:	80000d15 	stw	zero,52(r16)
    9200:	80001115 	stw	zero,68(r16)
    9204:	80001215 	stw	zero,72(r16)
    9208:	dfc00417 	ldw	ra,16(sp)
    920c:	dcc00317 	ldw	r19,12(sp)
    9210:	dc800217 	ldw	r18,8(sp)
    9214:	dc400117 	ldw	r17,4(sp)
    9218:	dc000017 	ldw	r16,0(sp)
    921c:	dec00504 	addi	sp,sp,20
    9220:	f800283a 	ret
    9224:	01400104 	movi	r5,4
    9228:	9809883a 	mov	r4,r19
    922c:	00090b80 	call	90b8 <__sfmoreglue>
    9230:	90800015 	stw	r2,0(r18)
    9234:	103fde1e 	bne	r2,zero,91b0 <__alt_mem_epcs_flash_controller_0+0xff8081b0>
    9238:	00800304 	movi	r2,12
    923c:	98800015 	stw	r2,0(r19)
    9240:	0005883a 	mov	r2,zero
    9244:	003ff006 	br	9208 <__alt_mem_epcs_flash_controller_0+0xff808208>

00009248 <_cleanup>:
    9248:	008000b4 	movhi	r2,2
    924c:	10801b04 	addi	r2,r2,108
    9250:	11000017 	ldw	r4,0(r2)
    9254:	01400074 	movhi	r5,1
    9258:	294dd804 	addi	r5,r5,14176
    925c:	0009c701 	jmpi	9c70 <_fwalk_reent>

00009260 <__sinit>:
    9260:	20800e17 	ldw	r2,56(r4)
    9264:	10000126 	beq	r2,zero,926c <__sinit+0xc>
    9268:	f800283a 	ret
    926c:	0008f141 	jmpi	8f14 <__sinit.part.1>

00009270 <__sfp_lock_acquire>:
    9270:	f800283a 	ret

00009274 <__sfp_lock_release>:
    9274:	f800283a 	ret

00009278 <__sinit_lock_acquire>:
    9278:	f800283a 	ret

0000927c <__sinit_lock_release>:
    927c:	f800283a 	ret

00009280 <__fp_lock_all>:
    9280:	008000b4 	movhi	r2,2
    9284:	10801c04 	addi	r2,r2,112
    9288:	11000017 	ldw	r4,0(r2)
    928c:	01400074 	movhi	r5,1
    9290:	29642c04 	addi	r5,r5,-28496
    9294:	0009bac1 	jmpi	9bac <_fwalk>

00009298 <__fp_unlock_all>:
    9298:	008000b4 	movhi	r2,2
    929c:	10801c04 	addi	r2,r2,112
    92a0:	11000017 	ldw	r4,0(r2)
    92a4:	01400074 	movhi	r5,1
    92a8:	2963c004 	addi	r5,r5,-28928
    92ac:	0009bac1 	jmpi	9bac <_fwalk>

000092b0 <_malloc_trim_r>:
    92b0:	defffb04 	addi	sp,sp,-20
    92b4:	dcc00315 	stw	r19,12(sp)
    92b8:	04c000b4 	movhi	r19,2
    92bc:	dc800215 	stw	r18,8(sp)
    92c0:	dc400115 	stw	r17,4(sp)
    92c4:	dc000015 	stw	r16,0(sp)
    92c8:	dfc00415 	stw	ra,16(sp)
    92cc:	2821883a 	mov	r16,r5
    92d0:	9cfa4604 	addi	r19,r19,-5864
    92d4:	2025883a 	mov	r18,r4
    92d8:	0019ed00 	call	19ed0 <__malloc_lock>
    92dc:	98800217 	ldw	r2,8(r19)
    92e0:	14400117 	ldw	r17,4(r2)
    92e4:	00bfff04 	movi	r2,-4
    92e8:	88a2703a 	and	r17,r17,r2
    92ec:	8c21c83a 	sub	r16,r17,r16
    92f0:	8403fbc4 	addi	r16,r16,4079
    92f4:	8020d33a 	srli	r16,r16,12
    92f8:	0083ffc4 	movi	r2,4095
    92fc:	843fffc4 	addi	r16,r16,-1
    9300:	8020933a 	slli	r16,r16,12
    9304:	1400060e 	bge	r2,r16,9320 <_malloc_trim_r+0x70>
    9308:	000b883a 	mov	r5,zero
    930c:	9009883a 	mov	r4,r18
    9310:	00031440 	call	3144 <_sbrk_r>
    9314:	98c00217 	ldw	r3,8(r19)
    9318:	1c47883a 	add	r3,r3,r17
    931c:	10c00a26 	beq	r2,r3,9348 <_malloc_trim_r+0x98>
    9320:	9009883a 	mov	r4,r18
    9324:	0019ef40 	call	19ef4 <__malloc_unlock>
    9328:	0005883a 	mov	r2,zero
    932c:	dfc00417 	ldw	ra,16(sp)
    9330:	dcc00317 	ldw	r19,12(sp)
    9334:	dc800217 	ldw	r18,8(sp)
    9338:	dc400117 	ldw	r17,4(sp)
    933c:	dc000017 	ldw	r16,0(sp)
    9340:	dec00504 	addi	sp,sp,20
    9344:	f800283a 	ret
    9348:	040bc83a 	sub	r5,zero,r16
    934c:	9009883a 	mov	r4,r18
    9350:	00031440 	call	3144 <_sbrk_r>
    9354:	00ffffc4 	movi	r3,-1
    9358:	10c00d26 	beq	r2,r3,9390 <_malloc_trim_r+0xe0>
    935c:	00c000b4 	movhi	r3,2
    9360:	18c73104 	addi	r3,r3,7364
    9364:	18800017 	ldw	r2,0(r3)
    9368:	99000217 	ldw	r4,8(r19)
    936c:	8c23c83a 	sub	r17,r17,r16
    9370:	8c400054 	ori	r17,r17,1
    9374:	1421c83a 	sub	r16,r2,r16
    9378:	24400115 	stw	r17,4(r4)
    937c:	9009883a 	mov	r4,r18
    9380:	1c000015 	stw	r16,0(r3)
    9384:	0019ef40 	call	19ef4 <__malloc_unlock>
    9388:	00800044 	movi	r2,1
    938c:	003fe706 	br	932c <__alt_mem_epcs_flash_controller_0+0xff80832c>
    9390:	000b883a 	mov	r5,zero
    9394:	9009883a 	mov	r4,r18
    9398:	00031440 	call	3144 <_sbrk_r>
    939c:	99000217 	ldw	r4,8(r19)
    93a0:	014003c4 	movi	r5,15
    93a4:	1107c83a 	sub	r3,r2,r4
    93a8:	28ffdd0e 	bge	r5,r3,9320 <__alt_mem_epcs_flash_controller_0+0xff808320>
    93ac:	014000b4 	movhi	r5,2
    93b0:	29401d04 	addi	r5,r5,116
    93b4:	29400017 	ldw	r5,0(r5)
    93b8:	18c00054 	ori	r3,r3,1
    93bc:	20c00115 	stw	r3,4(r4)
    93c0:	00c000b4 	movhi	r3,2
    93c4:	1145c83a 	sub	r2,r2,r5
    93c8:	18c73104 	addi	r3,r3,7364
    93cc:	18800015 	stw	r2,0(r3)
    93d0:	003fd306 	br	9320 <__alt_mem_epcs_flash_controller_0+0xff808320>

000093d4 <_free_r>:
    93d4:	28004126 	beq	r5,zero,94dc <_free_r+0x108>
    93d8:	defffd04 	addi	sp,sp,-12
    93dc:	dc400115 	stw	r17,4(sp)
    93e0:	dc000015 	stw	r16,0(sp)
    93e4:	2023883a 	mov	r17,r4
    93e8:	2821883a 	mov	r16,r5
    93ec:	dfc00215 	stw	ra,8(sp)
    93f0:	0019ed00 	call	19ed0 <__malloc_lock>
    93f4:	81ffff17 	ldw	r7,-4(r16)
    93f8:	00bfff84 	movi	r2,-2
    93fc:	010000b4 	movhi	r4,2
    9400:	81bffe04 	addi	r6,r16,-8
    9404:	3884703a 	and	r2,r7,r2
    9408:	213a4604 	addi	r4,r4,-5864
    940c:	308b883a 	add	r5,r6,r2
    9410:	2a400117 	ldw	r9,4(r5)
    9414:	22000217 	ldw	r8,8(r4)
    9418:	00ffff04 	movi	r3,-4
    941c:	48c6703a 	and	r3,r9,r3
    9420:	2a005726 	beq	r5,r8,9580 <_free_r+0x1ac>
    9424:	28c00115 	stw	r3,4(r5)
    9428:	39c0004c 	andi	r7,r7,1
    942c:	3800091e 	bne	r7,zero,9454 <_free_r+0x80>
    9430:	823ffe17 	ldw	r8,-8(r16)
    9434:	22400204 	addi	r9,r4,8
    9438:	320dc83a 	sub	r6,r6,r8
    943c:	31c00217 	ldw	r7,8(r6)
    9440:	1205883a 	add	r2,r2,r8
    9444:	3a406526 	beq	r7,r9,95dc <_free_r+0x208>
    9448:	32000317 	ldw	r8,12(r6)
    944c:	3a000315 	stw	r8,12(r7)
    9450:	41c00215 	stw	r7,8(r8)
    9454:	28cf883a 	add	r7,r5,r3
    9458:	39c00117 	ldw	r7,4(r7)
    945c:	39c0004c 	andi	r7,r7,1
    9460:	38003a26 	beq	r7,zero,954c <_free_r+0x178>
    9464:	10c00054 	ori	r3,r2,1
    9468:	30c00115 	stw	r3,4(r6)
    946c:	3087883a 	add	r3,r6,r2
    9470:	18800015 	stw	r2,0(r3)
    9474:	00c07fc4 	movi	r3,511
    9478:	18801936 	bltu	r3,r2,94e0 <_free_r+0x10c>
    947c:	1004d0fa 	srli	r2,r2,3
    9480:	01c00044 	movi	r7,1
    9484:	21400117 	ldw	r5,4(r4)
    9488:	10c00044 	addi	r3,r2,1
    948c:	18c7883a 	add	r3,r3,r3
    9490:	1005d0ba 	srai	r2,r2,2
    9494:	18c7883a 	add	r3,r3,r3
    9498:	18c7883a 	add	r3,r3,r3
    949c:	1907883a 	add	r3,r3,r4
    94a0:	3884983a 	sll	r2,r7,r2
    94a4:	19c00017 	ldw	r7,0(r3)
    94a8:	1a3ffe04 	addi	r8,r3,-8
    94ac:	1144b03a 	or	r2,r2,r5
    94b0:	32000315 	stw	r8,12(r6)
    94b4:	31c00215 	stw	r7,8(r6)
    94b8:	20800115 	stw	r2,4(r4)
    94bc:	19800015 	stw	r6,0(r3)
    94c0:	39800315 	stw	r6,12(r7)
    94c4:	8809883a 	mov	r4,r17
    94c8:	dfc00217 	ldw	ra,8(sp)
    94cc:	dc400117 	ldw	r17,4(sp)
    94d0:	dc000017 	ldw	r16,0(sp)
    94d4:	dec00304 	addi	sp,sp,12
    94d8:	0019ef41 	jmpi	19ef4 <__malloc_unlock>
    94dc:	f800283a 	ret
    94e0:	100ad27a 	srli	r5,r2,9
    94e4:	00c00104 	movi	r3,4
    94e8:	19404a36 	bltu	r3,r5,9614 <_free_r+0x240>
    94ec:	100ad1ba 	srli	r5,r2,6
    94f0:	28c00e44 	addi	r3,r5,57
    94f4:	18c7883a 	add	r3,r3,r3
    94f8:	29400e04 	addi	r5,r5,56
    94fc:	18c7883a 	add	r3,r3,r3
    9500:	18c7883a 	add	r3,r3,r3
    9504:	1909883a 	add	r4,r3,r4
    9508:	20c00017 	ldw	r3,0(r4)
    950c:	01c000b4 	movhi	r7,2
    9510:	213ffe04 	addi	r4,r4,-8
    9514:	39fa4604 	addi	r7,r7,-5864
    9518:	20c04426 	beq	r4,r3,962c <_free_r+0x258>
    951c:	01ffff04 	movi	r7,-4
    9520:	19400117 	ldw	r5,4(r3)
    9524:	29ca703a 	and	r5,r5,r7
    9528:	1140022e 	bgeu	r2,r5,9534 <_free_r+0x160>
    952c:	18c00217 	ldw	r3,8(r3)
    9530:	20fffb1e 	bne	r4,r3,9520 <__alt_mem_epcs_flash_controller_0+0xff808520>
    9534:	19000317 	ldw	r4,12(r3)
    9538:	31000315 	stw	r4,12(r6)
    953c:	30c00215 	stw	r3,8(r6)
    9540:	21800215 	stw	r6,8(r4)
    9544:	19800315 	stw	r6,12(r3)
    9548:	003fde06 	br	94c4 <__alt_mem_epcs_flash_controller_0+0xff8084c4>
    954c:	29c00217 	ldw	r7,8(r5)
    9550:	10c5883a 	add	r2,r2,r3
    9554:	00c000b4 	movhi	r3,2
    9558:	18fa4804 	addi	r3,r3,-5856
    955c:	38c03b26 	beq	r7,r3,964c <_free_r+0x278>
    9560:	2a000317 	ldw	r8,12(r5)
    9564:	11400054 	ori	r5,r2,1
    9568:	3087883a 	add	r3,r6,r2
    956c:	3a000315 	stw	r8,12(r7)
    9570:	41c00215 	stw	r7,8(r8)
    9574:	31400115 	stw	r5,4(r6)
    9578:	18800015 	stw	r2,0(r3)
    957c:	003fbd06 	br	9474 <__alt_mem_epcs_flash_controller_0+0xff808474>
    9580:	39c0004c 	andi	r7,r7,1
    9584:	10c5883a 	add	r2,r2,r3
    9588:	3800071e 	bne	r7,zero,95a8 <_free_r+0x1d4>
    958c:	81fffe17 	ldw	r7,-8(r16)
    9590:	31cdc83a 	sub	r6,r6,r7
    9594:	30c00317 	ldw	r3,12(r6)
    9598:	31400217 	ldw	r5,8(r6)
    959c:	11c5883a 	add	r2,r2,r7
    95a0:	28c00315 	stw	r3,12(r5)
    95a4:	19400215 	stw	r5,8(r3)
    95a8:	10c00054 	ori	r3,r2,1
    95ac:	30c00115 	stw	r3,4(r6)
    95b0:	00c000b4 	movhi	r3,2
    95b4:	18c01e04 	addi	r3,r3,120
    95b8:	18c00017 	ldw	r3,0(r3)
    95bc:	21800215 	stw	r6,8(r4)
    95c0:	10ffc036 	bltu	r2,r3,94c4 <__alt_mem_epcs_flash_controller_0+0xff8084c4>
    95c4:	008000b4 	movhi	r2,2
    95c8:	10872504 	addi	r2,r2,7316
    95cc:	11400017 	ldw	r5,0(r2)
    95d0:	8809883a 	mov	r4,r17
    95d4:	00092b00 	call	92b0 <_malloc_trim_r>
    95d8:	003fba06 	br	94c4 <__alt_mem_epcs_flash_controller_0+0xff8084c4>
    95dc:	28c9883a 	add	r4,r5,r3
    95e0:	21000117 	ldw	r4,4(r4)
    95e4:	2100004c 	andi	r4,r4,1
    95e8:	2000391e 	bne	r4,zero,96d0 <_free_r+0x2fc>
    95ec:	29c00217 	ldw	r7,8(r5)
    95f0:	29000317 	ldw	r4,12(r5)
    95f4:	1885883a 	add	r2,r3,r2
    95f8:	10c00054 	ori	r3,r2,1
    95fc:	39000315 	stw	r4,12(r7)
    9600:	21c00215 	stw	r7,8(r4)
    9604:	30c00115 	stw	r3,4(r6)
    9608:	308d883a 	add	r6,r6,r2
    960c:	30800015 	stw	r2,0(r6)
    9610:	003fac06 	br	94c4 <__alt_mem_epcs_flash_controller_0+0xff8084c4>
    9614:	00c00504 	movi	r3,20
    9618:	19401536 	bltu	r3,r5,9670 <_free_r+0x29c>
    961c:	28c01704 	addi	r3,r5,92
    9620:	18c7883a 	add	r3,r3,r3
    9624:	294016c4 	addi	r5,r5,91
    9628:	003fb406 	br	94fc <__alt_mem_epcs_flash_controller_0+0xff8084fc>
    962c:	280bd0ba 	srai	r5,r5,2
    9630:	00c00044 	movi	r3,1
    9634:	38800117 	ldw	r2,4(r7)
    9638:	194a983a 	sll	r5,r3,r5
    963c:	2007883a 	mov	r3,r4
    9640:	2884b03a 	or	r2,r5,r2
    9644:	38800115 	stw	r2,4(r7)
    9648:	003fbb06 	br	9538 <__alt_mem_epcs_flash_controller_0+0xff808538>
    964c:	21800515 	stw	r6,20(r4)
    9650:	21800415 	stw	r6,16(r4)
    9654:	10c00054 	ori	r3,r2,1
    9658:	31c00315 	stw	r7,12(r6)
    965c:	31c00215 	stw	r7,8(r6)
    9660:	30c00115 	stw	r3,4(r6)
    9664:	308d883a 	add	r6,r6,r2
    9668:	30800015 	stw	r2,0(r6)
    966c:	003f9506 	br	94c4 <__alt_mem_epcs_flash_controller_0+0xff8084c4>
    9670:	00c01504 	movi	r3,84
    9674:	19400536 	bltu	r3,r5,968c <_free_r+0x2b8>
    9678:	100ad33a 	srli	r5,r2,12
    967c:	28c01bc4 	addi	r3,r5,111
    9680:	18c7883a 	add	r3,r3,r3
    9684:	29401b84 	addi	r5,r5,110
    9688:	003f9c06 	br	94fc <__alt_mem_epcs_flash_controller_0+0xff8084fc>
    968c:	00c05504 	movi	r3,340
    9690:	19400536 	bltu	r3,r5,96a8 <_free_r+0x2d4>
    9694:	100ad3fa 	srli	r5,r2,15
    9698:	28c01e04 	addi	r3,r5,120
    969c:	18c7883a 	add	r3,r3,r3
    96a0:	29401dc4 	addi	r5,r5,119
    96a4:	003f9506 	br	94fc <__alt_mem_epcs_flash_controller_0+0xff8084fc>
    96a8:	00c15504 	movi	r3,1364
    96ac:	19400536 	bltu	r3,r5,96c4 <_free_r+0x2f0>
    96b0:	100ad4ba 	srli	r5,r2,18
    96b4:	28c01f44 	addi	r3,r5,125
    96b8:	18c7883a 	add	r3,r3,r3
    96bc:	29401f04 	addi	r5,r5,124
    96c0:	003f8e06 	br	94fc <__alt_mem_epcs_flash_controller_0+0xff8084fc>
    96c4:	00c03f84 	movi	r3,254
    96c8:	01401f84 	movi	r5,126
    96cc:	003f8b06 	br	94fc <__alt_mem_epcs_flash_controller_0+0xff8084fc>
    96d0:	10c00054 	ori	r3,r2,1
    96d4:	30c00115 	stw	r3,4(r6)
    96d8:	308d883a 	add	r6,r6,r2
    96dc:	30800015 	stw	r2,0(r6)
    96e0:	003f7806 	br	94c4 <__alt_mem_epcs_flash_controller_0+0xff8084c4>

000096e4 <__sfvwrite_r>:
    96e4:	30800217 	ldw	r2,8(r6)
    96e8:	10006726 	beq	r2,zero,9888 <__sfvwrite_r+0x1a4>
    96ec:	28c0030b 	ldhu	r3,12(r5)
    96f0:	defff404 	addi	sp,sp,-48
    96f4:	dd400715 	stw	r21,28(sp)
    96f8:	dd000615 	stw	r20,24(sp)
    96fc:	dc000215 	stw	r16,8(sp)
    9700:	dfc00b15 	stw	ra,44(sp)
    9704:	df000a15 	stw	fp,40(sp)
    9708:	ddc00915 	stw	r23,36(sp)
    970c:	dd800815 	stw	r22,32(sp)
    9710:	dcc00515 	stw	r19,20(sp)
    9714:	dc800415 	stw	r18,16(sp)
    9718:	dc400315 	stw	r17,12(sp)
    971c:	1880020c 	andi	r2,r3,8
    9720:	2821883a 	mov	r16,r5
    9724:	202b883a 	mov	r21,r4
    9728:	3029883a 	mov	r20,r6
    972c:	10002726 	beq	r2,zero,97cc <__sfvwrite_r+0xe8>
    9730:	28800417 	ldw	r2,16(r5)
    9734:	10002526 	beq	r2,zero,97cc <__sfvwrite_r+0xe8>
    9738:	1880008c 	andi	r2,r3,2
    973c:	a4400017 	ldw	r17,0(r20)
    9740:	10002a26 	beq	r2,zero,97ec <__sfvwrite_r+0x108>
    9744:	05a00034 	movhi	r22,32768
    9748:	0027883a 	mov	r19,zero
    974c:	0025883a 	mov	r18,zero
    9750:	b5bf0004 	addi	r22,r22,-1024
    9754:	980d883a 	mov	r6,r19
    9758:	a809883a 	mov	r4,r21
    975c:	90004626 	beq	r18,zero,9878 <__sfvwrite_r+0x194>
    9760:	900f883a 	mov	r7,r18
    9764:	b480022e 	bgeu	r22,r18,9770 <__sfvwrite_r+0x8c>
    9768:	01e00034 	movhi	r7,32768
    976c:	39ff0004 	addi	r7,r7,-1024
    9770:	80800917 	ldw	r2,36(r16)
    9774:	81400717 	ldw	r5,28(r16)
    9778:	103ee83a 	callr	r2
    977c:	00805a0e 	bge	zero,r2,98e8 <__sfvwrite_r+0x204>
    9780:	a0c00217 	ldw	r3,8(r20)
    9784:	98a7883a 	add	r19,r19,r2
    9788:	90a5c83a 	sub	r18,r18,r2
    978c:	1885c83a 	sub	r2,r3,r2
    9790:	a0800215 	stw	r2,8(r20)
    9794:	103fef1e 	bne	r2,zero,9754 <__alt_mem_epcs_flash_controller_0+0xff808754>
    9798:	0005883a 	mov	r2,zero
    979c:	dfc00b17 	ldw	ra,44(sp)
    97a0:	df000a17 	ldw	fp,40(sp)
    97a4:	ddc00917 	ldw	r23,36(sp)
    97a8:	dd800817 	ldw	r22,32(sp)
    97ac:	dd400717 	ldw	r21,28(sp)
    97b0:	dd000617 	ldw	r20,24(sp)
    97b4:	dcc00517 	ldw	r19,20(sp)
    97b8:	dc800417 	ldw	r18,16(sp)
    97bc:	dc400317 	ldw	r17,12(sp)
    97c0:	dc000217 	ldw	r16,8(sp)
    97c4:	dec00c04 	addi	sp,sp,48
    97c8:	f800283a 	ret
    97cc:	800b883a 	mov	r5,r16
    97d0:	a809883a 	mov	r4,r21
    97d4:	00072000 	call	7200 <__swsetup_r>
    97d8:	1000ee1e 	bne	r2,zero,9b94 <__sfvwrite_r+0x4b0>
    97dc:	80c0030b 	ldhu	r3,12(r16)
    97e0:	a4400017 	ldw	r17,0(r20)
    97e4:	1880008c 	andi	r2,r3,2
    97e8:	103fd61e 	bne	r2,zero,9744 <__alt_mem_epcs_flash_controller_0+0xff808744>
    97ec:	1880004c 	andi	r2,r3,1
    97f0:	1000421e 	bne	r2,zero,98fc <__sfvwrite_r+0x218>
    97f4:	0039883a 	mov	fp,zero
    97f8:	0025883a 	mov	r18,zero
    97fc:	90001a26 	beq	r18,zero,9868 <__sfvwrite_r+0x184>
    9800:	1880800c 	andi	r2,r3,512
    9804:	84c00217 	ldw	r19,8(r16)
    9808:	10002126 	beq	r2,zero,9890 <__sfvwrite_r+0x1ac>
    980c:	982f883a 	mov	r23,r19
    9810:	94c09636 	bltu	r18,r19,9a6c <__sfvwrite_r+0x388>
    9814:	1881200c 	andi	r2,r3,1152
    9818:	1000a11e 	bne	r2,zero,9aa0 <__sfvwrite_r+0x3bc>
    981c:	81000017 	ldw	r4,0(r16)
    9820:	b80d883a 	mov	r6,r23
    9824:	e00b883a 	mov	r5,fp
    9828:	000a3640 	call	a364 <memmove>
    982c:	80c00217 	ldw	r3,8(r16)
    9830:	81000017 	ldw	r4,0(r16)
    9834:	9005883a 	mov	r2,r18
    9838:	1ce7c83a 	sub	r19,r3,r19
    983c:	25cf883a 	add	r7,r4,r23
    9840:	84c00215 	stw	r19,8(r16)
    9844:	81c00015 	stw	r7,0(r16)
    9848:	a0c00217 	ldw	r3,8(r20)
    984c:	e0b9883a 	add	fp,fp,r2
    9850:	90a5c83a 	sub	r18,r18,r2
    9854:	18a7c83a 	sub	r19,r3,r2
    9858:	a4c00215 	stw	r19,8(r20)
    985c:	983fce26 	beq	r19,zero,9798 <__alt_mem_epcs_flash_controller_0+0xff808798>
    9860:	80c0030b 	ldhu	r3,12(r16)
    9864:	903fe61e 	bne	r18,zero,9800 <__alt_mem_epcs_flash_controller_0+0xff808800>
    9868:	8f000017 	ldw	fp,0(r17)
    986c:	8c800117 	ldw	r18,4(r17)
    9870:	8c400204 	addi	r17,r17,8
    9874:	003fe106 	br	97fc <__alt_mem_epcs_flash_controller_0+0xff8087fc>
    9878:	8cc00017 	ldw	r19,0(r17)
    987c:	8c800117 	ldw	r18,4(r17)
    9880:	8c400204 	addi	r17,r17,8
    9884:	003fb306 	br	9754 <__alt_mem_epcs_flash_controller_0+0xff808754>
    9888:	0005883a 	mov	r2,zero
    988c:	f800283a 	ret
    9890:	81000017 	ldw	r4,0(r16)
    9894:	80800417 	ldw	r2,16(r16)
    9898:	11005a36 	bltu	r2,r4,9a04 <__sfvwrite_r+0x320>
    989c:	85c00517 	ldw	r23,20(r16)
    98a0:	95c05836 	bltu	r18,r23,9a04 <__sfvwrite_r+0x320>
    98a4:	00a00034 	movhi	r2,32768
    98a8:	10bfffc4 	addi	r2,r2,-1
    98ac:	9009883a 	mov	r4,r18
    98b0:	1480012e 	bgeu	r2,r18,98b8 <__sfvwrite_r+0x1d4>
    98b4:	1009883a 	mov	r4,r2
    98b8:	b80b883a 	mov	r5,r23
    98bc:	00022900 	call	2290 <__divsi3>
    98c0:	b80b883a 	mov	r5,r23
    98c4:	1009883a 	mov	r4,r2
    98c8:	00024440 	call	2444 <__mulsi3>
    98cc:	81400717 	ldw	r5,28(r16)
    98d0:	80c00917 	ldw	r3,36(r16)
    98d4:	100f883a 	mov	r7,r2
    98d8:	e00d883a 	mov	r6,fp
    98dc:	a809883a 	mov	r4,r21
    98e0:	183ee83a 	callr	r3
    98e4:	00bfd816 	blt	zero,r2,9848 <__alt_mem_epcs_flash_controller_0+0xff808848>
    98e8:	8080030b 	ldhu	r2,12(r16)
    98ec:	10801014 	ori	r2,r2,64
    98f0:	8080030d 	sth	r2,12(r16)
    98f4:	00bfffc4 	movi	r2,-1
    98f8:	003fa806 	br	979c <__alt_mem_epcs_flash_controller_0+0xff80879c>
    98fc:	0027883a 	mov	r19,zero
    9900:	0011883a 	mov	r8,zero
    9904:	0039883a 	mov	fp,zero
    9908:	0025883a 	mov	r18,zero
    990c:	90001f26 	beq	r18,zero,998c <__sfvwrite_r+0x2a8>
    9910:	40005a26 	beq	r8,zero,9a7c <__sfvwrite_r+0x398>
    9914:	982d883a 	mov	r22,r19
    9918:	94c0012e 	bgeu	r18,r19,9920 <__sfvwrite_r+0x23c>
    991c:	902d883a 	mov	r22,r18
    9920:	81000017 	ldw	r4,0(r16)
    9924:	80800417 	ldw	r2,16(r16)
    9928:	b02f883a 	mov	r23,r22
    992c:	81c00517 	ldw	r7,20(r16)
    9930:	1100032e 	bgeu	r2,r4,9940 <__sfvwrite_r+0x25c>
    9934:	80c00217 	ldw	r3,8(r16)
    9938:	38c7883a 	add	r3,r7,r3
    993c:	1d801816 	blt	r3,r22,99a0 <__sfvwrite_r+0x2bc>
    9940:	b1c03e16 	blt	r22,r7,9a3c <__sfvwrite_r+0x358>
    9944:	80800917 	ldw	r2,36(r16)
    9948:	81400717 	ldw	r5,28(r16)
    994c:	e00d883a 	mov	r6,fp
    9950:	da000115 	stw	r8,4(sp)
    9954:	a809883a 	mov	r4,r21
    9958:	103ee83a 	callr	r2
    995c:	102f883a 	mov	r23,r2
    9960:	da000117 	ldw	r8,4(sp)
    9964:	00bfe00e 	bge	zero,r2,98e8 <__alt_mem_epcs_flash_controller_0+0xff8088e8>
    9968:	9de7c83a 	sub	r19,r19,r23
    996c:	98001f26 	beq	r19,zero,99ec <__sfvwrite_r+0x308>
    9970:	a0800217 	ldw	r2,8(r20)
    9974:	e5f9883a 	add	fp,fp,r23
    9978:	95e5c83a 	sub	r18,r18,r23
    997c:	15efc83a 	sub	r23,r2,r23
    9980:	a5c00215 	stw	r23,8(r20)
    9984:	b83f8426 	beq	r23,zero,9798 <__alt_mem_epcs_flash_controller_0+0xff808798>
    9988:	903fe11e 	bne	r18,zero,9910 <__alt_mem_epcs_flash_controller_0+0xff808910>
    998c:	8f000017 	ldw	fp,0(r17)
    9990:	8c800117 	ldw	r18,4(r17)
    9994:	0011883a 	mov	r8,zero
    9998:	8c400204 	addi	r17,r17,8
    999c:	003fdb06 	br	990c <__alt_mem_epcs_flash_controller_0+0xff80890c>
    99a0:	180d883a 	mov	r6,r3
    99a4:	e00b883a 	mov	r5,fp
    99a8:	da000115 	stw	r8,4(sp)
    99ac:	d8c00015 	stw	r3,0(sp)
    99b0:	000a3640 	call	a364 <memmove>
    99b4:	d8c00017 	ldw	r3,0(sp)
    99b8:	80800017 	ldw	r2,0(r16)
    99bc:	800b883a 	mov	r5,r16
    99c0:	a809883a 	mov	r4,r21
    99c4:	10c5883a 	add	r2,r2,r3
    99c8:	80800015 	stw	r2,0(r16)
    99cc:	d8c00015 	stw	r3,0(sp)
    99d0:	0008e740 	call	8e74 <_fflush_r>
    99d4:	d8c00017 	ldw	r3,0(sp)
    99d8:	da000117 	ldw	r8,4(sp)
    99dc:	103fc21e 	bne	r2,zero,98e8 <__alt_mem_epcs_flash_controller_0+0xff8088e8>
    99e0:	182f883a 	mov	r23,r3
    99e4:	9de7c83a 	sub	r19,r19,r23
    99e8:	983fe11e 	bne	r19,zero,9970 <__alt_mem_epcs_flash_controller_0+0xff808970>
    99ec:	800b883a 	mov	r5,r16
    99f0:	a809883a 	mov	r4,r21
    99f4:	0008e740 	call	8e74 <_fflush_r>
    99f8:	103fbb1e 	bne	r2,zero,98e8 <__alt_mem_epcs_flash_controller_0+0xff8088e8>
    99fc:	0011883a 	mov	r8,zero
    9a00:	003fdb06 	br	9970 <__alt_mem_epcs_flash_controller_0+0xff808970>
    9a04:	94c0012e 	bgeu	r18,r19,9a0c <__sfvwrite_r+0x328>
    9a08:	9027883a 	mov	r19,r18
    9a0c:	980d883a 	mov	r6,r19
    9a10:	e00b883a 	mov	r5,fp
    9a14:	000a3640 	call	a364 <memmove>
    9a18:	80800217 	ldw	r2,8(r16)
    9a1c:	80c00017 	ldw	r3,0(r16)
    9a20:	14c5c83a 	sub	r2,r2,r19
    9a24:	1cc7883a 	add	r3,r3,r19
    9a28:	80800215 	stw	r2,8(r16)
    9a2c:	80c00015 	stw	r3,0(r16)
    9a30:	10004326 	beq	r2,zero,9b40 <__sfvwrite_r+0x45c>
    9a34:	9805883a 	mov	r2,r19
    9a38:	003f8306 	br	9848 <__alt_mem_epcs_flash_controller_0+0xff808848>
    9a3c:	b00d883a 	mov	r6,r22
    9a40:	e00b883a 	mov	r5,fp
    9a44:	da000115 	stw	r8,4(sp)
    9a48:	000a3640 	call	a364 <memmove>
    9a4c:	80800217 	ldw	r2,8(r16)
    9a50:	80c00017 	ldw	r3,0(r16)
    9a54:	da000117 	ldw	r8,4(sp)
    9a58:	1585c83a 	sub	r2,r2,r22
    9a5c:	1dad883a 	add	r22,r3,r22
    9a60:	80800215 	stw	r2,8(r16)
    9a64:	85800015 	stw	r22,0(r16)
    9a68:	003fbf06 	br	9968 <__alt_mem_epcs_flash_controller_0+0xff808968>
    9a6c:	81000017 	ldw	r4,0(r16)
    9a70:	9027883a 	mov	r19,r18
    9a74:	902f883a 	mov	r23,r18
    9a78:	003f6906 	br	9820 <__alt_mem_epcs_flash_controller_0+0xff808820>
    9a7c:	900d883a 	mov	r6,r18
    9a80:	01400284 	movi	r5,10
    9a84:	e009883a 	mov	r4,fp
    9a88:	000a2800 	call	a280 <memchr>
    9a8c:	10003e26 	beq	r2,zero,9b88 <__sfvwrite_r+0x4a4>
    9a90:	10800044 	addi	r2,r2,1
    9a94:	1727c83a 	sub	r19,r2,fp
    9a98:	02000044 	movi	r8,1
    9a9c:	003f9d06 	br	9914 <__alt_mem_epcs_flash_controller_0+0xff808914>
    9aa0:	80800517 	ldw	r2,20(r16)
    9aa4:	81400417 	ldw	r5,16(r16)
    9aa8:	81c00017 	ldw	r7,0(r16)
    9aac:	10a7883a 	add	r19,r2,r2
    9ab0:	9885883a 	add	r2,r19,r2
    9ab4:	1026d7fa 	srli	r19,r2,31
    9ab8:	396dc83a 	sub	r22,r7,r5
    9abc:	b1000044 	addi	r4,r22,1
    9ac0:	9885883a 	add	r2,r19,r2
    9ac4:	1027d07a 	srai	r19,r2,1
    9ac8:	2485883a 	add	r2,r4,r18
    9acc:	980d883a 	mov	r6,r19
    9ad0:	9880022e 	bgeu	r19,r2,9adc <__sfvwrite_r+0x3f8>
    9ad4:	1027883a 	mov	r19,r2
    9ad8:	100d883a 	mov	r6,r2
    9adc:	18c1000c 	andi	r3,r3,1024
    9ae0:	18001c26 	beq	r3,zero,9b54 <__sfvwrite_r+0x470>
    9ae4:	300b883a 	mov	r5,r6
    9ae8:	a809883a 	mov	r4,r21
    9aec:	000258c0 	call	258c <_malloc_r>
    9af0:	102f883a 	mov	r23,r2
    9af4:	10002926 	beq	r2,zero,9b9c <__sfvwrite_r+0x4b8>
    9af8:	81400417 	ldw	r5,16(r16)
    9afc:	b00d883a 	mov	r6,r22
    9b00:	1009883a 	mov	r4,r2
    9b04:	0002e140 	call	2e14 <memcpy>
    9b08:	8080030b 	ldhu	r2,12(r16)
    9b0c:	00fedfc4 	movi	r3,-1153
    9b10:	10c4703a 	and	r2,r2,r3
    9b14:	10802014 	ori	r2,r2,128
    9b18:	8080030d 	sth	r2,12(r16)
    9b1c:	bd89883a 	add	r4,r23,r22
    9b20:	9d8fc83a 	sub	r7,r19,r22
    9b24:	85c00415 	stw	r23,16(r16)
    9b28:	84c00515 	stw	r19,20(r16)
    9b2c:	81000015 	stw	r4,0(r16)
    9b30:	9027883a 	mov	r19,r18
    9b34:	81c00215 	stw	r7,8(r16)
    9b38:	902f883a 	mov	r23,r18
    9b3c:	003f3806 	br	9820 <__alt_mem_epcs_flash_controller_0+0xff808820>
    9b40:	800b883a 	mov	r5,r16
    9b44:	a809883a 	mov	r4,r21
    9b48:	0008e740 	call	8e74 <_fflush_r>
    9b4c:	103fb926 	beq	r2,zero,9a34 <__alt_mem_epcs_flash_controller_0+0xff808a34>
    9b50:	003f6506 	br	98e8 <__alt_mem_epcs_flash_controller_0+0xff8088e8>
    9b54:	a809883a 	mov	r4,r21
    9b58:	000b8680 	call	b868 <_realloc_r>
    9b5c:	102f883a 	mov	r23,r2
    9b60:	103fee1e 	bne	r2,zero,9b1c <__alt_mem_epcs_flash_controller_0+0xff808b1c>
    9b64:	81400417 	ldw	r5,16(r16)
    9b68:	a809883a 	mov	r4,r21
    9b6c:	00093d40 	call	93d4 <_free_r>
    9b70:	8080030b 	ldhu	r2,12(r16)
    9b74:	00ffdfc4 	movi	r3,-129
    9b78:	1884703a 	and	r2,r3,r2
    9b7c:	00c00304 	movi	r3,12
    9b80:	a8c00015 	stw	r3,0(r21)
    9b84:	003f5906 	br	98ec <__alt_mem_epcs_flash_controller_0+0xff8088ec>
    9b88:	94c00044 	addi	r19,r18,1
    9b8c:	02000044 	movi	r8,1
    9b90:	003f6006 	br	9914 <__alt_mem_epcs_flash_controller_0+0xff808914>
    9b94:	00bfffc4 	movi	r2,-1
    9b98:	003f0006 	br	979c <__alt_mem_epcs_flash_controller_0+0xff80879c>
    9b9c:	00800304 	movi	r2,12
    9ba0:	a8800015 	stw	r2,0(r21)
    9ba4:	8080030b 	ldhu	r2,12(r16)
    9ba8:	003f5006 	br	98ec <__alt_mem_epcs_flash_controller_0+0xff8088ec>

00009bac <_fwalk>:
    9bac:	defff704 	addi	sp,sp,-36
    9bb0:	dd000415 	stw	r20,16(sp)
    9bb4:	dfc00815 	stw	ra,32(sp)
    9bb8:	ddc00715 	stw	r23,28(sp)
    9bbc:	dd800615 	stw	r22,24(sp)
    9bc0:	dd400515 	stw	r21,20(sp)
    9bc4:	dcc00315 	stw	r19,12(sp)
    9bc8:	dc800215 	stw	r18,8(sp)
    9bcc:	dc400115 	stw	r17,4(sp)
    9bd0:	dc000015 	stw	r16,0(sp)
    9bd4:	2500b804 	addi	r20,r4,736
    9bd8:	a0002326 	beq	r20,zero,9c68 <_fwalk+0xbc>
    9bdc:	282b883a 	mov	r21,r5
    9be0:	002f883a 	mov	r23,zero
    9be4:	05800044 	movi	r22,1
    9be8:	04ffffc4 	movi	r19,-1
    9bec:	a4400117 	ldw	r17,4(r20)
    9bf0:	a4800217 	ldw	r18,8(r20)
    9bf4:	8c7fffc4 	addi	r17,r17,-1
    9bf8:	88000d16 	blt	r17,zero,9c30 <_fwalk+0x84>
    9bfc:	94000304 	addi	r16,r18,12
    9c00:	94800384 	addi	r18,r18,14
    9c04:	8080000b 	ldhu	r2,0(r16)
    9c08:	8c7fffc4 	addi	r17,r17,-1
    9c0c:	813ffd04 	addi	r4,r16,-12
    9c10:	b080042e 	bgeu	r22,r2,9c24 <_fwalk+0x78>
    9c14:	9080000f 	ldh	r2,0(r18)
    9c18:	14c00226 	beq	r2,r19,9c24 <_fwalk+0x78>
    9c1c:	a83ee83a 	callr	r21
    9c20:	b8aeb03a 	or	r23,r23,r2
    9c24:	84001a04 	addi	r16,r16,104
    9c28:	94801a04 	addi	r18,r18,104
    9c2c:	8cfff51e 	bne	r17,r19,9c04 <__alt_mem_epcs_flash_controller_0+0xff808c04>
    9c30:	a5000017 	ldw	r20,0(r20)
    9c34:	a03fed1e 	bne	r20,zero,9bec <__alt_mem_epcs_flash_controller_0+0xff808bec>
    9c38:	b805883a 	mov	r2,r23
    9c3c:	dfc00817 	ldw	ra,32(sp)
    9c40:	ddc00717 	ldw	r23,28(sp)
    9c44:	dd800617 	ldw	r22,24(sp)
    9c48:	dd400517 	ldw	r21,20(sp)
    9c4c:	dd000417 	ldw	r20,16(sp)
    9c50:	dcc00317 	ldw	r19,12(sp)
    9c54:	dc800217 	ldw	r18,8(sp)
    9c58:	dc400117 	ldw	r17,4(sp)
    9c5c:	dc000017 	ldw	r16,0(sp)
    9c60:	dec00904 	addi	sp,sp,36
    9c64:	f800283a 	ret
    9c68:	002f883a 	mov	r23,zero
    9c6c:	003ff206 	br	9c38 <__alt_mem_epcs_flash_controller_0+0xff808c38>

00009c70 <_fwalk_reent>:
    9c70:	defff704 	addi	sp,sp,-36
    9c74:	dd000415 	stw	r20,16(sp)
    9c78:	dfc00815 	stw	ra,32(sp)
    9c7c:	ddc00715 	stw	r23,28(sp)
    9c80:	dd800615 	stw	r22,24(sp)
    9c84:	dd400515 	stw	r21,20(sp)
    9c88:	dcc00315 	stw	r19,12(sp)
    9c8c:	dc800215 	stw	r18,8(sp)
    9c90:	dc400115 	stw	r17,4(sp)
    9c94:	dc000015 	stw	r16,0(sp)
    9c98:	2500b804 	addi	r20,r4,736
    9c9c:	a0002326 	beq	r20,zero,9d2c <_fwalk_reent+0xbc>
    9ca0:	282b883a 	mov	r21,r5
    9ca4:	2027883a 	mov	r19,r4
    9ca8:	002f883a 	mov	r23,zero
    9cac:	05800044 	movi	r22,1
    9cb0:	04bfffc4 	movi	r18,-1
    9cb4:	a4400117 	ldw	r17,4(r20)
    9cb8:	a4000217 	ldw	r16,8(r20)
    9cbc:	8c7fffc4 	addi	r17,r17,-1
    9cc0:	88000c16 	blt	r17,zero,9cf4 <_fwalk_reent+0x84>
    9cc4:	84000304 	addi	r16,r16,12
    9cc8:	8080000b 	ldhu	r2,0(r16)
    9ccc:	8c7fffc4 	addi	r17,r17,-1
    9cd0:	817ffd04 	addi	r5,r16,-12
    9cd4:	b080052e 	bgeu	r22,r2,9cec <_fwalk_reent+0x7c>
    9cd8:	8080008f 	ldh	r2,2(r16)
    9cdc:	9809883a 	mov	r4,r19
    9ce0:	14800226 	beq	r2,r18,9cec <_fwalk_reent+0x7c>
    9ce4:	a83ee83a 	callr	r21
    9ce8:	b8aeb03a 	or	r23,r23,r2
    9cec:	84001a04 	addi	r16,r16,104
    9cf0:	8cbff51e 	bne	r17,r18,9cc8 <__alt_mem_epcs_flash_controller_0+0xff808cc8>
    9cf4:	a5000017 	ldw	r20,0(r20)
    9cf8:	a03fee1e 	bne	r20,zero,9cb4 <__alt_mem_epcs_flash_controller_0+0xff808cb4>
    9cfc:	b805883a 	mov	r2,r23
    9d00:	dfc00817 	ldw	ra,32(sp)
    9d04:	ddc00717 	ldw	r23,28(sp)
    9d08:	dd800617 	ldw	r22,24(sp)
    9d0c:	dd400517 	ldw	r21,20(sp)
    9d10:	dd000417 	ldw	r20,16(sp)
    9d14:	dcc00317 	ldw	r19,12(sp)
    9d18:	dc800217 	ldw	r18,8(sp)
    9d1c:	dc400117 	ldw	r17,4(sp)
    9d20:	dc000017 	ldw	r16,0(sp)
    9d24:	dec00904 	addi	sp,sp,36
    9d28:	f800283a 	ret
    9d2c:	002f883a 	mov	r23,zero
    9d30:	003ff206 	br	9cfc <__alt_mem_epcs_flash_controller_0+0xff808cfc>

00009d34 <iswspace>:
    9d34:	00803fc4 	movi	r2,255
    9d38:	11000836 	bltu	r2,r4,9d5c <iswspace+0x28>
    9d3c:	008000b4 	movhi	r2,2
    9d40:	10801f04 	addi	r2,r2,124
    9d44:	10800017 	ldw	r2,0(r2)
    9d48:	1109883a 	add	r4,r2,r4
    9d4c:	20800043 	ldbu	r2,1(r4)
    9d50:	1080020c 	andi	r2,r2,8
    9d54:	10803fcc 	andi	r2,r2,255
    9d58:	f800283a 	ret
    9d5c:	0005883a 	mov	r2,zero
    9d60:	f800283a 	ret

00009d64 <_setlocale_r>:
    9d64:	30001b26 	beq	r6,zero,9dd4 <_setlocale_r+0x70>
    9d68:	014000b4 	movhi	r5,2
    9d6c:	defffe04 	addi	sp,sp,-8
    9d70:	29782304 	addi	r5,r5,-8052
    9d74:	3009883a 	mov	r4,r6
    9d78:	dc000015 	stw	r16,0(sp)
    9d7c:	dfc00115 	stw	ra,4(sp)
    9d80:	3021883a 	mov	r16,r6
    9d84:	000c1cc0 	call	c1cc <strcmp>
    9d88:	1000061e 	bne	r2,zero,9da4 <_setlocale_r+0x40>
    9d8c:	008000b4 	movhi	r2,2
    9d90:	10b75a04 	addi	r2,r2,-8856
    9d94:	dfc00117 	ldw	ra,4(sp)
    9d98:	dc000017 	ldw	r16,0(sp)
    9d9c:	dec00204 	addi	sp,sp,8
    9da0:	f800283a 	ret
    9da4:	014000b4 	movhi	r5,2
    9da8:	29775a04 	addi	r5,r5,-8856
    9dac:	8009883a 	mov	r4,r16
    9db0:	000c1cc0 	call	c1cc <strcmp>
    9db4:	103ff526 	beq	r2,zero,9d8c <__alt_mem_epcs_flash_controller_0+0xff808d8c>
    9db8:	014000b4 	movhi	r5,2
    9dbc:	29776e04 	addi	r5,r5,-8776
    9dc0:	8009883a 	mov	r4,r16
    9dc4:	000c1cc0 	call	c1cc <strcmp>
    9dc8:	103ff026 	beq	r2,zero,9d8c <__alt_mem_epcs_flash_controller_0+0xff808d8c>
    9dcc:	0005883a 	mov	r2,zero
    9dd0:	003ff006 	br	9d94 <__alt_mem_epcs_flash_controller_0+0xff808d94>
    9dd4:	008000b4 	movhi	r2,2
    9dd8:	10b75a04 	addi	r2,r2,-8856
    9ddc:	f800283a 	ret

00009de0 <__locale_charset>:
    9de0:	008000b4 	movhi	r2,2
    9de4:	10bb5004 	addi	r2,r2,-4800
    9de8:	f800283a 	ret

00009dec <__locale_mb_cur_max>:
    9dec:	008000b4 	movhi	r2,2
    9df0:	10802004 	addi	r2,r2,128
    9df4:	10800017 	ldw	r2,0(r2)
    9df8:	f800283a 	ret

00009dfc <__locale_msgcharset>:
    9dfc:	008000b4 	movhi	r2,2
    9e00:	10bb4804 	addi	r2,r2,-4832
    9e04:	f800283a 	ret

00009e08 <__locale_cjk_lang>:
    9e08:	0005883a 	mov	r2,zero
    9e0c:	f800283a 	ret

00009e10 <_localeconv_r>:
    9e10:	008000b4 	movhi	r2,2
    9e14:	10bb5804 	addi	r2,r2,-4768
    9e18:	f800283a 	ret

00009e1c <setlocale>:
    9e1c:	008000b4 	movhi	r2,2
    9e20:	10801c04 	addi	r2,r2,112
    9e24:	280d883a 	mov	r6,r5
    9e28:	200b883a 	mov	r5,r4
    9e2c:	11000017 	ldw	r4,0(r2)
    9e30:	0009d641 	jmpi	9d64 <_setlocale_r>

00009e34 <localeconv>:
    9e34:	008000b4 	movhi	r2,2
    9e38:	10bb5804 	addi	r2,r2,-4768
    9e3c:	f800283a 	ret

00009e40 <_lseek_r>:
    9e40:	defffd04 	addi	sp,sp,-12
    9e44:	2805883a 	mov	r2,r5
    9e48:	dc000015 	stw	r16,0(sp)
    9e4c:	040000b4 	movhi	r16,2
    9e50:	dc400115 	stw	r17,4(sp)
    9e54:	300b883a 	mov	r5,r6
    9e58:	84072604 	addi	r16,r16,7320
    9e5c:	2023883a 	mov	r17,r4
    9e60:	380d883a 	mov	r6,r7
    9e64:	1009883a 	mov	r4,r2
    9e68:	dfc00215 	stw	ra,8(sp)
    9e6c:	80000015 	stw	zero,0(r16)
    9e70:	0019d780 	call	19d78 <lseek>
    9e74:	00ffffc4 	movi	r3,-1
    9e78:	10c00526 	beq	r2,r3,9e90 <_lseek_r+0x50>
    9e7c:	dfc00217 	ldw	ra,8(sp)
    9e80:	dc400117 	ldw	r17,4(sp)
    9e84:	dc000017 	ldw	r16,0(sp)
    9e88:	dec00304 	addi	sp,sp,12
    9e8c:	f800283a 	ret
    9e90:	80c00017 	ldw	r3,0(r16)
    9e94:	183ff926 	beq	r3,zero,9e7c <__alt_mem_epcs_flash_controller_0+0xff808e7c>
    9e98:	88c00015 	stw	r3,0(r17)
    9e9c:	003ff706 	br	9e7c <__alt_mem_epcs_flash_controller_0+0xff808e7c>

00009ea0 <__smakebuf_r>:
    9ea0:	2880030b 	ldhu	r2,12(r5)
    9ea4:	10c0008c 	andi	r3,r2,2
    9ea8:	1800411e 	bne	r3,zero,9fb0 <__smakebuf_r+0x110>
    9eac:	deffec04 	addi	sp,sp,-80
    9eb0:	dc000f15 	stw	r16,60(sp)
    9eb4:	2821883a 	mov	r16,r5
    9eb8:	2940038f 	ldh	r5,14(r5)
    9ebc:	dc401015 	stw	r17,64(sp)
    9ec0:	dfc01315 	stw	ra,76(sp)
    9ec4:	dcc01215 	stw	r19,72(sp)
    9ec8:	dc801115 	stw	r18,68(sp)
    9ecc:	2023883a 	mov	r17,r4
    9ed0:	28001c16 	blt	r5,zero,9f44 <__smakebuf_r+0xa4>
    9ed4:	d80d883a 	mov	r6,sp
    9ed8:	0013a6c0 	call	13a6c <_fstat_r>
    9edc:	10001816 	blt	r2,zero,9f40 <__smakebuf_r+0xa0>
    9ee0:	d8800117 	ldw	r2,4(sp)
    9ee4:	00e00014 	movui	r3,32768
    9ee8:	10bc000c 	andi	r2,r2,61440
    9eec:	14c80020 	cmpeqi	r19,r2,8192
    9ef0:	10c03726 	beq	r2,r3,9fd0 <__smakebuf_r+0x130>
    9ef4:	80c0030b 	ldhu	r3,12(r16)
    9ef8:	18c20014 	ori	r3,r3,2048
    9efc:	80c0030d 	sth	r3,12(r16)
    9f00:	00c80004 	movi	r3,8192
    9f04:	10c0521e 	bne	r2,r3,a050 <__smakebuf_r+0x1b0>
    9f08:	8140038f 	ldh	r5,14(r16)
    9f0c:	8809883a 	mov	r4,r17
    9f10:	00146740 	call	14674 <_isatty_r>
    9f14:	10004c26 	beq	r2,zero,a048 <__smakebuf_r+0x1a8>
    9f18:	8080030b 	ldhu	r2,12(r16)
    9f1c:	80c010c4 	addi	r3,r16,67
    9f20:	80c00015 	stw	r3,0(r16)
    9f24:	10800054 	ori	r2,r2,1
    9f28:	8080030d 	sth	r2,12(r16)
    9f2c:	00800044 	movi	r2,1
    9f30:	80c00415 	stw	r3,16(r16)
    9f34:	80800515 	stw	r2,20(r16)
    9f38:	04810004 	movi	r18,1024
    9f3c:	00000706 	br	9f5c <__smakebuf_r+0xbc>
    9f40:	8080030b 	ldhu	r2,12(r16)
    9f44:	10c0200c 	andi	r3,r2,128
    9f48:	18001f1e 	bne	r3,zero,9fc8 <__smakebuf_r+0x128>
    9f4c:	04810004 	movi	r18,1024
    9f50:	10820014 	ori	r2,r2,2048
    9f54:	8080030d 	sth	r2,12(r16)
    9f58:	0027883a 	mov	r19,zero
    9f5c:	900b883a 	mov	r5,r18
    9f60:	8809883a 	mov	r4,r17
    9f64:	000258c0 	call	258c <_malloc_r>
    9f68:	10002c26 	beq	r2,zero,a01c <__smakebuf_r+0x17c>
    9f6c:	80c0030b 	ldhu	r3,12(r16)
    9f70:	01000074 	movhi	r4,1
    9f74:	2123c204 	addi	r4,r4,-28920
    9f78:	89000f15 	stw	r4,60(r17)
    9f7c:	18c02014 	ori	r3,r3,128
    9f80:	80c0030d 	sth	r3,12(r16)
    9f84:	80800015 	stw	r2,0(r16)
    9f88:	80800415 	stw	r2,16(r16)
    9f8c:	84800515 	stw	r18,20(r16)
    9f90:	98001a1e 	bne	r19,zero,9ffc <__smakebuf_r+0x15c>
    9f94:	dfc01317 	ldw	ra,76(sp)
    9f98:	dcc01217 	ldw	r19,72(sp)
    9f9c:	dc801117 	ldw	r18,68(sp)
    9fa0:	dc401017 	ldw	r17,64(sp)
    9fa4:	dc000f17 	ldw	r16,60(sp)
    9fa8:	dec01404 	addi	sp,sp,80
    9fac:	f800283a 	ret
    9fb0:	288010c4 	addi	r2,r5,67
    9fb4:	28800015 	stw	r2,0(r5)
    9fb8:	28800415 	stw	r2,16(r5)
    9fbc:	00800044 	movi	r2,1
    9fc0:	28800515 	stw	r2,20(r5)
    9fc4:	f800283a 	ret
    9fc8:	04801004 	movi	r18,64
    9fcc:	003fe006 	br	9f50 <__alt_mem_epcs_flash_controller_0+0xff808f50>
    9fd0:	81000a17 	ldw	r4,40(r16)
    9fd4:	00c00034 	movhi	r3,0
    9fd8:	18ccd904 	addi	r3,r3,13156
    9fdc:	20ffc51e 	bne	r4,r3,9ef4 <__alt_mem_epcs_flash_controller_0+0xff808ef4>
    9fe0:	8080030b 	ldhu	r2,12(r16)
    9fe4:	04810004 	movi	r18,1024
    9fe8:	84801315 	stw	r18,76(r16)
    9fec:	1484b03a 	or	r2,r2,r18
    9ff0:	8080030d 	sth	r2,12(r16)
    9ff4:	0027883a 	mov	r19,zero
    9ff8:	003fd806 	br	9f5c <__alt_mem_epcs_flash_controller_0+0xff808f5c>
    9ffc:	8140038f 	ldh	r5,14(r16)
    a000:	8809883a 	mov	r4,r17
    a004:	00146740 	call	14674 <_isatty_r>
    a008:	103fe226 	beq	r2,zero,9f94 <__alt_mem_epcs_flash_controller_0+0xff808f94>
    a00c:	8080030b 	ldhu	r2,12(r16)
    a010:	10800054 	ori	r2,r2,1
    a014:	8080030d 	sth	r2,12(r16)
    a018:	003fde06 	br	9f94 <__alt_mem_epcs_flash_controller_0+0xff808f94>
    a01c:	8080030b 	ldhu	r2,12(r16)
    a020:	10c0800c 	andi	r3,r2,512
    a024:	183fdb1e 	bne	r3,zero,9f94 <__alt_mem_epcs_flash_controller_0+0xff808f94>
    a028:	10800094 	ori	r2,r2,2
    a02c:	80c010c4 	addi	r3,r16,67
    a030:	8080030d 	sth	r2,12(r16)
    a034:	00800044 	movi	r2,1
    a038:	80c00015 	stw	r3,0(r16)
    a03c:	80c00415 	stw	r3,16(r16)
    a040:	80800515 	stw	r2,20(r16)
    a044:	003fd306 	br	9f94 <__alt_mem_epcs_flash_controller_0+0xff808f94>
    a048:	04810004 	movi	r18,1024
    a04c:	003fc306 	br	9f5c <__alt_mem_epcs_flash_controller_0+0xff808f5c>
    a050:	0027883a 	mov	r19,zero
    a054:	04810004 	movi	r18,1024
    a058:	003fc006 	br	9f5c <__alt_mem_epcs_flash_controller_0+0xff808f5c>

0000a05c <_mbrtowc_r>:
    a05c:	defff704 	addi	sp,sp,-36
    a060:	008000b4 	movhi	r2,2
    a064:	dc800715 	stw	r18,28(sp)
    a068:	dc400615 	stw	r17,24(sp)
    a06c:	dc000515 	stw	r16,20(sp)
    a070:	10802104 	addi	r2,r2,132
    a074:	dfc00815 	stw	ra,32(sp)
    a078:	2021883a 	mov	r16,r4
    a07c:	dc400917 	ldw	r17,36(sp)
    a080:	14800017 	ldw	r18,0(r2)
    a084:	30001626 	beq	r6,zero,a0e0 <_mbrtowc_r+0x84>
    a088:	d9400215 	stw	r5,8(sp)
    a08c:	d9800315 	stw	r6,12(sp)
    a090:	d9c00415 	stw	r7,16(sp)
    a094:	0009de00 	call	9de0 <__locale_charset>
    a098:	d9c00417 	ldw	r7,16(sp)
    a09c:	d9800317 	ldw	r6,12(sp)
    a0a0:	d9400217 	ldw	r5,8(sp)
    a0a4:	d8800015 	stw	r2,0(sp)
    a0a8:	dc400115 	stw	r17,4(sp)
    a0ac:	8009883a 	mov	r4,r16
    a0b0:	903ee83a 	callr	r18
    a0b4:	00ffffc4 	movi	r3,-1
    a0b8:	10c0031e 	bne	r2,r3,a0c8 <_mbrtowc_r+0x6c>
    a0bc:	88000015 	stw	zero,0(r17)
    a0c0:	00c02284 	movi	r3,138
    a0c4:	80c00015 	stw	r3,0(r16)
    a0c8:	dfc00817 	ldw	ra,32(sp)
    a0cc:	dc800717 	ldw	r18,28(sp)
    a0d0:	dc400617 	ldw	r17,24(sp)
    a0d4:	dc000517 	ldw	r16,20(sp)
    a0d8:	dec00904 	addi	sp,sp,36
    a0dc:	f800283a 	ret
    a0e0:	0009de00 	call	9de0 <__locale_charset>
    a0e4:	018000b4 	movhi	r6,2
    a0e8:	31b76e04 	addi	r6,r6,-8776
    a0ec:	dc400115 	stw	r17,4(sp)
    a0f0:	d8800015 	stw	r2,0(sp)
    a0f4:	01c00044 	movi	r7,1
    a0f8:	000b883a 	mov	r5,zero
    a0fc:	8009883a 	mov	r4,r16
    a100:	903ee83a 	callr	r18
    a104:	003feb06 	br	a0b4 <__alt_mem_epcs_flash_controller_0+0xff8090b4>

0000a108 <mbrtowc>:
    a108:	defff704 	addi	sp,sp,-36
    a10c:	008000b4 	movhi	r2,2
    a110:	dc800415 	stw	r18,16(sp)
    a114:	dc400315 	stw	r17,12(sp)
    a118:	10801c04 	addi	r2,r2,112
    a11c:	dfc00815 	stw	ra,32(sp)
    a120:	dd400715 	stw	r21,28(sp)
    a124:	dd000615 	stw	r20,24(sp)
    a128:	dcc00515 	stw	r19,20(sp)
    a12c:	dc000215 	stw	r16,8(sp)
    a130:	3825883a 	mov	r18,r7
    a134:	14400017 	ldw	r17,0(r2)
    a138:	28001c26 	beq	r5,zero,a1ac <mbrtowc+0xa4>
    a13c:	008000b4 	movhi	r2,2
    a140:	10802104 	addi	r2,r2,132
    a144:	15400017 	ldw	r21,0(r2)
    a148:	2821883a 	mov	r16,r5
    a14c:	2027883a 	mov	r19,r4
    a150:	3029883a 	mov	r20,r6
    a154:	0009de00 	call	9de0 <__locale_charset>
    a158:	d8800015 	stw	r2,0(sp)
    a15c:	dc800115 	stw	r18,4(sp)
    a160:	a00f883a 	mov	r7,r20
    a164:	800d883a 	mov	r6,r16
    a168:	980b883a 	mov	r5,r19
    a16c:	8809883a 	mov	r4,r17
    a170:	a83ee83a 	callr	r21
    a174:	00ffffc4 	movi	r3,-1
    a178:	10c0031e 	bne	r2,r3,a188 <mbrtowc+0x80>
    a17c:	90000015 	stw	zero,0(r18)
    a180:	00c02284 	movi	r3,138
    a184:	88c00015 	stw	r3,0(r17)
    a188:	dfc00817 	ldw	ra,32(sp)
    a18c:	dd400717 	ldw	r21,28(sp)
    a190:	dd000617 	ldw	r20,24(sp)
    a194:	dcc00517 	ldw	r19,20(sp)
    a198:	dc800417 	ldw	r18,16(sp)
    a19c:	dc400317 	ldw	r17,12(sp)
    a1a0:	dc000217 	ldw	r16,8(sp)
    a1a4:	dec00904 	addi	sp,sp,36
    a1a8:	f800283a 	ret
    a1ac:	008000b4 	movhi	r2,2
    a1b0:	10802104 	addi	r2,r2,132
    a1b4:	14000017 	ldw	r16,0(r2)
    a1b8:	0009de00 	call	9de0 <__locale_charset>
    a1bc:	018000b4 	movhi	r6,2
    a1c0:	31b76e04 	addi	r6,r6,-8776
    a1c4:	dc800115 	stw	r18,4(sp)
    a1c8:	d8800015 	stw	r2,0(sp)
    a1cc:	01c00044 	movi	r7,1
    a1d0:	000b883a 	mov	r5,zero
    a1d4:	8809883a 	mov	r4,r17
    a1d8:	803ee83a 	callr	r16
    a1dc:	003fe506 	br	a174 <__alt_mem_epcs_flash_controller_0+0xff809174>

0000a1e0 <__ascii_mbtowc>:
    a1e0:	deffff04 	addi	sp,sp,-4
    a1e4:	28000826 	beq	r5,zero,a208 <__ascii_mbtowc+0x28>
    a1e8:	30000926 	beq	r6,zero,a210 <__ascii_mbtowc+0x30>
    a1ec:	38000b26 	beq	r7,zero,a21c <__ascii_mbtowc+0x3c>
    a1f0:	30800003 	ldbu	r2,0(r6)
    a1f4:	28800015 	stw	r2,0(r5)
    a1f8:	30800003 	ldbu	r2,0(r6)
    a1fc:	1004c03a 	cmpne	r2,r2,zero
    a200:	dec00104 	addi	sp,sp,4
    a204:	f800283a 	ret
    a208:	d80b883a 	mov	r5,sp
    a20c:	303ff71e 	bne	r6,zero,a1ec <__alt_mem_epcs_flash_controller_0+0xff8091ec>
    a210:	0005883a 	mov	r2,zero
    a214:	dec00104 	addi	sp,sp,4
    a218:	f800283a 	ret
    a21c:	00bfff84 	movi	r2,-2
    a220:	003ff706 	br	a200 <__alt_mem_epcs_flash_controller_0+0xff809200>

0000a224 <_mbtowc_r>:
    a224:	008000b4 	movhi	r2,2
    a228:	defff804 	addi	sp,sp,-32
    a22c:	10802104 	addi	r2,r2,132
    a230:	dfc00715 	stw	ra,28(sp)
    a234:	dc000615 	stw	r16,24(sp)
    a238:	14000017 	ldw	r16,0(r2)
    a23c:	d9000215 	stw	r4,8(sp)
    a240:	d9400315 	stw	r5,12(sp)
    a244:	d9800415 	stw	r6,16(sp)
    a248:	d9c00515 	stw	r7,20(sp)
    a24c:	0009de00 	call	9de0 <__locale_charset>
    a250:	d8800015 	stw	r2,0(sp)
    a254:	d8800817 	ldw	r2,32(sp)
    a258:	d9c00517 	ldw	r7,20(sp)
    a25c:	d9800417 	ldw	r6,16(sp)
    a260:	d9400317 	ldw	r5,12(sp)
    a264:	d9000217 	ldw	r4,8(sp)
    a268:	d8800115 	stw	r2,4(sp)
    a26c:	803ee83a 	callr	r16
    a270:	dfc00717 	ldw	ra,28(sp)
    a274:	dc000617 	ldw	r16,24(sp)
    a278:	dec00804 	addi	sp,sp,32
    a27c:	f800283a 	ret

0000a280 <memchr>:
    a280:	208000cc 	andi	r2,r4,3
    a284:	280f883a 	mov	r7,r5
    a288:	10003426 	beq	r2,zero,a35c <memchr+0xdc>
    a28c:	30bfffc4 	addi	r2,r6,-1
    a290:	30001a26 	beq	r6,zero,a2fc <memchr+0x7c>
    a294:	20c00003 	ldbu	r3,0(r4)
    a298:	29803fcc 	andi	r6,r5,255
    a29c:	30c0051e 	bne	r6,r3,a2b4 <memchr+0x34>
    a2a0:	00001806 	br	a304 <memchr+0x84>
    a2a4:	10001526 	beq	r2,zero,a2fc <memchr+0x7c>
    a2a8:	20c00003 	ldbu	r3,0(r4)
    a2ac:	10bfffc4 	addi	r2,r2,-1
    a2b0:	30c01426 	beq	r6,r3,a304 <memchr+0x84>
    a2b4:	21000044 	addi	r4,r4,1
    a2b8:	20c000cc 	andi	r3,r4,3
    a2bc:	183ff91e 	bne	r3,zero,a2a4 <__alt_mem_epcs_flash_controller_0+0xff8092a4>
    a2c0:	020000c4 	movi	r8,3
    a2c4:	40801136 	bltu	r8,r2,a30c <memchr+0x8c>
    a2c8:	10000c26 	beq	r2,zero,a2fc <memchr+0x7c>
    a2cc:	20c00003 	ldbu	r3,0(r4)
    a2d0:	29403fcc 	andi	r5,r5,255
    a2d4:	28c00b26 	beq	r5,r3,a304 <memchr+0x84>
    a2d8:	20c00044 	addi	r3,r4,1
    a2dc:	39803fcc 	andi	r6,r7,255
    a2e0:	2089883a 	add	r4,r4,r2
    a2e4:	00000306 	br	a2f4 <memchr+0x74>
    a2e8:	18c00044 	addi	r3,r3,1
    a2ec:	197fffc3 	ldbu	r5,-1(r3)
    a2f0:	31400526 	beq	r6,r5,a308 <memchr+0x88>
    a2f4:	1805883a 	mov	r2,r3
    a2f8:	20fffb1e 	bne	r4,r3,a2e8 <__alt_mem_epcs_flash_controller_0+0xff8092e8>
    a2fc:	0005883a 	mov	r2,zero
    a300:	f800283a 	ret
    a304:	2005883a 	mov	r2,r4
    a308:	f800283a 	ret
    a30c:	28c03fcc 	andi	r3,r5,255
    a310:	1812923a 	slli	r9,r3,8
    a314:	02ffbff4 	movhi	r11,65279
    a318:	02a02074 	movhi	r10,32897
    a31c:	48d2b03a 	or	r9,r9,r3
    a320:	4806943a 	slli	r3,r9,16
    a324:	5affbfc4 	addi	r11,r11,-257
    a328:	52a02004 	addi	r10,r10,-32640
    a32c:	48d2b03a 	or	r9,r9,r3
    a330:	20c00017 	ldw	r3,0(r4)
    a334:	48c6f03a 	xor	r3,r9,r3
    a338:	1acd883a 	add	r6,r3,r11
    a33c:	00c6303a 	nor	r3,zero,r3
    a340:	30c6703a 	and	r3,r6,r3
    a344:	1a86703a 	and	r3,r3,r10
    a348:	183fe01e 	bne	r3,zero,a2cc <__alt_mem_epcs_flash_controller_0+0xff8092cc>
    a34c:	10bfff04 	addi	r2,r2,-4
    a350:	21000104 	addi	r4,r4,4
    a354:	40bff636 	bltu	r8,r2,a330 <__alt_mem_epcs_flash_controller_0+0xff809330>
    a358:	003fdb06 	br	a2c8 <__alt_mem_epcs_flash_controller_0+0xff8092c8>
    a35c:	3005883a 	mov	r2,r6
    a360:	003fd706 	br	a2c0 <__alt_mem_epcs_flash_controller_0+0xff8092c0>

0000a364 <memmove>:
    a364:	2005883a 	mov	r2,r4
    a368:	29000b2e 	bgeu	r5,r4,a398 <memmove+0x34>
    a36c:	298f883a 	add	r7,r5,r6
    a370:	21c0092e 	bgeu	r4,r7,a398 <memmove+0x34>
    a374:	2187883a 	add	r3,r4,r6
    a378:	198bc83a 	sub	r5,r3,r6
    a37c:	30004826 	beq	r6,zero,a4a0 <memmove+0x13c>
    a380:	39ffffc4 	addi	r7,r7,-1
    a384:	39000003 	ldbu	r4,0(r7)
    a388:	18ffffc4 	addi	r3,r3,-1
    a38c:	19000005 	stb	r4,0(r3)
    a390:	28fffb1e 	bne	r5,r3,a380 <__alt_mem_epcs_flash_controller_0+0xff809380>
    a394:	f800283a 	ret
    a398:	00c003c4 	movi	r3,15
    a39c:	1980412e 	bgeu	r3,r6,a4a4 <memmove+0x140>
    a3a0:	2886b03a 	or	r3,r5,r2
    a3a4:	18c000cc 	andi	r3,r3,3
    a3a8:	1800401e 	bne	r3,zero,a4ac <memmove+0x148>
    a3ac:	33fffc04 	addi	r15,r6,-16
    a3b0:	781ed13a 	srli	r15,r15,4
    a3b4:	28c00104 	addi	r3,r5,4
    a3b8:	13400104 	addi	r13,r2,4
    a3bc:	781c913a 	slli	r14,r15,4
    a3c0:	2b000204 	addi	r12,r5,8
    a3c4:	12c00204 	addi	r11,r2,8
    a3c8:	73800504 	addi	r14,r14,20
    a3cc:	2a800304 	addi	r10,r5,12
    a3d0:	12400304 	addi	r9,r2,12
    a3d4:	2b9d883a 	add	r14,r5,r14
    a3d8:	2811883a 	mov	r8,r5
    a3dc:	100f883a 	mov	r7,r2
    a3e0:	41000017 	ldw	r4,0(r8)
    a3e4:	39c00404 	addi	r7,r7,16
    a3e8:	18c00404 	addi	r3,r3,16
    a3ec:	393ffc15 	stw	r4,-16(r7)
    a3f0:	193ffc17 	ldw	r4,-16(r3)
    a3f4:	6b400404 	addi	r13,r13,16
    a3f8:	5ac00404 	addi	r11,r11,16
    a3fc:	693ffc15 	stw	r4,-16(r13)
    a400:	61000017 	ldw	r4,0(r12)
    a404:	4a400404 	addi	r9,r9,16
    a408:	42000404 	addi	r8,r8,16
    a40c:	593ffc15 	stw	r4,-16(r11)
    a410:	51000017 	ldw	r4,0(r10)
    a414:	63000404 	addi	r12,r12,16
    a418:	52800404 	addi	r10,r10,16
    a41c:	493ffc15 	stw	r4,-16(r9)
    a420:	1bbfef1e 	bne	r3,r14,a3e0 <__alt_mem_epcs_flash_controller_0+0xff8093e0>
    a424:	79000044 	addi	r4,r15,1
    a428:	2008913a 	slli	r4,r4,4
    a42c:	328003cc 	andi	r10,r6,15
    a430:	02c000c4 	movi	r11,3
    a434:	1107883a 	add	r3,r2,r4
    a438:	290b883a 	add	r5,r5,r4
    a43c:	5a801e2e 	bgeu	r11,r10,a4b8 <memmove+0x154>
    a440:	1813883a 	mov	r9,r3
    a444:	2811883a 	mov	r8,r5
    a448:	500f883a 	mov	r7,r10
    a44c:	41000017 	ldw	r4,0(r8)
    a450:	4a400104 	addi	r9,r9,4
    a454:	39ffff04 	addi	r7,r7,-4
    a458:	493fff15 	stw	r4,-4(r9)
    a45c:	42000104 	addi	r8,r8,4
    a460:	59fffa36 	bltu	r11,r7,a44c <__alt_mem_epcs_flash_controller_0+0xff80944c>
    a464:	513fff04 	addi	r4,r10,-4
    a468:	2008d0ba 	srli	r4,r4,2
    a46c:	318000cc 	andi	r6,r6,3
    a470:	21000044 	addi	r4,r4,1
    a474:	2109883a 	add	r4,r4,r4
    a478:	2109883a 	add	r4,r4,r4
    a47c:	1907883a 	add	r3,r3,r4
    a480:	290b883a 	add	r5,r5,r4
    a484:	30000b26 	beq	r6,zero,a4b4 <memmove+0x150>
    a488:	198d883a 	add	r6,r3,r6
    a48c:	29c00003 	ldbu	r7,0(r5)
    a490:	18c00044 	addi	r3,r3,1
    a494:	29400044 	addi	r5,r5,1
    a498:	19ffffc5 	stb	r7,-1(r3)
    a49c:	19bffb1e 	bne	r3,r6,a48c <__alt_mem_epcs_flash_controller_0+0xff80948c>
    a4a0:	f800283a 	ret
    a4a4:	1007883a 	mov	r3,r2
    a4a8:	003ff606 	br	a484 <__alt_mem_epcs_flash_controller_0+0xff809484>
    a4ac:	1007883a 	mov	r3,r2
    a4b0:	003ff506 	br	a488 <__alt_mem_epcs_flash_controller_0+0xff809488>
    a4b4:	f800283a 	ret
    a4b8:	500d883a 	mov	r6,r10
    a4bc:	003ff106 	br	a484 <__alt_mem_epcs_flash_controller_0+0xff809484>

0000a4c0 <memset>:
    a4c0:	20c000cc 	andi	r3,r4,3
    a4c4:	2005883a 	mov	r2,r4
    a4c8:	18004426 	beq	r3,zero,a5dc <memset+0x11c>
    a4cc:	31ffffc4 	addi	r7,r6,-1
    a4d0:	30004026 	beq	r6,zero,a5d4 <memset+0x114>
    a4d4:	2813883a 	mov	r9,r5
    a4d8:	200d883a 	mov	r6,r4
    a4dc:	2007883a 	mov	r3,r4
    a4e0:	00000406 	br	a4f4 <memset+0x34>
    a4e4:	3a3fffc4 	addi	r8,r7,-1
    a4e8:	31800044 	addi	r6,r6,1
    a4ec:	38003926 	beq	r7,zero,a5d4 <memset+0x114>
    a4f0:	400f883a 	mov	r7,r8
    a4f4:	18c00044 	addi	r3,r3,1
    a4f8:	32400005 	stb	r9,0(r6)
    a4fc:	1a0000cc 	andi	r8,r3,3
    a500:	403ff81e 	bne	r8,zero,a4e4 <__alt_mem_epcs_flash_controller_0+0xff8094e4>
    a504:	010000c4 	movi	r4,3
    a508:	21c02d2e 	bgeu	r4,r7,a5c0 <memset+0x100>
    a50c:	29003fcc 	andi	r4,r5,255
    a510:	200c923a 	slli	r6,r4,8
    a514:	3108b03a 	or	r4,r6,r4
    a518:	200c943a 	slli	r6,r4,16
    a51c:	218cb03a 	or	r6,r4,r6
    a520:	010003c4 	movi	r4,15
    a524:	21c0182e 	bgeu	r4,r7,a588 <memset+0xc8>
    a528:	3b3ffc04 	addi	r12,r7,-16
    a52c:	6018d13a 	srli	r12,r12,4
    a530:	1a000104 	addi	r8,r3,4
    a534:	1ac00204 	addi	r11,r3,8
    a538:	6008913a 	slli	r4,r12,4
    a53c:	1a800304 	addi	r10,r3,12
    a540:	1813883a 	mov	r9,r3
    a544:	21000504 	addi	r4,r4,20
    a548:	1909883a 	add	r4,r3,r4
    a54c:	49800015 	stw	r6,0(r9)
    a550:	41800015 	stw	r6,0(r8)
    a554:	59800015 	stw	r6,0(r11)
    a558:	51800015 	stw	r6,0(r10)
    a55c:	42000404 	addi	r8,r8,16
    a560:	4a400404 	addi	r9,r9,16
    a564:	5ac00404 	addi	r11,r11,16
    a568:	52800404 	addi	r10,r10,16
    a56c:	413ff71e 	bne	r8,r4,a54c <__alt_mem_epcs_flash_controller_0+0xff80954c>
    a570:	63000044 	addi	r12,r12,1
    a574:	6018913a 	slli	r12,r12,4
    a578:	39c003cc 	andi	r7,r7,15
    a57c:	010000c4 	movi	r4,3
    a580:	1b07883a 	add	r3,r3,r12
    a584:	21c00e2e 	bgeu	r4,r7,a5c0 <memset+0x100>
    a588:	1813883a 	mov	r9,r3
    a58c:	3811883a 	mov	r8,r7
    a590:	010000c4 	movi	r4,3
    a594:	49800015 	stw	r6,0(r9)
    a598:	423fff04 	addi	r8,r8,-4
    a59c:	4a400104 	addi	r9,r9,4
    a5a0:	223ffc36 	bltu	r4,r8,a594 <__alt_mem_epcs_flash_controller_0+0xff809594>
    a5a4:	393fff04 	addi	r4,r7,-4
    a5a8:	2008d0ba 	srli	r4,r4,2
    a5ac:	39c000cc 	andi	r7,r7,3
    a5b0:	21000044 	addi	r4,r4,1
    a5b4:	2109883a 	add	r4,r4,r4
    a5b8:	2109883a 	add	r4,r4,r4
    a5bc:	1907883a 	add	r3,r3,r4
    a5c0:	38000526 	beq	r7,zero,a5d8 <memset+0x118>
    a5c4:	19cf883a 	add	r7,r3,r7
    a5c8:	19400005 	stb	r5,0(r3)
    a5cc:	18c00044 	addi	r3,r3,1
    a5d0:	38fffd1e 	bne	r7,r3,a5c8 <__alt_mem_epcs_flash_controller_0+0xff8095c8>
    a5d4:	f800283a 	ret
    a5d8:	f800283a 	ret
    a5dc:	2007883a 	mov	r3,r4
    a5e0:	300f883a 	mov	r7,r6
    a5e4:	003fc706 	br	a504 <__alt_mem_epcs_flash_controller_0+0xff809504>

0000a5e8 <_Balloc>:
    a5e8:	20801317 	ldw	r2,76(r4)
    a5ec:	defffc04 	addi	sp,sp,-16
    a5f0:	dc400115 	stw	r17,4(sp)
    a5f4:	dc000015 	stw	r16,0(sp)
    a5f8:	dfc00315 	stw	ra,12(sp)
    a5fc:	dc800215 	stw	r18,8(sp)
    a600:	2023883a 	mov	r17,r4
    a604:	2821883a 	mov	r16,r5
    a608:	10000f26 	beq	r2,zero,a648 <_Balloc+0x60>
    a60c:	8407883a 	add	r3,r16,r16
    a610:	18c7883a 	add	r3,r3,r3
    a614:	10c7883a 	add	r3,r2,r3
    a618:	18800017 	ldw	r2,0(r3)
    a61c:	10001126 	beq	r2,zero,a664 <_Balloc+0x7c>
    a620:	11000017 	ldw	r4,0(r2)
    a624:	19000015 	stw	r4,0(r3)
    a628:	10000415 	stw	zero,16(r2)
    a62c:	10000315 	stw	zero,12(r2)
    a630:	dfc00317 	ldw	ra,12(sp)
    a634:	dc800217 	ldw	r18,8(sp)
    a638:	dc400117 	ldw	r17,4(sp)
    a63c:	dc000017 	ldw	r16,0(sp)
    a640:	dec00404 	addi	sp,sp,16
    a644:	f800283a 	ret
    a648:	01800844 	movi	r6,33
    a64c:	01400104 	movi	r5,4
    a650:	00136840 	call	13684 <_calloc_r>
    a654:	88801315 	stw	r2,76(r17)
    a658:	103fec1e 	bne	r2,zero,a60c <__alt_mem_epcs_flash_controller_0+0xff80960c>
    a65c:	0005883a 	mov	r2,zero
    a660:	003ff306 	br	a630 <__alt_mem_epcs_flash_controller_0+0xff809630>
    a664:	01400044 	movi	r5,1
    a668:	2c24983a 	sll	r18,r5,r16
    a66c:	8809883a 	mov	r4,r17
    a670:	91800144 	addi	r6,r18,5
    a674:	318d883a 	add	r6,r6,r6
    a678:	318d883a 	add	r6,r6,r6
    a67c:	00136840 	call	13684 <_calloc_r>
    a680:	103ff626 	beq	r2,zero,a65c <__alt_mem_epcs_flash_controller_0+0xff80965c>
    a684:	14000115 	stw	r16,4(r2)
    a688:	14800215 	stw	r18,8(r2)
    a68c:	003fe606 	br	a628 <__alt_mem_epcs_flash_controller_0+0xff809628>

0000a690 <_Bfree>:
    a690:	28000826 	beq	r5,zero,a6b4 <_Bfree+0x24>
    a694:	28c00117 	ldw	r3,4(r5)
    a698:	20801317 	ldw	r2,76(r4)
    a69c:	18c7883a 	add	r3,r3,r3
    a6a0:	18c7883a 	add	r3,r3,r3
    a6a4:	10c5883a 	add	r2,r2,r3
    a6a8:	10c00017 	ldw	r3,0(r2)
    a6ac:	28c00015 	stw	r3,0(r5)
    a6b0:	11400015 	stw	r5,0(r2)
    a6b4:	f800283a 	ret

0000a6b8 <__multadd>:
    a6b8:	defff704 	addi	sp,sp,-36
    a6bc:	dc800215 	stw	r18,8(sp)
    a6c0:	2c800417 	ldw	r18,16(r5)
    a6c4:	dd800615 	stw	r22,24(sp)
    a6c8:	dd400515 	stw	r21,20(sp)
    a6cc:	dd000415 	stw	r20,16(sp)
    a6d0:	dcc00315 	stw	r19,12(sp)
    a6d4:	dc400115 	stw	r17,4(sp)
    a6d8:	dc000015 	stw	r16,0(sp)
    a6dc:	dfc00815 	stw	ra,32(sp)
    a6e0:	ddc00715 	stw	r23,28(sp)
    a6e4:	2827883a 	mov	r19,r5
    a6e8:	2029883a 	mov	r20,r4
    a6ec:	3023883a 	mov	r17,r6
    a6f0:	3821883a 	mov	r16,r7
    a6f4:	2d400504 	addi	r21,r5,20
    a6f8:	002d883a 	mov	r22,zero
    a6fc:	adc00017 	ldw	r23,0(r21)
    a700:	880b883a 	mov	r5,r17
    a704:	ad400104 	addi	r21,r21,4
    a708:	b93fffcc 	andi	r4,r23,65535
    a70c:	00024440 	call	2444 <__mulsi3>
    a710:	b808d43a 	srli	r4,r23,16
    a714:	880b883a 	mov	r5,r17
    a718:	1421883a 	add	r16,r2,r16
    a71c:	00024440 	call	2444 <__mulsi3>
    a720:	800ed43a 	srli	r7,r16,16
    a724:	80ffffcc 	andi	r3,r16,65535
    a728:	b5800044 	addi	r22,r22,1
    a72c:	11c5883a 	add	r2,r2,r7
    a730:	100e943a 	slli	r7,r2,16
    a734:	1020d43a 	srli	r16,r2,16
    a738:	38c7883a 	add	r3,r7,r3
    a73c:	a8ffff15 	stw	r3,-4(r21)
    a740:	b4bfee16 	blt	r22,r18,a6fc <__alt_mem_epcs_flash_controller_0+0xff8096fc>
    a744:	80000926 	beq	r16,zero,a76c <__multadd+0xb4>
    a748:	98800217 	ldw	r2,8(r19)
    a74c:	9080130e 	bge	r18,r2,a79c <__multadd+0xe4>
    a750:	90800144 	addi	r2,r18,5
    a754:	1085883a 	add	r2,r2,r2
    a758:	1085883a 	add	r2,r2,r2
    a75c:	9885883a 	add	r2,r19,r2
    a760:	14000015 	stw	r16,0(r2)
    a764:	94800044 	addi	r18,r18,1
    a768:	9c800415 	stw	r18,16(r19)
    a76c:	9805883a 	mov	r2,r19
    a770:	dfc00817 	ldw	ra,32(sp)
    a774:	ddc00717 	ldw	r23,28(sp)
    a778:	dd800617 	ldw	r22,24(sp)
    a77c:	dd400517 	ldw	r21,20(sp)
    a780:	dd000417 	ldw	r20,16(sp)
    a784:	dcc00317 	ldw	r19,12(sp)
    a788:	dc800217 	ldw	r18,8(sp)
    a78c:	dc400117 	ldw	r17,4(sp)
    a790:	dc000017 	ldw	r16,0(sp)
    a794:	dec00904 	addi	sp,sp,36
    a798:	f800283a 	ret
    a79c:	99400117 	ldw	r5,4(r19)
    a7a0:	a009883a 	mov	r4,r20
    a7a4:	29400044 	addi	r5,r5,1
    a7a8:	000a5e80 	call	a5e8 <_Balloc>
    a7ac:	99800417 	ldw	r6,16(r19)
    a7b0:	99400304 	addi	r5,r19,12
    a7b4:	11000304 	addi	r4,r2,12
    a7b8:	31800084 	addi	r6,r6,2
    a7bc:	318d883a 	add	r6,r6,r6
    a7c0:	318d883a 	add	r6,r6,r6
    a7c4:	1023883a 	mov	r17,r2
    a7c8:	0002e140 	call	2e14 <memcpy>
    a7cc:	98000a26 	beq	r19,zero,a7f8 <__multadd+0x140>
    a7d0:	98c00117 	ldw	r3,4(r19)
    a7d4:	a0801317 	ldw	r2,76(r20)
    a7d8:	18c7883a 	add	r3,r3,r3
    a7dc:	18c7883a 	add	r3,r3,r3
    a7e0:	10c5883a 	add	r2,r2,r3
    a7e4:	10c00017 	ldw	r3,0(r2)
    a7e8:	98c00015 	stw	r3,0(r19)
    a7ec:	14c00015 	stw	r19,0(r2)
    a7f0:	8827883a 	mov	r19,r17
    a7f4:	003fd606 	br	a750 <__alt_mem_epcs_flash_controller_0+0xff809750>
    a7f8:	8827883a 	mov	r19,r17
    a7fc:	003fd406 	br	a750 <__alt_mem_epcs_flash_controller_0+0xff809750>

0000a800 <__s2b>:
    a800:	defff904 	addi	sp,sp,-28
    a804:	dc400115 	stw	r17,4(sp)
    a808:	dc000015 	stw	r16,0(sp)
    a80c:	2023883a 	mov	r17,r4
    a810:	2821883a 	mov	r16,r5
    a814:	39000204 	addi	r4,r7,8
    a818:	01400244 	movi	r5,9
    a81c:	dcc00315 	stw	r19,12(sp)
    a820:	dc800215 	stw	r18,8(sp)
    a824:	dfc00615 	stw	ra,24(sp)
    a828:	dd400515 	stw	r21,20(sp)
    a82c:	dd000415 	stw	r20,16(sp)
    a830:	3825883a 	mov	r18,r7
    a834:	3027883a 	mov	r19,r6
    a838:	00022900 	call	2290 <__divsi3>
    a83c:	00c00044 	movi	r3,1
    a840:	000b883a 	mov	r5,zero
    a844:	1880030e 	bge	r3,r2,a854 <__s2b+0x54>
    a848:	18c7883a 	add	r3,r3,r3
    a84c:	29400044 	addi	r5,r5,1
    a850:	18bffd16 	blt	r3,r2,a848 <__alt_mem_epcs_flash_controller_0+0xff809848>
    a854:	8809883a 	mov	r4,r17
    a858:	000a5e80 	call	a5e8 <_Balloc>
    a85c:	d8c00717 	ldw	r3,28(sp)
    a860:	10c00515 	stw	r3,20(r2)
    a864:	00c00044 	movi	r3,1
    a868:	10c00415 	stw	r3,16(r2)
    a86c:	00c00244 	movi	r3,9
    a870:	1cc0210e 	bge	r3,r19,a8f8 <__s2b+0xf8>
    a874:	80eb883a 	add	r21,r16,r3
    a878:	a829883a 	mov	r20,r21
    a87c:	84e1883a 	add	r16,r16,r19
    a880:	a1c00007 	ldb	r7,0(r20)
    a884:	01800284 	movi	r6,10
    a888:	a5000044 	addi	r20,r20,1
    a88c:	100b883a 	mov	r5,r2
    a890:	39fff404 	addi	r7,r7,-48
    a894:	8809883a 	mov	r4,r17
    a898:	000a6b80 	call	a6b8 <__multadd>
    a89c:	a43ff81e 	bne	r20,r16,a880 <__alt_mem_epcs_flash_controller_0+0xff809880>
    a8a0:	ace1883a 	add	r16,r21,r19
    a8a4:	843ffe04 	addi	r16,r16,-8
    a8a8:	9c800a0e 	bge	r19,r18,a8d4 <__s2b+0xd4>
    a8ac:	94e5c83a 	sub	r18,r18,r19
    a8b0:	84a5883a 	add	r18,r16,r18
    a8b4:	81c00007 	ldb	r7,0(r16)
    a8b8:	01800284 	movi	r6,10
    a8bc:	84000044 	addi	r16,r16,1
    a8c0:	100b883a 	mov	r5,r2
    a8c4:	39fff404 	addi	r7,r7,-48
    a8c8:	8809883a 	mov	r4,r17
    a8cc:	000a6b80 	call	a6b8 <__multadd>
    a8d0:	84bff81e 	bne	r16,r18,a8b4 <__alt_mem_epcs_flash_controller_0+0xff8098b4>
    a8d4:	dfc00617 	ldw	ra,24(sp)
    a8d8:	dd400517 	ldw	r21,20(sp)
    a8dc:	dd000417 	ldw	r20,16(sp)
    a8e0:	dcc00317 	ldw	r19,12(sp)
    a8e4:	dc800217 	ldw	r18,8(sp)
    a8e8:	dc400117 	ldw	r17,4(sp)
    a8ec:	dc000017 	ldw	r16,0(sp)
    a8f0:	dec00704 	addi	sp,sp,28
    a8f4:	f800283a 	ret
    a8f8:	84000284 	addi	r16,r16,10
    a8fc:	1827883a 	mov	r19,r3
    a900:	003fe906 	br	a8a8 <__alt_mem_epcs_flash_controller_0+0xff8098a8>

0000a904 <__hi0bits>:
    a904:	20bfffec 	andhi	r2,r4,65535
    a908:	1000141e 	bne	r2,zero,a95c <__hi0bits+0x58>
    a90c:	2008943a 	slli	r4,r4,16
    a910:	00800404 	movi	r2,16
    a914:	20ffc02c 	andhi	r3,r4,65280
    a918:	1800021e 	bne	r3,zero,a924 <__hi0bits+0x20>
    a91c:	2008923a 	slli	r4,r4,8
    a920:	10800204 	addi	r2,r2,8
    a924:	20fc002c 	andhi	r3,r4,61440
    a928:	1800021e 	bne	r3,zero,a934 <__hi0bits+0x30>
    a92c:	2008913a 	slli	r4,r4,4
    a930:	10800104 	addi	r2,r2,4
    a934:	20f0002c 	andhi	r3,r4,49152
    a938:	1800031e 	bne	r3,zero,a948 <__hi0bits+0x44>
    a93c:	2109883a 	add	r4,r4,r4
    a940:	10800084 	addi	r2,r2,2
    a944:	2109883a 	add	r4,r4,r4
    a948:	20000316 	blt	r4,zero,a958 <__hi0bits+0x54>
    a94c:	2110002c 	andhi	r4,r4,16384
    a950:	2000041e 	bne	r4,zero,a964 <__hi0bits+0x60>
    a954:	00800804 	movi	r2,32
    a958:	f800283a 	ret
    a95c:	0005883a 	mov	r2,zero
    a960:	003fec06 	br	a914 <__alt_mem_epcs_flash_controller_0+0xff809914>
    a964:	10800044 	addi	r2,r2,1
    a968:	f800283a 	ret

0000a96c <__lo0bits>:
    a96c:	20c00017 	ldw	r3,0(r4)
    a970:	188001cc 	andi	r2,r3,7
    a974:	10000826 	beq	r2,zero,a998 <__lo0bits+0x2c>
    a978:	1880004c 	andi	r2,r3,1
    a97c:	1000211e 	bne	r2,zero,aa04 <__lo0bits+0x98>
    a980:	1880008c 	andi	r2,r3,2
    a984:	1000211e 	bne	r2,zero,aa0c <__lo0bits+0xa0>
    a988:	1806d0ba 	srli	r3,r3,2
    a98c:	00800084 	movi	r2,2
    a990:	20c00015 	stw	r3,0(r4)
    a994:	f800283a 	ret
    a998:	18bfffcc 	andi	r2,r3,65535
    a99c:	10001326 	beq	r2,zero,a9ec <__lo0bits+0x80>
    a9a0:	0005883a 	mov	r2,zero
    a9a4:	19403fcc 	andi	r5,r3,255
    a9a8:	2800021e 	bne	r5,zero,a9b4 <__lo0bits+0x48>
    a9ac:	1806d23a 	srli	r3,r3,8
    a9b0:	10800204 	addi	r2,r2,8
    a9b4:	194003cc 	andi	r5,r3,15
    a9b8:	2800021e 	bne	r5,zero,a9c4 <__lo0bits+0x58>
    a9bc:	1806d13a 	srli	r3,r3,4
    a9c0:	10800104 	addi	r2,r2,4
    a9c4:	194000cc 	andi	r5,r3,3
    a9c8:	2800021e 	bne	r5,zero,a9d4 <__lo0bits+0x68>
    a9cc:	1806d0ba 	srli	r3,r3,2
    a9d0:	10800084 	addi	r2,r2,2
    a9d4:	1940004c 	andi	r5,r3,1
    a9d8:	2800081e 	bne	r5,zero,a9fc <__lo0bits+0x90>
    a9dc:	1806d07a 	srli	r3,r3,1
    a9e0:	1800051e 	bne	r3,zero,a9f8 <__lo0bits+0x8c>
    a9e4:	00800804 	movi	r2,32
    a9e8:	f800283a 	ret
    a9ec:	1806d43a 	srli	r3,r3,16
    a9f0:	00800404 	movi	r2,16
    a9f4:	003feb06 	br	a9a4 <__alt_mem_epcs_flash_controller_0+0xff8099a4>
    a9f8:	10800044 	addi	r2,r2,1
    a9fc:	20c00015 	stw	r3,0(r4)
    aa00:	f800283a 	ret
    aa04:	0005883a 	mov	r2,zero
    aa08:	f800283a 	ret
    aa0c:	1806d07a 	srli	r3,r3,1
    aa10:	00800044 	movi	r2,1
    aa14:	20c00015 	stw	r3,0(r4)
    aa18:	f800283a 	ret

0000aa1c <__i2b>:
    aa1c:	defffd04 	addi	sp,sp,-12
    aa20:	dc000015 	stw	r16,0(sp)
    aa24:	04000044 	movi	r16,1
    aa28:	dc400115 	stw	r17,4(sp)
    aa2c:	2823883a 	mov	r17,r5
    aa30:	800b883a 	mov	r5,r16
    aa34:	dfc00215 	stw	ra,8(sp)
    aa38:	000a5e80 	call	a5e8 <_Balloc>
    aa3c:	14400515 	stw	r17,20(r2)
    aa40:	14000415 	stw	r16,16(r2)
    aa44:	dfc00217 	ldw	ra,8(sp)
    aa48:	dc400117 	ldw	r17,4(sp)
    aa4c:	dc000017 	ldw	r16,0(sp)
    aa50:	dec00304 	addi	sp,sp,12
    aa54:	f800283a 	ret

0000aa58 <__multiply>:
    aa58:	deffef04 	addi	sp,sp,-68
    aa5c:	dc400815 	stw	r17,32(sp)
    aa60:	dc000715 	stw	r16,28(sp)
    aa64:	34400417 	ldw	r17,16(r6)
    aa68:	2c000417 	ldw	r16,16(r5)
    aa6c:	dd800d15 	stw	r22,52(sp)
    aa70:	dc800915 	stw	r18,36(sp)
    aa74:	dfc01015 	stw	ra,64(sp)
    aa78:	df000f15 	stw	fp,60(sp)
    aa7c:	ddc00e15 	stw	r23,56(sp)
    aa80:	dd400c15 	stw	r21,48(sp)
    aa84:	dd000b15 	stw	r20,44(sp)
    aa88:	dcc00a15 	stw	r19,40(sp)
    aa8c:	2825883a 	mov	r18,r5
    aa90:	302d883a 	mov	r22,r6
    aa94:	8440050e 	bge	r16,r17,aaac <__multiply+0x54>
    aa98:	8007883a 	mov	r3,r16
    aa9c:	3025883a 	mov	r18,r6
    aaa0:	8821883a 	mov	r16,r17
    aaa4:	282d883a 	mov	r22,r5
    aaa8:	1823883a 	mov	r17,r3
    aaac:	90800217 	ldw	r2,8(r18)
    aab0:	8447883a 	add	r3,r16,r17
    aab4:	d8c00215 	stw	r3,8(sp)
    aab8:	91400117 	ldw	r5,4(r18)
    aabc:	10c0010e 	bge	r2,r3,aac4 <__multiply+0x6c>
    aac0:	29400044 	addi	r5,r5,1
    aac4:	000a5e80 	call	a5e8 <_Balloc>
    aac8:	d8c00217 	ldw	r3,8(sp)
    aacc:	d8800615 	stw	r2,24(sp)
    aad0:	18eb883a 	add	r21,r3,r3
    aad4:	ad6b883a 	add	r21,r21,r21
    aad8:	10c00504 	addi	r3,r2,20
    aadc:	1d6b883a 	add	r21,r3,r21
    aae0:	d8c00115 	stw	r3,4(sp)
    aae4:	dd400315 	stw	r21,12(sp)
    aae8:	1805883a 	mov	r2,r3
    aaec:	1d40042e 	bgeu	r3,r21,ab00 <__multiply+0xa8>
    aaf0:	d8c00317 	ldw	r3,12(sp)
    aaf4:	10000015 	stw	zero,0(r2)
    aaf8:	10800104 	addi	r2,r2,4
    aafc:	10fffc36 	bltu	r2,r3,aaf0 <__alt_mem_epcs_flash_controller_0+0xff809af0>
    ab00:	8c63883a 	add	r17,r17,r17
    ab04:	b5800504 	addi	r22,r22,20
    ab08:	8c63883a 	add	r17,r17,r17
    ab0c:	94800504 	addi	r18,r18,20
    ab10:	8421883a 	add	r16,r16,r16
    ab14:	b463883a 	add	r17,r22,r17
    ab18:	8421883a 	add	r16,r16,r16
    ab1c:	dd800015 	stw	r22,0(sp)
    ab20:	dc800415 	stw	r18,16(sp)
    ab24:	dc400515 	stw	r17,20(sp)
    ab28:	9429883a 	add	r20,r18,r16
    ab2c:	b4404f2e 	bgeu	r22,r17,ac6c <__multiply+0x214>
    ab30:	d8c00017 	ldw	r3,0(sp)
    ab34:	1c800017 	ldw	r18,0(r3)
    ab38:	947fffcc 	andi	r17,r18,65535
    ab3c:	88001e26 	beq	r17,zero,abb8 <__multiply+0x160>
    ab40:	dd800117 	ldw	r22,4(sp)
    ab44:	dd400417 	ldw	r21,16(sp)
    ab48:	0027883a 	mov	r19,zero
    ab4c:	ac800017 	ldw	r18,0(r21)
    ab50:	b4000017 	ldw	r16,0(r22)
    ab54:	880b883a 	mov	r5,r17
    ab58:	913fffcc 	andi	r4,r18,65535
    ab5c:	00024440 	call	2444 <__mulsi3>
    ab60:	9008d43a 	srli	r4,r18,16
    ab64:	84bfffcc 	andi	r18,r16,65535
    ab68:	1485883a 	add	r2,r2,r18
    ab6c:	14e5883a 	add	r18,r2,r19
    ab70:	8020d43a 	srli	r16,r16,16
    ab74:	9026d43a 	srli	r19,r18,16
    ab78:	880b883a 	mov	r5,r17
    ab7c:	00024440 	call	2444 <__mulsi3>
    ab80:	1405883a 	add	r2,r2,r16
    ab84:	14e1883a 	add	r16,r2,r19
    ab88:	90ffffcc 	andi	r3,r18,65535
    ab8c:	8024943a 	slli	r18,r16,16
    ab90:	ad400104 	addi	r21,r21,4
    ab94:	b005883a 	mov	r2,r22
    ab98:	90c6b03a 	or	r3,r18,r3
    ab9c:	b0c00015 	stw	r3,0(r22)
    aba0:	8026d43a 	srli	r19,r16,16
    aba4:	b5800104 	addi	r22,r22,4
    aba8:	ad3fe836 	bltu	r21,r20,ab4c <__alt_mem_epcs_flash_controller_0+0xff809b4c>
    abac:	d8c00017 	ldw	r3,0(sp)
    abb0:	14c00115 	stw	r19,4(r2)
    abb4:	1c800017 	ldw	r18,0(r3)
    abb8:	9024d43a 	srli	r18,r18,16
    abbc:	90002226 	beq	r18,zero,ac48 <__multiply+0x1f0>
    abc0:	d8c00117 	ldw	r3,4(sp)
    abc4:	dd800417 	ldw	r22,16(sp)
    abc8:	002f883a 	mov	r23,zero
    abcc:	1f000017 	ldw	fp,0(r3)
    abd0:	1823883a 	mov	r17,r3
    abd4:	182b883a 	mov	r21,r3
    abd8:	e021883a 	mov	r16,fp
    abdc:	00000106 	br	abe4 <__multiply+0x18c>
    abe0:	982b883a 	mov	r21,r19
    abe4:	b100000b 	ldhu	r4,0(r22)
    abe8:	8020d43a 	srli	r16,r16,16
    abec:	900b883a 	mov	r5,r18
    abf0:	00024440 	call	2444 <__mulsi3>
    abf4:	1405883a 	add	r2,r2,r16
    abf8:	15ef883a 	add	r23,r2,r23
    abfc:	b804943a 	slli	r2,r23,16
    ac00:	e0ffffcc 	andi	r3,fp,65535
    ac04:	8c400104 	addi	r17,r17,4
    ac08:	10c6b03a 	or	r3,r2,r3
    ac0c:	88ffff15 	stw	r3,-4(r17)
    ac10:	b5800104 	addi	r22,r22,4
    ac14:	b13fff17 	ldw	r4,-4(r22)
    ac18:	acc00104 	addi	r19,r21,4
    ac1c:	900b883a 	mov	r5,r18
    ac20:	2008d43a 	srli	r4,r4,16
    ac24:	9c000017 	ldw	r16,0(r19)
    ac28:	00024440 	call	2444 <__mulsi3>
    ac2c:	b806d43a 	srli	r3,r23,16
    ac30:	813fffcc 	andi	r4,r16,65535
    ac34:	1105883a 	add	r2,r2,r4
    ac38:	10f9883a 	add	fp,r2,r3
    ac3c:	e02ed43a 	srli	r23,fp,16
    ac40:	b53fe736 	bltu	r22,r20,abe0 <__alt_mem_epcs_flash_controller_0+0xff809be0>
    ac44:	af000115 	stw	fp,4(r21)
    ac48:	d8c00017 	ldw	r3,0(sp)
    ac4c:	d9000517 	ldw	r4,20(sp)
    ac50:	18c00104 	addi	r3,r3,4
    ac54:	d8c00015 	stw	r3,0(sp)
    ac58:	d8c00117 	ldw	r3,4(sp)
    ac5c:	18c00104 	addi	r3,r3,4
    ac60:	d8c00115 	stw	r3,4(sp)
    ac64:	d8c00017 	ldw	r3,0(sp)
    ac68:	193fb136 	bltu	r3,r4,ab30 <__alt_mem_epcs_flash_controller_0+0xff809b30>
    ac6c:	d8c00217 	ldw	r3,8(sp)
    ac70:	00c00c0e 	bge	zero,r3,aca4 <__multiply+0x24c>
    ac74:	d8c00317 	ldw	r3,12(sp)
    ac78:	18bfff17 	ldw	r2,-4(r3)
    ac7c:	1d7fff04 	addi	r21,r3,-4
    ac80:	10000326 	beq	r2,zero,ac90 <__multiply+0x238>
    ac84:	00000706 	br	aca4 <__multiply+0x24c>
    ac88:	a8800017 	ldw	r2,0(r21)
    ac8c:	1000051e 	bne	r2,zero,aca4 <__multiply+0x24c>
    ac90:	d8c00217 	ldw	r3,8(sp)
    ac94:	ad7fff04 	addi	r21,r21,-4
    ac98:	18ffffc4 	addi	r3,r3,-1
    ac9c:	d8c00215 	stw	r3,8(sp)
    aca0:	183ff91e 	bne	r3,zero,ac88 <__alt_mem_epcs_flash_controller_0+0xff809c88>
    aca4:	d8c00617 	ldw	r3,24(sp)
    aca8:	d9000217 	ldw	r4,8(sp)
    acac:	1805883a 	mov	r2,r3
    acb0:	19000415 	stw	r4,16(r3)
    acb4:	dfc01017 	ldw	ra,64(sp)
    acb8:	df000f17 	ldw	fp,60(sp)
    acbc:	ddc00e17 	ldw	r23,56(sp)
    acc0:	dd800d17 	ldw	r22,52(sp)
    acc4:	dd400c17 	ldw	r21,48(sp)
    acc8:	dd000b17 	ldw	r20,44(sp)
    accc:	dcc00a17 	ldw	r19,40(sp)
    acd0:	dc800917 	ldw	r18,36(sp)
    acd4:	dc400817 	ldw	r17,32(sp)
    acd8:	dc000717 	ldw	r16,28(sp)
    acdc:	dec01104 	addi	sp,sp,68
    ace0:	f800283a 	ret

0000ace4 <__pow5mult>:
    ace4:	defffa04 	addi	sp,sp,-24
    ace8:	dcc00315 	stw	r19,12(sp)
    acec:	dc000015 	stw	r16,0(sp)
    acf0:	dfc00515 	stw	ra,20(sp)
    acf4:	dd000415 	stw	r20,16(sp)
    acf8:	dc800215 	stw	r18,8(sp)
    acfc:	dc400115 	stw	r17,4(sp)
    ad00:	308000cc 	andi	r2,r6,3
    ad04:	3021883a 	mov	r16,r6
    ad08:	2027883a 	mov	r19,r4
    ad0c:	10002f1e 	bne	r2,zero,adcc <__pow5mult+0xe8>
    ad10:	2825883a 	mov	r18,r5
    ad14:	8021d0ba 	srai	r16,r16,2
    ad18:	80001a26 	beq	r16,zero,ad84 <__pow5mult+0xa0>
    ad1c:	9c401217 	ldw	r17,72(r19)
    ad20:	8800061e 	bne	r17,zero,ad3c <__pow5mult+0x58>
    ad24:	00003406 	br	adf8 <__pow5mult+0x114>
    ad28:	8021d07a 	srai	r16,r16,1
    ad2c:	80001526 	beq	r16,zero,ad84 <__pow5mult+0xa0>
    ad30:	88800017 	ldw	r2,0(r17)
    ad34:	10001c26 	beq	r2,zero,ada8 <__pow5mult+0xc4>
    ad38:	1023883a 	mov	r17,r2
    ad3c:	8080004c 	andi	r2,r16,1
    ad40:	103ff926 	beq	r2,zero,ad28 <__alt_mem_epcs_flash_controller_0+0xff809d28>
    ad44:	880d883a 	mov	r6,r17
    ad48:	900b883a 	mov	r5,r18
    ad4c:	9809883a 	mov	r4,r19
    ad50:	000aa580 	call	aa58 <__multiply>
    ad54:	90001b26 	beq	r18,zero,adc4 <__pow5mult+0xe0>
    ad58:	91000117 	ldw	r4,4(r18)
    ad5c:	98c01317 	ldw	r3,76(r19)
    ad60:	8021d07a 	srai	r16,r16,1
    ad64:	2109883a 	add	r4,r4,r4
    ad68:	2109883a 	add	r4,r4,r4
    ad6c:	1907883a 	add	r3,r3,r4
    ad70:	19000017 	ldw	r4,0(r3)
    ad74:	91000015 	stw	r4,0(r18)
    ad78:	1c800015 	stw	r18,0(r3)
    ad7c:	1025883a 	mov	r18,r2
    ad80:	803feb1e 	bne	r16,zero,ad30 <__alt_mem_epcs_flash_controller_0+0xff809d30>
    ad84:	9005883a 	mov	r2,r18
    ad88:	dfc00517 	ldw	ra,20(sp)
    ad8c:	dd000417 	ldw	r20,16(sp)
    ad90:	dcc00317 	ldw	r19,12(sp)
    ad94:	dc800217 	ldw	r18,8(sp)
    ad98:	dc400117 	ldw	r17,4(sp)
    ad9c:	dc000017 	ldw	r16,0(sp)
    ada0:	dec00604 	addi	sp,sp,24
    ada4:	f800283a 	ret
    ada8:	880d883a 	mov	r6,r17
    adac:	880b883a 	mov	r5,r17
    adb0:	9809883a 	mov	r4,r19
    adb4:	000aa580 	call	aa58 <__multiply>
    adb8:	88800015 	stw	r2,0(r17)
    adbc:	10000015 	stw	zero,0(r2)
    adc0:	003fdd06 	br	ad38 <__alt_mem_epcs_flash_controller_0+0xff809d38>
    adc4:	1025883a 	mov	r18,r2
    adc8:	003fd706 	br	ad28 <__alt_mem_epcs_flash_controller_0+0xff809d28>
    adcc:	10bfffc4 	addi	r2,r2,-1
    add0:	1085883a 	add	r2,r2,r2
    add4:	00c000b4 	movhi	r3,2
    add8:	18f82604 	addi	r3,r3,-8040
    addc:	1085883a 	add	r2,r2,r2
    ade0:	1885883a 	add	r2,r3,r2
    ade4:	11800017 	ldw	r6,0(r2)
    ade8:	000f883a 	mov	r7,zero
    adec:	000a6b80 	call	a6b8 <__multadd>
    adf0:	1025883a 	mov	r18,r2
    adf4:	003fc706 	br	ad14 <__alt_mem_epcs_flash_controller_0+0xff809d14>
    adf8:	05000044 	movi	r20,1
    adfc:	a00b883a 	mov	r5,r20
    ae00:	9809883a 	mov	r4,r19
    ae04:	000a5e80 	call	a5e8 <_Balloc>
    ae08:	1023883a 	mov	r17,r2
    ae0c:	00809c44 	movi	r2,625
    ae10:	88800515 	stw	r2,20(r17)
    ae14:	8d000415 	stw	r20,16(r17)
    ae18:	9c401215 	stw	r17,72(r19)
    ae1c:	88000015 	stw	zero,0(r17)
    ae20:	003fc606 	br	ad3c <__alt_mem_epcs_flash_controller_0+0xff809d3c>

0000ae24 <__lshift>:
    ae24:	defff904 	addi	sp,sp,-28
    ae28:	dd400515 	stw	r21,20(sp)
    ae2c:	dcc00315 	stw	r19,12(sp)
    ae30:	302bd17a 	srai	r21,r6,5
    ae34:	2cc00417 	ldw	r19,16(r5)
    ae38:	28800217 	ldw	r2,8(r5)
    ae3c:	dd000415 	stw	r20,16(sp)
    ae40:	ace7883a 	add	r19,r21,r19
    ae44:	dc800215 	stw	r18,8(sp)
    ae48:	dc400115 	stw	r17,4(sp)
    ae4c:	dc000015 	stw	r16,0(sp)
    ae50:	dfc00615 	stw	ra,24(sp)
    ae54:	9c000044 	addi	r16,r19,1
    ae58:	2823883a 	mov	r17,r5
    ae5c:	3029883a 	mov	r20,r6
    ae60:	2025883a 	mov	r18,r4
    ae64:	29400117 	ldw	r5,4(r5)
    ae68:	1400030e 	bge	r2,r16,ae78 <__lshift+0x54>
    ae6c:	1085883a 	add	r2,r2,r2
    ae70:	29400044 	addi	r5,r5,1
    ae74:	143ffd16 	blt	r2,r16,ae6c <__alt_mem_epcs_flash_controller_0+0xff809e6c>
    ae78:	9009883a 	mov	r4,r18
    ae7c:	000a5e80 	call	a5e8 <_Balloc>
    ae80:	10c00504 	addi	r3,r2,20
    ae84:	0540070e 	bge	zero,r21,aea4 <__lshift+0x80>
    ae88:	ad6b883a 	add	r21,r21,r21
    ae8c:	ad6b883a 	add	r21,r21,r21
    ae90:	1809883a 	mov	r4,r3
    ae94:	1d47883a 	add	r3,r3,r21
    ae98:	20000015 	stw	zero,0(r4)
    ae9c:	21000104 	addi	r4,r4,4
    aea0:	193ffd1e 	bne	r3,r4,ae98 <__alt_mem_epcs_flash_controller_0+0xff809e98>
    aea4:	8a000417 	ldw	r8,16(r17)
    aea8:	89000504 	addi	r4,r17,20
    aeac:	a18007cc 	andi	r6,r20,31
    aeb0:	4211883a 	add	r8,r8,r8
    aeb4:	4211883a 	add	r8,r8,r8
    aeb8:	2211883a 	add	r8,r4,r8
    aebc:	30002326 	beq	r6,zero,af4c <__lshift+0x128>
    aec0:	02400804 	movi	r9,32
    aec4:	4993c83a 	sub	r9,r9,r6
    aec8:	000b883a 	mov	r5,zero
    aecc:	21c00017 	ldw	r7,0(r4)
    aed0:	1815883a 	mov	r10,r3
    aed4:	18c00104 	addi	r3,r3,4
    aed8:	398e983a 	sll	r7,r7,r6
    aedc:	21000104 	addi	r4,r4,4
    aee0:	394ab03a 	or	r5,r7,r5
    aee4:	197fff15 	stw	r5,-4(r3)
    aee8:	217fff17 	ldw	r5,-4(r4)
    aeec:	2a4ad83a 	srl	r5,r5,r9
    aef0:	223ff636 	bltu	r4,r8,aecc <__alt_mem_epcs_flash_controller_0+0xff809ecc>
    aef4:	51400115 	stw	r5,4(r10)
    aef8:	28001a1e 	bne	r5,zero,af64 <__lshift+0x140>
    aefc:	843fffc4 	addi	r16,r16,-1
    af00:	14000415 	stw	r16,16(r2)
    af04:	88000826 	beq	r17,zero,af28 <__lshift+0x104>
    af08:	89000117 	ldw	r4,4(r17)
    af0c:	90c01317 	ldw	r3,76(r18)
    af10:	2109883a 	add	r4,r4,r4
    af14:	2109883a 	add	r4,r4,r4
    af18:	1907883a 	add	r3,r3,r4
    af1c:	19000017 	ldw	r4,0(r3)
    af20:	89000015 	stw	r4,0(r17)
    af24:	1c400015 	stw	r17,0(r3)
    af28:	dfc00617 	ldw	ra,24(sp)
    af2c:	dd400517 	ldw	r21,20(sp)
    af30:	dd000417 	ldw	r20,16(sp)
    af34:	dcc00317 	ldw	r19,12(sp)
    af38:	dc800217 	ldw	r18,8(sp)
    af3c:	dc400117 	ldw	r17,4(sp)
    af40:	dc000017 	ldw	r16,0(sp)
    af44:	dec00704 	addi	sp,sp,28
    af48:	f800283a 	ret
    af4c:	21400017 	ldw	r5,0(r4)
    af50:	18c00104 	addi	r3,r3,4
    af54:	21000104 	addi	r4,r4,4
    af58:	197fff15 	stw	r5,-4(r3)
    af5c:	223ffb36 	bltu	r4,r8,af4c <__alt_mem_epcs_flash_controller_0+0xff809f4c>
    af60:	003fe606 	br	aefc <__alt_mem_epcs_flash_controller_0+0xff809efc>
    af64:	9c000084 	addi	r16,r19,2
    af68:	003fe406 	br	aefc <__alt_mem_epcs_flash_controller_0+0xff809efc>

0000af6c <__mcmp>:
    af6c:	20800417 	ldw	r2,16(r4)
    af70:	28c00417 	ldw	r3,16(r5)
    af74:	10c5c83a 	sub	r2,r2,r3
    af78:	1000111e 	bne	r2,zero,afc0 <__mcmp+0x54>
    af7c:	18c7883a 	add	r3,r3,r3
    af80:	18c7883a 	add	r3,r3,r3
    af84:	21000504 	addi	r4,r4,20
    af88:	29400504 	addi	r5,r5,20
    af8c:	20c5883a 	add	r2,r4,r3
    af90:	28cb883a 	add	r5,r5,r3
    af94:	00000106 	br	af9c <__mcmp+0x30>
    af98:	20800a2e 	bgeu	r4,r2,afc4 <__mcmp+0x58>
    af9c:	10bfff04 	addi	r2,r2,-4
    afa0:	297fff04 	addi	r5,r5,-4
    afa4:	11800017 	ldw	r6,0(r2)
    afa8:	28c00017 	ldw	r3,0(r5)
    afac:	30fffa26 	beq	r6,r3,af98 <__alt_mem_epcs_flash_controller_0+0xff809f98>
    afb0:	30c00236 	bltu	r6,r3,afbc <__mcmp+0x50>
    afb4:	00800044 	movi	r2,1
    afb8:	f800283a 	ret
    afbc:	00bfffc4 	movi	r2,-1
    afc0:	f800283a 	ret
    afc4:	0005883a 	mov	r2,zero
    afc8:	f800283a 	ret

0000afcc <__mdiff>:
    afcc:	28c00417 	ldw	r3,16(r5)
    afd0:	30800417 	ldw	r2,16(r6)
    afd4:	defffa04 	addi	sp,sp,-24
    afd8:	dcc00315 	stw	r19,12(sp)
    afdc:	dc800215 	stw	r18,8(sp)
    afe0:	dfc00515 	stw	ra,20(sp)
    afe4:	dd000415 	stw	r20,16(sp)
    afe8:	dc400115 	stw	r17,4(sp)
    afec:	dc000015 	stw	r16,0(sp)
    aff0:	1887c83a 	sub	r3,r3,r2
    aff4:	2825883a 	mov	r18,r5
    aff8:	3027883a 	mov	r19,r6
    affc:	1800141e 	bne	r3,zero,b050 <__mdiff+0x84>
    b000:	1085883a 	add	r2,r2,r2
    b004:	1085883a 	add	r2,r2,r2
    b008:	2a000504 	addi	r8,r5,20
    b00c:	34000504 	addi	r16,r6,20
    b010:	4087883a 	add	r3,r8,r2
    b014:	8085883a 	add	r2,r16,r2
    b018:	00000106 	br	b020 <__mdiff+0x54>
    b01c:	40c0592e 	bgeu	r8,r3,b184 <__mdiff+0x1b8>
    b020:	18ffff04 	addi	r3,r3,-4
    b024:	10bfff04 	addi	r2,r2,-4
    b028:	19c00017 	ldw	r7,0(r3)
    b02c:	11400017 	ldw	r5,0(r2)
    b030:	397ffa26 	beq	r7,r5,b01c <__alt_mem_epcs_flash_controller_0+0xff80a01c>
    b034:	3940592e 	bgeu	r7,r5,b19c <__mdiff+0x1d0>
    b038:	9005883a 	mov	r2,r18
    b03c:	4023883a 	mov	r17,r8
    b040:	9825883a 	mov	r18,r19
    b044:	05000044 	movi	r20,1
    b048:	1027883a 	mov	r19,r2
    b04c:	00000406 	br	b060 <__mdiff+0x94>
    b050:	18005616 	blt	r3,zero,b1ac <__mdiff+0x1e0>
    b054:	34400504 	addi	r17,r6,20
    b058:	2c000504 	addi	r16,r5,20
    b05c:	0029883a 	mov	r20,zero
    b060:	91400117 	ldw	r5,4(r18)
    b064:	000a5e80 	call	a5e8 <_Balloc>
    b068:	92400417 	ldw	r9,16(r18)
    b06c:	9b000417 	ldw	r12,16(r19)
    b070:	12c00504 	addi	r11,r2,20
    b074:	4a51883a 	add	r8,r9,r9
    b078:	6319883a 	add	r12,r12,r12
    b07c:	4211883a 	add	r8,r8,r8
    b080:	6319883a 	add	r12,r12,r12
    b084:	15000315 	stw	r20,12(r2)
    b088:	8211883a 	add	r8,r16,r8
    b08c:	8b19883a 	add	r12,r17,r12
    b090:	0007883a 	mov	r3,zero
    b094:	81400017 	ldw	r5,0(r16)
    b098:	89c00017 	ldw	r7,0(r17)
    b09c:	59800104 	addi	r6,r11,4
    b0a0:	293fffcc 	andi	r4,r5,65535
    b0a4:	20c7883a 	add	r3,r4,r3
    b0a8:	393fffcc 	andi	r4,r7,65535
    b0ac:	1909c83a 	sub	r4,r3,r4
    b0b0:	280ad43a 	srli	r5,r5,16
    b0b4:	380ed43a 	srli	r7,r7,16
    b0b8:	2007d43a 	srai	r3,r4,16
    b0bc:	213fffcc 	andi	r4,r4,65535
    b0c0:	29cbc83a 	sub	r5,r5,r7
    b0c4:	28c7883a 	add	r3,r5,r3
    b0c8:	180a943a 	slli	r5,r3,16
    b0cc:	8c400104 	addi	r17,r17,4
    b0d0:	84000104 	addi	r16,r16,4
    b0d4:	2908b03a 	or	r4,r5,r4
    b0d8:	59000015 	stw	r4,0(r11)
    b0dc:	1807d43a 	srai	r3,r3,16
    b0e0:	3015883a 	mov	r10,r6
    b0e4:	3017883a 	mov	r11,r6
    b0e8:	8b3fea36 	bltu	r17,r12,b094 <__alt_mem_epcs_flash_controller_0+0xff80a094>
    b0ec:	8200162e 	bgeu	r16,r8,b148 <__mdiff+0x17c>
    b0f0:	8017883a 	mov	r11,r16
    b0f4:	59400017 	ldw	r5,0(r11)
    b0f8:	31800104 	addi	r6,r6,4
    b0fc:	5ac00104 	addi	r11,r11,4
    b100:	293fffcc 	andi	r4,r5,65535
    b104:	20c7883a 	add	r3,r4,r3
    b108:	280ed43a 	srli	r7,r5,16
    b10c:	180bd43a 	srai	r5,r3,16
    b110:	193fffcc 	andi	r4,r3,65535
    b114:	3947883a 	add	r3,r7,r5
    b118:	180a943a 	slli	r5,r3,16
    b11c:	1807d43a 	srai	r3,r3,16
    b120:	2908b03a 	or	r4,r5,r4
    b124:	313fff15 	stw	r4,-4(r6)
    b128:	5a3ff236 	bltu	r11,r8,b0f4 <__alt_mem_epcs_flash_controller_0+0xff80a0f4>
    b12c:	0406303a 	nor	r3,zero,r16
    b130:	1a07883a 	add	r3,r3,r8
    b134:	1806d0ba 	srli	r3,r3,2
    b138:	18c00044 	addi	r3,r3,1
    b13c:	18c7883a 	add	r3,r3,r3
    b140:	18c7883a 	add	r3,r3,r3
    b144:	50d5883a 	add	r10,r10,r3
    b148:	50ffff04 	addi	r3,r10,-4
    b14c:	2000041e 	bne	r4,zero,b160 <__mdiff+0x194>
    b150:	18ffff04 	addi	r3,r3,-4
    b154:	19000017 	ldw	r4,0(r3)
    b158:	4a7fffc4 	addi	r9,r9,-1
    b15c:	203ffc26 	beq	r4,zero,b150 <__alt_mem_epcs_flash_controller_0+0xff80a150>
    b160:	12400415 	stw	r9,16(r2)
    b164:	dfc00517 	ldw	ra,20(sp)
    b168:	dd000417 	ldw	r20,16(sp)
    b16c:	dcc00317 	ldw	r19,12(sp)
    b170:	dc800217 	ldw	r18,8(sp)
    b174:	dc400117 	ldw	r17,4(sp)
    b178:	dc000017 	ldw	r16,0(sp)
    b17c:	dec00604 	addi	sp,sp,24
    b180:	f800283a 	ret
    b184:	000b883a 	mov	r5,zero
    b188:	000a5e80 	call	a5e8 <_Balloc>
    b18c:	00c00044 	movi	r3,1
    b190:	10c00415 	stw	r3,16(r2)
    b194:	10000515 	stw	zero,20(r2)
    b198:	003ff206 	br	b164 <__alt_mem_epcs_flash_controller_0+0xff80a164>
    b19c:	8023883a 	mov	r17,r16
    b1a0:	0029883a 	mov	r20,zero
    b1a4:	4021883a 	mov	r16,r8
    b1a8:	003fad06 	br	b060 <__alt_mem_epcs_flash_controller_0+0xff80a060>
    b1ac:	9005883a 	mov	r2,r18
    b1b0:	94400504 	addi	r17,r18,20
    b1b4:	9c000504 	addi	r16,r19,20
    b1b8:	9825883a 	mov	r18,r19
    b1bc:	05000044 	movi	r20,1
    b1c0:	1027883a 	mov	r19,r2
    b1c4:	003fa606 	br	b060 <__alt_mem_epcs_flash_controller_0+0xff80a060>

0000b1c8 <__ulp>:
    b1c8:	295ffc2c 	andhi	r5,r5,32752
    b1cc:	00bf3034 	movhi	r2,64704
    b1d0:	2887883a 	add	r3,r5,r2
    b1d4:	00c0020e 	bge	zero,r3,b1e0 <__ulp+0x18>
    b1d8:	0005883a 	mov	r2,zero
    b1dc:	f800283a 	ret
    b1e0:	00c7c83a 	sub	r3,zero,r3
    b1e4:	1807d53a 	srai	r3,r3,20
    b1e8:	008004c4 	movi	r2,19
    b1ec:	10c00b0e 	bge	r2,r3,b21c <__ulp+0x54>
    b1f0:	18bffb04 	addi	r2,r3,-20
    b1f4:	01000784 	movi	r4,30
    b1f8:	0007883a 	mov	r3,zero
    b1fc:	20800516 	blt	r4,r2,b214 <__ulp+0x4c>
    b200:	010007c4 	movi	r4,31
    b204:	2089c83a 	sub	r4,r4,r2
    b208:	00800044 	movi	r2,1
    b20c:	1104983a 	sll	r2,r2,r4
    b210:	f800283a 	ret
    b214:	00800044 	movi	r2,1
    b218:	f800283a 	ret
    b21c:	01400234 	movhi	r5,8
    b220:	28c7d83a 	sra	r3,r5,r3
    b224:	0005883a 	mov	r2,zero
    b228:	f800283a 	ret

0000b22c <__b2d>:
    b22c:	defffa04 	addi	sp,sp,-24
    b230:	dc000015 	stw	r16,0(sp)
    b234:	24000417 	ldw	r16,16(r4)
    b238:	dc400115 	stw	r17,4(sp)
    b23c:	24400504 	addi	r17,r4,20
    b240:	8421883a 	add	r16,r16,r16
    b244:	8421883a 	add	r16,r16,r16
    b248:	8c21883a 	add	r16,r17,r16
    b24c:	dc800215 	stw	r18,8(sp)
    b250:	84bfff17 	ldw	r18,-4(r16)
    b254:	dd000415 	stw	r20,16(sp)
    b258:	dcc00315 	stw	r19,12(sp)
    b25c:	9009883a 	mov	r4,r18
    b260:	2829883a 	mov	r20,r5
    b264:	dfc00515 	stw	ra,20(sp)
    b268:	000a9040 	call	a904 <__hi0bits>
    b26c:	00c00804 	movi	r3,32
    b270:	1889c83a 	sub	r4,r3,r2
    b274:	a1000015 	stw	r4,0(r20)
    b278:	01000284 	movi	r4,10
    b27c:	84ffff04 	addi	r19,r16,-4
    b280:	20801216 	blt	r4,r2,b2cc <__b2d+0xa0>
    b284:	018002c4 	movi	r6,11
    b288:	308dc83a 	sub	r6,r6,r2
    b28c:	9186d83a 	srl	r3,r18,r6
    b290:	18cffc34 	orhi	r3,r3,16368
    b294:	8cc0212e 	bgeu	r17,r19,b31c <__b2d+0xf0>
    b298:	813ffe17 	ldw	r4,-8(r16)
    b29c:	218cd83a 	srl	r6,r4,r6
    b2a0:	10800544 	addi	r2,r2,21
    b2a4:	9084983a 	sll	r2,r18,r2
    b2a8:	1184b03a 	or	r2,r2,r6
    b2ac:	dfc00517 	ldw	ra,20(sp)
    b2b0:	dd000417 	ldw	r20,16(sp)
    b2b4:	dcc00317 	ldw	r19,12(sp)
    b2b8:	dc800217 	ldw	r18,8(sp)
    b2bc:	dc400117 	ldw	r17,4(sp)
    b2c0:	dc000017 	ldw	r16,0(sp)
    b2c4:	dec00604 	addi	sp,sp,24
    b2c8:	f800283a 	ret
    b2cc:	8cc00f2e 	bgeu	r17,r19,b30c <__b2d+0xe0>
    b2d0:	117ffd44 	addi	r5,r2,-11
    b2d4:	80bffe17 	ldw	r2,-8(r16)
    b2d8:	28000e26 	beq	r5,zero,b314 <__b2d+0xe8>
    b2dc:	1949c83a 	sub	r4,r3,r5
    b2e0:	9164983a 	sll	r18,r18,r5
    b2e4:	1106d83a 	srl	r3,r2,r4
    b2e8:	81bffe04 	addi	r6,r16,-8
    b2ec:	948ffc34 	orhi	r18,r18,16368
    b2f0:	90c6b03a 	or	r3,r18,r3
    b2f4:	89800e2e 	bgeu	r17,r6,b330 <__b2d+0x104>
    b2f8:	81bffd17 	ldw	r6,-12(r16)
    b2fc:	1144983a 	sll	r2,r2,r5
    b300:	310ad83a 	srl	r5,r6,r4
    b304:	2884b03a 	or	r2,r5,r2
    b308:	003fe806 	br	b2ac <__alt_mem_epcs_flash_controller_0+0xff80a2ac>
    b30c:	10bffd44 	addi	r2,r2,-11
    b310:	1000041e 	bne	r2,zero,b324 <__b2d+0xf8>
    b314:	90cffc34 	orhi	r3,r18,16368
    b318:	003fe406 	br	b2ac <__alt_mem_epcs_flash_controller_0+0xff80a2ac>
    b31c:	000d883a 	mov	r6,zero
    b320:	003fdf06 	br	b2a0 <__alt_mem_epcs_flash_controller_0+0xff80a2a0>
    b324:	90a4983a 	sll	r18,r18,r2
    b328:	0005883a 	mov	r2,zero
    b32c:	003ff906 	br	b314 <__alt_mem_epcs_flash_controller_0+0xff80a314>
    b330:	1144983a 	sll	r2,r2,r5
    b334:	003fdd06 	br	b2ac <__alt_mem_epcs_flash_controller_0+0xff80a2ac>

0000b338 <__d2b>:
    b338:	defff804 	addi	sp,sp,-32
    b33c:	dc000215 	stw	r16,8(sp)
    b340:	3021883a 	mov	r16,r6
    b344:	dc400315 	stw	r17,12(sp)
    b348:	8022907a 	slli	r17,r16,1
    b34c:	dd000615 	stw	r20,24(sp)
    b350:	2829883a 	mov	r20,r5
    b354:	01400044 	movi	r5,1
    b358:	dcc00515 	stw	r19,20(sp)
    b35c:	dc800415 	stw	r18,16(sp)
    b360:	dfc00715 	stw	ra,28(sp)
    b364:	3825883a 	mov	r18,r7
    b368:	8822d57a 	srli	r17,r17,21
    b36c:	000a5e80 	call	a5e8 <_Balloc>
    b370:	1027883a 	mov	r19,r2
    b374:	00800434 	movhi	r2,16
    b378:	10bfffc4 	addi	r2,r2,-1
    b37c:	808c703a 	and	r6,r16,r2
    b380:	88000126 	beq	r17,zero,b388 <__d2b+0x50>
    b384:	31800434 	orhi	r6,r6,16
    b388:	d9800015 	stw	r6,0(sp)
    b38c:	a0002426 	beq	r20,zero,b420 <__d2b+0xe8>
    b390:	d9000104 	addi	r4,sp,4
    b394:	dd000115 	stw	r20,4(sp)
    b398:	000a96c0 	call	a96c <__lo0bits>
    b39c:	d8c00017 	ldw	r3,0(sp)
    b3a0:	10002f1e 	bne	r2,zero,b460 <__d2b+0x128>
    b3a4:	d9000117 	ldw	r4,4(sp)
    b3a8:	99000515 	stw	r4,20(r19)
    b3ac:	1821003a 	cmpeq	r16,r3,zero
    b3b0:	01000084 	movi	r4,2
    b3b4:	2421c83a 	sub	r16,r4,r16
    b3b8:	98c00615 	stw	r3,24(r19)
    b3bc:	9c000415 	stw	r16,16(r19)
    b3c0:	88001f1e 	bne	r17,zero,b440 <__d2b+0x108>
    b3c4:	10bef384 	addi	r2,r2,-1074
    b3c8:	90800015 	stw	r2,0(r18)
    b3cc:	00900034 	movhi	r2,16384
    b3d0:	10bfffc4 	addi	r2,r2,-1
    b3d4:	8085883a 	add	r2,r16,r2
    b3d8:	1085883a 	add	r2,r2,r2
    b3dc:	1085883a 	add	r2,r2,r2
    b3e0:	9885883a 	add	r2,r19,r2
    b3e4:	11000517 	ldw	r4,20(r2)
    b3e8:	8020917a 	slli	r16,r16,5
    b3ec:	000a9040 	call	a904 <__hi0bits>
    b3f0:	d8c00817 	ldw	r3,32(sp)
    b3f4:	8085c83a 	sub	r2,r16,r2
    b3f8:	18800015 	stw	r2,0(r3)
    b3fc:	9805883a 	mov	r2,r19
    b400:	dfc00717 	ldw	ra,28(sp)
    b404:	dd000617 	ldw	r20,24(sp)
    b408:	dcc00517 	ldw	r19,20(sp)
    b40c:	dc800417 	ldw	r18,16(sp)
    b410:	dc400317 	ldw	r17,12(sp)
    b414:	dc000217 	ldw	r16,8(sp)
    b418:	dec00804 	addi	sp,sp,32
    b41c:	f800283a 	ret
    b420:	d809883a 	mov	r4,sp
    b424:	000a96c0 	call	a96c <__lo0bits>
    b428:	d8c00017 	ldw	r3,0(sp)
    b42c:	04000044 	movi	r16,1
    b430:	9c000415 	stw	r16,16(r19)
    b434:	98c00515 	stw	r3,20(r19)
    b438:	10800804 	addi	r2,r2,32
    b43c:	883fe126 	beq	r17,zero,b3c4 <__alt_mem_epcs_flash_controller_0+0xff80a3c4>
    b440:	00c00d44 	movi	r3,53
    b444:	8c7ef344 	addi	r17,r17,-1075
    b448:	88a3883a 	add	r17,r17,r2
    b44c:	1885c83a 	sub	r2,r3,r2
    b450:	d8c00817 	ldw	r3,32(sp)
    b454:	94400015 	stw	r17,0(r18)
    b458:	18800015 	stw	r2,0(r3)
    b45c:	003fe706 	br	b3fc <__alt_mem_epcs_flash_controller_0+0xff80a3fc>
    b460:	01000804 	movi	r4,32
    b464:	2089c83a 	sub	r4,r4,r2
    b468:	1908983a 	sll	r4,r3,r4
    b46c:	d9400117 	ldw	r5,4(sp)
    b470:	1886d83a 	srl	r3,r3,r2
    b474:	2148b03a 	or	r4,r4,r5
    b478:	99000515 	stw	r4,20(r19)
    b47c:	d8c00015 	stw	r3,0(sp)
    b480:	003fca06 	br	b3ac <__alt_mem_epcs_flash_controller_0+0xff80a3ac>

0000b484 <__ratio>:
    b484:	defff904 	addi	sp,sp,-28
    b488:	dc400315 	stw	r17,12(sp)
    b48c:	2823883a 	mov	r17,r5
    b490:	d9400104 	addi	r5,sp,4
    b494:	dfc00615 	stw	ra,24(sp)
    b498:	dcc00515 	stw	r19,20(sp)
    b49c:	dc800415 	stw	r18,16(sp)
    b4a0:	2027883a 	mov	r19,r4
    b4a4:	dc000215 	stw	r16,8(sp)
    b4a8:	000b22c0 	call	b22c <__b2d>
    b4ac:	d80b883a 	mov	r5,sp
    b4b0:	8809883a 	mov	r4,r17
    b4b4:	1025883a 	mov	r18,r2
    b4b8:	1821883a 	mov	r16,r3
    b4bc:	000b22c0 	call	b22c <__b2d>
    b4c0:	8a000417 	ldw	r8,16(r17)
    b4c4:	99000417 	ldw	r4,16(r19)
    b4c8:	d9400117 	ldw	r5,4(sp)
    b4cc:	2209c83a 	sub	r4,r4,r8
    b4d0:	2010917a 	slli	r8,r4,5
    b4d4:	d9000017 	ldw	r4,0(sp)
    b4d8:	2909c83a 	sub	r4,r5,r4
    b4dc:	4109883a 	add	r4,r8,r4
    b4e0:	01000e0e 	bge	zero,r4,b51c <__ratio+0x98>
    b4e4:	2008953a 	slli	r4,r4,20
    b4e8:	2421883a 	add	r16,r4,r16
    b4ec:	100d883a 	mov	r6,r2
    b4f0:	180f883a 	mov	r7,r3
    b4f4:	9009883a 	mov	r4,r18
    b4f8:	800b883a 	mov	r5,r16
    b4fc:	00176d80 	call	176d8 <__divdf3>
    b500:	dfc00617 	ldw	ra,24(sp)
    b504:	dcc00517 	ldw	r19,20(sp)
    b508:	dc800417 	ldw	r18,16(sp)
    b50c:	dc400317 	ldw	r17,12(sp)
    b510:	dc000217 	ldw	r16,8(sp)
    b514:	dec00704 	addi	sp,sp,28
    b518:	f800283a 	ret
    b51c:	2008953a 	slli	r4,r4,20
    b520:	1907c83a 	sub	r3,r3,r4
    b524:	003ff106 	br	b4ec <__alt_mem_epcs_flash_controller_0+0xff80a4ec>

0000b528 <_mprec_log10>:
    b528:	defffe04 	addi	sp,sp,-8
    b52c:	dc000015 	stw	r16,0(sp)
    b530:	dfc00115 	stw	ra,4(sp)
    b534:	008005c4 	movi	r2,23
    b538:	2021883a 	mov	r16,r4
    b53c:	11000d0e 	bge	r2,r4,b574 <_mprec_log10+0x4c>
    b540:	0005883a 	mov	r2,zero
    b544:	00cffc34 	movhi	r3,16368
    b548:	843fffc4 	addi	r16,r16,-1
    b54c:	000d883a 	mov	r6,zero
    b550:	01d00934 	movhi	r7,16420
    b554:	1009883a 	mov	r4,r2
    b558:	180b883a 	mov	r5,r3
    b55c:	00183000 	call	18300 <__muldf3>
    b560:	803ff91e 	bne	r16,zero,b548 <__alt_mem_epcs_flash_controller_0+0xff80a548>
    b564:	dfc00117 	ldw	ra,4(sp)
    b568:	dc000017 	ldw	r16,0(sp)
    b56c:	dec00204 	addi	sp,sp,8
    b570:	f800283a 	ret
    b574:	202090fa 	slli	r16,r4,3
    b578:	008000b4 	movhi	r2,2
    b57c:	10b83d04 	addi	r2,r2,-7948
    b580:	1421883a 	add	r16,r2,r16
    b584:	80800017 	ldw	r2,0(r16)
    b588:	80c00117 	ldw	r3,4(r16)
    b58c:	dfc00117 	ldw	ra,4(sp)
    b590:	dc000017 	ldw	r16,0(sp)
    b594:	dec00204 	addi	sp,sp,8
    b598:	f800283a 	ret

0000b59c <__copybits>:
    b59c:	297fffc4 	addi	r5,r5,-1
    b5a0:	280fd17a 	srai	r7,r5,5
    b5a4:	30c00417 	ldw	r3,16(r6)
    b5a8:	30800504 	addi	r2,r6,20
    b5ac:	39c00044 	addi	r7,r7,1
    b5b0:	18c7883a 	add	r3,r3,r3
    b5b4:	39cf883a 	add	r7,r7,r7
    b5b8:	18c7883a 	add	r3,r3,r3
    b5bc:	39cf883a 	add	r7,r7,r7
    b5c0:	10c7883a 	add	r3,r2,r3
    b5c4:	21cf883a 	add	r7,r4,r7
    b5c8:	10c00d2e 	bgeu	r2,r3,b600 <__copybits+0x64>
    b5cc:	200b883a 	mov	r5,r4
    b5d0:	12000017 	ldw	r8,0(r2)
    b5d4:	29400104 	addi	r5,r5,4
    b5d8:	10800104 	addi	r2,r2,4
    b5dc:	2a3fff15 	stw	r8,-4(r5)
    b5e0:	10fffb36 	bltu	r2,r3,b5d0 <__alt_mem_epcs_flash_controller_0+0xff80a5d0>
    b5e4:	1985c83a 	sub	r2,r3,r6
    b5e8:	10bffac4 	addi	r2,r2,-21
    b5ec:	1004d0ba 	srli	r2,r2,2
    b5f0:	10800044 	addi	r2,r2,1
    b5f4:	1085883a 	add	r2,r2,r2
    b5f8:	1085883a 	add	r2,r2,r2
    b5fc:	2089883a 	add	r4,r4,r2
    b600:	21c0032e 	bgeu	r4,r7,b610 <__copybits+0x74>
    b604:	20000015 	stw	zero,0(r4)
    b608:	21000104 	addi	r4,r4,4
    b60c:	21fffd36 	bltu	r4,r7,b604 <__alt_mem_epcs_flash_controller_0+0xff80a604>
    b610:	f800283a 	ret

0000b614 <__any_on>:
    b614:	20c00417 	ldw	r3,16(r4)
    b618:	2805d17a 	srai	r2,r5,5
    b61c:	21000504 	addi	r4,r4,20
    b620:	18800d0e 	bge	r3,r2,b658 <__any_on+0x44>
    b624:	18c7883a 	add	r3,r3,r3
    b628:	18c7883a 	add	r3,r3,r3
    b62c:	20c7883a 	add	r3,r4,r3
    b630:	20c0192e 	bgeu	r4,r3,b698 <__any_on+0x84>
    b634:	18bfff17 	ldw	r2,-4(r3)
    b638:	18ffff04 	addi	r3,r3,-4
    b63c:	1000041e 	bne	r2,zero,b650 <__any_on+0x3c>
    b640:	20c0142e 	bgeu	r4,r3,b694 <__any_on+0x80>
    b644:	18ffff04 	addi	r3,r3,-4
    b648:	19400017 	ldw	r5,0(r3)
    b64c:	283ffc26 	beq	r5,zero,b640 <__alt_mem_epcs_flash_controller_0+0xff80a640>
    b650:	00800044 	movi	r2,1
    b654:	f800283a 	ret
    b658:	10c00a0e 	bge	r2,r3,b684 <__any_on+0x70>
    b65c:	1085883a 	add	r2,r2,r2
    b660:	1085883a 	add	r2,r2,r2
    b664:	294007cc 	andi	r5,r5,31
    b668:	2087883a 	add	r3,r4,r2
    b66c:	283ff026 	beq	r5,zero,b630 <__alt_mem_epcs_flash_controller_0+0xff80a630>
    b670:	19800017 	ldw	r6,0(r3)
    b674:	3144d83a 	srl	r2,r6,r5
    b678:	114a983a 	sll	r5,r2,r5
    b67c:	317ff41e 	bne	r6,r5,b650 <__alt_mem_epcs_flash_controller_0+0xff80a650>
    b680:	003feb06 	br	b630 <__alt_mem_epcs_flash_controller_0+0xff80a630>
    b684:	1085883a 	add	r2,r2,r2
    b688:	1085883a 	add	r2,r2,r2
    b68c:	2087883a 	add	r3,r4,r2
    b690:	003fe706 	br	b630 <__alt_mem_epcs_flash_controller_0+0xff80a630>
    b694:	f800283a 	ret
    b698:	0005883a 	mov	r2,zero
    b69c:	f800283a 	ret

0000b6a0 <_putc_r>:
    b6a0:	defffc04 	addi	sp,sp,-16
    b6a4:	dc000215 	stw	r16,8(sp)
    b6a8:	dfc00315 	stw	ra,12(sp)
    b6ac:	2021883a 	mov	r16,r4
    b6b0:	20000226 	beq	r4,zero,b6bc <_putc_r+0x1c>
    b6b4:	20800e17 	ldw	r2,56(r4)
    b6b8:	10001b26 	beq	r2,zero,b728 <_putc_r+0x88>
    b6bc:	30800217 	ldw	r2,8(r6)
    b6c0:	10bfffc4 	addi	r2,r2,-1
    b6c4:	30800215 	stw	r2,8(r6)
    b6c8:	10000a16 	blt	r2,zero,b6f4 <_putc_r+0x54>
    b6cc:	30800017 	ldw	r2,0(r6)
    b6d0:	11400005 	stb	r5,0(r2)
    b6d4:	30800017 	ldw	r2,0(r6)
    b6d8:	10c00044 	addi	r3,r2,1
    b6dc:	30c00015 	stw	r3,0(r6)
    b6e0:	10800003 	ldbu	r2,0(r2)
    b6e4:	dfc00317 	ldw	ra,12(sp)
    b6e8:	dc000217 	ldw	r16,8(sp)
    b6ec:	dec00404 	addi	sp,sp,16
    b6f0:	f800283a 	ret
    b6f4:	30c00617 	ldw	r3,24(r6)
    b6f8:	10c00616 	blt	r2,r3,b714 <_putc_r+0x74>
    b6fc:	30800017 	ldw	r2,0(r6)
    b700:	00c00284 	movi	r3,10
    b704:	11400005 	stb	r5,0(r2)
    b708:	30800017 	ldw	r2,0(r6)
    b70c:	11400003 	ldbu	r5,0(r2)
    b710:	28fff11e 	bne	r5,r3,b6d8 <__alt_mem_epcs_flash_controller_0+0xff80a6d8>
    b714:	8009883a 	mov	r4,r16
    b718:	dfc00317 	ldw	ra,12(sp)
    b71c:	dc000217 	ldw	r16,8(sp)
    b720:	dec00404 	addi	sp,sp,16
    b724:	001352c1 	jmpi	1352c <__swbuf_r>
    b728:	d9400015 	stw	r5,0(sp)
    b72c:	d9800115 	stw	r6,4(sp)
    b730:	00092600 	call	9260 <__sinit>
    b734:	d9800117 	ldw	r6,4(sp)
    b738:	d9400017 	ldw	r5,0(sp)
    b73c:	003fdf06 	br	b6bc <__alt_mem_epcs_flash_controller_0+0xff80a6bc>

0000b740 <putc>:
    b740:	008000b4 	movhi	r2,2
    b744:	defffc04 	addi	sp,sp,-16
    b748:	10801c04 	addi	r2,r2,112
    b74c:	dc000115 	stw	r16,4(sp)
    b750:	14000017 	ldw	r16,0(r2)
    b754:	dc400215 	stw	r17,8(sp)
    b758:	dfc00315 	stw	ra,12(sp)
    b75c:	2023883a 	mov	r17,r4
    b760:	80000226 	beq	r16,zero,b76c <putc+0x2c>
    b764:	80800e17 	ldw	r2,56(r16)
    b768:	10001a26 	beq	r2,zero,b7d4 <putc+0x94>
    b76c:	28800217 	ldw	r2,8(r5)
    b770:	10bfffc4 	addi	r2,r2,-1
    b774:	28800215 	stw	r2,8(r5)
    b778:	10000b16 	blt	r2,zero,b7a8 <putc+0x68>
    b77c:	28800017 	ldw	r2,0(r5)
    b780:	14400005 	stb	r17,0(r2)
    b784:	28800017 	ldw	r2,0(r5)
    b788:	10c00044 	addi	r3,r2,1
    b78c:	28c00015 	stw	r3,0(r5)
    b790:	10800003 	ldbu	r2,0(r2)
    b794:	dfc00317 	ldw	ra,12(sp)
    b798:	dc400217 	ldw	r17,8(sp)
    b79c:	dc000117 	ldw	r16,4(sp)
    b7a0:	dec00404 	addi	sp,sp,16
    b7a4:	f800283a 	ret
    b7a8:	28c00617 	ldw	r3,24(r5)
    b7ac:	10c00e16 	blt	r2,r3,b7e8 <putc+0xa8>
    b7b0:	28800017 	ldw	r2,0(r5)
    b7b4:	01000284 	movi	r4,10
    b7b8:	14400005 	stb	r17,0(r2)
    b7bc:	28800017 	ldw	r2,0(r5)
    b7c0:	10c00003 	ldbu	r3,0(r2)
    b7c4:	193ff01e 	bne	r3,r4,b788 <__alt_mem_epcs_flash_controller_0+0xff80a788>
    b7c8:	280d883a 	mov	r6,r5
    b7cc:	180b883a 	mov	r5,r3
    b7d0:	00000706 	br	b7f0 <putc+0xb0>
    b7d4:	8009883a 	mov	r4,r16
    b7d8:	d9400015 	stw	r5,0(sp)
    b7dc:	00092600 	call	9260 <__sinit>
    b7e0:	d9400017 	ldw	r5,0(sp)
    b7e4:	003fe106 	br	b76c <__alt_mem_epcs_flash_controller_0+0xff80a76c>
    b7e8:	280d883a 	mov	r6,r5
    b7ec:	880b883a 	mov	r5,r17
    b7f0:	8009883a 	mov	r4,r16
    b7f4:	dfc00317 	ldw	ra,12(sp)
    b7f8:	dc400217 	ldw	r17,8(sp)
    b7fc:	dc000117 	ldw	r16,4(sp)
    b800:	dec00404 	addi	sp,sp,16
    b804:	001352c1 	jmpi	1352c <__swbuf_r>

0000b808 <_read_r>:
    b808:	defffd04 	addi	sp,sp,-12
    b80c:	2805883a 	mov	r2,r5
    b810:	dc000015 	stw	r16,0(sp)
    b814:	040000b4 	movhi	r16,2
    b818:	dc400115 	stw	r17,4(sp)
    b81c:	300b883a 	mov	r5,r6
    b820:	84072604 	addi	r16,r16,7320
    b824:	2023883a 	mov	r17,r4
    b828:	380d883a 	mov	r6,r7
    b82c:	1009883a 	mov	r4,r2
    b830:	dfc00215 	stw	ra,8(sp)
    b834:	80000015 	stw	zero,0(r16)
    b838:	0019f540 	call	19f54 <read>
    b83c:	00ffffc4 	movi	r3,-1
    b840:	10c00526 	beq	r2,r3,b858 <_read_r+0x50>
    b844:	dfc00217 	ldw	ra,8(sp)
    b848:	dc400117 	ldw	r17,4(sp)
    b84c:	dc000017 	ldw	r16,0(sp)
    b850:	dec00304 	addi	sp,sp,12
    b854:	f800283a 	ret
    b858:	80c00017 	ldw	r3,0(r16)
    b85c:	183ff926 	beq	r3,zero,b844 <__alt_mem_epcs_flash_controller_0+0xff80a844>
    b860:	88c00015 	stw	r3,0(r17)
    b864:	003ff706 	br	b844 <__alt_mem_epcs_flash_controller_0+0xff80a844>

0000b868 <_realloc_r>:
    b868:	defff604 	addi	sp,sp,-40
    b86c:	dc800215 	stw	r18,8(sp)
    b870:	dfc00915 	stw	ra,36(sp)
    b874:	df000815 	stw	fp,32(sp)
    b878:	ddc00715 	stw	r23,28(sp)
    b87c:	dd800615 	stw	r22,24(sp)
    b880:	dd400515 	stw	r21,20(sp)
    b884:	dd000415 	stw	r20,16(sp)
    b888:	dcc00315 	stw	r19,12(sp)
    b88c:	dc400115 	stw	r17,4(sp)
    b890:	dc000015 	stw	r16,0(sp)
    b894:	3025883a 	mov	r18,r6
    b898:	2800b726 	beq	r5,zero,bb78 <_realloc_r+0x310>
    b89c:	282b883a 	mov	r21,r5
    b8a0:	2029883a 	mov	r20,r4
    b8a4:	0019ed00 	call	19ed0 <__malloc_lock>
    b8a8:	a8bfff17 	ldw	r2,-4(r21)
    b8ac:	043fff04 	movi	r16,-4
    b8b0:	90c002c4 	addi	r3,r18,11
    b8b4:	01000584 	movi	r4,22
    b8b8:	acfffe04 	addi	r19,r21,-8
    b8bc:	1420703a 	and	r16,r2,r16
    b8c0:	20c0332e 	bgeu	r4,r3,b990 <_realloc_r+0x128>
    b8c4:	047ffe04 	movi	r17,-8
    b8c8:	1c62703a 	and	r17,r3,r17
    b8cc:	8807883a 	mov	r3,r17
    b8d0:	88005816 	blt	r17,zero,ba34 <_realloc_r+0x1cc>
    b8d4:	8c805736 	bltu	r17,r18,ba34 <_realloc_r+0x1cc>
    b8d8:	80c0300e 	bge	r16,r3,b99c <_realloc_r+0x134>
    b8dc:	070000b4 	movhi	fp,2
    b8e0:	e73a4604 	addi	fp,fp,-5864
    b8e4:	e1c00217 	ldw	r7,8(fp)
    b8e8:	9c09883a 	add	r4,r19,r16
    b8ec:	22000117 	ldw	r8,4(r4)
    b8f0:	21c06326 	beq	r4,r7,ba80 <_realloc_r+0x218>
    b8f4:	017fff84 	movi	r5,-2
    b8f8:	414a703a 	and	r5,r8,r5
    b8fc:	214b883a 	add	r5,r4,r5
    b900:	29800117 	ldw	r6,4(r5)
    b904:	3180004c 	andi	r6,r6,1
    b908:	30003f26 	beq	r6,zero,ba08 <_realloc_r+0x1a0>
    b90c:	1080004c 	andi	r2,r2,1
    b910:	10008326 	beq	r2,zero,bb20 <_realloc_r+0x2b8>
    b914:	900b883a 	mov	r5,r18
    b918:	a009883a 	mov	r4,r20
    b91c:	000258c0 	call	258c <_malloc_r>
    b920:	1025883a 	mov	r18,r2
    b924:	10011e26 	beq	r2,zero,bda0 <_realloc_r+0x538>
    b928:	a93fff17 	ldw	r4,-4(r21)
    b92c:	10fffe04 	addi	r3,r2,-8
    b930:	00bfff84 	movi	r2,-2
    b934:	2084703a 	and	r2,r4,r2
    b938:	9885883a 	add	r2,r19,r2
    b93c:	1880ee26 	beq	r3,r2,bcf8 <_realloc_r+0x490>
    b940:	81bfff04 	addi	r6,r16,-4
    b944:	00800904 	movi	r2,36
    b948:	1180b836 	bltu	r2,r6,bc2c <_realloc_r+0x3c4>
    b94c:	00c004c4 	movi	r3,19
    b950:	19809636 	bltu	r3,r6,bbac <_realloc_r+0x344>
    b954:	9005883a 	mov	r2,r18
    b958:	a807883a 	mov	r3,r21
    b95c:	19000017 	ldw	r4,0(r3)
    b960:	11000015 	stw	r4,0(r2)
    b964:	19000117 	ldw	r4,4(r3)
    b968:	11000115 	stw	r4,4(r2)
    b96c:	18c00217 	ldw	r3,8(r3)
    b970:	10c00215 	stw	r3,8(r2)
    b974:	a80b883a 	mov	r5,r21
    b978:	a009883a 	mov	r4,r20
    b97c:	00093d40 	call	93d4 <_free_r>
    b980:	a009883a 	mov	r4,r20
    b984:	0019ef40 	call	19ef4 <__malloc_unlock>
    b988:	9005883a 	mov	r2,r18
    b98c:	00001206 	br	b9d8 <_realloc_r+0x170>
    b990:	00c00404 	movi	r3,16
    b994:	1823883a 	mov	r17,r3
    b998:	003fce06 	br	b8d4 <__alt_mem_epcs_flash_controller_0+0xff80a8d4>
    b99c:	a825883a 	mov	r18,r21
    b9a0:	8445c83a 	sub	r2,r16,r17
    b9a4:	00c003c4 	movi	r3,15
    b9a8:	18802636 	bltu	r3,r2,ba44 <_realloc_r+0x1dc>
    b9ac:	99800117 	ldw	r6,4(r19)
    b9b0:	9c07883a 	add	r3,r19,r16
    b9b4:	3180004c 	andi	r6,r6,1
    b9b8:	3420b03a 	or	r16,r6,r16
    b9bc:	9c000115 	stw	r16,4(r19)
    b9c0:	18800117 	ldw	r2,4(r3)
    b9c4:	10800054 	ori	r2,r2,1
    b9c8:	18800115 	stw	r2,4(r3)
    b9cc:	a009883a 	mov	r4,r20
    b9d0:	0019ef40 	call	19ef4 <__malloc_unlock>
    b9d4:	9005883a 	mov	r2,r18
    b9d8:	dfc00917 	ldw	ra,36(sp)
    b9dc:	df000817 	ldw	fp,32(sp)
    b9e0:	ddc00717 	ldw	r23,28(sp)
    b9e4:	dd800617 	ldw	r22,24(sp)
    b9e8:	dd400517 	ldw	r21,20(sp)
    b9ec:	dd000417 	ldw	r20,16(sp)
    b9f0:	dcc00317 	ldw	r19,12(sp)
    b9f4:	dc800217 	ldw	r18,8(sp)
    b9f8:	dc400117 	ldw	r17,4(sp)
    b9fc:	dc000017 	ldw	r16,0(sp)
    ba00:	dec00a04 	addi	sp,sp,40
    ba04:	f800283a 	ret
    ba08:	017fff04 	movi	r5,-4
    ba0c:	414a703a 	and	r5,r8,r5
    ba10:	814d883a 	add	r6,r16,r5
    ba14:	30c01f16 	blt	r6,r3,ba94 <_realloc_r+0x22c>
    ba18:	20800317 	ldw	r2,12(r4)
    ba1c:	20c00217 	ldw	r3,8(r4)
    ba20:	a825883a 	mov	r18,r21
    ba24:	3021883a 	mov	r16,r6
    ba28:	18800315 	stw	r2,12(r3)
    ba2c:	10c00215 	stw	r3,8(r2)
    ba30:	003fdb06 	br	b9a0 <__alt_mem_epcs_flash_controller_0+0xff80a9a0>
    ba34:	00800304 	movi	r2,12
    ba38:	a0800015 	stw	r2,0(r20)
    ba3c:	0005883a 	mov	r2,zero
    ba40:	003fe506 	br	b9d8 <__alt_mem_epcs_flash_controller_0+0xff80a9d8>
    ba44:	98c00117 	ldw	r3,4(r19)
    ba48:	9c4b883a 	add	r5,r19,r17
    ba4c:	11000054 	ori	r4,r2,1
    ba50:	18c0004c 	andi	r3,r3,1
    ba54:	1c62b03a 	or	r17,r3,r17
    ba58:	9c400115 	stw	r17,4(r19)
    ba5c:	29000115 	stw	r4,4(r5)
    ba60:	2885883a 	add	r2,r5,r2
    ba64:	10c00117 	ldw	r3,4(r2)
    ba68:	29400204 	addi	r5,r5,8
    ba6c:	a009883a 	mov	r4,r20
    ba70:	18c00054 	ori	r3,r3,1
    ba74:	10c00115 	stw	r3,4(r2)
    ba78:	00093d40 	call	93d4 <_free_r>
    ba7c:	003fd306 	br	b9cc <__alt_mem_epcs_flash_controller_0+0xff80a9cc>
    ba80:	017fff04 	movi	r5,-4
    ba84:	414a703a 	and	r5,r8,r5
    ba88:	89800404 	addi	r6,r17,16
    ba8c:	8151883a 	add	r8,r16,r5
    ba90:	4180590e 	bge	r8,r6,bbf8 <_realloc_r+0x390>
    ba94:	1080004c 	andi	r2,r2,1
    ba98:	103f9e1e 	bne	r2,zero,b914 <__alt_mem_epcs_flash_controller_0+0xff80a914>
    ba9c:	adbffe17 	ldw	r22,-8(r21)
    baa0:	00bfff04 	movi	r2,-4
    baa4:	9dadc83a 	sub	r22,r19,r22
    baa8:	b1800117 	ldw	r6,4(r22)
    baac:	3084703a 	and	r2,r6,r2
    bab0:	20002026 	beq	r4,zero,bb34 <_realloc_r+0x2cc>
    bab4:	80af883a 	add	r23,r16,r2
    bab8:	b96f883a 	add	r23,r23,r5
    babc:	21c05f26 	beq	r4,r7,bc3c <_realloc_r+0x3d4>
    bac0:	b8c01c16 	blt	r23,r3,bb34 <_realloc_r+0x2cc>
    bac4:	20800317 	ldw	r2,12(r4)
    bac8:	20c00217 	ldw	r3,8(r4)
    bacc:	81bfff04 	addi	r6,r16,-4
    bad0:	01000904 	movi	r4,36
    bad4:	18800315 	stw	r2,12(r3)
    bad8:	10c00215 	stw	r3,8(r2)
    badc:	b0c00217 	ldw	r3,8(r22)
    bae0:	b0800317 	ldw	r2,12(r22)
    bae4:	b4800204 	addi	r18,r22,8
    bae8:	18800315 	stw	r2,12(r3)
    baec:	10c00215 	stw	r3,8(r2)
    baf0:	21801b36 	bltu	r4,r6,bb60 <_realloc_r+0x2f8>
    baf4:	008004c4 	movi	r2,19
    baf8:	1180352e 	bgeu	r2,r6,bbd0 <_realloc_r+0x368>
    bafc:	a8800017 	ldw	r2,0(r21)
    bb00:	b0800215 	stw	r2,8(r22)
    bb04:	a8800117 	ldw	r2,4(r21)
    bb08:	b0800315 	stw	r2,12(r22)
    bb0c:	008006c4 	movi	r2,27
    bb10:	11807f36 	bltu	r2,r6,bd10 <_realloc_r+0x4a8>
    bb14:	b0800404 	addi	r2,r22,16
    bb18:	ad400204 	addi	r21,r21,8
    bb1c:	00002d06 	br	bbd4 <_realloc_r+0x36c>
    bb20:	adbffe17 	ldw	r22,-8(r21)
    bb24:	00bfff04 	movi	r2,-4
    bb28:	9dadc83a 	sub	r22,r19,r22
    bb2c:	b1000117 	ldw	r4,4(r22)
    bb30:	2084703a 	and	r2,r4,r2
    bb34:	b03f7726 	beq	r22,zero,b914 <__alt_mem_epcs_flash_controller_0+0xff80a914>
    bb38:	80af883a 	add	r23,r16,r2
    bb3c:	b8ff7516 	blt	r23,r3,b914 <__alt_mem_epcs_flash_controller_0+0xff80a914>
    bb40:	b0800317 	ldw	r2,12(r22)
    bb44:	b0c00217 	ldw	r3,8(r22)
    bb48:	81bfff04 	addi	r6,r16,-4
    bb4c:	01000904 	movi	r4,36
    bb50:	18800315 	stw	r2,12(r3)
    bb54:	10c00215 	stw	r3,8(r2)
    bb58:	b4800204 	addi	r18,r22,8
    bb5c:	21bfe52e 	bgeu	r4,r6,baf4 <__alt_mem_epcs_flash_controller_0+0xff80aaf4>
    bb60:	a80b883a 	mov	r5,r21
    bb64:	9009883a 	mov	r4,r18
    bb68:	000a3640 	call	a364 <memmove>
    bb6c:	b821883a 	mov	r16,r23
    bb70:	b027883a 	mov	r19,r22
    bb74:	003f8a06 	br	b9a0 <__alt_mem_epcs_flash_controller_0+0xff80a9a0>
    bb78:	300b883a 	mov	r5,r6
    bb7c:	dfc00917 	ldw	ra,36(sp)
    bb80:	df000817 	ldw	fp,32(sp)
    bb84:	ddc00717 	ldw	r23,28(sp)
    bb88:	dd800617 	ldw	r22,24(sp)
    bb8c:	dd400517 	ldw	r21,20(sp)
    bb90:	dd000417 	ldw	r20,16(sp)
    bb94:	dcc00317 	ldw	r19,12(sp)
    bb98:	dc800217 	ldw	r18,8(sp)
    bb9c:	dc400117 	ldw	r17,4(sp)
    bba0:	dc000017 	ldw	r16,0(sp)
    bba4:	dec00a04 	addi	sp,sp,40
    bba8:	000258c1 	jmpi	258c <_malloc_r>
    bbac:	a8c00017 	ldw	r3,0(r21)
    bbb0:	90c00015 	stw	r3,0(r18)
    bbb4:	a8c00117 	ldw	r3,4(r21)
    bbb8:	90c00115 	stw	r3,4(r18)
    bbbc:	00c006c4 	movi	r3,27
    bbc0:	19804536 	bltu	r3,r6,bcd8 <_realloc_r+0x470>
    bbc4:	90800204 	addi	r2,r18,8
    bbc8:	a8c00204 	addi	r3,r21,8
    bbcc:	003f6306 	br	b95c <__alt_mem_epcs_flash_controller_0+0xff80a95c>
    bbd0:	9005883a 	mov	r2,r18
    bbd4:	a8c00017 	ldw	r3,0(r21)
    bbd8:	b821883a 	mov	r16,r23
    bbdc:	b027883a 	mov	r19,r22
    bbe0:	10c00015 	stw	r3,0(r2)
    bbe4:	a8c00117 	ldw	r3,4(r21)
    bbe8:	10c00115 	stw	r3,4(r2)
    bbec:	a8c00217 	ldw	r3,8(r21)
    bbf0:	10c00215 	stw	r3,8(r2)
    bbf4:	003f6a06 	br	b9a0 <__alt_mem_epcs_flash_controller_0+0xff80a9a0>
    bbf8:	9c67883a 	add	r19,r19,r17
    bbfc:	4445c83a 	sub	r2,r8,r17
    bc00:	e4c00215 	stw	r19,8(fp)
    bc04:	10800054 	ori	r2,r2,1
    bc08:	98800115 	stw	r2,4(r19)
    bc0c:	a8bfff17 	ldw	r2,-4(r21)
    bc10:	a009883a 	mov	r4,r20
    bc14:	1080004c 	andi	r2,r2,1
    bc18:	1462b03a 	or	r17,r2,r17
    bc1c:	ac7fff15 	stw	r17,-4(r21)
    bc20:	0019ef40 	call	19ef4 <__malloc_unlock>
    bc24:	a805883a 	mov	r2,r21
    bc28:	003f6b06 	br	b9d8 <__alt_mem_epcs_flash_controller_0+0xff80a9d8>
    bc2c:	a80b883a 	mov	r5,r21
    bc30:	9009883a 	mov	r4,r18
    bc34:	000a3640 	call	a364 <memmove>
    bc38:	003f4e06 	br	b974 <__alt_mem_epcs_flash_controller_0+0xff80a974>
    bc3c:	89000404 	addi	r4,r17,16
    bc40:	b93fbc16 	blt	r23,r4,bb34 <__alt_mem_epcs_flash_controller_0+0xff80ab34>
    bc44:	b0800317 	ldw	r2,12(r22)
    bc48:	b0c00217 	ldw	r3,8(r22)
    bc4c:	81bfff04 	addi	r6,r16,-4
    bc50:	01000904 	movi	r4,36
    bc54:	18800315 	stw	r2,12(r3)
    bc58:	10c00215 	stw	r3,8(r2)
    bc5c:	b4800204 	addi	r18,r22,8
    bc60:	21804336 	bltu	r4,r6,bd70 <_realloc_r+0x508>
    bc64:	008004c4 	movi	r2,19
    bc68:	11803f2e 	bgeu	r2,r6,bd68 <_realloc_r+0x500>
    bc6c:	a8800017 	ldw	r2,0(r21)
    bc70:	b0800215 	stw	r2,8(r22)
    bc74:	a8800117 	ldw	r2,4(r21)
    bc78:	b0800315 	stw	r2,12(r22)
    bc7c:	008006c4 	movi	r2,27
    bc80:	11803f36 	bltu	r2,r6,bd80 <_realloc_r+0x518>
    bc84:	b0800404 	addi	r2,r22,16
    bc88:	ad400204 	addi	r21,r21,8
    bc8c:	a8c00017 	ldw	r3,0(r21)
    bc90:	10c00015 	stw	r3,0(r2)
    bc94:	a8c00117 	ldw	r3,4(r21)
    bc98:	10c00115 	stw	r3,4(r2)
    bc9c:	a8c00217 	ldw	r3,8(r21)
    bca0:	10c00215 	stw	r3,8(r2)
    bca4:	b447883a 	add	r3,r22,r17
    bca8:	bc45c83a 	sub	r2,r23,r17
    bcac:	e0c00215 	stw	r3,8(fp)
    bcb0:	10800054 	ori	r2,r2,1
    bcb4:	18800115 	stw	r2,4(r3)
    bcb8:	b0800117 	ldw	r2,4(r22)
    bcbc:	a009883a 	mov	r4,r20
    bcc0:	1080004c 	andi	r2,r2,1
    bcc4:	1462b03a 	or	r17,r2,r17
    bcc8:	b4400115 	stw	r17,4(r22)
    bccc:	0019ef40 	call	19ef4 <__malloc_unlock>
    bcd0:	9005883a 	mov	r2,r18
    bcd4:	003f4006 	br	b9d8 <__alt_mem_epcs_flash_controller_0+0xff80a9d8>
    bcd8:	a8c00217 	ldw	r3,8(r21)
    bcdc:	90c00215 	stw	r3,8(r18)
    bce0:	a8c00317 	ldw	r3,12(r21)
    bce4:	90c00315 	stw	r3,12(r18)
    bce8:	30801126 	beq	r6,r2,bd30 <_realloc_r+0x4c8>
    bcec:	90800404 	addi	r2,r18,16
    bcf0:	a8c00404 	addi	r3,r21,16
    bcf4:	003f1906 	br	b95c <__alt_mem_epcs_flash_controller_0+0xff80a95c>
    bcf8:	90ffff17 	ldw	r3,-4(r18)
    bcfc:	00bfff04 	movi	r2,-4
    bd00:	a825883a 	mov	r18,r21
    bd04:	1884703a 	and	r2,r3,r2
    bd08:	80a1883a 	add	r16,r16,r2
    bd0c:	003f2406 	br	b9a0 <__alt_mem_epcs_flash_controller_0+0xff80a9a0>
    bd10:	a8800217 	ldw	r2,8(r21)
    bd14:	b0800415 	stw	r2,16(r22)
    bd18:	a8800317 	ldw	r2,12(r21)
    bd1c:	b0800515 	stw	r2,20(r22)
    bd20:	31000a26 	beq	r6,r4,bd4c <_realloc_r+0x4e4>
    bd24:	b0800604 	addi	r2,r22,24
    bd28:	ad400404 	addi	r21,r21,16
    bd2c:	003fa906 	br	bbd4 <__alt_mem_epcs_flash_controller_0+0xff80abd4>
    bd30:	a9000417 	ldw	r4,16(r21)
    bd34:	90800604 	addi	r2,r18,24
    bd38:	a8c00604 	addi	r3,r21,24
    bd3c:	91000415 	stw	r4,16(r18)
    bd40:	a9000517 	ldw	r4,20(r21)
    bd44:	91000515 	stw	r4,20(r18)
    bd48:	003f0406 	br	b95c <__alt_mem_epcs_flash_controller_0+0xff80a95c>
    bd4c:	a8c00417 	ldw	r3,16(r21)
    bd50:	ad400604 	addi	r21,r21,24
    bd54:	b0800804 	addi	r2,r22,32
    bd58:	b0c00615 	stw	r3,24(r22)
    bd5c:	a8ffff17 	ldw	r3,-4(r21)
    bd60:	b0c00715 	stw	r3,28(r22)
    bd64:	003f9b06 	br	bbd4 <__alt_mem_epcs_flash_controller_0+0xff80abd4>
    bd68:	9005883a 	mov	r2,r18
    bd6c:	003fc706 	br	bc8c <__alt_mem_epcs_flash_controller_0+0xff80ac8c>
    bd70:	a80b883a 	mov	r5,r21
    bd74:	9009883a 	mov	r4,r18
    bd78:	000a3640 	call	a364 <memmove>
    bd7c:	003fc906 	br	bca4 <__alt_mem_epcs_flash_controller_0+0xff80aca4>
    bd80:	a8800217 	ldw	r2,8(r21)
    bd84:	b0800415 	stw	r2,16(r22)
    bd88:	a8800317 	ldw	r2,12(r21)
    bd8c:	b0800515 	stw	r2,20(r22)
    bd90:	31000726 	beq	r6,r4,bdb0 <_realloc_r+0x548>
    bd94:	b0800604 	addi	r2,r22,24
    bd98:	ad400404 	addi	r21,r21,16
    bd9c:	003fbb06 	br	bc8c <__alt_mem_epcs_flash_controller_0+0xff80ac8c>
    bda0:	a009883a 	mov	r4,r20
    bda4:	0019ef40 	call	19ef4 <__malloc_unlock>
    bda8:	0005883a 	mov	r2,zero
    bdac:	003f0a06 	br	b9d8 <__alt_mem_epcs_flash_controller_0+0xff80a9d8>
    bdb0:	a8c00417 	ldw	r3,16(r21)
    bdb4:	ad400604 	addi	r21,r21,24
    bdb8:	b0800804 	addi	r2,r22,32
    bdbc:	b0c00615 	stw	r3,24(r22)
    bdc0:	a8ffff17 	ldw	r3,-4(r21)
    bdc4:	b0c00715 	stw	r3,28(r22)
    bdc8:	003fb006 	br	bc8c <__alt_mem_epcs_flash_controller_0+0xff80ac8c>

0000bdcc <lflush>:
    bdcc:	2080030b 	ldhu	r2,12(r4)
    bdd0:	00c00244 	movi	r3,9
    bdd4:	1080024c 	andi	r2,r2,9
    bdd8:	10c00226 	beq	r2,r3,bde4 <lflush+0x18>
    bddc:	0005883a 	mov	r2,zero
    bde0:	f800283a 	ret
    bde4:	0008ed01 	jmpi	8ed0 <fflush>

0000bde8 <__srefill_r>:
    bde8:	defffc04 	addi	sp,sp,-16
    bdec:	dc400115 	stw	r17,4(sp)
    bdf0:	dc000015 	stw	r16,0(sp)
    bdf4:	dfc00315 	stw	ra,12(sp)
    bdf8:	dc800215 	stw	r18,8(sp)
    bdfc:	2023883a 	mov	r17,r4
    be00:	2821883a 	mov	r16,r5
    be04:	20000226 	beq	r4,zero,be10 <__srefill_r+0x28>
    be08:	20800e17 	ldw	r2,56(r4)
    be0c:	10003c26 	beq	r2,zero,bf00 <__srefill_r+0x118>
    be10:	80c0030b 	ldhu	r3,12(r16)
    be14:	1908000c 	andi	r4,r3,8192
    be18:	1805883a 	mov	r2,r3
    be1c:	2000071e 	bne	r4,zero,be3c <__srefill_r+0x54>
    be20:	81001917 	ldw	r4,100(r16)
    be24:	18880014 	ori	r2,r3,8192
    be28:	00f7ffc4 	movi	r3,-8193
    be2c:	20c8703a 	and	r4,r4,r3
    be30:	8080030d 	sth	r2,12(r16)
    be34:	1007883a 	mov	r3,r2
    be38:	81001915 	stw	r4,100(r16)
    be3c:	80000115 	stw	zero,4(r16)
    be40:	1100080c 	andi	r4,r2,32
    be44:	2000571e 	bne	r4,zero,bfa4 <__srefill_r+0x1bc>
    be48:	1100010c 	andi	r4,r2,4
    be4c:	20001f26 	beq	r4,zero,becc <__srefill_r+0xe4>
    be50:	81400c17 	ldw	r5,48(r16)
    be54:	28000826 	beq	r5,zero,be78 <__srefill_r+0x90>
    be58:	80801004 	addi	r2,r16,64
    be5c:	28800226 	beq	r5,r2,be68 <__srefill_r+0x80>
    be60:	8809883a 	mov	r4,r17
    be64:	00093d40 	call	93d4 <_free_r>
    be68:	80800f17 	ldw	r2,60(r16)
    be6c:	80000c15 	stw	zero,48(r16)
    be70:	80800115 	stw	r2,4(r16)
    be74:	1000391e 	bne	r2,zero,bf5c <__srefill_r+0x174>
    be78:	80800417 	ldw	r2,16(r16)
    be7c:	10004b26 	beq	r2,zero,bfac <__srefill_r+0x1c4>
    be80:	8480030b 	ldhu	r18,12(r16)
    be84:	908000cc 	andi	r2,r18,3
    be88:	10001f1e 	bne	r2,zero,bf08 <__srefill_r+0x120>
    be8c:	81800417 	ldw	r6,16(r16)
    be90:	80800817 	ldw	r2,32(r16)
    be94:	81c00517 	ldw	r7,20(r16)
    be98:	81400717 	ldw	r5,28(r16)
    be9c:	81800015 	stw	r6,0(r16)
    bea0:	8809883a 	mov	r4,r17
    bea4:	103ee83a 	callr	r2
    bea8:	80800115 	stw	r2,4(r16)
    beac:	00800e0e 	bge	zero,r2,bee8 <__srefill_r+0x100>
    beb0:	0005883a 	mov	r2,zero
    beb4:	dfc00317 	ldw	ra,12(sp)
    beb8:	dc800217 	ldw	r18,8(sp)
    bebc:	dc400117 	ldw	r17,4(sp)
    bec0:	dc000017 	ldw	r16,0(sp)
    bec4:	dec00404 	addi	sp,sp,16
    bec8:	f800283a 	ret
    becc:	1100040c 	andi	r4,r2,16
    bed0:	20003026 	beq	r4,zero,bf94 <__srefill_r+0x1ac>
    bed4:	1080020c 	andi	r2,r2,8
    bed8:	1000241e 	bne	r2,zero,bf6c <__srefill_r+0x184>
    bedc:	18c00114 	ori	r3,r3,4
    bee0:	80c0030d 	sth	r3,12(r16)
    bee4:	003fe406 	br	be78 <__alt_mem_epcs_flash_controller_0+0xff80ae78>
    bee8:	80c0030b 	ldhu	r3,12(r16)
    beec:	1000161e 	bne	r2,zero,bf48 <__srefill_r+0x160>
    bef0:	18c00814 	ori	r3,r3,32
    bef4:	00bfffc4 	movi	r2,-1
    bef8:	80c0030d 	sth	r3,12(r16)
    befc:	003fed06 	br	beb4 <__alt_mem_epcs_flash_controller_0+0xff80aeb4>
    bf00:	00092600 	call	9260 <__sinit>
    bf04:	003fc206 	br	be10 <__alt_mem_epcs_flash_controller_0+0xff80ae10>
    bf08:	008000b4 	movhi	r2,2
    bf0c:	10801b04 	addi	r2,r2,108
    bf10:	11000017 	ldw	r4,0(r2)
    bf14:	01400074 	movhi	r5,1
    bf18:	00800044 	movi	r2,1
    bf1c:	296f7304 	addi	r5,r5,-16948
    bf20:	8080030d 	sth	r2,12(r16)
    bf24:	0009bac0 	call	9bac <_fwalk>
    bf28:	00800244 	movi	r2,9
    bf2c:	8480030d 	sth	r18,12(r16)
    bf30:	9480024c 	andi	r18,r18,9
    bf34:	90bfd51e 	bne	r18,r2,be8c <__alt_mem_epcs_flash_controller_0+0xff80ae8c>
    bf38:	800b883a 	mov	r5,r16
    bf3c:	8809883a 	mov	r4,r17
    bf40:	0008c580 	call	8c58 <__sflush_r>
    bf44:	003fd106 	br	be8c <__alt_mem_epcs_flash_controller_0+0xff80ae8c>
    bf48:	18c01014 	ori	r3,r3,64
    bf4c:	80000115 	stw	zero,4(r16)
    bf50:	00bfffc4 	movi	r2,-1
    bf54:	80c0030d 	sth	r3,12(r16)
    bf58:	003fd606 	br	beb4 <__alt_mem_epcs_flash_controller_0+0xff80aeb4>
    bf5c:	80c00e17 	ldw	r3,56(r16)
    bf60:	0005883a 	mov	r2,zero
    bf64:	80c00015 	stw	r3,0(r16)
    bf68:	003fd206 	br	beb4 <__alt_mem_epcs_flash_controller_0+0xff80aeb4>
    bf6c:	800b883a 	mov	r5,r16
    bf70:	8809883a 	mov	r4,r17
    bf74:	0008e740 	call	8e74 <_fflush_r>
    bf78:	10000a1e 	bne	r2,zero,bfa4 <__srefill_r+0x1bc>
    bf7c:	8080030b 	ldhu	r2,12(r16)
    bf80:	00fffdc4 	movi	r3,-9
    bf84:	80000215 	stw	zero,8(r16)
    bf88:	1886703a 	and	r3,r3,r2
    bf8c:	80000615 	stw	zero,24(r16)
    bf90:	003fd206 	br	bedc <__alt_mem_epcs_flash_controller_0+0xff80aedc>
    bf94:	00800244 	movi	r2,9
    bf98:	88800015 	stw	r2,0(r17)
    bf9c:	18c01014 	ori	r3,r3,64
    bfa0:	80c0030d 	sth	r3,12(r16)
    bfa4:	00bfffc4 	movi	r2,-1
    bfa8:	003fc206 	br	beb4 <__alt_mem_epcs_flash_controller_0+0xff80aeb4>
    bfac:	800b883a 	mov	r5,r16
    bfb0:	8809883a 	mov	r4,r17
    bfb4:	0009ea00 	call	9ea0 <__smakebuf_r>
    bfb8:	003fb106 	br	be80 <__alt_mem_epcs_flash_controller_0+0xff80ae80>

0000bfbc <__fpclassifyd>:
    bfbc:	00a00034 	movhi	r2,32768
    bfc0:	10bfffc4 	addi	r2,r2,-1
    bfc4:	2884703a 	and	r2,r5,r2
    bfc8:	10000726 	beq	r2,zero,bfe8 <__fpclassifyd+0x2c>
    bfcc:	00fffc34 	movhi	r3,65520
    bfd0:	019ff834 	movhi	r6,32736
    bfd4:	28c7883a 	add	r3,r5,r3
    bfd8:	31bfffc4 	addi	r6,r6,-1
    bfdc:	30c00536 	bltu	r6,r3,bff4 <__fpclassifyd+0x38>
    bfe0:	00800104 	movi	r2,4
    bfe4:	f800283a 	ret
    bfe8:	2000021e 	bne	r4,zero,bff4 <__fpclassifyd+0x38>
    bfec:	00800084 	movi	r2,2
    bff0:	f800283a 	ret
    bff4:	00dffc34 	movhi	r3,32752
    bff8:	019ff834 	movhi	r6,32736
    bffc:	28cb883a 	add	r5,r5,r3
    c000:	31bfffc4 	addi	r6,r6,-1
    c004:	317ff62e 	bgeu	r6,r5,bfe0 <__alt_mem_epcs_flash_controller_0+0xff80afe0>
    c008:	01400434 	movhi	r5,16
    c00c:	297fffc4 	addi	r5,r5,-1
    c010:	28800236 	bltu	r5,r2,c01c <__fpclassifyd+0x60>
    c014:	008000c4 	movi	r2,3
    c018:	f800283a 	ret
    c01c:	10c00226 	beq	r2,r3,c028 <__fpclassifyd+0x6c>
    c020:	0005883a 	mov	r2,zero
    c024:	f800283a 	ret
    c028:	2005003a 	cmpeq	r2,r4,zero
    c02c:	f800283a 	ret

0000c030 <__sccl>:
    c030:	2a000003 	ldbu	r8,0(r5)
    c034:	00801784 	movi	r2,94
    c038:	40802a26 	beq	r8,r2,c0e4 <__sccl+0xb4>
    c03c:	29400044 	addi	r5,r5,1
    c040:	000f883a 	mov	r7,zero
    c044:	0013883a 	mov	r9,zero
    c048:	2007883a 	mov	r3,r4
    c04c:	21804004 	addi	r6,r4,256
    c050:	19c00005 	stb	r7,0(r3)
    c054:	18c00044 	addi	r3,r3,1
    c058:	19bffd1e 	bne	r3,r6,c050 <__alt_mem_epcs_flash_controller_0+0xff80b050>
    c05c:	40001126 	beq	r8,zero,c0a4 <__sccl+0x74>
    c060:	00800044 	movi	r2,1
    c064:	124fc83a 	sub	r7,r2,r9
    c068:	02800b44 	movi	r10,45
    c06c:	02c01744 	movi	r11,93
    c070:	2205883a 	add	r2,r4,r8
    c074:	11c00005 	stb	r7,0(r2)
    c078:	28800044 	addi	r2,r5,1
    c07c:	28c00003 	ldbu	r3,0(r5)
    c080:	1a800a26 	beq	r3,r10,c0ac <__sccl+0x7c>
    c084:	1ac00426 	beq	r3,r11,c098 <__sccl+0x68>
    c088:	18000426 	beq	r3,zero,c09c <__sccl+0x6c>
    c08c:	1811883a 	mov	r8,r3
    c090:	100b883a 	mov	r5,r2
    c094:	003ff606 	br	c070 <__alt_mem_epcs_flash_controller_0+0xff80b070>
    c098:	f800283a 	ret
    c09c:	2805883a 	mov	r2,r5
    c0a0:	f800283a 	ret
    c0a4:	28bfffc4 	addi	r2,r5,-1
    c0a8:	f800283a 	ret
    c0ac:	12400003 	ldbu	r9,0(r2)
    c0b0:	4ac01126 	beq	r9,r11,c0f8 <__sccl+0xc8>
    c0b4:	4a001016 	blt	r9,r8,c0f8 <__sccl+0xc8>
    c0b8:	41800044 	addi	r6,r8,1
    c0bc:	29400084 	addi	r5,r5,2
    c0c0:	2187883a 	add	r3,r4,r6
    c0c4:	00000106 	br	c0cc <__sccl+0x9c>
    c0c8:	31800044 	addi	r6,r6,1
    c0cc:	19c00005 	stb	r7,0(r3)
    c0d0:	3011883a 	mov	r8,r6
    c0d4:	18c00044 	addi	r3,r3,1
    c0d8:	327ffb16 	blt	r6,r9,c0c8 <__alt_mem_epcs_flash_controller_0+0xff80b0c8>
    c0dc:	10800084 	addi	r2,r2,2
    c0e0:	003fe606 	br	c07c <__alt_mem_epcs_flash_controller_0+0xff80b07c>
    c0e4:	2a000043 	ldbu	r8,1(r5)
    c0e8:	01c00044 	movi	r7,1
    c0ec:	29400084 	addi	r5,r5,2
    c0f0:	02400044 	movi	r9,1
    c0f4:	003fd406 	br	c048 <__alt_mem_epcs_flash_controller_0+0xff80b048>
    c0f8:	5011883a 	mov	r8,r10
    c0fc:	003fe406 	br	c090 <__alt_mem_epcs_flash_controller_0+0xff80b090>

0000c100 <nanf>:
    c100:	009ff034 	movhi	r2,32704
    c104:	f800283a 	ret

0000c108 <_sprintf_r>:
    c108:	deffe404 	addi	sp,sp,-112
    c10c:	2807883a 	mov	r3,r5
    c110:	dfc01a15 	stw	ra,104(sp)
    c114:	d9c01b15 	stw	r7,108(sp)
    c118:	00a00034 	movhi	r2,32768
    c11c:	10bfffc4 	addi	r2,r2,-1
    c120:	02008204 	movi	r8,520
    c124:	d8800215 	stw	r2,8(sp)
    c128:	d8800515 	stw	r2,20(sp)
    c12c:	d9c01b04 	addi	r7,sp,108
    c130:	d80b883a 	mov	r5,sp
    c134:	00bfffc4 	movi	r2,-1
    c138:	d8c00015 	stw	r3,0(sp)
    c13c:	d8c00415 	stw	r3,16(sp)
    c140:	da00030d 	sth	r8,12(sp)
    c144:	d880038d 	sth	r2,14(sp)
    c148:	000f8f80 	call	f8f8 <___svfprintf_internal_r>
    c14c:	d8c00017 	ldw	r3,0(sp)
    c150:	18000005 	stb	zero,0(r3)
    c154:	dfc01a17 	ldw	ra,104(sp)
    c158:	dec01c04 	addi	sp,sp,112
    c15c:	f800283a 	ret

0000c160 <sprintf>:
    c160:	deffe304 	addi	sp,sp,-116
    c164:	2007883a 	mov	r3,r4
    c168:	dfc01a15 	stw	ra,104(sp)
    c16c:	d9801b15 	stw	r6,108(sp)
    c170:	d9c01c15 	stw	r7,112(sp)
    c174:	010000b4 	movhi	r4,2
    c178:	21001c04 	addi	r4,r4,112
    c17c:	21000017 	ldw	r4,0(r4)
    c180:	00a00034 	movhi	r2,32768
    c184:	10bfffc4 	addi	r2,r2,-1
    c188:	280d883a 	mov	r6,r5
    c18c:	02008204 	movi	r8,520
    c190:	d8800215 	stw	r2,8(sp)
    c194:	d8800515 	stw	r2,20(sp)
    c198:	d9c01b04 	addi	r7,sp,108
    c19c:	d80b883a 	mov	r5,sp
    c1a0:	00bfffc4 	movi	r2,-1
    c1a4:	d8c00015 	stw	r3,0(sp)
    c1a8:	d8c00415 	stw	r3,16(sp)
    c1ac:	da00030d 	sth	r8,12(sp)
    c1b0:	d880038d 	sth	r2,14(sp)
    c1b4:	000f8f80 	call	f8f8 <___svfprintf_internal_r>
    c1b8:	d8c00017 	ldw	r3,0(sp)
    c1bc:	18000005 	stb	zero,0(r3)
    c1c0:	dfc01a17 	ldw	ra,104(sp)
    c1c4:	dec01d04 	addi	sp,sp,116
    c1c8:	f800283a 	ret

0000c1cc <strcmp>:
    c1cc:	2144b03a 	or	r2,r4,r5
    c1d0:	108000cc 	andi	r2,r2,3
    c1d4:	1000171e 	bne	r2,zero,c234 <strcmp+0x68>
    c1d8:	20800017 	ldw	r2,0(r4)
    c1dc:	28c00017 	ldw	r3,0(r5)
    c1e0:	10c0141e 	bne	r2,r3,c234 <strcmp+0x68>
    c1e4:	027fbff4 	movhi	r9,65279
    c1e8:	4a7fbfc4 	addi	r9,r9,-257
    c1ec:	0086303a 	nor	r3,zero,r2
    c1f0:	02202074 	movhi	r8,32897
    c1f4:	1245883a 	add	r2,r2,r9
    c1f8:	42202004 	addi	r8,r8,-32640
    c1fc:	10c4703a 	and	r2,r2,r3
    c200:	1204703a 	and	r2,r2,r8
    c204:	10000226 	beq	r2,zero,c210 <strcmp+0x44>
    c208:	00002306 	br	c298 <strcmp+0xcc>
    c20c:	1000221e 	bne	r2,zero,c298 <strcmp+0xcc>
    c210:	21000104 	addi	r4,r4,4
    c214:	20c00017 	ldw	r3,0(r4)
    c218:	29400104 	addi	r5,r5,4
    c21c:	29800017 	ldw	r6,0(r5)
    c220:	1a4f883a 	add	r7,r3,r9
    c224:	00c4303a 	nor	r2,zero,r3
    c228:	3884703a 	and	r2,r7,r2
    c22c:	1204703a 	and	r2,r2,r8
    c230:	19bff626 	beq	r3,r6,c20c <__alt_mem_epcs_flash_controller_0+0xff80b20c>
    c234:	20800003 	ldbu	r2,0(r4)
    c238:	10c03fcc 	andi	r3,r2,255
    c23c:	18c0201c 	xori	r3,r3,128
    c240:	18ffe004 	addi	r3,r3,-128
    c244:	18000c26 	beq	r3,zero,c278 <strcmp+0xac>
    c248:	29800007 	ldb	r6,0(r5)
    c24c:	19800326 	beq	r3,r6,c25c <strcmp+0x90>
    c250:	00001306 	br	c2a0 <strcmp+0xd4>
    c254:	29800007 	ldb	r6,0(r5)
    c258:	11800b1e 	bne	r2,r6,c288 <strcmp+0xbc>
    c25c:	21000044 	addi	r4,r4,1
    c260:	20c00003 	ldbu	r3,0(r4)
    c264:	29400044 	addi	r5,r5,1
    c268:	18803fcc 	andi	r2,r3,255
    c26c:	1080201c 	xori	r2,r2,128
    c270:	10bfe004 	addi	r2,r2,-128
    c274:	103ff71e 	bne	r2,zero,c254 <__alt_mem_epcs_flash_controller_0+0xff80b254>
    c278:	0007883a 	mov	r3,zero
    c27c:	28800003 	ldbu	r2,0(r5)
    c280:	1885c83a 	sub	r2,r3,r2
    c284:	f800283a 	ret
    c288:	28800003 	ldbu	r2,0(r5)
    c28c:	18c03fcc 	andi	r3,r3,255
    c290:	1885c83a 	sub	r2,r3,r2
    c294:	f800283a 	ret
    c298:	0005883a 	mov	r2,zero
    c29c:	f800283a 	ret
    c2a0:	10c03fcc 	andi	r3,r2,255
    c2a4:	003ff506 	br	c27c <__alt_mem_epcs_flash_controller_0+0xff80b27c>

0000c2a8 <sulp>:
    c2a8:	defffd04 	addi	sp,sp,-12
    c2ac:	dc400115 	stw	r17,4(sp)
    c2b0:	3023883a 	mov	r17,r6
    c2b4:	dc000015 	stw	r16,0(sp)
    c2b8:	dfc00215 	stw	ra,8(sp)
    c2bc:	2821883a 	mov	r16,r5
    c2c0:	000b1c80 	call	b1c8 <__ulp>
    c2c4:	88000c26 	beq	r17,zero,c2f8 <sulp+0x50>
    c2c8:	841ffc2c 	andhi	r16,r16,32752
    c2cc:	8020d53a 	srli	r16,r16,20
    c2d0:	01c01ac4 	movi	r7,107
    c2d4:	3c21c83a 	sub	r16,r7,r16
    c2d8:	0400070e 	bge	zero,r16,c2f8 <sulp+0x50>
    c2dc:	8020953a 	slli	r16,r16,20
    c2e0:	01cffc34 	movhi	r7,16368
    c2e4:	000d883a 	mov	r6,zero
    c2e8:	81cf883a 	add	r7,r16,r7
    c2ec:	1009883a 	mov	r4,r2
    c2f0:	180b883a 	mov	r5,r3
    c2f4:	00183000 	call	18300 <__muldf3>
    c2f8:	dfc00217 	ldw	ra,8(sp)
    c2fc:	dc400117 	ldw	r17,4(sp)
    c300:	dc000017 	ldw	r16,0(sp)
    c304:	dec00304 	addi	sp,sp,12
    c308:	f800283a 	ret

0000c30c <_strtod_r>:
    c30c:	deffe204 	addi	sp,sp,-120
    c310:	ddc01b15 	stw	r23,108(sp)
    c314:	dd801a15 	stw	r22,104(sp)
    c318:	dc401515 	stw	r17,84(sp)
    c31c:	dfc01d15 	stw	ra,116(sp)
    c320:	df001c15 	stw	fp,112(sp)
    c324:	dd401915 	stw	r21,100(sp)
    c328:	dd001815 	stw	r20,96(sp)
    c32c:	dcc01715 	stw	r19,92(sp)
    c330:	dc801615 	stw	r18,88(sp)
    c334:	dc001415 	stw	r16,80(sp)
    c338:	d8000515 	stw	zero,20(sp)
    c33c:	d9400615 	stw	r5,24(sp)
    c340:	2807883a 	mov	r3,r5
    c344:	1f000003 	ldbu	fp,0(r3)
    c348:	01c00074 	movhi	r7,1
    c34c:	2023883a 	mov	r17,r4
    c350:	d9400715 	stw	r5,28(sp)
    c354:	d9800915 	stw	r6,36(sp)
    c358:	01000b44 	movi	r4,45
    c35c:	e0803fcc 	andi	r2,fp,255
    c360:	39f0e004 	addi	r7,r7,-15488
    c364:	002f883a 	mov	r23,zero
    c368:	002d883a 	mov	r22,zero
    c36c:	20809c36 	bltu	r4,r2,c5e0 <_strtod_r+0x2d4>
    c370:	100490ba 	slli	r2,r2,2
    c374:	11c5883a 	add	r2,r2,r7
    c378:	10800017 	ldw	r2,0(r2)
    c37c:	1000683a 	jmp	r2
    c380:	0000c440 	call	c44 <MemTestDevice+0x19c>
    c384:	0000c5e0 	cmpeqi	zero,zero,791
    c388:	0000c5e0 	cmpeqi	zero,zero,791
    c38c:	0000c5e0 	cmpeqi	zero,zero,791
    c390:	0000c5e0 	cmpeqi	zero,zero,791
    c394:	0000c5e0 	cmpeqi	zero,zero,791
    c398:	0000c5e0 	cmpeqi	zero,zero,791
    c39c:	0000c5e0 	cmpeqi	zero,zero,791
    c3a0:	0000c5e0 	cmpeqi	zero,zero,791
    c3a4:	0000c5cc 	andi	zero,zero,791
    c3a8:	0000c5cc 	andi	zero,zero,791
    c3ac:	0000c5cc 	andi	zero,zero,791
    c3b0:	0000c5cc 	andi	zero,zero,791
    c3b4:	0000c5cc 	andi	zero,zero,791
    c3b8:	0000c5e0 	cmpeqi	zero,zero,791
    c3bc:	0000c5e0 	cmpeqi	zero,zero,791
    c3c0:	0000c5e0 	cmpeqi	zero,zero,791
    c3c4:	0000c5e0 	cmpeqi	zero,zero,791
    c3c8:	0000c5e0 	cmpeqi	zero,zero,791
    c3cc:	0000c5e0 	cmpeqi	zero,zero,791
    c3d0:	0000c5e0 	cmpeqi	zero,zero,791
    c3d4:	0000c5e0 	cmpeqi	zero,zero,791
    c3d8:	0000c5e0 	cmpeqi	zero,zero,791
    c3dc:	0000c5e0 	cmpeqi	zero,zero,791
    c3e0:	0000c5e0 	cmpeqi	zero,zero,791
    c3e4:	0000c5e0 	cmpeqi	zero,zero,791
    c3e8:	0000c5e0 	cmpeqi	zero,zero,791
    c3ec:	0000c5e0 	cmpeqi	zero,zero,791
    c3f0:	0000c5e0 	cmpeqi	zero,zero,791
    c3f4:	0000c5e0 	cmpeqi	zero,zero,791
    c3f8:	0000c5e0 	cmpeqi	zero,zero,791
    c3fc:	0000c5e0 	cmpeqi	zero,zero,791
    c400:	0000c5cc 	andi	zero,zero,791
    c404:	0000c5e0 	cmpeqi	zero,zero,791
    c408:	0000c5e0 	cmpeqi	zero,zero,791
    c40c:	0000c5e0 	cmpeqi	zero,zero,791
    c410:	0000c5e0 	cmpeqi	zero,zero,791
    c414:	0000c5e0 	cmpeqi	zero,zero,791
    c418:	0000c5e0 	cmpeqi	zero,zero,791
    c41c:	0000c5e0 	cmpeqi	zero,zero,791
    c420:	0000c5e0 	cmpeqi	zero,zero,791
    c424:	0000c5e0 	cmpeqi	zero,zero,791
    c428:	0000c5e0 	cmpeqi	zero,zero,791
    c42c:	0000c4a4 	muli	zero,zero,786
    c430:	0000c5e0 	cmpeqi	zero,zero,791
    c434:	0000c5c0 	call	c5c <TestRam+0x10>
    c438:	00801244 	movi	r2,73
    c43c:	b8844726 	beq	r23,r2,d55c <_strtod_r+0x1250>
    c440:	d9000917 	ldw	r4,36(sp)
    c444:	d8000815 	stw	zero,32(sp)
    c448:	0039883a 	mov	fp,zero
    c44c:	20000726 	beq	r4,zero,c46c <_strtod_r+0x160>
    c450:	dc800717 	ldw	r18,28(sp)
    c454:	d8000a15 	stw	zero,40(sp)
    c458:	d9400917 	ldw	r5,36(sp)
    c45c:	2c800015 	stw	r18,0(r5)
    c460:	d8800a17 	ldw	r2,40(sp)
    c464:	10000126 	beq	r2,zero,c46c <_strtod_r+0x160>
    c468:	e720003c 	xorhi	fp,fp,32768
    c46c:	d8800817 	ldw	r2,32(sp)
    c470:	e007883a 	mov	r3,fp
    c474:	dfc01d17 	ldw	ra,116(sp)
    c478:	df001c17 	ldw	fp,112(sp)
    c47c:	ddc01b17 	ldw	r23,108(sp)
    c480:	dd801a17 	ldw	r22,104(sp)
    c484:	dd401917 	ldw	r21,100(sp)
    c488:	dd001817 	ldw	r20,96(sp)
    c48c:	dcc01717 	ldw	r19,92(sp)
    c490:	dc801617 	ldw	r18,88(sp)
    c494:	dc401517 	ldw	r17,84(sp)
    c498:	dc001417 	ldw	r16,80(sp)
    c49c:	dec01e04 	addi	sp,sp,120
    c4a0:	f800283a 	ret
    c4a4:	d8000a15 	stw	zero,40(sp)
    c4a8:	1c000044 	addi	r16,r3,1
    c4ac:	dc000615 	stw	r16,24(sp)
    c4b0:	1f000043 	ldbu	fp,1(r3)
    c4b4:	e0803fcc 	andi	r2,fp,255
    c4b8:	1080201c 	xori	r2,r2,128
    c4bc:	10bfe004 	addi	r2,r2,-128
    c4c0:	103fdf26 	beq	r2,zero,c440 <__alt_mem_epcs_flash_controller_0+0xff80b440>
    c4c4:	e1003fcc 	andi	r4,fp,255
    c4c8:	2100201c 	xori	r4,r4,128
    c4cc:	213fe004 	addi	r4,r4,-128
    c4d0:	00800c04 	movi	r2,48
    c4d4:	2080d426 	beq	r4,r2,c828 <_strtod_r+0x51c>
    c4d8:	dc000815 	stw	r16,32(sp)
    c4dc:	d8000c15 	stw	zero,48(sp)
    c4e0:	e0bff404 	addi	r2,fp,-48
    c4e4:	10803fcc 	andi	r2,r2,255
    c4e8:	05400244 	movi	r21,9
    c4ec:	a8837836 	bltu	r21,r2,d2d0 <_strtod_r+0xfc4>
    c4f0:	dc800817 	ldw	r18,32(sp)
    c4f4:	0029883a 	mov	r20,zero
    c4f8:	0027883a 	mov	r19,zero
    c4fc:	0021883a 	mov	r16,zero
    c500:	05800204 	movi	r22,8
    c504:	b4003916 	blt	r22,r16,c5ec <_strtod_r+0x2e0>
    c508:	e7003fcc 	andi	fp,fp,255
    c50c:	9809883a 	mov	r4,r19
    c510:	01400284 	movi	r5,10
    c514:	e700201c 	xori	fp,fp,128
    c518:	00024440 	call	2444 <__mulsi3>
    c51c:	e73fe004 	addi	fp,fp,-128
    c520:	1705883a 	add	r2,r2,fp
    c524:	14fff404 	addi	r19,r2,-48
    c528:	94800044 	addi	r18,r18,1
    c52c:	dc800615 	stw	r18,24(sp)
    c530:	97000003 	ldbu	fp,0(r18)
    c534:	84000044 	addi	r16,r16,1
    c538:	e0bff404 	addi	r2,fp,-48
    c53c:	10803fcc 	andi	r2,r2,255
    c540:	a8bff02e 	bgeu	r21,r2,c504 <__alt_mem_epcs_flash_controller_0+0xff80b504>
    c544:	e5c03fcc 	andi	r23,fp,255
    c548:	bdc0201c 	xori	r23,r23,128
    c54c:	bdffe004 	addi	r23,r23,-128
    c550:	8809883a 	mov	r4,r17
    c554:	0009e100 	call	9e10 <_localeconv_r>
    c558:	8809883a 	mov	r4,r17
    c55c:	15400017 	ldw	r21,0(r2)
    c560:	0009e100 	call	9e10 <_localeconv_r>
    c564:	11000017 	ldw	r4,0(r2)
    c568:	00033c80 	call	33c8 <strlen>
    c56c:	100d883a 	mov	r6,r2
    c570:	a80b883a 	mov	r5,r21
    c574:	9009883a 	mov	r4,r18
    c578:	00146c80 	call	146c8 <strncmp>
    c57c:	1000bd26 	beq	r2,zero,c874 <_strtod_r+0x568>
    c580:	8039883a 	mov	fp,r16
    c584:	002d883a 	mov	r22,zero
    c588:	d8000b15 	stw	zero,44(sp)
    c58c:	0025883a 	mov	r18,zero
    c590:	00801944 	movi	r2,101
    c594:	b8806026 	beq	r23,r2,c718 <_strtod_r+0x40c>
    c598:	00801144 	movi	r2,69
    c59c:	b8805e26 	beq	r23,r2,c718 <_strtod_r+0x40c>
    c5a0:	0009883a 	mov	r4,zero
    c5a4:	e0001a1e 	bne	fp,zero,c610 <_strtod_r+0x304>
    c5a8:	b000cd26 	beq	r22,zero,c8e0 <_strtod_r+0x5d4>
    c5ac:	d8000815 	stw	zero,32(sp)
    c5b0:	d9000917 	ldw	r4,36(sp)
    c5b4:	203faa26 	beq	r4,zero,c460 <__alt_mem_epcs_flash_controller_0+0xff80b460>
    c5b8:	dc800617 	ldw	r18,24(sp)
    c5bc:	003fa606 	br	c458 <__alt_mem_epcs_flash_controller_0+0xff80b458>
    c5c0:	00800044 	movi	r2,1
    c5c4:	d8800a15 	stw	r2,40(sp)
    c5c8:	003fb706 	br	c4a8 <__alt_mem_epcs_flash_controller_0+0xff80b4a8>
    c5cc:	18c00044 	addi	r3,r3,1
    c5d0:	d8c00615 	stw	r3,24(sp)
    c5d4:	1f000003 	ldbu	fp,0(r3)
    c5d8:	e0803fcc 	andi	r2,fp,255
    c5dc:	20bf642e 	bgeu	r4,r2,c370 <__alt_mem_epcs_flash_controller_0+0xff80b370>
    c5e0:	1821883a 	mov	r16,r3
    c5e4:	d8000a15 	stw	zero,40(sp)
    c5e8:	003fb606 	br	c4c4 <__alt_mem_epcs_flash_controller_0+0xff80b4c4>
    c5ec:	e7003fcc 	andi	fp,fp,255
    c5f0:	a009883a 	mov	r4,r20
    c5f4:	01400284 	movi	r5,10
    c5f8:	e700201c 	xori	fp,fp,128
    c5fc:	00024440 	call	2444 <__mulsi3>
    c600:	e73fe004 	addi	fp,fp,-128
    c604:	1705883a 	add	r2,r2,fp
    c608:	153ff404 	addi	r20,r2,-48
    c60c:	003fc606 	br	c528 <__alt_mem_epcs_flash_controller_0+0xff80b528>
    c610:	d8c00b17 	ldw	r3,44(sp)
    c614:	20ebc83a 	sub	r21,r4,r3
    c618:	8000011e 	bne	r16,zero,c620 <_strtod_r+0x314>
    c61c:	e021883a 	mov	r16,fp
    c620:	00800404 	movi	r2,16
    c624:	e025883a 	mov	r18,fp
    c628:	1700010e 	bge	r2,fp,c630 <_strtod_r+0x324>
    c62c:	1025883a 	mov	r18,r2
    c630:	9809883a 	mov	r4,r19
    c634:	00195c40 	call	195c4 <__floatunsidf>
    c638:	102f883a 	mov	r23,r2
    c63c:	00800244 	movi	r2,9
    c640:	182d883a 	mov	r22,r3
    c644:	1480150e 	bge	r2,r18,c69c <_strtod_r+0x390>
    c648:	90bffdc4 	addi	r2,r18,-9
    c64c:	100490fa 	slli	r2,r2,3
    c650:	180b883a 	mov	r5,r3
    c654:	00c000b4 	movhi	r3,2
    c658:	18f83d04 	addi	r3,r3,-7948
    c65c:	1885883a 	add	r2,r3,r2
    c660:	11800017 	ldw	r6,0(r2)
    c664:	11c00117 	ldw	r7,4(r2)
    c668:	b809883a 	mov	r4,r23
    c66c:	00183000 	call	18300 <__muldf3>
    c670:	a009883a 	mov	r4,r20
    c674:	102f883a 	mov	r23,r2
    c678:	182d883a 	mov	r22,r3
    c67c:	00195c40 	call	195c4 <__floatunsidf>
    c680:	b809883a 	mov	r4,r23
    c684:	b00b883a 	mov	r5,r22
    c688:	100d883a 	mov	r6,r2
    c68c:	180f883a 	mov	r7,r3
    c690:	0016e2c0 	call	16e2c <__adddf3>
    c694:	102f883a 	mov	r23,r2
    c698:	182d883a 	mov	r22,r3
    c69c:	008003c4 	movi	r2,15
    c6a0:	17009416 	blt	r2,fp,c8f4 <_strtod_r+0x5e8>
    c6a4:	a8001926 	beq	r21,zero,c70c <_strtod_r+0x400>
    c6a8:	05439c0e 	bge	zero,r21,d51c <_strtod_r+0x1210>
    c6ac:	00c00584 	movi	r3,22
    c6b0:	1d430f16 	blt	r3,r21,d2f0 <_strtod_r+0xfe4>
    c6b4:	a82a90fa 	slli	r21,r21,3
    c6b8:	008000b4 	movhi	r2,2
    c6bc:	10b83d04 	addi	r2,r2,-7948
    c6c0:	1545883a 	add	r2,r2,r21
    c6c4:	11000017 	ldw	r4,0(r2)
    c6c8:	11400117 	ldw	r5,4(r2)
    c6cc:	b80d883a 	mov	r6,r23
    c6d0:	b00f883a 	mov	r7,r22
    c6d4:	00183000 	call	18300 <__muldf3>
    c6d8:	d8800815 	stw	r2,32(sp)
    c6dc:	1839883a 	mov	fp,r3
    c6e0:	003fb306 	br	c5b0 <__alt_mem_epcs_flash_controller_0+0xff80b5b0>
    c6e4:	014000b4 	movhi	r5,2
    c6e8:	29787304 	addi	r5,r5,-7732
    c6ec:	d9800204 	addi	r6,sp,8
    c6f0:	d9000604 	addi	r4,sp,24
    c6f4:	00144180 	call	14418 <__hexnan>
    c6f8:	00c00144 	movi	r3,5
    c6fc:	10c2161e 	bne	r2,r3,cf58 <_strtod_r+0xc4c>
    c700:	dd800317 	ldw	r22,12(sp)
    c704:	ddc00217 	ldw	r23,8(sp)
    c708:	b59ffc34 	orhi	r22,r22,32752
    c70c:	ddc00815 	stw	r23,32(sp)
    c710:	b039883a 	mov	fp,r22
    c714:	003fa606 	br	c5b0 <__alt_mem_epcs_flash_controller_0+0xff80b5b0>
    c718:	e001a926 	beq	fp,zero,cdc0 <_strtod_r+0xab4>
    c71c:	d8c00617 	ldw	r3,24(sp)
    c720:	18800044 	addi	r2,r3,1
    c724:	d8800615 	stw	r2,24(sp)
    c728:	d8c00715 	stw	r3,28(sp)
    c72c:	18c00047 	ldb	r3,1(r3)
    c730:	00800ac4 	movi	r2,43
    c734:	1881e526 	beq	r3,r2,cecc <_strtod_r+0xbc0>
    c738:	00800b44 	movi	r2,45
    c73c:	1881dc26 	beq	r3,r2,ceb0 <_strtod_r+0xba4>
    c740:	182f883a 	mov	r23,r3
    c744:	d8000e15 	stw	zero,56(sp)
    c748:	b8bff404 	addi	r2,r23,-48
    c74c:	01000244 	movi	r4,9
    c750:	2081ab36 	bltu	r4,r2,ce00 <_strtod_r+0xaf4>
    c754:	00800c04 	movi	r2,48
    c758:	b880071e 	bne	r23,r2,c778 <_strtod_r+0x46c>
    c75c:	d8800617 	ldw	r2,24(sp)
    c760:	b809883a 	mov	r4,r23
    c764:	10800044 	addi	r2,r2,1
    c768:	d8800615 	stw	r2,24(sp)
    c76c:	15c00007 	ldb	r23,0(r2)
    c770:	10800044 	addi	r2,r2,1
    c774:	b93ffc26 	beq	r23,r4,c768 <__alt_mem_epcs_flash_controller_0+0xff80b768>
    c778:	b8bff3c4 	addi	r2,r23,-49
    c77c:	01000204 	movi	r4,8
    c780:	20bf8736 	bltu	r4,r2,c5a0 <__alt_mem_epcs_flash_controller_0+0xff80b5a0>
    c784:	d8c00617 	ldw	r3,24(sp)
    c788:	b93ff404 	addi	r4,r23,-48
    c78c:	01400244 	movi	r5,9
    c790:	1ac00044 	addi	r11,r3,1
    c794:	dac00615 	stw	r11,24(sp)
    c798:	d8c00d15 	stw	r3,52(sp)
    c79c:	18c00043 	ldbu	r3,1(r3)
    c7a0:	18bff404 	addi	r2,r3,-48
    c7a4:	1dc03fcc 	andi	r23,r3,255
    c7a8:	bdc0201c 	xori	r23,r23,128
    c7ac:	10803fcc 	andi	r2,r2,255
    c7b0:	bdffe004 	addi	r23,r23,-128
    c7b4:	28801136 	bltu	r5,r2,c7fc <_strtod_r+0x4f0>
    c7b8:	d8c00d17 	ldw	r3,52(sp)
    c7bc:	1d400084 	addi	r21,r3,2
    c7c0:	01400284 	movi	r5,10
    c7c4:	00024440 	call	2444 <__mulsi3>
    c7c8:	dd400615 	stw	r21,24(sp)
    c7cc:	a9400003 	ldbu	r5,0(r21)
    c7d0:	15c5883a 	add	r2,r2,r23
    c7d4:	a817883a 	mov	r11,r21
    c7d8:	28fff404 	addi	r3,r5,-48
    c7dc:	2dc03fcc 	andi	r23,r5,255
    c7e0:	bdc0201c 	xori	r23,r23,128
    c7e4:	18c03fcc 	andi	r3,r3,255
    c7e8:	01400244 	movi	r5,9
    c7ec:	113ff404 	addi	r4,r2,-48
    c7f0:	bdffe004 	addi	r23,r23,-128
    c7f4:	ad400044 	addi	r21,r21,1
    c7f8:	28fff12e 	bgeu	r5,r3,c7c0 <__alt_mem_epcs_flash_controller_0+0xff80b7c0>
    c7fc:	d8c00d17 	ldw	r3,52(sp)
    c800:	00800204 	movi	r2,8
    c804:	58d7c83a 	sub	r11,r11,r3
    c808:	12c2ab16 	blt	r2,r11,d2b8 <_strtod_r+0xfac>
    c80c:	009387c4 	movi	r2,19999
    c810:	1100010e 	bge	r2,r4,c818 <_strtod_r+0x50c>
    c814:	1009883a 	mov	r4,r2
    c818:	d8c00e17 	ldw	r3,56(sp)
    c81c:	183f6126 	beq	r3,zero,c5a4 <__alt_mem_epcs_flash_controller_0+0xff80b5a4>
    c820:	0109c83a 	sub	r4,zero,r4
    c824:	003f5f06 	br	c5a4 <__alt_mem_epcs_flash_controller_0+0xff80b5a4>
    c828:	80800047 	ldb	r2,1(r16)
    c82c:	00c01604 	movi	r3,88
    c830:	10c20026 	beq	r2,r3,d034 <_strtod_r+0xd28>
    c834:	00c01e04 	movi	r3,120
    c838:	10c1fe26 	beq	r2,r3,d034 <_strtod_r+0xd28>
    c83c:	80800044 	addi	r2,r16,1
    c840:	1021883a 	mov	r16,r2
    c844:	d8800615 	stw	r2,24(sp)
    c848:	10800044 	addi	r2,r2,1
    c84c:	173fffc3 	ldbu	fp,-1(r2)
    c850:	e0c03fcc 	andi	r3,fp,255
    c854:	18c0201c 	xori	r3,r3,128
    c858:	18ffe004 	addi	r3,r3,-128
    c85c:	193ff826 	beq	r3,r4,c840 <__alt_mem_epcs_flash_controller_0+0xff80b840>
    c860:	18002126 	beq	r3,zero,c8e8 <_strtod_r+0x5dc>
    c864:	00c00044 	movi	r3,1
    c868:	dc000815 	stw	r16,32(sp)
    c86c:	d8c00c15 	stw	r3,48(sp)
    c870:	003f1b06 	br	c4e0 <__alt_mem_epcs_flash_controller_0+0xff80b4e0>
    c874:	8809883a 	mov	r4,r17
    c878:	0009e100 	call	9e10 <_localeconv_r>
    c87c:	11000017 	ldw	r4,0(r2)
    c880:	00033c80 	call	33c8 <strlen>
    c884:	d8c00617 	ldw	r3,24(sp)
    c888:	1885883a 	add	r2,r3,r2
    c88c:	d8800615 	stw	r2,24(sp)
    c890:	15c00007 	ldb	r23,0(r2)
    c894:	8001771e 	bne	r16,zero,ce74 <_strtod_r+0xb68>
    c898:	01000c04 	movi	r4,48
    c89c:	b903581e 	bne	r23,r4,d600 <_strtod_r+0x12f4>
    c8a0:	11000044 	addi	r4,r2,1
    c8a4:	b80b883a 	mov	r5,r23
    c8a8:	d9000615 	stw	r4,24(sp)
    c8ac:	25c00007 	ldb	r23,0(r4)
    c8b0:	20adc83a 	sub	r22,r4,r2
    c8b4:	21000044 	addi	r4,r4,1
    c8b8:	b97ffb26 	beq	r23,r5,c8a8 <__alt_mem_epcs_flash_controller_0+0xff80b8a8>
    c8bc:	b8bff3c4 	addi	r2,r23,-49
    c8c0:	01000204 	movi	r4,8
    c8c4:	2083002e 	bgeu	r4,r2,d4c8 <_strtod_r+0x11bc>
    c8c8:	00801944 	movi	r2,101
    c8cc:	b8813a26 	beq	r23,r2,cdb8 <_strtod_r+0xaac>
    c8d0:	0039883a 	mov	fp,zero
    c8d4:	d8000b15 	stw	zero,44(sp)
    c8d8:	04800044 	movi	r18,1
    c8dc:	003f2e06 	br	c598 <__alt_mem_epcs_flash_controller_0+0xff80b598>
    c8e0:	d8c00c17 	ldw	r3,48(sp)
    c8e4:	18017d26 	beq	r3,zero,cedc <_strtod_r+0xbd0>
    c8e8:	d8000815 	stw	zero,32(sp)
    c8ec:	0039883a 	mov	fp,zero
    c8f0:	003f2f06 	br	c5b0 <__alt_mem_epcs_flash_controller_0+0xff80b5b0>
    c8f4:	e4a5c83a 	sub	r18,fp,r18
    c8f8:	9565883a 	add	r18,r18,r21
    c8fc:	0482370e 	bge	zero,r18,d1dc <_strtod_r+0xed0>
    c900:	908003cc 	andi	r2,r18,15
    c904:	10000b26 	beq	r2,zero,c934 <_strtod_r+0x628>
    c908:	100490fa 	slli	r2,r2,3
    c90c:	00c000b4 	movhi	r3,2
    c910:	18f83d04 	addi	r3,r3,-7948
    c914:	1885883a 	add	r2,r3,r2
    c918:	11000017 	ldw	r4,0(r2)
    c91c:	11400117 	ldw	r5,4(r2)
    c920:	b80d883a 	mov	r6,r23
    c924:	b00f883a 	mov	r7,r22
    c928:	00183000 	call	18300 <__muldf3>
    c92c:	102f883a 	mov	r23,r2
    c930:	182d883a 	mov	r22,r3
    c934:	053ffc04 	movi	r20,-16
    c938:	9524703a 	and	r18,r18,r20
    c93c:	90003826 	beq	r18,zero,ca20 <_strtod_r+0x714>
    c940:	00804d04 	movi	r2,308
    c944:	1481eb16 	blt	r2,r18,d0f4 <_strtod_r+0xde8>
    c948:	9029d13a 	srai	r20,r18,4
    c94c:	02c00044 	movi	r11,1
    c950:	5d03900e 	bge	r11,r20,d794 <_strtod_r+0x1488>
    c954:	010000b4 	movhi	r4,2
    c958:	21383304 	addi	r4,r4,-7988
    c95c:	2011883a 	mov	r8,r4
    c960:	0025883a 	mov	r18,zero
    c964:	880b883a 	mov	r5,r17
    c968:	d9000715 	stw	r4,28(sp)
    c96c:	dc000b15 	stw	r16,44(sp)
    c970:	9023883a 	mov	r17,r18
    c974:	b805883a 	mov	r2,r23
    c978:	b007883a 	mov	r3,r22
    c97c:	0009883a 	mov	r4,zero
    c980:	4021883a 	mov	r16,r8
    c984:	2825883a 	mov	r18,r5
    c988:	a180004c 	andi	r6,r20,1
    c98c:	30000826 	beq	r6,zero,c9b0 <_strtod_r+0x6a4>
    c990:	81800017 	ldw	r6,0(r16)
    c994:	81c00117 	ldw	r7,4(r16)
    c998:	1009883a 	mov	r4,r2
    c99c:	180b883a 	mov	r5,r3
    c9a0:	dac01315 	stw	r11,76(sp)
    c9a4:	00183000 	call	18300 <__muldf3>
    c9a8:	dac01317 	ldw	r11,76(sp)
    c9ac:	01000044 	movi	r4,1
    c9b0:	a029d07a 	srai	r20,r20,1
    c9b4:	8c400044 	addi	r17,r17,1
    c9b8:	84000204 	addi	r16,r16,8
    c9bc:	a2fff21e 	bne	r20,r11,c988 <__alt_mem_epcs_flash_controller_0+0xff80b988>
    c9c0:	900b883a 	mov	r5,r18
    c9c4:	21003fcc 	andi	r4,r4,255
    c9c8:	8825883a 	mov	r18,r17
    c9cc:	dc000b17 	ldw	r16,44(sp)
    c9d0:	2823883a 	mov	r17,r5
    c9d4:	2003c01e 	bne	r4,zero,d8d8 <_strtod_r+0x15cc>
    c9d8:	901490fa 	slli	r10,r18,3
    c9dc:	d8800717 	ldw	r2,28(sp)
    c9e0:	01ff2c34 	movhi	r7,64688
    c9e4:	b80d883a 	mov	r6,r23
    c9e8:	12a5883a 	add	r18,r2,r10
    c9ec:	91000017 	ldw	r4,0(r18)
    c9f0:	91400117 	ldw	r5,4(r18)
    c9f4:	b1cf883a 	add	r7,r22,r7
    c9f8:	00183000 	call	18300 <__muldf3>
    c9fc:	102f883a 	mov	r23,r2
    ca00:	011f2834 	movhi	r4,31904
    ca04:	189ffc2c 	andhi	r2,r3,32752
    ca08:	2081ba36 	bltu	r4,r2,d0f4 <_strtod_r+0xde8>
    ca0c:	011f2434 	movhi	r4,31888
    ca10:	20834a2e 	bgeu	r4,r2,d73c <_strtod_r+0x1430>
    ca14:	059ffc34 	movhi	r22,32752
    ca18:	b5bfffc4 	addi	r22,r22,-1
    ca1c:	05ffffc4 	movi	r23,-1
    ca20:	d8000715 	stw	zero,28(sp)
    ca24:	d9400817 	ldw	r5,32(sp)
    ca28:	dcc00015 	stw	r19,0(sp)
    ca2c:	e00f883a 	mov	r7,fp
    ca30:	800d883a 	mov	r6,r16
    ca34:	8809883a 	mov	r4,r17
    ca38:	000a8000 	call	a800 <__s2b>
    ca3c:	d8800b15 	stw	r2,44(sp)
    ca40:	1001ac26 	beq	r2,zero,d0f4 <_strtod_r+0xde8>
    ca44:	a807d7fa 	srai	r3,r21,31
    ca48:	0545c83a 	sub	r2,zero,r21
    ca4c:	dd400c15 	stw	r21,48(sp)
    ca50:	1886703a 	and	r3,r3,r2
    ca54:	d8c00e15 	stw	r3,56(sp)
    ca58:	a8015916 	blt	r21,zero,cfc0 <_strtod_r+0xcb4>
    ca5c:	d9400b17 	ldw	r5,44(sp)
    ca60:	0011883a 	mov	r8,zero
    ca64:	0021883a 	mov	r16,zero
    ca68:	29400304 	addi	r5,r5,12
    ca6c:	d9401115 	stw	r5,68(sp)
    ca70:	4025883a 	mov	r18,r8
    ca74:	d8800b17 	ldw	r2,44(sp)
    ca78:	8809883a 	mov	r4,r17
    ca7c:	11400117 	ldw	r5,4(r2)
    ca80:	000a5e80 	call	a5e8 <_Balloc>
    ca84:	1027883a 	mov	r19,r2
    ca88:	10015226 	beq	r2,zero,cfd4 <_strtod_r+0xcc8>
    ca8c:	d8c00b17 	ldw	r3,44(sp)
    ca90:	d9401117 	ldw	r5,68(sp)
    ca94:	11000304 	addi	r4,r2,12
    ca98:	19800417 	ldw	r6,16(r3)
    ca9c:	31800084 	addi	r6,r6,2
    caa0:	318d883a 	add	r6,r6,r6
    caa4:	318d883a 	add	r6,r6,r6
    caa8:	0002e140 	call	2e14 <memcpy>
    caac:	d9000204 	addi	r4,sp,8
    cab0:	d9000015 	stw	r4,0(sp)
    cab4:	d9c00404 	addi	r7,sp,16
    cab8:	b80b883a 	mov	r5,r23
    cabc:	b00d883a 	mov	r6,r22
    cac0:	8809883a 	mov	r4,r17
    cac4:	000b3380 	call	b338 <__d2b>
    cac8:	d8800515 	stw	r2,20(sp)
    cacc:	ddc00815 	stw	r23,32(sp)
    cad0:	dd801215 	stw	r22,72(sp)
    cad4:	10029f26 	beq	r2,zero,d554 <_strtod_r+0x1248>
    cad8:	01400044 	movi	r5,1
    cadc:	8809883a 	mov	r4,r17
    cae0:	000aa1c0 	call	aa1c <__i2b>
    cae4:	1021883a 	mov	r16,r2
    cae8:	10013a26 	beq	r2,zero,cfd4 <_strtod_r+0xcc8>
    caec:	d8800417 	ldw	r2,16(sp)
    caf0:	1000b816 	blt	r2,zero,cdd4 <_strtod_r+0xac8>
    caf4:	d9400e17 	ldw	r5,56(sp)
    caf8:	d9000c17 	ldw	r4,48(sp)
    cafc:	28a9883a 	add	r20,r5,r2
    cb00:	d9400717 	ldw	r5,28(sp)
    cb04:	dd400217 	ldw	r21,8(sp)
    cb08:	073f0084 	movi	fp,-1022
    cb0c:	1147c83a 	sub	r3,r2,r5
    cb10:	1d47883a 	add	r3,r3,r21
    cb14:	00800d84 	movi	r2,54
    cb18:	18ffffc4 	addi	r3,r3,-1
    cb1c:	156bc83a 	sub	r21,r2,r21
    cb20:	1f00950e 	bge	r3,fp,cd78 <_strtod_r+0xa6c>
    cb24:	e0f9c83a 	sub	fp,fp,r3
    cb28:	008007c4 	movi	r2,31
    cb2c:	af2bc83a 	sub	r21,r21,fp
    cb30:	1700ac16 	blt	r2,fp,cde4 <_strtod_r+0xad8>
    cb34:	00800044 	movi	r2,1
    cb38:	1704983a 	sll	r2,r2,fp
    cb3c:	d8000d15 	stw	zero,52(sp)
    cb40:	d8800f15 	stw	r2,60(sp)
    cb44:	2547883a 	add	r3,r4,r21
    cb48:	d9000717 	ldw	r4,28(sp)
    cb4c:	a56b883a 	add	r21,r20,r21
    cb50:	20f9883a 	add	fp,r4,r3
    cb54:	a009883a 	mov	r4,r20
    cb58:	ad00010e 	bge	r21,r20,cb60 <_strtod_r+0x854>
    cb5c:	a809883a 	mov	r4,r21
    cb60:	e005883a 	mov	r2,fp
    cb64:	2700010e 	bge	r4,fp,cb6c <_strtod_r+0x860>
    cb68:	2005883a 	mov	r2,r4
    cb6c:	0080030e 	bge	zero,r2,cb7c <_strtod_r+0x870>
    cb70:	a8abc83a 	sub	r21,r21,r2
    cb74:	e0b9c83a 	sub	fp,fp,r2
    cb78:	a0a9c83a 	sub	r20,r20,r2
    cb7c:	d9400e17 	ldw	r5,56(sp)
    cb80:	28001126 	beq	r5,zero,cbc8 <_strtod_r+0x8bc>
    cb84:	280d883a 	mov	r6,r5
    cb88:	8809883a 	mov	r4,r17
    cb8c:	800b883a 	mov	r5,r16
    cb90:	000ace40 	call	ace4 <__pow5mult>
    cb94:	1021883a 	mov	r16,r2
    cb98:	10010e26 	beq	r2,zero,cfd4 <_strtod_r+0xcc8>
    cb9c:	d9800517 	ldw	r6,20(sp)
    cba0:	100b883a 	mov	r5,r2
    cba4:	8809883a 	mov	r4,r17
    cba8:	000aa580 	call	aa58 <__multiply>
    cbac:	10010926 	beq	r2,zero,cfd4 <_strtod_r+0xcc8>
    cbb0:	d9400517 	ldw	r5,20(sp)
    cbb4:	8809883a 	mov	r4,r17
    cbb8:	d8801315 	stw	r2,76(sp)
    cbbc:	000a6900 	call	a690 <_Bfree>
    cbc0:	d8801317 	ldw	r2,76(sp)
    cbc4:	d8800515 	stw	r2,20(sp)
    cbc8:	0540060e 	bge	zero,r21,cbe4 <_strtod_r+0x8d8>
    cbcc:	d9400517 	ldw	r5,20(sp)
    cbd0:	a80d883a 	mov	r6,r21
    cbd4:	8809883a 	mov	r4,r17
    cbd8:	000ae240 	call	ae24 <__lshift>
    cbdc:	d8800515 	stw	r2,20(sp)
    cbe0:	10025c26 	beq	r2,zero,d554 <_strtod_r+0x1248>
    cbe4:	d8800c17 	ldw	r2,48(sp)
    cbe8:	10000626 	beq	r2,zero,cc04 <_strtod_r+0x8f8>
    cbec:	d9800c17 	ldw	r6,48(sp)
    cbf0:	980b883a 	mov	r5,r19
    cbf4:	8809883a 	mov	r4,r17
    cbf8:	000ace40 	call	ace4 <__pow5mult>
    cbfc:	1027883a 	mov	r19,r2
    cc00:	1000f426 	beq	r2,zero,cfd4 <_strtod_r+0xcc8>
    cc04:	0700060e 	bge	zero,fp,cc20 <_strtod_r+0x914>
    cc08:	980b883a 	mov	r5,r19
    cc0c:	e00d883a 	mov	r6,fp
    cc10:	8809883a 	mov	r4,r17
    cc14:	000ae240 	call	ae24 <__lshift>
    cc18:	1027883a 	mov	r19,r2
    cc1c:	1000ed26 	beq	r2,zero,cfd4 <_strtod_r+0xcc8>
    cc20:	0500060e 	bge	zero,r20,cc3c <_strtod_r+0x930>
    cc24:	800b883a 	mov	r5,r16
    cc28:	a00d883a 	mov	r6,r20
    cc2c:	8809883a 	mov	r4,r17
    cc30:	000ae240 	call	ae24 <__lshift>
    cc34:	1021883a 	mov	r16,r2
    cc38:	1000e626 	beq	r2,zero,cfd4 <_strtod_r+0xcc8>
    cc3c:	d9400517 	ldw	r5,20(sp)
    cc40:	980d883a 	mov	r6,r19
    cc44:	8809883a 	mov	r4,r17
    cc48:	000afcc0 	call	afcc <__mdiff>
    cc4c:	1025883a 	mov	r18,r2
    cc50:	1000e026 	beq	r2,zero,cfd4 <_strtod_r+0xcc8>
    cc54:	15400317 	ldw	r21,12(r2)
    cc58:	800b883a 	mov	r5,r16
    cc5c:	10000315 	stw	zero,12(r2)
    cc60:	1009883a 	mov	r4,r2
    cc64:	000af6c0 	call	af6c <__mcmp>
    cc68:	10026716 	blt	r2,zero,d608 <_strtod_r+0x12fc>
    cc6c:	10029626 	beq	r2,zero,d6c8 <_strtod_r+0x13bc>
    cc70:	800b883a 	mov	r5,r16
    cc74:	9009883a 	mov	r4,r18
    cc78:	000b4840 	call	b484 <__ratio>
    cc7c:	000d883a 	mov	r6,zero
    cc80:	01d00034 	movhi	r7,16384
    cc84:	1009883a 	mov	r4,r2
    cc88:	180b883a 	mov	r5,r3
    cc8c:	1039883a 	mov	fp,r2
    cc90:	1829883a 	mov	r20,r3
    cc94:	001820c0 	call	1820c <__ledf2>
    cc98:	00803b16 	blt	zero,r2,cd88 <_strtod_r+0xa7c>
    cc9c:	a8005e26 	beq	r21,zero,ce18 <_strtod_r+0xb0c>
    cca0:	050ffc34 	movhi	r20,16368
    cca4:	d8000f15 	stw	zero,60(sp)
    cca8:	d8001015 	stw	zero,64(sp)
    ccac:	dd000d15 	stw	r20,52(sp)
    ccb0:	b71ffc2c 	andhi	fp,r22,32752
    ccb4:	009ff834 	movhi	r2,32736
    ccb8:	e080f226 	beq	fp,r2,d084 <_strtod_r+0xd78>
    ccbc:	d9000717 	ldw	r4,28(sp)
    ccc0:	20000c26 	beq	r4,zero,ccf4 <_strtod_r+0x9e8>
    ccc4:	0081a834 	movhi	r2,1696
    ccc8:	17000a36 	bltu	r2,fp,ccf4 <_strtod_r+0x9e8>
    cccc:	d9001017 	ldw	r4,64(sp)
    ccd0:	d9400d17 	ldw	r5,52(sp)
    ccd4:	01d07834 	movhi	r7,16864
    ccd8:	39ffffc4 	addi	r7,r7,-1
    ccdc:	01bff034 	movhi	r6,65472
    cce0:	001820c0 	call	1820c <__ledf2>
    cce4:	0080a70e 	bge	zero,r2,cf84 <_strtod_r+0xc78>
    cce8:	0081ac34 	movhi	r2,1712
    ccec:	a091883a 	add	r8,r20,r2
    ccf0:	4729c83a 	sub	r20,r8,fp
    ccf4:	b809883a 	mov	r4,r23
    ccf8:	b00b883a 	mov	r5,r22
    ccfc:	000b1c80 	call	b1c8 <__ulp>
    cd00:	d9000f17 	ldw	r4,60(sp)
    cd04:	a00b883a 	mov	r5,r20
    cd08:	100d883a 	mov	r6,r2
    cd0c:	180f883a 	mov	r7,r3
    cd10:	00183000 	call	18300 <__muldf3>
    cd14:	b80d883a 	mov	r6,r23
    cd18:	b00f883a 	mov	r7,r22
    cd1c:	1009883a 	mov	r4,r2
    cd20:	180b883a 	mov	r5,r3
    cd24:	0016e2c0 	call	16e2c <__adddf3>
    cd28:	102f883a 	mov	r23,r2
    cd2c:	182d883a 	mov	r22,r3
    cd30:	1829883a 	mov	r20,r3
    cd34:	d9000717 	ldw	r4,28(sp)
    cd38:	2000021e 	bne	r4,zero,cd44 <_strtod_r+0xa38>
    cd3c:	a09ffc2c 	andhi	r2,r20,32752
    cd40:	e080f126 	beq	fp,r2,d108 <_strtod_r+0xdfc>
    cd44:	d9400517 	ldw	r5,20(sp)
    cd48:	8809883a 	mov	r4,r17
    cd4c:	000a6900 	call	a690 <_Bfree>
    cd50:	980b883a 	mov	r5,r19
    cd54:	8809883a 	mov	r4,r17
    cd58:	000a6900 	call	a690 <_Bfree>
    cd5c:	800b883a 	mov	r5,r16
    cd60:	8809883a 	mov	r4,r17
    cd64:	000a6900 	call	a690 <_Bfree>
    cd68:	900b883a 	mov	r5,r18
    cd6c:	8809883a 	mov	r4,r17
    cd70:	000a6900 	call	a690 <_Bfree>
    cd74:	003f3f06 	br	ca74 <__alt_mem_epcs_flash_controller_0+0xff80ba74>
    cd78:	00c00044 	movi	r3,1
    cd7c:	d8000d15 	stw	zero,52(sp)
    cd80:	d8c00f15 	stw	r3,60(sp)
    cd84:	003f6f06 	br	cb44 <__alt_mem_epcs_flash_controller_0+0xff80bb44>
    cd88:	000d883a 	mov	r6,zero
    cd8c:	01cff834 	movhi	r7,16352
    cd90:	e009883a 	mov	r4,fp
    cd94:	a00b883a 	mov	r5,r20
    cd98:	00183000 	call	18300 <__muldf3>
    cd9c:	d8801015 	stw	r2,64(sp)
    cda0:	d8c00d15 	stw	r3,52(sp)
    cda4:	a8001a1e 	bne	r21,zero,ce10 <_strtod_r+0xb04>
    cda8:	1a20003c 	xorhi	r8,r3,32768
    cdac:	d8800f15 	stw	r2,60(sp)
    cdb0:	4029883a 	mov	r20,r8
    cdb4:	003fbe06 	br	ccb0 <__alt_mem_epcs_flash_controller_0+0xff80bcb0>
    cdb8:	d8000b15 	stw	zero,44(sp)
    cdbc:	04800044 	movi	r18,1
    cdc0:	b000021e 	bne	r22,zero,cdcc <_strtod_r+0xac0>
    cdc4:	d8c00c17 	ldw	r3,48(sp)
    cdc8:	183d9d26 	beq	r3,zero,c440 <__alt_mem_epcs_flash_controller_0+0xff80b440>
    cdcc:	0039883a 	mov	fp,zero
    cdd0:	003e5206 	br	c71c <__alt_mem_epcs_flash_controller_0+0xff80b71c>
    cdd4:	d8c00c17 	ldw	r3,48(sp)
    cdd8:	dd000e17 	ldw	r20,56(sp)
    cddc:	1889c83a 	sub	r4,r3,r2
    cde0:	003f4706 	br	cb00 <__alt_mem_epcs_flash_controller_0+0xff80bb00>
    cde4:	00bef884 	movi	r2,-1054
    cde8:	07000044 	movi	fp,1
    cdec:	10c5c83a 	sub	r2,r2,r3
    cdf0:	e084983a 	sll	r2,fp,r2
    cdf4:	df000f15 	stw	fp,60(sp)
    cdf8:	d8800d15 	stw	r2,52(sp)
    cdfc:	003f5106 	br	cb44 <__alt_mem_epcs_flash_controller_0+0xff80bb44>
    ce00:	d8c00717 	ldw	r3,28(sp)
    ce04:	0009883a 	mov	r4,zero
    ce08:	d8c00615 	stw	r3,24(sp)
    ce0c:	003de506 	br	c5a4 <__alt_mem_epcs_flash_controller_0+0xff80b5a4>
    ce10:	da000d17 	ldw	r8,52(sp)
    ce14:	003fe506 	br	cdac <__alt_mem_epcs_flash_controller_0+0xff80bdac>
    ce18:	b800521e 	bne	r23,zero,cf64 <_strtod_r+0xc58>
    ce1c:	01000434 	movhi	r4,16
    ce20:	213fffc4 	addi	r4,r4,-1
    ce24:	b104703a 	and	r2,r22,r4
    ce28:	1000501e 	bne	r2,zero,cf6c <_strtod_r+0xc60>
    ce2c:	000d883a 	mov	r6,zero
    ce30:	01cffc34 	movhi	r7,16368
    ce34:	e009883a 	mov	r4,fp
    ce38:	a00b883a 	mov	r5,r20
    ce3c:	001820c0 	call	1820c <__ledf2>
    ce40:	10024216 	blt	r2,zero,d74c <_strtod_r+0x1440>
    ce44:	a00b883a 	mov	r5,r20
    ce48:	000d883a 	mov	r6,zero
    ce4c:	01cff834 	movhi	r7,16352
    ce50:	e009883a 	mov	r4,fp
    ce54:	00183000 	call	18300 <__muldf3>
    ce58:	d8801015 	stw	r2,64(sp)
    ce5c:	d8c00d15 	stw	r3,52(sp)
    ce60:	1029883a 	mov	r20,r2
    ce64:	1a20003c 	xorhi	r8,r3,32768
    ce68:	dd000f15 	stw	r20,60(sp)
    ce6c:	4029883a 	mov	r20,r8
    ce70:	003f8f06 	br	ccb0 <__alt_mem_epcs_flash_controller_0+0xff80bcb0>
    ce74:	8039883a 	mov	fp,r16
    ce78:	002d883a 	mov	r22,zero
    ce7c:	d8000b15 	stw	zero,44(sp)
    ce80:	bd7ff404 	addi	r21,r23,-48
    ce84:	00800244 	movi	r2,9
    ce88:	15401236 	bltu	r2,r21,ced4 <_strtod_r+0xbc8>
    ce8c:	dd400e15 	stw	r21,56(sp)
    ce90:	b0800044 	addi	r2,r22,1
    ce94:	a801701e 	bne	r21,zero,d458 <_strtod_r+0x114c>
    ce98:	ddc00617 	ldw	r23,24(sp)
    ce9c:	102d883a 	mov	r22,r2
    cea0:	b8800044 	addi	r2,r23,1
    cea4:	d8800615 	stw	r2,24(sp)
    cea8:	bdc00047 	ldb	r23,1(r23)
    ceac:	003ff406 	br	ce80 <__alt_mem_epcs_flash_controller_0+0xff80be80>
    ceb0:	00c00044 	movi	r3,1
    ceb4:	d8c00e15 	stw	r3,56(sp)
    ceb8:	d8c00717 	ldw	r3,28(sp)
    cebc:	18800084 	addi	r2,r3,2
    cec0:	d8800615 	stw	r2,24(sp)
    cec4:	1dc00087 	ldb	r23,2(r3)
    cec8:	003e1f06 	br	c748 <__alt_mem_epcs_flash_controller_0+0xff80b748>
    cecc:	d8000e15 	stw	zero,56(sp)
    ced0:	003ff906 	br	ceb8 <__alt_mem_epcs_flash_controller_0+0xff80beb8>
    ced4:	04800044 	movi	r18,1
    ced8:	003dad06 	br	c590 <__alt_mem_epcs_flash_controller_0+0xff80b590>
    cedc:	903d581e 	bne	r18,zero,c440 <__alt_mem_epcs_flash_controller_0+0xff80b440>
    cee0:	00801384 	movi	r2,78
    cee4:	b8800526 	beq	r23,r2,cefc <_strtod_r+0xbf0>
    cee8:	15fd530e 	bge	r2,r23,c438 <__alt_mem_epcs_flash_controller_0+0xff80b438>
    ceec:	00801a44 	movi	r2,105
    cef0:	b8819a26 	beq	r23,r2,d55c <_strtod_r+0x1250>
    cef4:	00801b84 	movi	r2,110
    cef8:	b8bd511e 	bne	r23,r2,c440 <__alt_mem_epcs_flash_controller_0+0xff80b440>
    cefc:	014000b4 	movhi	r5,2
    cf00:	d9000617 	ldw	r4,24(sp)
    cf04:	29787204 	addi	r5,r5,-7736
    cf08:	01c00644 	movi	r7,25
    cf0c:	00000b06 	br	cf3c <_strtod_r+0xc30>
    cf10:	21000044 	addi	r4,r4,1
    cf14:	20800003 	ldbu	r2,0(r4)
    cf18:	10ffefc4 	addi	r3,r2,-65
    cf1c:	10803fcc 	andi	r2,r2,255
    cf20:	1080201c 	xori	r2,r2,128
    cf24:	18c03fcc 	andi	r3,r3,255
    cf28:	10bfe004 	addi	r2,r2,-128
    cf2c:	38c00136 	bltu	r7,r3,cf34 <_strtod_r+0xc28>
    cf30:	10800804 	addi	r2,r2,32
    cf34:	29400044 	addi	r5,r5,1
    cf38:	11bd411e 	bne	r2,r6,c440 <__alt_mem_epcs_flash_controller_0+0xff80b440>
    cf3c:	29800007 	ldb	r6,0(r5)
    cf40:	303ff31e 	bne	r6,zero,cf10 <__alt_mem_epcs_flash_controller_0+0xff80bf10>
    cf44:	20800044 	addi	r2,r4,1
    cf48:	d8800615 	stw	r2,24(sp)
    cf4c:	20c00047 	ldb	r3,1(r4)
    cf50:	00800a04 	movi	r2,40
    cf54:	18bde326 	beq	r3,r2,c6e4 <__alt_mem_epcs_flash_controller_0+0xff80b6e4>
    cf58:	05bffe34 	movhi	r22,65528
    cf5c:	002f883a 	mov	r23,zero
    cf60:	003dea06 	br	c70c <__alt_mem_epcs_flash_controller_0+0xff80b70c>
    cf64:	00800044 	movi	r2,1
    cf68:	b880ff26 	beq	r23,r2,d368 <_strtod_r+0x105c>
    cf6c:	014ffc34 	movhi	r5,16368
    cf70:	d8000f15 	stw	zero,60(sp)
    cf74:	052ffc34 	movhi	r20,49136
    cf78:	d8001015 	stw	zero,64(sp)
    cf7c:	d9400d15 	stw	r5,52(sp)
    cf80:	003f4b06 	br	ccb0 <__alt_mem_epcs_flash_controller_0+0xff80bcb0>
    cf84:	d9001017 	ldw	r4,64(sp)
    cf88:	d9400d17 	ldw	r5,52(sp)
    cf8c:	0015ffc0 	call	15ffc <__fixunsdfsi>
    cf90:	1000f126 	beq	r2,zero,d358 <_strtod_r+0x104c>
    cf94:	1009883a 	mov	r4,r2
    cf98:	00195c40 	call	195c4 <__floatunsidf>
    cf9c:	d8801015 	stw	r2,64(sp)
    cfa0:	d8c00d15 	stw	r3,52(sp)
    cfa4:	a800ea1e 	bne	r21,zero,d350 <_strtod_r+0x1044>
    cfa8:	d8800d17 	ldw	r2,52(sp)
    cfac:	1220003c 	xorhi	r8,r2,32768
    cfb0:	d8c01017 	ldw	r3,64(sp)
    cfb4:	4029883a 	mov	r20,r8
    cfb8:	d8c00f15 	stw	r3,60(sp)
    cfbc:	003f4a06 	br	cce8 <__alt_mem_epcs_flash_controller_0+0xff80bce8>
    cfc0:	d8000c15 	stw	zero,48(sp)
    cfc4:	003ea506 	br	ca5c <__alt_mem_epcs_flash_controller_0+0xff80ba5c>
    cfc8:	d8c00817 	ldw	r3,32(sp)
    cfcc:	00bfffc4 	movi	r2,-1
    cfd0:	1880441e 	bne	r3,r2,d0e4 <_strtod_r+0xdd8>
    cfd4:	9011883a 	mov	r8,r18
    cfd8:	d8800517 	ldw	r2,20(sp)
    cfdc:	00c00884 	movi	r3,34
    cfe0:	88c00015 	stw	r3,0(r17)
    cfe4:	d8000815 	stw	zero,32(sp)
    cfe8:	071ffc34 	movhi	fp,32752
    cfec:	100b883a 	mov	r5,r2
    cff0:	8809883a 	mov	r4,r17
    cff4:	da001315 	stw	r8,76(sp)
    cff8:	000a6900 	call	a690 <_Bfree>
    cffc:	980b883a 	mov	r5,r19
    d000:	8809883a 	mov	r4,r17
    d004:	000a6900 	call	a690 <_Bfree>
    d008:	800b883a 	mov	r5,r16
    d00c:	8809883a 	mov	r4,r17
    d010:	000a6900 	call	a690 <_Bfree>
    d014:	d9400b17 	ldw	r5,44(sp)
    d018:	8809883a 	mov	r4,r17
    d01c:	000a6900 	call	a690 <_Bfree>
    d020:	da001317 	ldw	r8,76(sp)
    d024:	8809883a 	mov	r4,r17
    d028:	400b883a 	mov	r5,r8
    d02c:	000a6900 	call	a690 <_Bfree>
    d030:	003d5f06 	br	c5b0 <__alt_mem_epcs_flash_controller_0+0xff80b5b0>
    d034:	d8c00a17 	ldw	r3,40(sp)
    d038:	d8800504 	addi	r2,sp,20
    d03c:	018000b4 	movhi	r6,2
    d040:	31b87804 	addi	r6,r6,-7712
    d044:	d8c00115 	stw	r3,4(sp)
    d048:	d8800015 	stw	r2,0(sp)
    d04c:	d9c00404 	addi	r7,sp,16
    d050:	d9400604 	addi	r5,sp,24
    d054:	8809883a 	mov	r4,r17
    d058:	0013bc80 	call	13bc8 <__gethex>
    d05c:	148001cc 	andi	r18,r2,7
    d060:	903e2126 	beq	r18,zero,c8e8 <__alt_mem_epcs_flash_controller_0+0xff80b8e8>
    d064:	00c00184 	movi	r3,6
    d068:	90c0c71e 	bne	r18,r3,d388 <_strtod_r+0x107c>
    d06c:	84000044 	addi	r16,r16,1
    d070:	dc000615 	stw	r16,24(sp)
    d074:	d8000815 	stw	zero,32(sp)
    d078:	0039883a 	mov	fp,zero
    d07c:	d8000a15 	stw	zero,40(sp)
    d080:	003d4b06 	br	c5b0 <__alt_mem_epcs_flash_controller_0+0xff80b5b0>
    d084:	00bf2c34 	movhi	r2,64688
    d088:	b0ad883a 	add	r22,r22,r2
    d08c:	b809883a 	mov	r4,r23
    d090:	b00b883a 	mov	r5,r22
    d094:	000b1c80 	call	b1c8 <__ulp>
    d098:	d9000f17 	ldw	r4,60(sp)
    d09c:	100d883a 	mov	r6,r2
    d0a0:	180f883a 	mov	r7,r3
    d0a4:	a00b883a 	mov	r5,r20
    d0a8:	00183000 	call	18300 <__muldf3>
    d0ac:	b80d883a 	mov	r6,r23
    d0b0:	1009883a 	mov	r4,r2
    d0b4:	b00f883a 	mov	r7,r22
    d0b8:	180b883a 	mov	r5,r3
    d0bc:	0016e2c0 	call	16e2c <__adddf3>
    d0c0:	011f2834 	movhi	r4,31904
    d0c4:	102f883a 	mov	r23,r2
    d0c8:	213fffc4 	addi	r4,r4,-1
    d0cc:	189ffc2c 	andhi	r2,r3,32752
    d0d0:	20807b2e 	bgeu	r4,r2,d2c0 <_strtod_r+0xfb4>
    d0d4:	d9401217 	ldw	r5,72(sp)
    d0d8:	009ffc34 	movhi	r2,32752
    d0dc:	10bfffc4 	addi	r2,r2,-1
    d0e0:	28bfb926 	beq	r5,r2,cfc8 <__alt_mem_epcs_flash_controller_0+0xff80bfc8>
    d0e4:	059ffc34 	movhi	r22,32752
    d0e8:	b5bfffc4 	addi	r22,r22,-1
    d0ec:	05ffffc4 	movi	r23,-1
    d0f0:	003f1406 	br	cd44 <__alt_mem_epcs_flash_controller_0+0xff80bd44>
    d0f4:	00800884 	movi	r2,34
    d0f8:	88800015 	stw	r2,0(r17)
    d0fc:	d8000815 	stw	zero,32(sp)
    d100:	071ffc34 	movhi	fp,32752
    d104:	003d2a06 	br	c5b0 <__alt_mem_epcs_flash_controller_0+0xff80b5b0>
    d108:	d9400d17 	ldw	r5,52(sp)
    d10c:	d9001017 	ldw	r4,64(sp)
    d110:	00194680 	call	19468 <__fixdfsi>
    d114:	1009883a 	mov	r4,r2
    d118:	00194e80 	call	194e8 <__floatsidf>
    d11c:	d9001017 	ldw	r4,64(sp)
    d120:	d9400d17 	ldw	r5,52(sp)
    d124:	100d883a 	mov	r6,r2
    d128:	180f883a 	mov	r7,r3
    d12c:	0018b6c0 	call	18b6c <__subdf3>
    d130:	1011883a 	mov	r8,r2
    d134:	1839883a 	mov	fp,r3
    d138:	a800121e 	bne	r21,zero,d184 <_strtod_r+0xe78>
    d13c:	b800111e 	bne	r23,zero,d184 <_strtod_r+0xe78>
    d140:	01400434 	movhi	r5,16
    d144:	297fffc4 	addi	r5,r5,-1
    d148:	a168703a 	and	r20,r20,r5
    d14c:	a0000d1e 	bne	r20,zero,d184 <_strtod_r+0xe78>
    d150:	01a52834 	movhi	r6,38048
    d154:	01cff434 	movhi	r7,16336
    d158:	318d6544 	addi	r6,r6,13717
    d15c:	39ffffc4 	addi	r7,r7,-1
    d160:	1009883a 	mov	r4,r2
    d164:	180b883a 	mov	r5,r3
    d168:	001820c0 	call	1820c <__ledf2>
    d16c:	103ef50e 	bge	r2,zero,cd44 <__alt_mem_epcs_flash_controller_0+0xff80bd44>
    d170:	9011883a 	mov	r8,r18
    d174:	d8800517 	ldw	r2,20(sp)
    d178:	d8000815 	stw	zero,32(sp)
    d17c:	b039883a 	mov	fp,r22
    d180:	003f9a06 	br	cfec <__alt_mem_epcs_flash_controller_0+0xff80bfec>
    d184:	01a52834 	movhi	r6,38048
    d188:	01cff834 	movhi	r7,16352
    d18c:	4009883a 	mov	r4,r8
    d190:	318d6544 	addi	r6,r6,13717
    d194:	39ffffc4 	addi	r7,r7,-1
    d198:	e00b883a 	mov	r5,fp
    d19c:	da001315 	stw	r8,76(sp)
    d1a0:	001820c0 	call	1820c <__ledf2>
    d1a4:	da001317 	ldw	r8,76(sp)
    d1a8:	10000716 	blt	r2,zero,d1c8 <_strtod_r+0xebc>
    d1ac:	018d6c34 	movhi	r6,13744
    d1b0:	31b94d44 	addi	r6,r6,-6859
    d1b4:	01cff834 	movhi	r7,16352
    d1b8:	4009883a 	mov	r4,r8
    d1bc:	e00b883a 	mov	r5,fp
    d1c0:	00181300 	call	18130 <__gedf2>
    d1c4:	00bedf0e 	bge	zero,r2,cd44 <__alt_mem_epcs_flash_controller_0+0xff80bd44>
    d1c8:	9011883a 	mov	r8,r18
    d1cc:	d8800517 	ldw	r2,20(sp)
    d1d0:	ddc00815 	stw	r23,32(sp)
    d1d4:	b039883a 	mov	fp,r22
    d1d8:	003f8406 	br	cfec <__alt_mem_epcs_flash_controller_0+0xff80bfec>
    d1dc:	903e1026 	beq	r18,zero,ca20 <__alt_mem_epcs_flash_controller_0+0xff80ba20>
    d1e0:	04a5c83a 	sub	r18,zero,r18
    d1e4:	908003cc 	andi	r2,r18,15
    d1e8:	10000b26 	beq	r2,zero,d218 <_strtod_r+0xf0c>
    d1ec:	100490fa 	slli	r2,r2,3
    d1f0:	00c000b4 	movhi	r3,2
    d1f4:	18f83d04 	addi	r3,r3,-7948
    d1f8:	1885883a 	add	r2,r3,r2
    d1fc:	11800017 	ldw	r6,0(r2)
    d200:	11c00117 	ldw	r7,4(r2)
    d204:	b809883a 	mov	r4,r23
    d208:	b00b883a 	mov	r5,r22
    d20c:	00176d80 	call	176d8 <__divdf3>
    d210:	102f883a 	mov	r23,r2
    d214:	182d883a 	mov	r22,r3
    d218:	9025d13a 	srai	r18,r18,4
    d21c:	903e0026 	beq	r18,zero,ca20 <__alt_mem_epcs_flash_controller_0+0xff80ba20>
    d220:	008007c4 	movi	r2,31
    d224:	14801f16 	blt	r2,r18,d2a4 <_strtod_r+0xf98>
    d228:	9080040c 	andi	r2,r18,16
    d22c:	10018d26 	beq	r2,zero,d864 <_strtod_r+0x1558>
    d230:	00c01a84 	movi	r3,106
    d234:	d8c00715 	stw	r3,28(sp)
    d238:	04817e0e 	bge	zero,r18,d834 <_strtod_r+0x1528>
    d23c:	050000b4 	movhi	r20,2
    d240:	a5387d04 	addi	r20,r20,-7692
    d244:	b805883a 	mov	r2,r23
    d248:	b007883a 	mov	r3,r22
    d24c:	0009883a 	mov	r4,zero
    d250:	9180004c 	andi	r6,r18,1
    d254:	30000626 	beq	r6,zero,d270 <_strtod_r+0xf64>
    d258:	a1800017 	ldw	r6,0(r20)
    d25c:	a1c00117 	ldw	r7,4(r20)
    d260:	1009883a 	mov	r4,r2
    d264:	180b883a 	mov	r5,r3
    d268:	00183000 	call	18300 <__muldf3>
    d26c:	01000044 	movi	r4,1
    d270:	9025d07a 	srai	r18,r18,1
    d274:	a5000204 	addi	r20,r20,8
    d278:	903ff51e 	bne	r18,zero,d250 <__alt_mem_epcs_flash_controller_0+0xff80c250>
    d27c:	21003fcc 	andi	r4,r4,255
    d280:	2001891e 	bne	r4,zero,d8a8 <_strtod_r+0x159c>
    d284:	d9000717 	ldw	r4,28(sp)
    d288:	20016a1e 	bne	r4,zero,d834 <_strtod_r+0x1528>
    d28c:	000d883a 	mov	r6,zero
    d290:	000f883a 	mov	r7,zero
    d294:	b809883a 	mov	r4,r23
    d298:	b00b883a 	mov	r5,r22
    d29c:	00180a80 	call	180a8 <__eqdf2>
    d2a0:	103de01e 	bne	r2,zero,ca24 <__alt_mem_epcs_flash_controller_0+0xff80ba24>
    d2a4:	00800884 	movi	r2,34
    d2a8:	88800015 	stw	r2,0(r17)
    d2ac:	d8000815 	stw	zero,32(sp)
    d2b0:	0039883a 	mov	fp,zero
    d2b4:	003cbe06 	br	c5b0 <__alt_mem_epcs_flash_controller_0+0xff80b5b0>
    d2b8:	011387c4 	movi	r4,19999
    d2bc:	003d5606 	br	c818 <__alt_mem_epcs_flash_controller_0+0xff80b818>
    d2c0:	0580d434 	movhi	r22,848
    d2c4:	1dad883a 	add	r22,r3,r22
    d2c8:	b029883a 	mov	r20,r22
    d2cc:	003e9906 	br	cd34 <__alt_mem_epcs_flash_controller_0+0xff80bd34>
    d2d0:	e5c03fcc 	andi	r23,fp,255
    d2d4:	bdc0201c 	xori	r23,r23,128
    d2d8:	bdffe004 	addi	r23,r23,-128
    d2dc:	dc800817 	ldw	r18,32(sp)
    d2e0:	0029883a 	mov	r20,zero
    d2e4:	0027883a 	mov	r19,zero
    d2e8:	0021883a 	mov	r16,zero
    d2ec:	003c9806 	br	c550 <__alt_mem_epcs_flash_controller_0+0xff80b550>
    d2f0:	00c00944 	movi	r3,37
    d2f4:	1f07c83a 	sub	r3,r3,fp
    d2f8:	1d7d7e16 	blt	r3,r21,c8f4 <__alt_mem_epcs_flash_controller_0+0xff80b8f4>
    d2fc:	1721c83a 	sub	r16,r2,fp
    d300:	800490fa 	slli	r2,r16,3
    d304:	044000b4 	movhi	r17,2
    d308:	8c783d04 	addi	r17,r17,-7948
    d30c:	8885883a 	add	r2,r17,r2
    d310:	11000017 	ldw	r4,0(r2)
    d314:	11400117 	ldw	r5,4(r2)
    d318:	b80d883a 	mov	r6,r23
    d31c:	b00f883a 	mov	r7,r22
    d320:	00183000 	call	18300 <__muldf3>
    d324:	ac2bc83a 	sub	r21,r21,r16
    d328:	a80c90fa 	slli	r6,r21,3
    d32c:	1009883a 	mov	r4,r2
    d330:	180b883a 	mov	r5,r3
    d334:	8985883a 	add	r2,r17,r6
    d338:	11800017 	ldw	r6,0(r2)
    d33c:	11c00117 	ldw	r7,4(r2)
    d340:	00183000 	call	18300 <__muldf3>
    d344:	d8800815 	stw	r2,32(sp)
    d348:	1839883a 	mov	fp,r3
    d34c:	003c9806 	br	c5b0 <__alt_mem_epcs_flash_controller_0+0xff80b5b0>
    d350:	da000d17 	ldw	r8,52(sp)
    d354:	003f1606 	br	cfb0 <__alt_mem_epcs_flash_controller_0+0xff80bfb0>
    d358:	014ffc34 	movhi	r5,16368
    d35c:	d8001015 	stw	zero,64(sp)
    d360:	d9400d15 	stw	r5,52(sp)
    d364:	003f0f06 	br	cfa4 <__alt_mem_epcs_flash_controller_0+0xff80bfa4>
    d368:	b03f001e 	bne	r22,zero,cf6c <__alt_mem_epcs_flash_controller_0+0xff80bf6c>
    d36c:	9011883a 	mov	r8,r18
    d370:	00800884 	movi	r2,34
    d374:	88800015 	stw	r2,0(r17)
    d378:	d8000815 	stw	zero,32(sp)
    d37c:	d8800517 	ldw	r2,20(sp)
    d380:	0039883a 	mov	fp,zero
    d384:	003f1906 	br	cfec <__alt_mem_epcs_flash_controller_0+0xff80bfec>
    d388:	d9800517 	ldw	r6,20(sp)
    d38c:	30000826 	beq	r6,zero,d3b0 <_strtod_r+0x10a4>
    d390:	01400d44 	movi	r5,53
    d394:	d9000204 	addi	r4,sp,8
    d398:	d8801315 	stw	r2,76(sp)
    d39c:	000b59c0 	call	b59c <__copybits>
    d3a0:	d9400517 	ldw	r5,20(sp)
    d3a4:	8809883a 	mov	r4,r17
    d3a8:	000a6900 	call	a690 <_Bfree>
    d3ac:	d8801317 	ldw	r2,76(sp)
    d3b0:	00c00184 	movi	r3,6
    d3b4:	1c800f36 	bltu	r3,r18,d3f4 <_strtod_r+0x10e8>
    d3b8:	902490ba 	slli	r18,r18,2
    d3bc:	00c00074 	movhi	r3,1
    d3c0:	18f4f404 	addi	r3,r3,-11312
    d3c4:	90e5883a 	add	r18,r18,r3
    d3c8:	90c00017 	ldw	r3,0(r18)
    d3cc:	1800683a 	jmp	r3
    d3d0:	0000d44c 	andi	zero,zero,849
    d3d4:	0000d424 	muli	zero,zero,848
    d3d8:	0000d408 	cmpgei	zero,zero,848
    d3dc:	0000d3ec 	andhi	zero,zero,847
    d3e0:	0000d414 	movui	zero,848
    d3e4:	0000d424 	muli	zero,zero,848
    d3e8:	0000d44c 	andi	zero,zero,849
    d3ec:	059ffc34 	movhi	r22,32752
    d3f0:	002f883a 	mov	r23,zero
    d3f4:	1080020c 	andi	r2,r2,8
    d3f8:	ddc00815 	stw	r23,32(sp)
    d3fc:	103cc426 	beq	r2,zero,c710 <__alt_mem_epcs_flash_controller_0+0xff80b710>
    d400:	b7200034 	orhi	fp,r22,32768
    d404:	003c6a06 	br	c5b0 <__alt_mem_epcs_flash_controller_0+0xff80b5b0>
    d408:	ddc00217 	ldw	r23,8(sp)
    d40c:	dd800317 	ldw	r22,12(sp)
    d410:	003ff806 	br	d3f4 <__alt_mem_epcs_flash_controller_0+0xff80c3f4>
    d414:	05a00034 	movhi	r22,32768
    d418:	b5bfffc4 	addi	r22,r22,-1
    d41c:	05ffffc4 	movi	r23,-1
    d420:	003ff406 	br	d3f4 <__alt_mem_epcs_flash_controller_0+0xff80c3f4>
    d424:	d8c00417 	ldw	r3,16(sp)
    d428:	dd800317 	ldw	r22,12(sp)
    d42c:	013ffc34 	movhi	r4,65520
    d430:	18c10cc4 	addi	r3,r3,1075
    d434:	1806953a 	slli	r3,r3,20
    d438:	213fffc4 	addi	r4,r4,-1
    d43c:	b12c703a 	and	r22,r22,r4
    d440:	ddc00217 	ldw	r23,8(sp)
    d444:	b0ecb03a 	or	r22,r22,r3
    d448:	003fea06 	br	d3f4 <__alt_mem_epcs_flash_controller_0+0xff80c3f4>
    d44c:	002d883a 	mov	r22,zero
    d450:	002f883a 	mov	r23,zero
    d454:	003fe706 	br	d3f4 <__alt_mem_epcs_flash_controller_0+0xff80c3f4>
    d458:	d8c00b17 	ldw	r3,44(sp)
    d45c:	b72d883a 	add	r22,r22,fp
    d460:	1887883a 	add	r3,r3,r2
    d464:	d8c00b15 	stw	r3,44(sp)
    d468:	00c00044 	movi	r3,1
    d46c:	10c11126 	beq	r2,r3,d8b4 <_strtod_r+0x15a8>
    d470:	05c00204 	movi	r23,8
    d474:	04800404 	movi	r18,16
    d478:	e7000044 	addi	fp,fp,1
    d47c:	e0bfffc4 	addi	r2,fp,-1
    d480:	b8802016 	blt	r23,r2,d504 <_strtod_r+0x11f8>
    d484:	9809883a 	mov	r4,r19
    d488:	01400284 	movi	r5,10
    d48c:	00024440 	call	2444 <__mulsi3>
    d490:	1027883a 	mov	r19,r2
    d494:	e5bff81e 	bne	fp,r22,d478 <__alt_mem_epcs_flash_controller_0+0xff80c478>
    d498:	ddc00617 	ldw	r23,24(sp)
    d49c:	e7000044 	addi	fp,fp,1
    d4a0:	00800204 	movi	r2,8
    d4a4:	1580100e 	bge	r2,r22,d4e8 <_strtod_r+0x11dc>
    d4a8:	00800404 	movi	r2,16
    d4ac:	002d883a 	mov	r22,zero
    d4b0:	173e7b16 	blt	r2,fp,cea0 <__alt_mem_epcs_flash_controller_0+0xff80bea0>
    d4b4:	a009883a 	mov	r4,r20
    d4b8:	01400284 	movi	r5,10
    d4bc:	00024440 	call	2444 <__mulsi3>
    d4c0:	a8a9883a 	add	r20,r21,r2
    d4c4:	003e7606 	br	cea0 <__alt_mem_epcs_flash_controller_0+0xff80bea0>
    d4c8:	d9000617 	ldw	r4,24(sp)
    d4cc:	bdfff404 	addi	r23,r23,-48
    d4d0:	b5800044 	addi	r22,r22,1
    d4d4:	ddc00e15 	stw	r23,56(sp)
    d4d8:	d9000815 	stw	r4,32(sp)
    d4dc:	dd800b15 	stw	r22,44(sp)
    d4e0:	202f883a 	mov	r23,r4
    d4e4:	07000044 	movi	fp,1
    d4e8:	9809883a 	mov	r4,r19
    d4ec:	01400284 	movi	r5,10
    d4f0:	00024440 	call	2444 <__mulsi3>
    d4f4:	d8c00e17 	ldw	r3,56(sp)
    d4f8:	002d883a 	mov	r22,zero
    d4fc:	18a7883a 	add	r19,r3,r2
    d500:	003e6706 	br	cea0 <__alt_mem_epcs_flash_controller_0+0xff80bea0>
    d504:	973fe316 	blt	r18,fp,d494 <__alt_mem_epcs_flash_controller_0+0xff80c494>
    d508:	a009883a 	mov	r4,r20
    d50c:	01400284 	movi	r5,10
    d510:	00024440 	call	2444 <__mulsi3>
    d514:	1029883a 	mov	r20,r2
    d518:	003fde06 	br	d494 <__alt_mem_epcs_flash_controller_0+0xff80c494>
    d51c:	00bffa84 	movi	r2,-22
    d520:	a8bcf416 	blt	r21,r2,c8f4 <__alt_mem_epcs_flash_controller_0+0xff80b8f4>
    d524:	a82a90fa 	slli	r21,r21,3
    d528:	008000b4 	movhi	r2,2
    d52c:	10b83d04 	addi	r2,r2,-7948
    d530:	1545c83a 	sub	r2,r2,r21
    d534:	11800017 	ldw	r6,0(r2)
    d538:	11c00117 	ldw	r7,4(r2)
    d53c:	b809883a 	mov	r4,r23
    d540:	b00b883a 	mov	r5,r22
    d544:	00176d80 	call	176d8 <__divdf3>
    d548:	d8800815 	stw	r2,32(sp)
    d54c:	1839883a 	mov	fp,r3
    d550:	003c1706 	br	c5b0 <__alt_mem_epcs_flash_controller_0+0xff80b5b0>
    d554:	9011883a 	mov	r8,r18
    d558:	003ea006 	br	cfdc <__alt_mem_epcs_flash_controller_0+0xff80bfdc>
    d55c:	014000b4 	movhi	r5,2
    d560:	d9000617 	ldw	r4,24(sp)
    d564:	29786f04 	addi	r5,r5,-7748
    d568:	01c00644 	movi	r7,25
    d56c:	00000b06 	br	d59c <_strtod_r+0x1290>
    d570:	21000044 	addi	r4,r4,1
    d574:	20800003 	ldbu	r2,0(r4)
    d578:	10ffefc4 	addi	r3,r2,-65
    d57c:	10803fcc 	andi	r2,r2,255
    d580:	1080201c 	xori	r2,r2,128
    d584:	18c03fcc 	andi	r3,r3,255
    d588:	10bfe004 	addi	r2,r2,-128
    d58c:	38c00136 	bltu	r7,r3,d594 <_strtod_r+0x1288>
    d590:	10800804 	addi	r2,r2,32
    d594:	29400044 	addi	r5,r5,1
    d598:	11bba91e 	bne	r2,r6,c440 <__alt_mem_epcs_flash_controller_0+0xff80b440>
    d59c:	29800007 	ldb	r6,0(r5)
    d5a0:	303ff31e 	bne	r6,zero,d570 <__alt_mem_epcs_flash_controller_0+0xff80c570>
    d5a4:	018000b4 	movhi	r6,2
    d5a8:	d9000615 	stw	r4,24(sp)
    d5ac:	31b87004 	addi	r6,r6,-7744
    d5b0:	200b883a 	mov	r5,r4
    d5b4:	02000644 	movi	r8,25
    d5b8:	00000a06 	br	d5e4 <_strtod_r+0x12d8>
    d5bc:	28800003 	ldbu	r2,0(r5)
    d5c0:	10ffefc4 	addi	r3,r2,-65
    d5c4:	10803fcc 	andi	r2,r2,255
    d5c8:	1080201c 	xori	r2,r2,128
    d5cc:	18c03fcc 	andi	r3,r3,255
    d5d0:	10bfe004 	addi	r2,r2,-128
    d5d4:	40c00136 	bltu	r8,r3,d5dc <_strtod_r+0x12d0>
    d5d8:	10800804 	addi	r2,r2,32
    d5dc:	31800044 	addi	r6,r6,1
    d5e0:	11c0691e 	bne	r2,r7,d788 <_strtod_r+0x147c>
    d5e4:	31c00007 	ldb	r7,0(r6)
    d5e8:	29400044 	addi	r5,r5,1
    d5ec:	383ff31e 	bne	r7,zero,d5bc <__alt_mem_epcs_flash_controller_0+0xff80c5bc>
    d5f0:	d9400615 	stw	r5,24(sp)
    d5f4:	059ffc34 	movhi	r22,32752
    d5f8:	002f883a 	mov	r23,zero
    d5fc:	003c4306 	br	c70c <__alt_mem_epcs_flash_controller_0+0xff80b70c>
    d600:	002d883a 	mov	r22,zero
    d604:	003cad06 	br	c8bc <__alt_mem_epcs_flash_controller_0+0xff80b8bc>
    d608:	9011883a 	mov	r8,r18
    d60c:	df001217 	ldw	fp,72(sp)
    d610:	a800461e 	bne	r21,zero,d72c <_strtod_r+0x1420>
    d614:	b800451e 	bne	r23,zero,d72c <_strtod_r+0x1420>
    d618:	00800434 	movhi	r2,16
    d61c:	10bfffc4 	addi	r2,r2,-1
    d620:	b084703a 	and	r2,r22,r2
    d624:	1000411e 	bne	r2,zero,d72c <_strtod_r+0x1420>
    d628:	b49ffc2c 	andhi	r18,r22,32752
    d62c:	0081ac34 	movhi	r2,1712
    d630:	14803e2e 	bgeu	r2,r18,d72c <_strtod_r+0x1420>
    d634:	40800517 	ldw	r2,20(r8)
    d638:	1000031e 	bne	r2,zero,d648 <_strtod_r+0x133c>
    d63c:	40800417 	ldw	r2,16(r8)
    d640:	00c00044 	movi	r3,1
    d644:	1880390e 	bge	r3,r2,d72c <_strtod_r+0x1420>
    d648:	400b883a 	mov	r5,r8
    d64c:	01800044 	movi	r6,1
    d650:	8809883a 	mov	r4,r17
    d654:	000ae240 	call	ae24 <__lshift>
    d658:	800b883a 	mov	r5,r16
    d65c:	1009883a 	mov	r4,r2
    d660:	d8801315 	stw	r2,76(sp)
    d664:	000af6c0 	call	af6c <__mcmp>
    d668:	da001317 	ldw	r8,76(sp)
    d66c:	00802f0e 	bge	zero,r2,d72c <_strtod_r+0x1420>
    d670:	d9000717 	ldw	r4,28(sp)
    d674:	20008026 	beq	r4,zero,d878 <_strtod_r+0x156c>
    d678:	0081ac34 	movhi	r2,1712
    d67c:	14807e16 	blt	r2,r18,d878 <_strtod_r+0x156c>
    d680:	0080dc34 	movhi	r2,880
    d684:	14bf3a0e 	bge	r2,r18,d370 <__alt_mem_epcs_flash_controller_0+0xff80c370>
    d688:	d9000817 	ldw	r4,32(sp)
    d68c:	e00b883a 	mov	r5,fp
    d690:	000d883a 	mov	r6,zero
    d694:	01ce5434 	movhi	r7,14672
    d698:	da001315 	stw	r8,76(sp)
    d69c:	00183000 	call	18300 <__muldf3>
    d6a0:	d8800815 	stw	r2,32(sp)
    d6a4:	1839883a 	mov	fp,r3
    d6a8:	da001317 	ldw	r8,76(sp)
    d6ac:	1800211e 	bne	r3,zero,d734 <_strtod_r+0x1428>
    d6b0:	d8c00817 	ldw	r3,32(sp)
    d6b4:	d8800517 	ldw	r2,20(sp)
    d6b8:	183e4c1e 	bne	r3,zero,cfec <__alt_mem_epcs_flash_controller_0+0xff80bfec>
    d6bc:	00c00884 	movi	r3,34
    d6c0:	88c00015 	stw	r3,0(r17)
    d6c4:	003e4906 	br	cfec <__alt_mem_epcs_flash_controller_0+0xff80bfec>
    d6c8:	00800434 	movhi	r2,16
    d6cc:	9011883a 	mov	r8,r18
    d6d0:	df001217 	ldw	fp,72(sp)
    d6d4:	10bfffc4 	addi	r2,r2,-1
    d6d8:	a8002226 	beq	r21,zero,d764 <_strtod_r+0x1458>
    d6dc:	b086703a 	and	r3,r22,r2
    d6e0:	18804126 	beq	r3,r2,d7e8 <_strtod_r+0x14dc>
    d6e4:	d8c00d17 	ldw	r3,52(sp)
    d6e8:	18002326 	beq	r3,zero,d778 <_strtod_r+0x146c>
    d6ec:	1da4703a 	and	r18,r3,r22
    d6f0:	90000e26 	beq	r18,zero,d72c <_strtod_r+0x1420>
    d6f4:	da001315 	stw	r8,76(sp)
    d6f8:	d9800717 	ldw	r6,28(sp)
    d6fc:	b809883a 	mov	r4,r23
    d700:	b00b883a 	mov	r5,r22
    d704:	a8002826 	beq	r21,zero,d7a8 <_strtod_r+0x149c>
    d708:	000c2a80 	call	c2a8 <sulp>
    d70c:	100d883a 	mov	r6,r2
    d710:	180f883a 	mov	r7,r3
    d714:	b809883a 	mov	r4,r23
    d718:	b00b883a 	mov	r5,r22
    d71c:	0016e2c0 	call	16e2c <__adddf3>
    d720:	da001317 	ldw	r8,76(sp)
    d724:	d8800815 	stw	r2,32(sp)
    d728:	1839883a 	mov	fp,r3
    d72c:	d8800717 	ldw	r2,28(sp)
    d730:	103fd51e 	bne	r2,zero,d688 <__alt_mem_epcs_flash_controller_0+0xff80c688>
    d734:	d8800517 	ldw	r2,20(sp)
    d738:	003e2c06 	br	cfec <__alt_mem_epcs_flash_controller_0+0xff80bfec>
    d73c:	0580d434 	movhi	r22,848
    d740:	1dad883a 	add	r22,r3,r22
    d744:	d8000715 	stw	zero,28(sp)
    d748:	003cb606 	br	ca24 <__alt_mem_epcs_flash_controller_0+0xff80ba24>
    d74c:	008ff834 	movhi	r2,16352
    d750:	0029883a 	mov	r20,zero
    d754:	022ff834 	movhi	r8,49120
    d758:	d8001015 	stw	zero,64(sp)
    d75c:	d8800d15 	stw	r2,52(sp)
    d760:	003dc106 	br	ce68 <__alt_mem_epcs_flash_controller_0+0xff80be68>
    d764:	b084703a 	and	r2,r22,r2
    d768:	103fde1e 	bne	r2,zero,d6e4 <__alt_mem_epcs_flash_controller_0+0xff80c6e4>
    d76c:	b83fdd1e 	bne	r23,zero,d6e4 <__alt_mem_epcs_flash_controller_0+0xff80c6e4>
    d770:	b49ffc2c 	andhi	r18,r22,32752
    d774:	003fbe06 	br	d670 <__alt_mem_epcs_flash_controller_0+0xff80c670>
    d778:	d8c00f17 	ldw	r3,60(sp)
    d77c:	1de8703a 	and	r20,r3,r23
    d780:	a03fea26 	beq	r20,zero,d72c <__alt_mem_epcs_flash_controller_0+0xff80c72c>
    d784:	003fdb06 	br	d6f4 <__alt_mem_epcs_flash_controller_0+0xff80c6f4>
    d788:	21000044 	addi	r4,r4,1
    d78c:	d9000615 	stw	r4,24(sp)
    d790:	003f9806 	br	d5f4 <__alt_mem_epcs_flash_controller_0+0xff80c5f4>
    d794:	014000b4 	movhi	r5,2
    d798:	29783304 	addi	r5,r5,-7988
    d79c:	d9400715 	stw	r5,28(sp)
    d7a0:	0025883a 	mov	r18,zero
    d7a4:	003c8c06 	br	c9d8 <__alt_mem_epcs_flash_controller_0+0xff80b9d8>
    d7a8:	000c2a80 	call	c2a8 <sulp>
    d7ac:	100d883a 	mov	r6,r2
    d7b0:	180f883a 	mov	r7,r3
    d7b4:	b809883a 	mov	r4,r23
    d7b8:	b00b883a 	mov	r5,r22
    d7bc:	0018b6c0 	call	18b6c <__subdf3>
    d7c0:	000d883a 	mov	r6,zero
    d7c4:	000f883a 	mov	r7,zero
    d7c8:	1009883a 	mov	r4,r2
    d7cc:	180b883a 	mov	r5,r3
    d7d0:	d8800815 	stw	r2,32(sp)
    d7d4:	1839883a 	mov	fp,r3
    d7d8:	00180a80 	call	180a8 <__eqdf2>
    d7dc:	da001317 	ldw	r8,76(sp)
    d7e0:	103ee326 	beq	r2,zero,d370 <__alt_mem_epcs_flash_controller_0+0xff80c370>
    d7e4:	003fd106 	br	d72c <__alt_mem_epcs_flash_controller_0+0xff80c72c>
    d7e8:	d8c00717 	ldw	r3,28(sp)
    d7ec:	18002026 	beq	r3,zero,d870 <_strtod_r+0x1564>
    d7f0:	b09ffc2c 	andhi	r2,r22,32752
    d7f4:	00c1a834 	movhi	r3,1696
    d7f8:	18801d36 	bltu	r3,r2,d870 <_strtod_r+0x1564>
    d7fc:	1004d53a 	srli	r2,r2,20
    d800:	00c01ac4 	movi	r3,107
    d804:	1887c83a 	sub	r3,r3,r2
    d808:	00bfffc4 	movi	r2,-1
    d80c:	10c4983a 	sll	r2,r2,r3
    d810:	15ffb41e 	bne	r2,r23,d6e4 <__alt_mem_epcs_flash_controller_0+0xff80c6e4>
    d814:	00dffc34 	movhi	r3,32752
    d818:	18ffffc4 	addi	r3,r3,-1
    d81c:	b0c03126 	beq	r22,r3,d8e4 <_strtod_r+0x15d8>
    d820:	b59ffc2c 	andhi	r22,r22,32752
    d824:	00800434 	movhi	r2,16
    d828:	d8000815 	stw	zero,32(sp)
    d82c:	b0b9883a 	add	fp,r22,r2
    d830:	003fbe06 	br	d72c <__alt_mem_epcs_flash_controller_0+0xff80c72c>
    d834:	b49ffc2c 	andhi	r18,r22,32752
    d838:	9024d53a 	srli	r18,r18,20
    d83c:	00801ac4 	movi	r2,107
    d840:	14a5c83a 	sub	r18,r2,r18
    d844:	04be910e 	bge	zero,r18,d28c <__alt_mem_epcs_flash_controller_0+0xff80c28c>
    d848:	008007c4 	movi	r2,31
    d84c:	1480120e 	bge	r2,r18,d898 <_strtod_r+0x158c>
    d850:	00800d04 	movi	r2,52
    d854:	002f883a 	mov	r23,zero
    d858:	14801a0e 	bge	r2,r18,d8c4 <_strtod_r+0x15b8>
    d85c:	0580dc34 	movhi	r22,880
    d860:	003e8a06 	br	d28c <__alt_mem_epcs_flash_controller_0+0xff80c28c>
    d864:	d8000715 	stw	zero,28(sp)
    d868:	04be7416 	blt	zero,r18,d23c <__alt_mem_epcs_flash_controller_0+0xff80c23c>
    d86c:	003e8706 	br	d28c <__alt_mem_epcs_flash_controller_0+0xff80c28c>
    d870:	00bfffc4 	movi	r2,-1
    d874:	003fe606 	br	d810 <__alt_mem_epcs_flash_controller_0+0xff80c810>
    d878:	073ffc34 	movhi	fp,65520
    d87c:	9725883a 	add	r18,r18,fp
    d880:	017fffc4 	movi	r5,-1
    d884:	07000434 	movhi	fp,16
    d888:	e179883a 	add	fp,fp,r5
    d88c:	d9400815 	stw	r5,32(sp)
    d890:	9738b03a 	or	fp,r18,fp
    d894:	003fa506 	br	d72c <__alt_mem_epcs_flash_controller_0+0xff80c72c>
    d898:	00bfffc4 	movi	r2,-1
    d89c:	14a4983a 	sll	r18,r2,r18
    d8a0:	95ee703a 	and	r23,r18,r23
    d8a4:	003e7906 	br	d28c <__alt_mem_epcs_flash_controller_0+0xff80c28c>
    d8a8:	102f883a 	mov	r23,r2
    d8ac:	182d883a 	mov	r22,r3
    d8b0:	003e7406 	br	d284 <__alt_mem_epcs_flash_controller_0+0xff80c284>
    d8b4:	e02d883a 	mov	r22,fp
    d8b8:	ddc00617 	ldw	r23,24(sp)
    d8bc:	e0f9883a 	add	fp,fp,r3
    d8c0:	003ef706 	br	d4a0 <__alt_mem_epcs_flash_controller_0+0xff80c4a0>
    d8c4:	94bff804 	addi	r18,r18,-32
    d8c8:	00bfffc4 	movi	r2,-1
    d8cc:	14a4983a 	sll	r18,r2,r18
    d8d0:	95ac703a 	and	r22,r18,r22
    d8d4:	003e6d06 	br	d28c <__alt_mem_epcs_flash_controller_0+0xff80c28c>
    d8d8:	102f883a 	mov	r23,r2
    d8dc:	182d883a 	mov	r22,r3
    d8e0:	003c3d06 	br	c9d8 <__alt_mem_epcs_flash_controller_0+0xff80b9d8>
    d8e4:	00ffffc4 	movi	r3,-1
    d8e8:	10ffcd1e 	bne	r2,r3,d820 <__alt_mem_epcs_flash_controller_0+0xff80c820>
    d8ec:	003dba06 	br	cfd8 <__alt_mem_epcs_flash_controller_0+0xff80bfd8>

0000d8f0 <strtod>:
    d8f0:	008000b4 	movhi	r2,2
    d8f4:	10801c04 	addi	r2,r2,112
    d8f8:	280d883a 	mov	r6,r5
    d8fc:	200b883a 	mov	r5,r4
    d900:	11000017 	ldw	r4,0(r2)
    d904:	000c30c1 	jmpi	c30c <_strtod_r>

0000d908 <strtof>:
    d908:	defffb04 	addi	sp,sp,-20
    d90c:	dcc00315 	stw	r19,12(sp)
    d910:	04c000b4 	movhi	r19,2
    d914:	9cc01c04 	addi	r19,r19,112
    d918:	280d883a 	mov	r6,r5
    d91c:	200b883a 	mov	r5,r4
    d920:	99000017 	ldw	r4,0(r19)
    d924:	dfc00415 	stw	ra,16(sp)
    d928:	dc800215 	stw	r18,8(sp)
    d92c:	dc400115 	stw	r17,4(sp)
    d930:	dc000015 	stw	r16,0(sp)
    d934:	000c30c0 	call	c30c <_strtod_r>
    d938:	1009883a 	mov	r4,r2
    d93c:	180b883a 	mov	r5,r3
    d940:	1025883a 	mov	r18,r2
    d944:	1823883a 	mov	r17,r3
    d948:	001966c0 	call	1966c <__truncdfsf2>
    d94c:	000b883a 	mov	r5,zero
    d950:	1009883a 	mov	r4,r2
    d954:	1021883a 	mov	r16,r2
    d958:	0016c300 	call	16c30 <__eqsf2>
    d95c:	1000111e 	bne	r2,zero,d9a4 <strtof+0x9c>
    d960:	000d883a 	mov	r6,zero
    d964:	000f883a 	mov	r7,zero
    d968:	9009883a 	mov	r4,r18
    d96c:	880b883a 	mov	r5,r17
    d970:	00180a80 	call	180a8 <__eqdf2>
    d974:	10000b26 	beq	r2,zero,d9a4 <strtof+0x9c>
    d978:	98800017 	ldw	r2,0(r19)
    d97c:	00c00884 	movi	r3,34
    d980:	10c00015 	stw	r3,0(r2)
    d984:	8005883a 	mov	r2,r16
    d988:	dfc00417 	ldw	ra,16(sp)
    d98c:	dcc00317 	ldw	r19,12(sp)
    d990:	dc800217 	ldw	r18,8(sp)
    d994:	dc400117 	ldw	r17,4(sp)
    d998:	dc000017 	ldw	r16,0(sp)
    d99c:	dec00504 	addi	sp,sp,20
    d9a0:	f800283a 	ret
    d9a4:	015fe034 	movhi	r5,32640
    d9a8:	297fffc4 	addi	r5,r5,-1
    d9ac:	8009883a 	mov	r4,r16
    d9b0:	0016ca80 	call	16ca8 <__gesf2>
    d9b4:	0080070e 	bge	zero,r2,d9d4 <strtof+0xcc>
    d9b8:	01dffc34 	movhi	r7,32752
    d9bc:	39ffffc4 	addi	r7,r7,-1
    d9c0:	01bfffc4 	movi	r6,-1
    d9c4:	9009883a 	mov	r4,r18
    d9c8:	880b883a 	mov	r5,r17
    d9cc:	00181300 	call	18130 <__gedf2>
    d9d0:	00bfe90e 	bge	zero,r2,d978 <__alt_mem_epcs_flash_controller_0+0xff80c978>
    d9d4:	017fe034 	movhi	r5,65408
    d9d8:	297fffc4 	addi	r5,r5,-1
    d9dc:	8009883a 	mov	r4,r16
    d9e0:	0016d640 	call	16d64 <__lesf2>
    d9e4:	103fe70e 	bge	r2,zero,d984 <__alt_mem_epcs_flash_controller_0+0xff80c984>
    d9e8:	01fffc34 	movhi	r7,65520
    d9ec:	39ffffc4 	addi	r7,r7,-1
    d9f0:	01bfffc4 	movi	r6,-1
    d9f4:	9009883a 	mov	r4,r18
    d9f8:	880b883a 	mov	r5,r17
    d9fc:	001820c0 	call	1820c <__ledf2>
    da00:	103fdd0e 	bge	r2,zero,d978 <__alt_mem_epcs_flash_controller_0+0xff80c978>
    da04:	003fdf06 	br	d984 <__alt_mem_epcs_flash_controller_0+0xff80c984>

0000da08 <_strtol_r>:
    da08:	008000b4 	movhi	r2,2
    da0c:	defff204 	addi	sp,sp,-56
    da10:	10801f04 	addi	r2,r2,124
    da14:	dd800a15 	stw	r22,40(sp)
    da18:	15800017 	ldw	r22,0(r2)
    da1c:	df000c15 	stw	fp,48(sp)
    da20:	d9000315 	stw	r4,12(sp)
    da24:	dfc00d15 	stw	ra,52(sp)
    da28:	ddc00b15 	stw	r23,44(sp)
    da2c:	dd400915 	stw	r21,36(sp)
    da30:	dd000815 	stw	r20,32(sp)
    da34:	dcc00715 	stw	r19,28(sp)
    da38:	dc800615 	stw	r18,24(sp)
    da3c:	dc400515 	stw	r17,20(sp)
    da40:	dc000415 	stw	r16,16(sp)
    da44:	d9400215 	stw	r5,8(sp)
    da48:	d9800015 	stw	r6,0(sp)
    da4c:	3839883a 	mov	fp,r7
    da50:	2809883a 	mov	r4,r5
    da54:	24000003 	ldbu	r16,0(r4)
    da58:	24400044 	addi	r17,r4,1
    da5c:	2007883a 	mov	r3,r4
    da60:	b405883a 	add	r2,r22,r16
    da64:	10800043 	ldbu	r2,1(r2)
    da68:	8809883a 	mov	r4,r17
    da6c:	1080020c 	andi	r2,r2,8
    da70:	103ff81e 	bne	r2,zero,da54 <__alt_mem_epcs_flash_controller_0+0xff80ca54>
    da74:	00800b44 	movi	r2,45
    da78:	80805526 	beq	r16,r2,dbd0 <_strtol_r+0x1c8>
    da7c:	00800ac4 	movi	r2,43
    da80:	80806026 	beq	r16,r2,dc04 <_strtol_r+0x1fc>
    da84:	0029883a 	mov	r20,zero
    da88:	e0004726 	beq	fp,zero,dba8 <_strtol_r+0x1a0>
    da8c:	00800404 	movi	r2,16
    da90:	e0806626 	beq	fp,r2,dc2c <_strtol_r+0x224>
    da94:	e027883a 	mov	r19,fp
    da98:	00a00034 	movhi	r2,32768
    da9c:	a025003a 	cmpeq	r18,r20,zero
    daa0:	14a5c83a 	sub	r18,r2,r18
    daa4:	9009883a 	mov	r4,r18
    daa8:	980b883a 	mov	r5,r19
    daac:	00023ec0 	call	23ec <__umodsi3>
    dab0:	9009883a 	mov	r4,r18
    dab4:	980b883a 	mov	r5,r19
    dab8:	d8800115 	stw	r2,4(sp)
    dabc:	00023880 	call	2388 <__udivsi3>
    dac0:	b407883a 	add	r3,r22,r16
    dac4:	18c00043 	ldbu	r3,1(r3)
    dac8:	102b883a 	mov	r21,r2
    dacc:	0009883a 	mov	r4,zero
    dad0:	1940010c 	andi	r5,r3,4
    dad4:	0005883a 	mov	r2,zero
    dad8:	04800044 	movi	r18,1
    dadc:	05ffffc4 	movi	r23,-1
    dae0:	28000f26 	beq	r5,zero,db20 <_strtol_r+0x118>
    dae4:	843ff404 	addi	r16,r16,-48
    dae8:	8700130e 	bge	r16,fp,db38 <_strtol_r+0x130>
    daec:	15c00626 	beq	r2,r23,db08 <_strtol_r+0x100>
    daf0:	a9002936 	bltu	r21,r4,db98 <_strtol_r+0x190>
    daf4:	25402626 	beq	r4,r21,db90 <_strtol_r+0x188>
    daf8:	980b883a 	mov	r5,r19
    dafc:	00024440 	call	2444 <__mulsi3>
    db00:	8089883a 	add	r4,r16,r2
    db04:	00800044 	movi	r2,1
    db08:	8c000003 	ldbu	r16,0(r17)
    db0c:	8c400044 	addi	r17,r17,1
    db10:	b407883a 	add	r3,r22,r16
    db14:	18c00043 	ldbu	r3,1(r3)
    db18:	1940010c 	andi	r5,r3,4
    db1c:	283ff11e 	bne	r5,zero,dae4 <__alt_mem_epcs_flash_controller_0+0xff80cae4>
    db20:	18c000cc 	andi	r3,r3,3
    db24:	18000426 	beq	r3,zero,db38 <_strtol_r+0x130>
    db28:	1c801d26 	beq	r3,r18,dba0 <_strtol_r+0x198>
    db2c:	00c015c4 	movi	r3,87
    db30:	80e1c83a 	sub	r16,r16,r3
    db34:	873fed16 	blt	r16,fp,daec <__alt_mem_epcs_flash_controller_0+0xff80caec>
    db38:	00ffffc4 	movi	r3,-1
    db3c:	10c02826 	beq	r2,r3,dbe0 <_strtol_r+0x1d8>
    db40:	a0001e1e 	bne	r20,zero,dbbc <_strtol_r+0x1b4>
    db44:	d8c00017 	ldw	r3,0(sp)
    db48:	18004326 	beq	r3,zero,dc58 <_strtol_r+0x250>
    db4c:	10001d1e 	bne	r2,zero,dbc4 <_strtol_r+0x1bc>
    db50:	dd800217 	ldw	r22,8(sp)
    db54:	2005883a 	mov	r2,r4
    db58:	d8c00017 	ldw	r3,0(sp)
    db5c:	1d800015 	stw	r22,0(r3)
    db60:	dfc00d17 	ldw	ra,52(sp)
    db64:	df000c17 	ldw	fp,48(sp)
    db68:	ddc00b17 	ldw	r23,44(sp)
    db6c:	dd800a17 	ldw	r22,40(sp)
    db70:	dd400917 	ldw	r21,36(sp)
    db74:	dd000817 	ldw	r20,32(sp)
    db78:	dcc00717 	ldw	r19,28(sp)
    db7c:	dc800617 	ldw	r18,24(sp)
    db80:	dc400517 	ldw	r17,20(sp)
    db84:	dc000417 	ldw	r16,16(sp)
    db88:	dec00e04 	addi	sp,sp,56
    db8c:	f800283a 	ret
    db90:	d8c00117 	ldw	r3,4(sp)
    db94:	1c3fd80e 	bge	r3,r16,daf8 <__alt_mem_epcs_flash_controller_0+0xff80caf8>
    db98:	00bfffc4 	movi	r2,-1
    db9c:	003fda06 	br	db08 <__alt_mem_epcs_flash_controller_0+0xff80cb08>
    dba0:	00c00dc4 	movi	r3,55
    dba4:	003fe206 	br	db30 <__alt_mem_epcs_flash_controller_0+0xff80cb30>
    dba8:	00800c04 	movi	r2,48
    dbac:	80801926 	beq	r16,r2,dc14 <_strtol_r+0x20c>
    dbb0:	07000284 	movi	fp,10
    dbb4:	e027883a 	mov	r19,fp
    dbb8:	003fb706 	br	da98 <__alt_mem_epcs_flash_controller_0+0xff80ca98>
    dbbc:	0109c83a 	sub	r4,zero,r4
    dbc0:	003fe006 	br	db44 <__alt_mem_epcs_flash_controller_0+0xff80cb44>
    dbc4:	2005883a 	mov	r2,r4
    dbc8:	8dbfffc4 	addi	r22,r17,-1
    dbcc:	003fe206 	br	db58 <__alt_mem_epcs_flash_controller_0+0xff80cb58>
    dbd0:	1c400084 	addi	r17,r3,2
    dbd4:	1c000043 	ldbu	r16,1(r3)
    dbd8:	05000044 	movi	r20,1
    dbdc:	003faa06 	br	da88 <__alt_mem_epcs_flash_controller_0+0xff80ca88>
    dbe0:	d9000317 	ldw	r4,12(sp)
    dbe4:	00c00884 	movi	r3,34
    dbe8:	a005003a 	cmpeq	r2,r20,zero
    dbec:	20c00015 	stw	r3,0(r4)
    dbf0:	00e00034 	movhi	r3,32768
    dbf4:	1885c83a 	sub	r2,r3,r2
    dbf8:	d8c00017 	ldw	r3,0(sp)
    dbfc:	183ff21e 	bne	r3,zero,dbc8 <__alt_mem_epcs_flash_controller_0+0xff80cbc8>
    dc00:	003fd706 	br	db60 <__alt_mem_epcs_flash_controller_0+0xff80cb60>
    dc04:	1c400084 	addi	r17,r3,2
    dc08:	1c000043 	ldbu	r16,1(r3)
    dc0c:	0029883a 	mov	r20,zero
    dc10:	003f9d06 	br	da88 <__alt_mem_epcs_flash_controller_0+0xff80ca88>
    dc14:	88800003 	ldbu	r2,0(r17)
    dc18:	00c01604 	movi	r3,88
    dc1c:	108037cc 	andi	r2,r2,223
    dc20:	10c00826 	beq	r2,r3,dc44 <_strtol_r+0x23c>
    dc24:	07000204 	movi	fp,8
    dc28:	003f9a06 	br	da94 <__alt_mem_epcs_flash_controller_0+0xff80ca94>
    dc2c:	00800c04 	movi	r2,48
    dc30:	80bf981e 	bne	r16,r2,da94 <__alt_mem_epcs_flash_controller_0+0xff80ca94>
    dc34:	88800003 	ldbu	r2,0(r17)
    dc38:	00c01604 	movi	r3,88
    dc3c:	108037cc 	andi	r2,r2,223
    dc40:	10ff941e 	bne	r2,r3,da94 <__alt_mem_epcs_flash_controller_0+0xff80ca94>
    dc44:	04c00404 	movi	r19,16
    dc48:	8c000043 	ldbu	r16,1(r17)
    dc4c:	9839883a 	mov	fp,r19
    dc50:	8c400084 	addi	r17,r17,2
    dc54:	003f9006 	br	da98 <__alt_mem_epcs_flash_controller_0+0xff80ca98>
    dc58:	2005883a 	mov	r2,r4
    dc5c:	003fc006 	br	db60 <__alt_mem_epcs_flash_controller_0+0xff80cb60>

0000dc60 <strtol>:
    dc60:	008000b4 	movhi	r2,2
    dc64:	10801c04 	addi	r2,r2,112
    dc68:	300f883a 	mov	r7,r6
    dc6c:	280d883a 	mov	r6,r5
    dc70:	200b883a 	mov	r5,r4
    dc74:	11000017 	ldw	r4,0(r2)
    dc78:	000da081 	jmpi	da08 <_strtol_r>

0000dc7c <_strtoll_r>:
    dc7c:	008000b4 	movhi	r2,2
    dc80:	deffef04 	addi	sp,sp,-68
    dc84:	10801f04 	addi	r2,r2,124
    dc88:	dd800d15 	stw	r22,52(sp)
    dc8c:	15800017 	ldw	r22,0(r2)
    dc90:	df000f15 	stw	fp,60(sp)
    dc94:	d9000515 	stw	r4,20(sp)
    dc98:	dfc01015 	stw	ra,64(sp)
    dc9c:	ddc00e15 	stw	r23,56(sp)
    dca0:	dd400c15 	stw	r21,48(sp)
    dca4:	dd000b15 	stw	r20,44(sp)
    dca8:	dcc00a15 	stw	r19,40(sp)
    dcac:	dc800915 	stw	r18,36(sp)
    dcb0:	dc400815 	stw	r17,32(sp)
    dcb4:	dc000715 	stw	r16,28(sp)
    dcb8:	d9400415 	stw	r5,16(sp)
    dcbc:	d9800215 	stw	r6,8(sp)
    dcc0:	3839883a 	mov	fp,r7
    dcc4:	2809883a 	mov	r4,r5
    dcc8:	22000003 	ldbu	r8,0(r4)
    dccc:	24400044 	addi	r17,r4,1
    dcd0:	2007883a 	mov	r3,r4
    dcd4:	b205883a 	add	r2,r22,r8
    dcd8:	10800043 	ldbu	r2,1(r2)
    dcdc:	8809883a 	mov	r4,r17
    dce0:	1080020c 	andi	r2,r2,8
    dce4:	103ff81e 	bne	r2,zero,dcc8 <__alt_mem_epcs_flash_controller_0+0xff80ccc8>
    dce8:	00800b44 	movi	r2,45
    dcec:	40807e26 	beq	r8,r2,dee8 <_strtoll_r+0x26c>
    dcf0:	00800ac4 	movi	r2,43
    dcf4:	40808126 	beq	r8,r2,defc <_strtoll_r+0x280>
    dcf8:	d8000115 	stw	zero,4(sp)
    dcfc:	e0000b26 	beq	fp,zero,dd2c <_strtoll_r+0xb0>
    dd00:	00800404 	movi	r2,16
    dd04:	e0808926 	beq	fp,r2,df2c <_strtoll_r+0x2b0>
    dd08:	e00bd7fa 	srai	r5,fp,31
    dd0c:	d9000117 	ldw	r4,4(sp)
    dd10:	e025883a 	mov	r18,fp
    dd14:	d9400015 	stw	r5,0(sp)
    dd18:	20000b1e 	bne	r4,zero,dd48 <_strtoll_r+0xcc>
    dd1c:	04200034 	movhi	r16,32768
    dd20:	843fffc4 	addi	r16,r16,-1
    dd24:	053fffc4 	movi	r20,-1
    dd28:	00000906 	br	dd50 <_strtoll_r+0xd4>
    dd2c:	00800c04 	movi	r2,48
    dd30:	40807626 	beq	r8,r2,df0c <_strtoll_r+0x290>
    dd34:	04800284 	movi	r18,10
    dd38:	d8000015 	stw	zero,0(sp)
    dd3c:	9039883a 	mov	fp,r18
    dd40:	d9000117 	ldw	r4,4(sp)
    dd44:	203ff526 	beq	r4,zero,dd1c <__alt_mem_epcs_flash_controller_0+0xff80cd1c>
    dd48:	0029883a 	mov	r20,zero
    dd4c:	04200034 	movhi	r16,32768
    dd50:	d9c00017 	ldw	r7,0(sp)
    dd54:	a009883a 	mov	r4,r20
    dd58:	800b883a 	mov	r5,r16
    dd5c:	900d883a 	mov	r6,r18
    dd60:	da000615 	stw	r8,24(sp)
    dd64:	001666c0 	call	1666c <__umoddi3>
    dd68:	d9c00017 	ldw	r7,0(sp)
    dd6c:	a009883a 	mov	r4,r20
    dd70:	800b883a 	mov	r5,r16
    dd74:	900d883a 	mov	r6,r18
    dd78:	d8800315 	stw	r2,12(sp)
    dd7c:	00160700 	call	16070 <__udivdi3>
    dd80:	da000617 	ldw	r8,24(sp)
    dd84:	1829883a 	mov	r20,r3
    dd88:	882f883a 	mov	r23,r17
    dd8c:	b207883a 	add	r3,r22,r8
    dd90:	19800043 	ldbu	r6,1(r3)
    dd94:	1021883a 	mov	r16,r2
    dd98:	000f883a 	mov	r7,zero
    dd9c:	30c0010c 	andi	r3,r6,4
    dda0:	0009883a 	mov	r4,zero
    dda4:	000b883a 	mov	r5,zero
    dda8:	04400044 	movi	r17,1
    ddac:	057fffc4 	movi	r21,-1
    ddb0:	18000d26 	beq	r3,zero,dde8 <_strtoll_r+0x16c>
    ddb4:	44fff404 	addi	r19,r8,-48
    ddb8:	9f00110e 	bge	r19,fp,de00 <_strtoll_r+0x184>
    ddbc:	3d400426 	beq	r7,r21,ddd0 <_strtoll_r+0x154>
    ddc0:	a1400236 	bltu	r20,r5,ddcc <_strtoll_r+0x150>
    ddc4:	2d002a1e 	bne	r5,r20,de70 <_strtoll_r+0x1f4>
    ddc8:	8100292e 	bgeu	r16,r4,de70 <_strtoll_r+0x1f4>
    ddcc:	01ffffc4 	movi	r7,-1
    ddd0:	ba000003 	ldbu	r8,0(r23)
    ddd4:	bdc00044 	addi	r23,r23,1
    ddd8:	b207883a 	add	r3,r22,r8
    dddc:	19800043 	ldbu	r6,1(r3)
    dde0:	30c0010c 	andi	r3,r6,4
    dde4:	183ff31e 	bne	r3,zero,ddb4 <__alt_mem_epcs_flash_controller_0+0xff80cdb4>
    dde8:	318000cc 	andi	r6,r6,3
    ddec:	30000426 	beq	r6,zero,de00 <_strtoll_r+0x184>
    ddf0:	34402b26 	beq	r6,r17,dea0 <_strtoll_r+0x224>
    ddf4:	00c015c4 	movi	r3,87
    ddf8:	40e7c83a 	sub	r19,r8,r3
    ddfc:	9f3fef16 	blt	r19,fp,ddbc <__alt_mem_epcs_flash_controller_0+0xff80cdbc>
    de00:	00bfffc4 	movi	r2,-1
    de04:	38802c26 	beq	r7,r2,deb8 <_strtoll_r+0x23c>
    de08:	d8800117 	ldw	r2,4(sp)
    de0c:	10000426 	beq	r2,zero,de20 <_strtoll_r+0x1a4>
    de10:	0109c83a 	sub	r4,zero,r4
    de14:	2004c03a 	cmpne	r2,r4,zero
    de18:	0151c83a 	sub	r8,zero,r5
    de1c:	408bc83a 	sub	r5,r8,r2
    de20:	d8800217 	ldw	r2,8(sp)
    de24:	10005026 	beq	r2,zero,df68 <_strtoll_r+0x2ec>
    de28:	2005883a 	mov	r2,r4
    de2c:	2807883a 	mov	r3,r5
    de30:	38002b1e 	bne	r7,zero,dee0 <_strtoll_r+0x264>
    de34:	dd800417 	ldw	r22,16(sp)
    de38:	d9000217 	ldw	r4,8(sp)
    de3c:	25800015 	stw	r22,0(r4)
    de40:	dfc01017 	ldw	ra,64(sp)
    de44:	df000f17 	ldw	fp,60(sp)
    de48:	ddc00e17 	ldw	r23,56(sp)
    de4c:	dd800d17 	ldw	r22,52(sp)
    de50:	dd400c17 	ldw	r21,48(sp)
    de54:	dd000b17 	ldw	r20,44(sp)
    de58:	dcc00a17 	ldw	r19,40(sp)
    de5c:	dc800917 	ldw	r18,36(sp)
    de60:	dc400817 	ldw	r17,32(sp)
    de64:	dc000717 	ldw	r16,28(sp)
    de68:	dec01104 	addi	sp,sp,68
    de6c:	f800283a 	ret
    de70:	24000d26 	beq	r4,r16,dea8 <_strtoll_r+0x22c>
    de74:	d9c00017 	ldw	r7,0(sp)
    de78:	900d883a 	mov	r6,r18
    de7c:	0015ef00 	call	15ef0 <__muldi3>
    de80:	980bd7fa 	srai	r5,r19,31
    de84:	9885883a 	add	r2,r19,r2
    de88:	14d1803a 	cmpltu	r8,r2,r19
    de8c:	28c7883a 	add	r3,r5,r3
    de90:	1009883a 	mov	r4,r2
    de94:	40cb883a 	add	r5,r8,r3
    de98:	01c00044 	movi	r7,1
    de9c:	003fcc06 	br	ddd0 <__alt_mem_epcs_flash_controller_0+0xff80cdd0>
    dea0:	00c00dc4 	movi	r3,55
    dea4:	003fd406 	br	ddf8 <__alt_mem_epcs_flash_controller_0+0xff80cdf8>
    dea8:	2d3ff21e 	bne	r5,r20,de74 <__alt_mem_epcs_flash_controller_0+0xff80ce74>
    deac:	d8800317 	ldw	r2,12(sp)
    deb0:	14ffc616 	blt	r2,r19,ddcc <__alt_mem_epcs_flash_controller_0+0xff80cdcc>
    deb4:	003fef06 	br	de74 <__alt_mem_epcs_flash_controller_0+0xff80ce74>
    deb8:	d9000117 	ldw	r4,4(sp)
    debc:	2000271e 	bne	r4,zero,df5c <_strtoll_r+0x2e0>
    dec0:	00e00034 	movhi	r3,32768
    dec4:	18ffffc4 	addi	r3,r3,-1
    dec8:	3805883a 	mov	r2,r7
    decc:	d9400517 	ldw	r5,20(sp)
    ded0:	01000884 	movi	r4,34
    ded4:	29000015 	stw	r4,0(r5)
    ded8:	d9000217 	ldw	r4,8(sp)
    dedc:	203fd826 	beq	r4,zero,de40 <__alt_mem_epcs_flash_controller_0+0xff80ce40>
    dee0:	bdbfffc4 	addi	r22,r23,-1
    dee4:	003fd406 	br	de38 <__alt_mem_epcs_flash_controller_0+0xff80ce38>
    dee8:	00800044 	movi	r2,1
    deec:	1c400084 	addi	r17,r3,2
    def0:	1a000043 	ldbu	r8,1(r3)
    def4:	d8800115 	stw	r2,4(sp)
    def8:	003f8006 	br	dcfc <__alt_mem_epcs_flash_controller_0+0xff80ccfc>
    defc:	1c400084 	addi	r17,r3,2
    df00:	1a000043 	ldbu	r8,1(r3)
    df04:	d8000115 	stw	zero,4(sp)
    df08:	003f7c06 	br	dcfc <__alt_mem_epcs_flash_controller_0+0xff80ccfc>
    df0c:	88800003 	ldbu	r2,0(r17)
    df10:	00c01604 	movi	r3,88
    df14:	108037cc 	andi	r2,r2,223
    df18:	10c00a26 	beq	r2,r3,df44 <_strtoll_r+0x2c8>
    df1c:	04800204 	movi	r18,8
    df20:	d8000015 	stw	zero,0(sp)
    df24:	9039883a 	mov	fp,r18
    df28:	003f8506 	br	dd40 <__alt_mem_epcs_flash_controller_0+0xff80cd40>
    df2c:	00800c04 	movi	r2,48
    df30:	4080101e 	bne	r8,r2,df74 <_strtoll_r+0x2f8>
    df34:	88800003 	ldbu	r2,0(r17)
    df38:	00c01604 	movi	r3,88
    df3c:	108037cc 	andi	r2,r2,223
    df40:	10c00c1e 	bne	r2,r3,df74 <_strtoll_r+0x2f8>
    df44:	04800404 	movi	r18,16
    df48:	8a000043 	ldbu	r8,1(r17)
    df4c:	d8000015 	stw	zero,0(sp)
    df50:	8c400084 	addi	r17,r17,2
    df54:	9039883a 	mov	fp,r18
    df58:	003f7906 	br	dd40 <__alt_mem_epcs_flash_controller_0+0xff80cd40>
    df5c:	0005883a 	mov	r2,zero
    df60:	00e00034 	movhi	r3,32768
    df64:	003fd906 	br	decc <__alt_mem_epcs_flash_controller_0+0xff80cecc>
    df68:	2005883a 	mov	r2,r4
    df6c:	2807883a 	mov	r3,r5
    df70:	003fb306 	br	de40 <__alt_mem_epcs_flash_controller_0+0xff80ce40>
    df74:	e025883a 	mov	r18,fp
    df78:	d8000015 	stw	zero,0(sp)
    df7c:	003f7006 	br	dd40 <__alt_mem_epcs_flash_controller_0+0xff80cd40>

0000df80 <_strtoul_r>:
    df80:	008000b4 	movhi	r2,2
    df84:	defff204 	addi	sp,sp,-56
    df88:	10801f04 	addi	r2,r2,124
    df8c:	dd800a15 	stw	r22,40(sp)
    df90:	15800017 	ldw	r22,0(r2)
    df94:	df000c15 	stw	fp,48(sp)
    df98:	dd400915 	stw	r21,36(sp)
    df9c:	d9000315 	stw	r4,12(sp)
    dfa0:	dfc00d15 	stw	ra,52(sp)
    dfa4:	ddc00b15 	stw	r23,44(sp)
    dfa8:	dd000815 	stw	r20,32(sp)
    dfac:	dcc00715 	stw	r19,28(sp)
    dfb0:	dc800615 	stw	r18,24(sp)
    dfb4:	dc400515 	stw	r17,20(sp)
    dfb8:	dc000415 	stw	r16,16(sp)
    dfbc:	d9400015 	stw	r5,0(sp)
    dfc0:	302b883a 	mov	r21,r6
    dfc4:	3839883a 	mov	fp,r7
    dfc8:	2809883a 	mov	r4,r5
    dfcc:	24000003 	ldbu	r16,0(r4)
    dfd0:	24400044 	addi	r17,r4,1
    dfd4:	2007883a 	mov	r3,r4
    dfd8:	b405883a 	add	r2,r22,r16
    dfdc:	10800043 	ldbu	r2,1(r2)
    dfe0:	8809883a 	mov	r4,r17
    dfe4:	1080020c 	andi	r2,r2,8
    dfe8:	103ff81e 	bne	r2,zero,dfcc <__alt_mem_epcs_flash_controller_0+0xff80cfcc>
    dfec:	00800b44 	movi	r2,45
    dff0:	80805826 	beq	r16,r2,e154 <_strtoul_r+0x1d4>
    dff4:	00800ac4 	movi	r2,43
    dff8:	80805b26 	beq	r16,r2,e168 <_strtoul_r+0x1e8>
    dffc:	d8000215 	stw	zero,8(sp)
    e000:	e0000d26 	beq	fp,zero,e038 <_strtoul_r+0xb8>
    e004:	00800404 	movi	r2,16
    e008:	e0806626 	beq	fp,r2,e1a4 <_strtoul_r+0x224>
    e00c:	013fffc4 	movi	r4,-1
    e010:	e00b883a 	mov	r5,fp
    e014:	00023880 	call	2388 <__udivsi3>
    e018:	e00b883a 	mov	r5,fp
    e01c:	013fffc4 	movi	r4,-1
    e020:	1025883a 	mov	r18,r2
    e024:	00023ec0 	call	23ec <__umodsi3>
    e028:	d8800115 	stw	r2,4(sp)
    e02c:	e027883a 	mov	r19,fp
    e030:	902f883a 	mov	r23,r18
    e034:	00000806 	br	e058 <_strtoul_r+0xd8>
    e038:	00800c04 	movi	r2,48
    e03c:	80804e26 	beq	r16,r2,e178 <_strtoul_r+0x1f8>
    e040:	07000284 	movi	fp,10
    e044:	00c00144 	movi	r3,5
    e048:	05c666b4 	movhi	r23,6554
    e04c:	d8c00115 	stw	r3,4(sp)
    e050:	bde66644 	addi	r23,r23,-26215
    e054:	e027883a 	mov	r19,fp
    e058:	b407883a 	add	r3,r22,r16
    e05c:	18c00043 	ldbu	r3,1(r3)
    e060:	0005883a 	mov	r2,zero
    e064:	0009883a 	mov	r4,zero
    e068:	1940010c 	andi	r5,r3,4
    e06c:	04800044 	movi	r18,1
    e070:	053fffc4 	movi	r20,-1
    e074:	28000f26 	beq	r5,zero,e0b4 <_strtoul_r+0x134>
    e078:	843ff404 	addi	r16,r16,-48
    e07c:	8700130e 	bge	r16,fp,e0cc <_strtoul_r+0x14c>
    e080:	15000626 	beq	r2,r20,e09c <_strtoul_r+0x11c>
    e084:	b9002836 	bltu	r23,r4,e128 <_strtoul_r+0x1a8>
    e088:	25c02526 	beq	r4,r23,e120 <_strtoul_r+0x1a0>
    e08c:	980b883a 	mov	r5,r19
    e090:	00024440 	call	2444 <__mulsi3>
    e094:	8089883a 	add	r4,r16,r2
    e098:	00800044 	movi	r2,1
    e09c:	8c000003 	ldbu	r16,0(r17)
    e0a0:	8c400044 	addi	r17,r17,1
    e0a4:	b407883a 	add	r3,r22,r16
    e0a8:	18c00043 	ldbu	r3,1(r3)
    e0ac:	1940010c 	andi	r5,r3,4
    e0b0:	283ff11e 	bne	r5,zero,e078 <__alt_mem_epcs_flash_controller_0+0xff80d078>
    e0b4:	18c000cc 	andi	r3,r3,3
    e0b8:	18000426 	beq	r3,zero,e0cc <_strtoul_r+0x14c>
    e0bc:	1c801c26 	beq	r3,r18,e130 <_strtoul_r+0x1b0>
    e0c0:	00c015c4 	movi	r3,87
    e0c4:	80e1c83a 	sub	r16,r16,r3
    e0c8:	873fed16 	blt	r16,fp,e080 <__alt_mem_epcs_flash_controller_0+0xff80d080>
    e0cc:	10001a16 	blt	r2,zero,e138 <_strtoul_r+0x1b8>
    e0d0:	d8c00217 	ldw	r3,8(sp)
    e0d4:	18000126 	beq	r3,zero,e0dc <_strtoul_r+0x15c>
    e0d8:	0109c83a 	sub	r4,zero,r4
    e0dc:	a8000326 	beq	r21,zero,e0ec <_strtoul_r+0x16c>
    e0e0:	dd000017 	ldw	r20,0(sp)
    e0e4:	1000191e 	bne	r2,zero,e14c <_strtoul_r+0x1cc>
    e0e8:	ad000015 	stw	r20,0(r21)
    e0ec:	2005883a 	mov	r2,r4
    e0f0:	dfc00d17 	ldw	ra,52(sp)
    e0f4:	df000c17 	ldw	fp,48(sp)
    e0f8:	ddc00b17 	ldw	r23,44(sp)
    e0fc:	dd800a17 	ldw	r22,40(sp)
    e100:	dd400917 	ldw	r21,36(sp)
    e104:	dd000817 	ldw	r20,32(sp)
    e108:	dcc00717 	ldw	r19,28(sp)
    e10c:	dc800617 	ldw	r18,24(sp)
    e110:	dc400517 	ldw	r17,20(sp)
    e114:	dc000417 	ldw	r16,16(sp)
    e118:	dec00e04 	addi	sp,sp,56
    e11c:	f800283a 	ret
    e120:	d8c00117 	ldw	r3,4(sp)
    e124:	1c3fd90e 	bge	r3,r16,e08c <__alt_mem_epcs_flash_controller_0+0xff80d08c>
    e128:	00bfffc4 	movi	r2,-1
    e12c:	003fdb06 	br	e09c <__alt_mem_epcs_flash_controller_0+0xff80d09c>
    e130:	00c00dc4 	movi	r3,55
    e134:	003fe306 	br	e0c4 <__alt_mem_epcs_flash_controller_0+0xff80d0c4>
    e138:	d8c00317 	ldw	r3,12(sp)
    e13c:	00800884 	movi	r2,34
    e140:	013fffc4 	movi	r4,-1
    e144:	18800015 	stw	r2,0(r3)
    e148:	a83fe826 	beq	r21,zero,e0ec <__alt_mem_epcs_flash_controller_0+0xff80d0ec>
    e14c:	8d3fffc4 	addi	r20,r17,-1
    e150:	003fe506 	br	e0e8 <__alt_mem_epcs_flash_controller_0+0xff80d0e8>
    e154:	1c400084 	addi	r17,r3,2
    e158:	1c000043 	ldbu	r16,1(r3)
    e15c:	00c00044 	movi	r3,1
    e160:	d8c00215 	stw	r3,8(sp)
    e164:	003fa606 	br	e000 <__alt_mem_epcs_flash_controller_0+0xff80d000>
    e168:	1c400084 	addi	r17,r3,2
    e16c:	1c000043 	ldbu	r16,1(r3)
    e170:	d8000215 	stw	zero,8(sp)
    e174:	003fa206 	br	e000 <__alt_mem_epcs_flash_controller_0+0xff80d000>
    e178:	88800003 	ldbu	r2,0(r17)
    e17c:	00c01604 	movi	r3,88
    e180:	108037cc 	andi	r2,r2,223
    e184:	10c00d26 	beq	r2,r3,e1bc <_strtoul_r+0x23c>
    e188:	07000204 	movi	fp,8
    e18c:	00c001c4 	movi	r3,7
    e190:	05c80034 	movhi	r23,8192
    e194:	d8c00115 	stw	r3,4(sp)
    e198:	bdffffc4 	addi	r23,r23,-1
    e19c:	e027883a 	mov	r19,fp
    e1a0:	003fad06 	br	e058 <__alt_mem_epcs_flash_controller_0+0xff80d058>
    e1a4:	00800c04 	movi	r2,48
    e1a8:	80800d1e 	bne	r16,r2,e1e0 <_strtoul_r+0x260>
    e1ac:	88800003 	ldbu	r2,0(r17)
    e1b0:	00c01604 	movi	r3,88
    e1b4:	108037cc 	andi	r2,r2,223
    e1b8:	10c0091e 	bne	r2,r3,e1e0 <_strtoul_r+0x260>
    e1bc:	04c00404 	movi	r19,16
    e1c0:	00c003c4 	movi	r3,15
    e1c4:	04840034 	movhi	r18,4096
    e1c8:	8c000043 	ldbu	r16,1(r17)
    e1cc:	d8c00115 	stw	r3,4(sp)
    e1d0:	8c400084 	addi	r17,r17,2
    e1d4:	94bfffc4 	addi	r18,r18,-1
    e1d8:	9839883a 	mov	fp,r19
    e1dc:	003f9406 	br	e030 <__alt_mem_epcs_flash_controller_0+0xff80d030>
    e1e0:	00c003c4 	movi	r3,15
    e1e4:	05c40034 	movhi	r23,4096
    e1e8:	d8c00115 	stw	r3,4(sp)
    e1ec:	bdffffc4 	addi	r23,r23,-1
    e1f0:	e027883a 	mov	r19,fp
    e1f4:	003f9806 	br	e058 <__alt_mem_epcs_flash_controller_0+0xff80d058>

0000e1f8 <strtoul>:
    e1f8:	008000b4 	movhi	r2,2
    e1fc:	10801c04 	addi	r2,r2,112
    e200:	300f883a 	mov	r7,r6
    e204:	280d883a 	mov	r6,r5
    e208:	200b883a 	mov	r5,r4
    e20c:	11000017 	ldw	r4,0(r2)
    e210:	000df801 	jmpi	df80 <_strtoul_r>

0000e214 <_strtoull_r>:
    e214:	008000b4 	movhi	r2,2
    e218:	deffef04 	addi	sp,sp,-68
    e21c:	10801f04 	addi	r2,r2,124
    e220:	dd800d15 	stw	r22,52(sp)
    e224:	15800017 	ldw	r22,0(r2)
    e228:	df000f15 	stw	fp,60(sp)
    e22c:	d9000515 	stw	r4,20(sp)
    e230:	dfc01015 	stw	ra,64(sp)
    e234:	ddc00e15 	stw	r23,56(sp)
    e238:	dd400c15 	stw	r21,48(sp)
    e23c:	dd000b15 	stw	r20,44(sp)
    e240:	dcc00a15 	stw	r19,40(sp)
    e244:	dc800915 	stw	r18,36(sp)
    e248:	dc400815 	stw	r17,32(sp)
    e24c:	dc000715 	stw	r16,28(sp)
    e250:	d9400215 	stw	r5,8(sp)
    e254:	d9800115 	stw	r6,4(sp)
    e258:	3839883a 	mov	fp,r7
    e25c:	2809883a 	mov	r4,r5
    e260:	22000003 	ldbu	r8,0(r4)
    e264:	24400044 	addi	r17,r4,1
    e268:	2007883a 	mov	r3,r4
    e26c:	b205883a 	add	r2,r22,r8
    e270:	10800043 	ldbu	r2,1(r2)
    e274:	8809883a 	mov	r4,r17
    e278:	1080020c 	andi	r2,r2,8
    e27c:	103ff81e 	bne	r2,zero,e260 <__alt_mem_epcs_flash_controller_0+0xff80d260>
    e280:	00800b44 	movi	r2,45
    e284:	40807726 	beq	r8,r2,e464 <_strtoull_r+0x250>
    e288:	00800ac4 	movi	r2,43
    e28c:	40807a26 	beq	r8,r2,e478 <_strtoull_r+0x264>
    e290:	d8000415 	stw	zero,16(sp)
    e294:	e0001426 	beq	fp,zero,e2e8 <_strtoull_r+0xd4>
    e298:	00800404 	movi	r2,16
    e29c:	e0808826 	beq	fp,r2,e4c0 <_strtoull_r+0x2ac>
    e2a0:	e025d7fa 	srai	r18,fp,31
    e2a4:	013fffc4 	movi	r4,-1
    e2a8:	200b883a 	mov	r5,r4
    e2ac:	e00d883a 	mov	r6,fp
    e2b0:	900f883a 	mov	r7,r18
    e2b4:	da000615 	stw	r8,24(sp)
    e2b8:	00160700 	call	16070 <__udivdi3>
    e2bc:	013fffc4 	movi	r4,-1
    e2c0:	e00d883a 	mov	r6,fp
    e2c4:	900f883a 	mov	r7,r18
    e2c8:	200b883a 	mov	r5,r4
    e2cc:	1021883a 	mov	r16,r2
    e2d0:	182f883a 	mov	r23,r3
    e2d4:	001666c0 	call	1666c <__umoddi3>
    e2d8:	d8800315 	stw	r2,12(sp)
    e2dc:	df000015 	stw	fp,0(sp)
    e2e0:	da000617 	ldw	r8,24(sp)
    e2e4:	00000c06 	br	e318 <_strtoull_r+0x104>
    e2e8:	00800c04 	movi	r2,48
    e2ec:	40806626 	beq	r8,r2,e488 <_strtoull_r+0x274>
    e2f0:	00800284 	movi	r2,10
    e2f4:	00c00144 	movi	r3,5
    e2f8:	042666b4 	movhi	r16,39322
    e2fc:	05c666b4 	movhi	r23,6554
    e300:	d8800015 	stw	r2,0(sp)
    e304:	d8c00315 	stw	r3,12(sp)
    e308:	84266644 	addi	r16,r16,-26215
    e30c:	bde66644 	addi	r23,r23,-26215
    e310:	0025883a 	mov	r18,zero
    e314:	1039883a 	mov	fp,r2
    e318:	b205883a 	add	r2,r22,r8
    e31c:	11800043 	ldbu	r6,1(r2)
    e320:	882b883a 	mov	r21,r17
    e324:	000f883a 	mov	r7,zero
    e328:	3080010c 	andi	r2,r6,4
    e32c:	0009883a 	mov	r4,zero
    e330:	000b883a 	mov	r5,zero
    e334:	04400044 	movi	r17,1
    e338:	053fffc4 	movi	r20,-1
    e33c:	10000d26 	beq	r2,zero,e374 <_strtoull_r+0x160>
    e340:	44fff404 	addi	r19,r8,-48
    e344:	9f00110e 	bge	r19,fp,e38c <_strtoull_r+0x178>
    e348:	3d000426 	beq	r7,r20,e35c <_strtoull_r+0x148>
    e34c:	b9400236 	bltu	r23,r5,e358 <_strtoull_r+0x144>
    e350:	2dc0291e 	bne	r5,r23,e3f8 <_strtoull_r+0x1e4>
    e354:	8100282e 	bgeu	r16,r4,e3f8 <_strtoull_r+0x1e4>
    e358:	01ffffc4 	movi	r7,-1
    e35c:	aa000003 	ldbu	r8,0(r21)
    e360:	ad400044 	addi	r21,r21,1
    e364:	b205883a 	add	r2,r22,r8
    e368:	11800043 	ldbu	r6,1(r2)
    e36c:	3080010c 	andi	r2,r6,4
    e370:	103ff31e 	bne	r2,zero,e340 <__alt_mem_epcs_flash_controller_0+0xff80d340>
    e374:	318000cc 	andi	r6,r6,3
    e378:	30000426 	beq	r6,zero,e38c <_strtoull_r+0x178>
    e37c:	34402a26 	beq	r6,r17,e428 <_strtoull_r+0x214>
    e380:	00c015c4 	movi	r3,87
    e384:	40e7c83a 	sub	r19,r8,r3
    e388:	9f3fef16 	blt	r19,fp,e348 <__alt_mem_epcs_flash_controller_0+0xff80d348>
    e38c:	38002c16 	blt	r7,zero,e440 <_strtoull_r+0x22c>
    e390:	d8c00417 	ldw	r3,16(sp)
    e394:	18000426 	beq	r3,zero,e3a8 <_strtoull_r+0x194>
    e398:	0109c83a 	sub	r4,zero,r4
    e39c:	2004c03a 	cmpne	r2,r4,zero
    e3a0:	0151c83a 	sub	r8,zero,r5
    e3a4:	408bc83a 	sub	r5,r8,r2
    e3a8:	d8800117 	ldw	r2,4(sp)
    e3ac:	10000426 	beq	r2,zero,e3c0 <_strtoull_r+0x1ac>
    e3b0:	dd000217 	ldw	r20,8(sp)
    e3b4:	3800291e 	bne	r7,zero,e45c <_strtoull_r+0x248>
    e3b8:	d8c00117 	ldw	r3,4(sp)
    e3bc:	1d000015 	stw	r20,0(r3)
    e3c0:	2005883a 	mov	r2,r4
    e3c4:	2807883a 	mov	r3,r5
    e3c8:	dfc01017 	ldw	ra,64(sp)
    e3cc:	df000f17 	ldw	fp,60(sp)
    e3d0:	ddc00e17 	ldw	r23,56(sp)
    e3d4:	dd800d17 	ldw	r22,52(sp)
    e3d8:	dd400c17 	ldw	r21,48(sp)
    e3dc:	dd000b17 	ldw	r20,44(sp)
    e3e0:	dcc00a17 	ldw	r19,40(sp)
    e3e4:	dc800917 	ldw	r18,36(sp)
    e3e8:	dc400817 	ldw	r17,32(sp)
    e3ec:	dc000717 	ldw	r16,28(sp)
    e3f0:	dec01104 	addi	sp,sp,68
    e3f4:	f800283a 	ret
    e3f8:	24000d26 	beq	r4,r16,e430 <_strtoull_r+0x21c>
    e3fc:	d9800017 	ldw	r6,0(sp)
    e400:	900f883a 	mov	r7,r18
    e404:	0015ef00 	call	15ef0 <__muldi3>
    e408:	980bd7fa 	srai	r5,r19,31
    e40c:	9885883a 	add	r2,r19,r2
    e410:	14d1803a 	cmpltu	r8,r2,r19
    e414:	28c7883a 	add	r3,r5,r3
    e418:	1009883a 	mov	r4,r2
    e41c:	40cb883a 	add	r5,r8,r3
    e420:	01c00044 	movi	r7,1
    e424:	003fcd06 	br	e35c <__alt_mem_epcs_flash_controller_0+0xff80d35c>
    e428:	00c00dc4 	movi	r3,55
    e42c:	003fd506 	br	e384 <__alt_mem_epcs_flash_controller_0+0xff80d384>
    e430:	2dfff21e 	bne	r5,r23,e3fc <__alt_mem_epcs_flash_controller_0+0xff80d3fc>
    e434:	d8c00317 	ldw	r3,12(sp)
    e438:	1cffc716 	blt	r3,r19,e358 <__alt_mem_epcs_flash_controller_0+0xff80d358>
    e43c:	003fef06 	br	e3fc <__alt_mem_epcs_flash_controller_0+0xff80d3fc>
    e440:	d8c00517 	ldw	r3,20(sp)
    e444:	00800884 	movi	r2,34
    e448:	013fffc4 	movi	r4,-1
    e44c:	18800015 	stw	r2,0(r3)
    e450:	d8800117 	ldw	r2,4(sp)
    e454:	200b883a 	mov	r5,r4
    e458:	103fd926 	beq	r2,zero,e3c0 <__alt_mem_epcs_flash_controller_0+0xff80d3c0>
    e45c:	ad3fffc4 	addi	r20,r21,-1
    e460:	003fd506 	br	e3b8 <__alt_mem_epcs_flash_controller_0+0xff80d3b8>
    e464:	00800044 	movi	r2,1
    e468:	1c400084 	addi	r17,r3,2
    e46c:	1a000043 	ldbu	r8,1(r3)
    e470:	d8800415 	stw	r2,16(sp)
    e474:	003f8706 	br	e294 <__alt_mem_epcs_flash_controller_0+0xff80d294>
    e478:	1c400084 	addi	r17,r3,2
    e47c:	1a000043 	ldbu	r8,1(r3)
    e480:	d8000415 	stw	zero,16(sp)
    e484:	003f8306 	br	e294 <__alt_mem_epcs_flash_controller_0+0xff80d294>
    e488:	88800003 	ldbu	r2,0(r17)
    e48c:	00c01604 	movi	r3,88
    e490:	108037cc 	andi	r2,r2,223
    e494:	10c01026 	beq	r2,r3,e4d8 <_strtoull_r+0x2c4>
    e498:	00c00204 	movi	r3,8
    e49c:	008001c4 	movi	r2,7
    e4a0:	043fffc4 	movi	r16,-1
    e4a4:	05c80034 	movhi	r23,8192
    e4a8:	d8c00015 	stw	r3,0(sp)
    e4ac:	d8800315 	stw	r2,12(sp)
    e4b0:	bc2f883a 	add	r23,r23,r16
    e4b4:	0025883a 	mov	r18,zero
    e4b8:	1839883a 	mov	fp,r3
    e4bc:	003f9606 	br	e318 <__alt_mem_epcs_flash_controller_0+0xff80d318>
    e4c0:	00800c04 	movi	r2,48
    e4c4:	4080101e 	bne	r8,r2,e508 <_strtoull_r+0x2f4>
    e4c8:	88800003 	ldbu	r2,0(r17)
    e4cc:	00c01604 	movi	r3,88
    e4d0:	108037cc 	andi	r2,r2,223
    e4d4:	10c0141e 	bne	r2,r3,e528 <_strtoull_r+0x314>
    e4d8:	00c00404 	movi	r3,16
    e4dc:	008003c4 	movi	r2,15
    e4e0:	043fffc4 	movi	r16,-1
    e4e4:	05c40034 	movhi	r23,4096
    e4e8:	8a000043 	ldbu	r8,1(r17)
    e4ec:	d8c00015 	stw	r3,0(sp)
    e4f0:	d8800315 	stw	r2,12(sp)
    e4f4:	8c400084 	addi	r17,r17,2
    e4f8:	bc2f883a 	add	r23,r23,r16
    e4fc:	0025883a 	mov	r18,zero
    e500:	1839883a 	mov	fp,r3
    e504:	003f8406 	br	e318 <__alt_mem_epcs_flash_controller_0+0xff80d318>
    e508:	008003c4 	movi	r2,15
    e50c:	d8800315 	stw	r2,12(sp)
    e510:	043fffc4 	movi	r16,-1
    e514:	05c40034 	movhi	r23,4096
    e518:	bc2f883a 	add	r23,r23,r16
    e51c:	df000015 	stw	fp,0(sp)
    e520:	0025883a 	mov	r18,zero
    e524:	003f7c06 	br	e318 <__alt_mem_epcs_flash_controller_0+0xff80d318>
    e528:	00c003c4 	movi	r3,15
    e52c:	d8c00315 	stw	r3,12(sp)
    e530:	003ff706 	br	e510 <__alt_mem_epcs_flash_controller_0+0xff80d510>

0000e534 <_sungetc_r>:
    e534:	00bfffc4 	movi	r2,-1
    e538:	28803726 	beq	r5,r2,e618 <_sungetc_r+0xe4>
    e53c:	3080030b 	ldhu	r2,12(r6)
    e540:	30c00c17 	ldw	r3,48(r6)
    e544:	defffc04 	addi	sp,sp,-16
    e548:	10bff7cc 	andi	r2,r2,65503
    e54c:	dc800215 	stw	r18,8(sp)
    e550:	dfc00315 	stw	ra,12(sp)
    e554:	dc400115 	stw	r17,4(sp)
    e558:	dc000015 	stw	r16,0(sp)
    e55c:	3080030d 	sth	r2,12(r6)
    e560:	2c803fcc 	andi	r18,r5,255
    e564:	18001826 	beq	r3,zero,e5c8 <_sungetc_r+0x94>
    e568:	30c00117 	ldw	r3,4(r6)
    e56c:	30800d17 	ldw	r2,52(r6)
    e570:	3021883a 	mov	r16,r6
    e574:	2823883a 	mov	r17,r5
    e578:	18800e0e 	bge	r3,r2,e5b4 <_sungetc_r+0x80>
    e57c:	80c00017 	ldw	r3,0(r16)
    e580:	9005883a 	mov	r2,r18
    e584:	193fffc4 	addi	r4,r3,-1
    e588:	81000015 	stw	r4,0(r16)
    e58c:	1c7fffc5 	stb	r17,-1(r3)
    e590:	80c00117 	ldw	r3,4(r16)
    e594:	18c00044 	addi	r3,r3,1
    e598:	80c00115 	stw	r3,4(r16)
    e59c:	dfc00317 	ldw	ra,12(sp)
    e5a0:	dc800217 	ldw	r18,8(sp)
    e5a4:	dc400117 	ldw	r17,4(sp)
    e5a8:	dc000017 	ldw	r16,0(sp)
    e5ac:	dec00404 	addi	sp,sp,16
    e5b0:	f800283a 	ret
    e5b4:	300b883a 	mov	r5,r6
    e5b8:	0011bb40 	call	11bb4 <__submore>
    e5bc:	103fef26 	beq	r2,zero,e57c <__alt_mem_epcs_flash_controller_0+0xff80d57c>
    e5c0:	00bfffc4 	movi	r2,-1
    e5c4:	003ff506 	br	e59c <__alt_mem_epcs_flash_controller_0+0xff80d59c>
    e5c8:	30c00417 	ldw	r3,16(r6)
    e5cc:	30800017 	ldw	r2,0(r6)
    e5d0:	18000326 	beq	r3,zero,e5e0 <_sungetc_r+0xac>
    e5d4:	1880022e 	bgeu	r3,r2,e5e0 <_sungetc_r+0xac>
    e5d8:	10ffffc3 	ldbu	r3,-1(r2)
    e5dc:	90c01026 	beq	r18,r3,e620 <_sungetc_r+0xec>
    e5e0:	31c00117 	ldw	r7,4(r6)
    e5e4:	30800e15 	stw	r2,56(r6)
    e5e8:	008000c4 	movi	r2,3
    e5ec:	31001004 	addi	r4,r6,64
    e5f0:	30c01084 	addi	r3,r6,66
    e5f4:	30800d15 	stw	r2,52(r6)
    e5f8:	00800044 	movi	r2,1
    e5fc:	30800115 	stw	r2,4(r6)
    e600:	31c00f15 	stw	r7,60(r6)
    e604:	31000c15 	stw	r4,48(r6)
    e608:	31401085 	stb	r5,66(r6)
    e60c:	30c00015 	stw	r3,0(r6)
    e610:	9005883a 	mov	r2,r18
    e614:	003fe106 	br	e59c <__alt_mem_epcs_flash_controller_0+0xff80d59c>
    e618:	00bfffc4 	movi	r2,-1
    e61c:	f800283a 	ret
    e620:	30c00117 	ldw	r3,4(r6)
    e624:	10bfffc4 	addi	r2,r2,-1
    e628:	30800015 	stw	r2,0(r6)
    e62c:	18800044 	addi	r2,r3,1
    e630:	30800115 	stw	r2,4(r6)
    e634:	9005883a 	mov	r2,r18
    e638:	003fd806 	br	e59c <__alt_mem_epcs_flash_controller_0+0xff80d59c>

0000e63c <__ssrefill_r>:
    e63c:	defffe04 	addi	sp,sp,-8
    e640:	dc000015 	stw	r16,0(sp)
    e644:	2821883a 	mov	r16,r5
    e648:	29400c17 	ldw	r5,48(r5)
    e64c:	dfc00115 	stw	ra,4(sp)
    e650:	28000e26 	beq	r5,zero,e68c <__ssrefill_r+0x50>
    e654:	80801004 	addi	r2,r16,64
    e658:	28800126 	beq	r5,r2,e660 <__ssrefill_r+0x24>
    e65c:	00093d40 	call	93d4 <_free_r>
    e660:	80800f17 	ldw	r2,60(r16)
    e664:	80000c15 	stw	zero,48(r16)
    e668:	80800115 	stw	r2,4(r16)
    e66c:	10000726 	beq	r2,zero,e68c <__ssrefill_r+0x50>
    e670:	80c00e17 	ldw	r3,56(r16)
    e674:	0005883a 	mov	r2,zero
    e678:	80c00015 	stw	r3,0(r16)
    e67c:	dfc00117 	ldw	ra,4(sp)
    e680:	dc000017 	ldw	r16,0(sp)
    e684:	dec00204 	addi	sp,sp,8
    e688:	f800283a 	ret
    e68c:	8080030b 	ldhu	r2,12(r16)
    e690:	80c00417 	ldw	r3,16(r16)
    e694:	80000115 	stw	zero,4(r16)
    e698:	10800814 	ori	r2,r2,32
    e69c:	8080030d 	sth	r2,12(r16)
    e6a0:	80c00015 	stw	r3,0(r16)
    e6a4:	00bfffc4 	movi	r2,-1
    e6a8:	003ff406 	br	e67c <__alt_mem_epcs_flash_controller_0+0xff80d67c>

0000e6ac <_sfread_r>:
    e6ac:	defff704 	addi	sp,sp,-36
    e6b0:	dd000415 	stw	r20,16(sp)
    e6b4:	dcc00315 	stw	r19,12(sp)
    e6b8:	2029883a 	mov	r20,r4
    e6bc:	2827883a 	mov	r19,r5
    e6c0:	3809883a 	mov	r4,r7
    e6c4:	300b883a 	mov	r5,r6
    e6c8:	ddc00715 	stw	r23,28(sp)
    e6cc:	dd400515 	stw	r21,20(sp)
    e6d0:	dc400115 	stw	r17,4(sp)
    e6d4:	dfc00815 	stw	ra,32(sp)
    e6d8:	dd800615 	stw	r22,24(sp)
    e6dc:	dc800215 	stw	r18,8(sp)
    e6e0:	dc000015 	stw	r16,0(sp)
    e6e4:	302f883a 	mov	r23,r6
    e6e8:	382b883a 	mov	r21,r7
    e6ec:	00024440 	call	2444 <__mulsi3>
    e6f0:	dc400917 	ldw	r17,36(sp)
    e6f4:	10002726 	beq	r2,zero,e794 <_sfread_r+0xe8>
    e6f8:	102d883a 	mov	r22,r2
    e6fc:	1025883a 	mov	r18,r2
    e700:	00000b06 	br	e730 <_sfread_r+0x84>
    e704:	0002e140 	call	2e14 <memcpy>
    e708:	88800017 	ldw	r2,0(r17)
    e70c:	9c27883a 	add	r19,r19,r16
    e710:	9425c83a 	sub	r18,r18,r16
    e714:	1421883a 	add	r16,r2,r16
    e718:	88000115 	stw	zero,4(r17)
    e71c:	880b883a 	mov	r5,r17
    e720:	8c000015 	stw	r16,0(r17)
    e724:	a009883a 	mov	r4,r20
    e728:	000e63c0 	call	e63c <__ssrefill_r>
    e72c:	10001b1e 	bne	r2,zero,e79c <_sfread_r+0xf0>
    e730:	8c000117 	ldw	r16,4(r17)
    e734:	9809883a 	mov	r4,r19
    e738:	89400017 	ldw	r5,0(r17)
    e73c:	800d883a 	mov	r6,r16
    e740:	84bff036 	bltu	r16,r18,e704 <__alt_mem_epcs_flash_controller_0+0xff80d704>
    e744:	900d883a 	mov	r6,r18
    e748:	0002e140 	call	2e14 <memcpy>
    e74c:	88c00117 	ldw	r3,4(r17)
    e750:	89000017 	ldw	r4,0(r17)
    e754:	a805883a 	mov	r2,r21
    e758:	1c87c83a 	sub	r3,r3,r18
    e75c:	24a5883a 	add	r18,r4,r18
    e760:	88c00115 	stw	r3,4(r17)
    e764:	8c800015 	stw	r18,0(r17)
    e768:	dfc00817 	ldw	ra,32(sp)
    e76c:	ddc00717 	ldw	r23,28(sp)
    e770:	dd800617 	ldw	r22,24(sp)
    e774:	dd400517 	ldw	r21,20(sp)
    e778:	dd000417 	ldw	r20,16(sp)
    e77c:	dcc00317 	ldw	r19,12(sp)
    e780:	dc800217 	ldw	r18,8(sp)
    e784:	dc400117 	ldw	r17,4(sp)
    e788:	dc000017 	ldw	r16,0(sp)
    e78c:	dec00904 	addi	sp,sp,36
    e790:	f800283a 	ret
    e794:	0005883a 	mov	r2,zero
    e798:	003ff306 	br	e768 <__alt_mem_epcs_flash_controller_0+0xff80d768>
    e79c:	b80b883a 	mov	r5,r23
    e7a0:	b489c83a 	sub	r4,r22,r18
    e7a4:	00023880 	call	2388 <__udivsi3>
    e7a8:	003fef06 	br	e768 <__alt_mem_epcs_flash_controller_0+0xff80d768>

0000e7ac <__ssvfiscanf_r>:
    e7ac:	2880030b 	ldhu	r2,12(r5)
    e7b0:	deff9b04 	addi	sp,sp,-404
    e7b4:	dd005f15 	stw	r20,380(sp)
    e7b8:	dc405c15 	stw	r17,368(sp)
    e7bc:	dfc06415 	stw	ra,400(sp)
    e7c0:	df006315 	stw	fp,396(sp)
    e7c4:	ddc06215 	stw	r23,392(sp)
    e7c8:	dd806115 	stw	r22,388(sp)
    e7cc:	dd406015 	stw	r21,384(sp)
    e7d0:	dcc05e15 	stw	r19,376(sp)
    e7d4:	dc805d15 	stw	r18,372(sp)
    e7d8:	dc005b15 	stw	r16,364(sp)
    e7dc:	10c8000c 	andi	r3,r2,8192
    e7e0:	d9c04f15 	stw	r7,316(sp)
    e7e4:	2829883a 	mov	r20,r5
    e7e8:	2023883a 	mov	r17,r4
    e7ec:	1800061e 	bne	r3,zero,e808 <__ssvfiscanf_r+0x5c>
    e7f0:	29001917 	ldw	r4,100(r5)
    e7f4:	00f7ffc4 	movi	r3,-8193
    e7f8:	10880014 	ori	r2,r2,8192
    e7fc:	20c6703a 	and	r3,r4,r3
    e800:	2880030d 	sth	r2,12(r5)
    e804:	28c01915 	stw	r3,100(r5)
    e808:	30800003 	ldbu	r2,0(r6)
    e80c:	dac04104 	addi	r11,sp,260
    e810:	0039883a 	mov	fp,zero
    e814:	048000b4 	movhi	r18,2
    e818:	d8005215 	stw	zero,328(sp)
    e81c:	d8005015 	stw	zero,320(sp)
    e820:	d8005115 	stw	zero,324(sp)
    e824:	dac04e15 	stw	r11,312(sp)
    e828:	d8804d15 	stw	r2,308(sp)
    e82c:	e027883a 	mov	r19,fp
    e830:	94801f04 	addi	r18,r18,124
    e834:	a039883a 	mov	fp,r20
    e838:	35000044 	addi	r20,r6,1
    e83c:	10001e26 	beq	r2,zero,e8b8 <__ssvfiscanf_r+0x10c>
    e840:	95800017 	ldw	r22,0(r18)
    e844:	b087883a 	add	r3,r22,r2
    e848:	18c00043 	ldbu	r3,1(r3)
    e84c:	18c0020c 	andi	r3,r3,8
    e850:	18001b26 	beq	r3,zero,e8c0 <__ssvfiscanf_r+0x114>
    e854:	e0800117 	ldw	r2,4(fp)
    e858:	00800e0e 	bge	zero,r2,e894 <__ssvfiscanf_r+0xe8>
    e85c:	e0c00017 	ldw	r3,0(fp)
    e860:	91000017 	ldw	r4,0(r18)
    e864:	18800003 	ldbu	r2,0(r3)
    e868:	2085883a 	add	r2,r4,r2
    e86c:	10800043 	ldbu	r2,1(r2)
    e870:	1080020c 	andi	r2,r2,8
    e874:	10000b26 	beq	r2,zero,e8a4 <__ssvfiscanf_r+0xf8>
    e878:	e0800117 	ldw	r2,4(fp)
    e87c:	18c00044 	addi	r3,r3,1
    e880:	e0c00015 	stw	r3,0(fp)
    e884:	10bfffc4 	addi	r2,r2,-1
    e888:	e0800115 	stw	r2,4(fp)
    e88c:	9cc00044 	addi	r19,r19,1
    e890:	00bff216 	blt	zero,r2,e85c <__alt_mem_epcs_flash_controller_0+0xff80d85c>
    e894:	e00b883a 	mov	r5,fp
    e898:	8809883a 	mov	r4,r17
    e89c:	000e63c0 	call	e63c <__ssrefill_r>
    e8a0:	103fee26 	beq	r2,zero,e85c <__alt_mem_epcs_flash_controller_0+0xff80d85c>
    e8a4:	a00d883a 	mov	r6,r20
    e8a8:	30800003 	ldbu	r2,0(r6)
    e8ac:	35000044 	addi	r20,r6,1
    e8b0:	d8804d15 	stw	r2,308(sp)
    e8b4:	103fe21e 	bne	r2,zero,e840 <__alt_mem_epcs_flash_controller_0+0xff80d840>
    e8b8:	d8805117 	ldw	r2,324(sp)
    e8bc:	00009a06 	br	eb28 <__ssvfiscanf_r+0x37c>
    e8c0:	00c00944 	movi	r3,37
    e8c4:	10c0891e 	bne	r2,r3,eaec <__ssvfiscanf_r+0x340>
    e8c8:	31800043 	ldbu	r6,1(r6)
    e8cc:	002f883a 	mov	r23,zero
    e8d0:	b809883a 	mov	r4,r23
    e8d4:	0021883a 	mov	r16,zero
    e8d8:	01c01e04 	movi	r7,120
    e8dc:	00c01b04 	movi	r3,108
    e8e0:	302f883a 	mov	r23,r6
    e8e4:	a5400044 	addi	r21,r20,1
    e8e8:	3dc0e436 	bltu	r7,r23,ec7c <__ssvfiscanf_r+0x4d0>
    e8ec:	b80490ba 	slli	r2,r23,2
    e8f0:	01400074 	movhi	r5,1
    e8f4:	297a4104 	addi	r5,r5,-5884
    e8f8:	1145883a 	add	r2,r2,r5
    e8fc:	10800017 	ldw	r2,0(r2)
    e900:	1000683a 	jmp	r2
    e904:	0000eb24 	muli	zero,zero,940
    e908:	0000ec7c 	xorhi	zero,zero,945
    e90c:	0000ec7c 	xorhi	zero,zero,945
    e910:	0000ec7c 	xorhi	zero,zero,945
    e914:	0000ec7c 	xorhi	zero,zero,945
    e918:	0000ec7c 	xorhi	zero,zero,945
    e91c:	0000ec7c 	xorhi	zero,zero,945
    e920:	0000ec7c 	xorhi	zero,zero,945
    e924:	0000ec7c 	xorhi	zero,zero,945
    e928:	0000ec7c 	xorhi	zero,zero,945
    e92c:	0000ec7c 	xorhi	zero,zero,945
    e930:	0000ec7c 	xorhi	zero,zero,945
    e934:	0000ec7c 	xorhi	zero,zero,945
    e938:	0000ec7c 	xorhi	zero,zero,945
    e93c:	0000ec7c 	xorhi	zero,zero,945
    e940:	0000ec7c 	xorhi	zero,zero,945
    e944:	0000ec7c 	xorhi	zero,zero,945
    e948:	0000ec7c 	xorhi	zero,zero,945
    e94c:	0000ec7c 	xorhi	zero,zero,945
    e950:	0000ec7c 	xorhi	zero,zero,945
    e954:	0000ec7c 	xorhi	zero,zero,945
    e958:	0000ec7c 	xorhi	zero,zero,945
    e95c:	0000ec7c 	xorhi	zero,zero,945
    e960:	0000ec7c 	xorhi	zero,zero,945
    e964:	0000ec7c 	xorhi	zero,zero,945
    e968:	0000ec7c 	xorhi	zero,zero,945
    e96c:	0000ec7c 	xorhi	zero,zero,945
    e970:	0000ec7c 	xorhi	zero,zero,945
    e974:	0000ec7c 	xorhi	zero,zero,945
    e978:	0000ec7c 	xorhi	zero,zero,945
    e97c:	0000ec7c 	xorhi	zero,zero,945
    e980:	0000ec7c 	xorhi	zero,zero,945
    e984:	0000ec7c 	xorhi	zero,zero,945
    e988:	0000ec7c 	xorhi	zero,zero,945
    e98c:	0000ec7c 	xorhi	zero,zero,945
    e990:	0000ec7c 	xorhi	zero,zero,945
    e994:	0000ec7c 	xorhi	zero,zero,945
    e998:	0000eae8 	cmpgeui	zero,zero,939
    e99c:	0000ec7c 	xorhi	zero,zero,945
    e9a0:	0000ec7c 	xorhi	zero,zero,945
    e9a4:	0000ec7c 	xorhi	zero,zero,945
    e9a8:	0000ec7c 	xorhi	zero,zero,945
    e9ac:	0000eec0 	call	eec <FlashCheckIfBlockErased+0xec>
    e9b0:	0000ec7c 	xorhi	zero,zero,945
    e9b4:	0000ec7c 	xorhi	zero,zero,945
    e9b8:	0000ec7c 	xorhi	zero,zero,945
    e9bc:	0000ec7c 	xorhi	zero,zero,945
    e9c0:	0000ec7c 	xorhi	zero,zero,945
    e9c4:	0000ee2c 	andhi	zero,zero,952
    e9c8:	0000ee2c 	andhi	zero,zero,952
    e9cc:	0000ee2c 	andhi	zero,zero,952
    e9d0:	0000ee2c 	andhi	zero,zero,952
    e9d4:	0000ee2c 	andhi	zero,zero,952
    e9d8:	0000ee2c 	andhi	zero,zero,952
    e9dc:	0000ee2c 	andhi	zero,zero,952
    e9e0:	0000ee2c 	andhi	zero,zero,952
    e9e4:	0000ee2c 	andhi	zero,zero,952
    e9e8:	0000ee2c 	andhi	zero,zero,952
    e9ec:	0000ec7c 	xorhi	zero,zero,945
    e9f0:	0000ec7c 	xorhi	zero,zero,945
    e9f4:	0000ec7c 	xorhi	zero,zero,945
    e9f8:	0000ec7c 	xorhi	zero,zero,945
    e9fc:	0000ec7c 	xorhi	zero,zero,945
    ea00:	0000ec7c 	xorhi	zero,zero,945
    ea04:	0000ec7c 	xorhi	zero,zero,945
    ea08:	0000ec7c 	xorhi	zero,zero,945
    ea0c:	0000ec7c 	xorhi	zero,zero,945
    ea10:	0000ec7c 	xorhi	zero,zero,945
    ea14:	0000ee00 	call	ee0 <FlashCheckIfBlockErased+0xe0>
    ea18:	0000ec7c 	xorhi	zero,zero,945
    ea1c:	0000ec7c 	xorhi	zero,zero,945
    ea20:	0000ec7c 	xorhi	zero,zero,945
    ea24:	0000ec7c 	xorhi	zero,zero,945
    ea28:	0000ec7c 	xorhi	zero,zero,945
    ea2c:	0000ec7c 	xorhi	zero,zero,945
    ea30:	0000ec7c 	xorhi	zero,zero,945
    ea34:	0000ee84 	movi	zero,954
    ea38:	0000ec7c 	xorhi	zero,zero,945
    ea3c:	0000ec7c 	xorhi	zero,zero,945
    ea40:	0000ee5c 	xori	zero,zero,953
    ea44:	0000ec7c 	xorhi	zero,zero,945
    ea48:	0000ec7c 	xorhi	zero,zero,945
    ea4c:	0000ec7c 	xorhi	zero,zero,945
    ea50:	0000ec7c 	xorhi	zero,zero,945
    ea54:	0000ec7c 	xorhi	zero,zero,945
    ea58:	0000ec7c 	xorhi	zero,zero,945
    ea5c:	0000ec7c 	xorhi	zero,zero,945
    ea60:	0000ec7c 	xorhi	zero,zero,945
    ea64:	0000ee98 	cmpnei	zero,zero,954
    ea68:	0000ec7c 	xorhi	zero,zero,945
    ea6c:	0000ec7c 	xorhi	zero,zero,945
    ea70:	0000ed74 	movhi	zero,949
    ea74:	0000ec7c 	xorhi	zero,zero,945
    ea78:	0000ec7c 	xorhi	zero,zero,945
    ea7c:	0000ec7c 	xorhi	zero,zero,945
    ea80:	0000ec7c 	xorhi	zero,zero,945
    ea84:	0000ec7c 	xorhi	zero,zero,945
    ea88:	0000ec7c 	xorhi	zero,zero,945
    ea8c:	0000ec7c 	xorhi	zero,zero,945
    ea90:	0000ecf8 	rdprs	zero,zero,947
    ea94:	0000ecd0 	cmplti	zero,zero,947
    ea98:	0000ec7c 	xorhi	zero,zero,945
    ea9c:	0000ec7c 	xorhi	zero,zero,945
    eaa0:	0000ec7c 	xorhi	zero,zero,945
    eaa4:	0000ecbc 	xorhi	zero,zero,946
    eaa8:	0000eed4 	movui	zero,955
    eaac:	0000ec7c 	xorhi	zero,zero,945
    eab0:	0000ec7c 	xorhi	zero,zero,945
    eab4:	0000ec64 	muli	zero,zero,945
    eab8:	0000ec7c 	xorhi	zero,zero,945
    eabc:	0000ec38 	rdprs	zero,zero,944
    eac0:	0000ec10 	cmplti	zero,zero,944
    eac4:	0000ebe4 	muli	zero,zero,943
    eac8:	0000ec7c 	xorhi	zero,zero,945
    eacc:	0000ec7c 	xorhi	zero,zero,945
    ead0:	0000ebd0 	cmplti	zero,zero,943
    ead4:	0000ec7c 	xorhi	zero,zero,945
    ead8:	0000eb58 	cmpnei	zero,zero,941
    eadc:	0000ec7c 	xorhi	zero,zero,945
    eae0:	0000ec7c 	xorhi	zero,zero,945
    eae4:	0000ee98 	cmpnei	zero,zero,954
    eae8:	a829883a 	mov	r20,r21
    eaec:	e0800117 	ldw	r2,4(fp)
    eaf0:	0081e40e 	bge	zero,r2,f284 <__ssvfiscanf_r+0xad8>
    eaf4:	e0800017 	ldw	r2,0(fp)
    eaf8:	a0ffffc3 	ldbu	r3,-1(r20)
    eafc:	11000003 	ldbu	r4,0(r2)
    eb00:	20ff6d1e 	bne	r4,r3,e8b8 <__alt_mem_epcs_flash_controller_0+0xff80d8b8>
    eb04:	e0c00117 	ldw	r3,4(fp)
    eb08:	10800044 	addi	r2,r2,1
    eb0c:	e0800015 	stw	r2,0(fp)
    eb10:	18bfffc4 	addi	r2,r3,-1
    eb14:	e0800115 	stw	r2,4(fp)
    eb18:	9cc00044 	addi	r19,r19,1
    eb1c:	a00d883a 	mov	r6,r20
    eb20:	003f6106 	br	e8a8 <__alt_mem_epcs_flash_controller_0+0xff80d8a8>
    eb24:	00bfffc4 	movi	r2,-1
    eb28:	dfc06417 	ldw	ra,400(sp)
    eb2c:	df006317 	ldw	fp,396(sp)
    eb30:	ddc06217 	ldw	r23,392(sp)
    eb34:	dd806117 	ldw	r22,388(sp)
    eb38:	dd406017 	ldw	r21,384(sp)
    eb3c:	dd005f17 	ldw	r20,380(sp)
    eb40:	dcc05e17 	ldw	r19,376(sp)
    eb44:	dc805d17 	ldw	r18,372(sp)
    eb48:	dc405c17 	ldw	r17,368(sp)
    eb4c:	dc005b17 	ldw	r16,364(sp)
    eb50:	dec06504 	addi	sp,sp,404
    eb54:	f800283a 	ret
    eb58:	e0800117 	ldw	r2,4(fp)
    eb5c:	202f883a 	mov	r23,r4
    eb60:	0081f20e 	bge	zero,r2,f32c <__ssvfiscanf_r+0xb80>
    eb64:	00800074 	movhi	r2,1
    eb68:	10b7e004 	addi	r2,r2,-8320
    eb6c:	02c00284 	movi	r11,10
    eb70:	d8805215 	stw	r2,328(sp)
    eb74:	dac05015 	stw	r11,320(sp)
    eb78:	050000c4 	movi	r20,3
    eb7c:	e0800017 	ldw	r2,0(fp)
    eb80:	00000206 	br	eb8c <__ssvfiscanf_r+0x3e0>
    eb84:	10800044 	addi	r2,r2,1
    eb88:	e0800015 	stw	r2,0(fp)
    eb8c:	11000003 	ldbu	r4,0(r2)
    eb90:	20c03fcc 	andi	r3,r4,255
    eb94:	b0c7883a 	add	r3,r22,r3
    eb98:	18c00043 	ldbu	r3,1(r3)
    eb9c:	1940020c 	andi	r5,r3,8
    eba0:	2801ee26 	beq	r5,zero,f35c <__ssvfiscanf_r+0xbb0>
    eba4:	e0c00117 	ldw	r3,4(fp)
    eba8:	9cc00044 	addi	r19,r19,1
    ebac:	18ffffc4 	addi	r3,r3,-1
    ebb0:	e0c00115 	stw	r3,4(fp)
    ebb4:	00fff316 	blt	zero,r3,eb84 <__alt_mem_epcs_flash_controller_0+0xff80db84>
    ebb8:	e00b883a 	mov	r5,fp
    ebbc:	8809883a 	mov	r4,r17
    ebc0:	000e63c0 	call	e63c <__ssrefill_r>
    ebc4:	10016a1e 	bne	r2,zero,f170 <__ssvfiscanf_r+0x9c4>
    ebc8:	95800017 	ldw	r22,0(r18)
    ebcc:	003feb06 	br	eb7c <__alt_mem_epcs_flash_controller_0+0xff80db7c>
    ebd0:	e0800117 	ldw	r2,4(fp)
    ebd4:	202f883a 	mov	r23,r4
    ebd8:	0081c80e 	bge	zero,r2,f2fc <__ssvfiscanf_r+0xb50>
    ebdc:	05000084 	movi	r20,2
    ebe0:	003fe606 	br	eb7c <__alt_mem_epcs_flash_controller_0+0xff80db7c>
    ebe4:	e0800117 	ldw	r2,4(fp)
    ebe8:	202f883a 	mov	r23,r4
    ebec:	84008814 	ori	r16,r16,544
    ebf0:	0080ad0e 	bge	zero,r2,eea8 <__ssvfiscanf_r+0x6fc>
    ebf4:	00800074 	movhi	r2,1
    ebf8:	10b7e004 	addi	r2,r2,-8320
    ebfc:	02c00404 	movi	r11,16
    ec00:	d8805215 	stw	r2,328(sp)
    ec04:	dac05015 	stw	r11,320(sp)
    ec08:	050000c4 	movi	r20,3
    ec0c:	003fdb06 	br	eb7c <__alt_mem_epcs_flash_controller_0+0xff80db7c>
    ec10:	e0800117 	ldw	r2,4(fp)
    ec14:	202f883a 	mov	r23,r4
    ec18:	0080940e 	bge	zero,r2,ee6c <__ssvfiscanf_r+0x6c0>
    ec1c:	00800074 	movhi	r2,1
    ec20:	10b7e004 	addi	r2,r2,-8320
    ec24:	02c00204 	movi	r11,8
    ec28:	d8805215 	stw	r2,328(sp)
    ec2c:	dac05015 	stw	r11,320(sp)
    ec30:	050000c4 	movi	r20,3
    ec34:	003fd106 	br	eb7c <__alt_mem_epcs_flash_controller_0+0xff80db7c>
    ec38:	8080040c 	andi	r2,r16,16
    ec3c:	1000e41e 	bne	r2,zero,efd0 <__ssvfiscanf_r+0x824>
    ec40:	8080010c 	andi	r2,r16,4
    ec44:	10019926 	beq	r2,zero,f2ac <__ssvfiscanf_r+0xb00>
    ec48:	dac04f17 	ldw	r11,316(sp)
    ec4c:	a829883a 	mov	r20,r21
    ec50:	58800017 	ldw	r2,0(r11)
    ec54:	5ac00104 	addi	r11,r11,4
    ec58:	dac04f15 	stw	r11,316(sp)
    ec5c:	14c0000d 	sth	r19,0(r2)
    ec60:	003f1006 	br	e8a4 <__alt_mem_epcs_flash_controller_0+0xff80d8a4>
    ec64:	a5c00043 	ldbu	r23,1(r20)
    ec68:	b8c18b26 	beq	r23,r3,f298 <__ssvfiscanf_r+0xaec>
    ec6c:	a829883a 	mov	r20,r21
    ec70:	84000054 	ori	r16,r16,1
    ec74:	a5400044 	addi	r21,r20,1
    ec78:	3dff1c2e 	bgeu	r7,r23,e8ec <__alt_mem_epcs_flash_controller_0+0xff80d8ec>
    ec7c:	b80d883a 	mov	r6,r23
    ec80:	b185883a 	add	r2,r22,r6
    ec84:	10800043 	ldbu	r2,1(r2)
    ec88:	00c00044 	movi	r3,1
    ec8c:	202f883a 	mov	r23,r4
    ec90:	108000cc 	andi	r2,r2,3
    ec94:	10c17226 	beq	r2,r3,f260 <__ssvfiscanf_r+0xab4>
    ec98:	e0800117 	ldw	r2,4(fp)
    ec9c:	0081730e 	bge	zero,r2,f26c <__ssvfiscanf_r+0xac0>
    eca0:	00800074 	movhi	r2,1
    eca4:	10b68204 	addi	r2,r2,-9720
    eca8:	02c00284 	movi	r11,10
    ecac:	d8805215 	stw	r2,328(sp)
    ecb0:	dac05015 	stw	r11,320(sp)
    ecb4:	050000c4 	movi	r20,3
    ecb8:	003fb006 	br	eb7c <__alt_mem_epcs_flash_controller_0+0xff80db7c>
    ecbc:	a1400043 	ldbu	r5,1(r20)
    ecc0:	84000114 	ori	r16,r16,4
    ecc4:	a829883a 	mov	r20,r21
    ecc8:	2dc03fcc 	andi	r23,r5,255
    eccc:	003f0506 	br	e8e4 <__alt_mem_epcs_flash_controller_0+0xff80d8e4>
    ecd0:	e0800117 	ldw	r2,4(fp)
    ecd4:	202f883a 	mov	r23,r4
    ecd8:	0081640e 	bge	zero,r2,f26c <__ssvfiscanf_r+0xac0>
    ecdc:	02c00074 	movhi	r11,1
    ece0:	5af68204 	addi	r11,r11,-9720
    ece4:	dac05215 	stw	r11,328(sp)
    ece8:	02c00284 	movi	r11,10
    ecec:	dac05015 	stw	r11,320(sp)
    ecf0:	050000c4 	movi	r20,3
    ecf4:	003fa106 	br	eb7c <__alt_mem_epcs_flash_controller_0+0xff80db7c>
    ecf8:	e0800117 	ldw	r2,4(fp)
    ecfc:	202f883a 	mov	r23,r4
    ed00:	00812c0e 	bge	zero,r2,f1b4 <__ssvfiscanf_r+0xa08>
    ed04:	b800011e 	bne	r23,zero,ed0c <__ssvfiscanf_r+0x560>
    ed08:	05c00044 	movi	r23,1
    ed0c:	8080004c 	andi	r2,r16,1
    ed10:	1000791e 	bne	r2,zero,eef8 <__ssvfiscanf_r+0x74c>
    ed14:	8400040c 	andi	r16,r16,16
    ed18:	80013f26 	beq	r16,zero,f218 <__ssvfiscanf_r+0xa6c>
    ed1c:	0021883a 	mov	r16,zero
    ed20:	00000806 	br	ed44 <__ssvfiscanf_r+0x598>
    ed24:	1887883a 	add	r3,r3,r2
    ed28:	e00b883a 	mov	r5,fp
    ed2c:	8809883a 	mov	r4,r17
    ed30:	e0c00015 	stw	r3,0(fp)
    ed34:	80a1883a 	add	r16,r16,r2
    ed38:	b8afc83a 	sub	r23,r23,r2
    ed3c:	000e63c0 	call	e63c <__ssrefill_r>
    ed40:	1001331e 	bne	r2,zero,f210 <__ssvfiscanf_r+0xa64>
    ed44:	e0800117 	ldw	r2,4(fp)
    ed48:	e0c00017 	ldw	r3,0(fp)
    ed4c:	15fff516 	blt	r2,r23,ed24 <__alt_mem_epcs_flash_controller_0+0xff80dd24>
    ed50:	15c5c83a 	sub	r2,r2,r23
    ed54:	1dd5883a 	add	r10,r3,r23
    ed58:	85e1883a 	add	r16,r16,r23
    ed5c:	e0800115 	stw	r2,4(fp)
    ed60:	e2800015 	stw	r10,0(fp)
    ed64:	a829883a 	mov	r20,r21
    ed68:	9c27883a 	add	r19,r19,r16
    ed6c:	a00d883a 	mov	r6,r20
    ed70:	003ecd06 	br	e8a8 <__alt_mem_epcs_flash_controller_0+0xff80d8a8>
    ed74:	202f883a 	mov	r23,r4
    ed78:	a80b883a 	mov	r5,r21
    ed7c:	d9000104 	addi	r4,sp,4
    ed80:	000c0300 	call	c030 <__sccl>
    ed84:	1029883a 	mov	r20,r2
    ed88:	e0800117 	ldw	r2,4(fp)
    ed8c:	0081620e 	bge	zero,r2,f318 <__ssvfiscanf_r+0xb6c>
    ed90:	e1000017 	ldw	r4,0(fp)
    ed94:	20800003 	ldbu	r2,0(r4)
    ed98:	b8009026 	beq	r23,zero,efdc <__ssvfiscanf_r+0x830>
    ed9c:	8400040c 	andi	r16,r16,16
    eda0:	80009126 	beq	r16,zero,efe8 <__ssvfiscanf_r+0x83c>
    eda4:	b821883a 	mov	r16,r23
    eda8:	002b883a 	mov	r21,zero
    edac:	00000106 	br	edb4 <__ssvfiscanf_r+0x608>
    edb0:	20800003 	ldbu	r2,0(r4)
    edb4:	10803fcc 	andi	r2,r2,255
    edb8:	d8c00104 	addi	r3,sp,4
    edbc:	1885883a 	add	r2,r3,r2
    edc0:	10800007 	ldb	r2,0(r2)
    edc4:	10011026 	beq	r2,zero,f208 <__ssvfiscanf_r+0xa5c>
    edc8:	e0800117 	ldw	r2,4(fp)
    edcc:	21000044 	addi	r4,r4,1
    edd0:	ad400044 	addi	r21,r21,1
    edd4:	10bfffc4 	addi	r2,r2,-1
    edd8:	e0800115 	stw	r2,4(fp)
    eddc:	e1000015 	stw	r4,0(fp)
    ede0:	adc0eb26 	beq	r21,r23,f190 <__ssvfiscanf_r+0x9e4>
    ede4:	00bff216 	blt	zero,r2,edb0 <__alt_mem_epcs_flash_controller_0+0xff80ddb0>
    ede8:	e00b883a 	mov	r5,fp
    edec:	8809883a 	mov	r4,r17
    edf0:	000e63c0 	call	e63c <__ssrefill_r>
    edf4:	1000e51e 	bne	r2,zero,f18c <__ssvfiscanf_r+0x9e0>
    edf8:	e1000017 	ldw	r4,0(fp)
    edfc:	003fec06 	br	edb0 <__alt_mem_epcs_flash_controller_0+0xff80ddb0>
    ee00:	e0800117 	ldw	r2,4(fp)
    ee04:	202f883a 	mov	r23,r4
    ee08:	84000054 	ori	r16,r16,1
    ee0c:	0081170e 	bge	zero,r2,f26c <__ssvfiscanf_r+0xac0>
    ee10:	00c00074 	movhi	r3,1
    ee14:	18f68204 	addi	r3,r3,-9720
    ee18:	02c00284 	movi	r11,10
    ee1c:	d8c05215 	stw	r3,328(sp)
    ee20:	dac05015 	stw	r11,320(sp)
    ee24:	050000c4 	movi	r20,3
    ee28:	003f5406 	br	eb7c <__alt_mem_epcs_flash_controller_0+0xff80db7c>
    ee2c:	01400284 	movi	r5,10
    ee30:	d8c05a15 	stw	r3,360(sp)
    ee34:	d9c05915 	stw	r7,356(sp)
    ee38:	00024440 	call	2444 <__mulsi3>
    ee3c:	a1400043 	ldbu	r5,1(r20)
    ee40:	15c5883a 	add	r2,r2,r23
    ee44:	113ff404 	addi	r4,r2,-48
    ee48:	a829883a 	mov	r20,r21
    ee4c:	2dc03fcc 	andi	r23,r5,255
    ee50:	d8c05a17 	ldw	r3,360(sp)
    ee54:	d9c05917 	ldw	r7,356(sp)
    ee58:	003ea206 	br	e8e4 <__alt_mem_epcs_flash_controller_0+0xff80d8e4>
    ee5c:	e0800117 	ldw	r2,4(fp)
    ee60:	202f883a 	mov	r23,r4
    ee64:	84000054 	ori	r16,r16,1
    ee68:	00bf6c16 	blt	zero,r2,ec1c <__alt_mem_epcs_flash_controller_0+0xff80dc1c>
    ee6c:	e00b883a 	mov	r5,fp
    ee70:	8809883a 	mov	r4,r17
    ee74:	000e63c0 	call	e63c <__ssrefill_r>
    ee78:	1000bd1e 	bne	r2,zero,f170 <__ssvfiscanf_r+0x9c4>
    ee7c:	95800017 	ldw	r22,0(r18)
    ee80:	003f6606 	br	ec1c <__alt_mem_epcs_flash_controller_0+0xff80dc1c>
    ee84:	a1400043 	ldbu	r5,1(r20)
    ee88:	84000094 	ori	r16,r16,2
    ee8c:	a829883a 	mov	r20,r21
    ee90:	2dc03fcc 	andi	r23,r5,255
    ee94:	003e9306 	br	e8e4 <__alt_mem_epcs_flash_controller_0+0xff80d8e4>
    ee98:	e0800117 	ldw	r2,4(fp)
    ee9c:	202f883a 	mov	r23,r4
    eea0:	84008014 	ori	r16,r16,512
    eea4:	00bf5316 	blt	zero,r2,ebf4 <__alt_mem_epcs_flash_controller_0+0xff80dbf4>
    eea8:	e00b883a 	mov	r5,fp
    eeac:	8809883a 	mov	r4,r17
    eeb0:	000e63c0 	call	e63c <__ssrefill_r>
    eeb4:	1000ae1e 	bne	r2,zero,f170 <__ssvfiscanf_r+0x9c4>
    eeb8:	95800017 	ldw	r22,0(r18)
    eebc:	003f4d06 	br	ebf4 <__alt_mem_epcs_flash_controller_0+0xff80dbf4>
    eec0:	a1400043 	ldbu	r5,1(r20)
    eec4:	84000414 	ori	r16,r16,16
    eec8:	a829883a 	mov	r20,r21
    eecc:	2dc03fcc 	andi	r23,r5,255
    eed0:	003e8406 	br	e8e4 <__alt_mem_epcs_flash_controller_0+0xff80d8e4>
    eed4:	e0800117 	ldw	r2,4(fp)
    eed8:	202f883a 	mov	r23,r4
    eedc:	0081190e 	bge	zero,r2,f344 <__ssvfiscanf_r+0xb98>
    eee0:	00800074 	movhi	r2,1
    eee4:	10b68204 	addi	r2,r2,-9720
    eee8:	d8805215 	stw	r2,328(sp)
    eeec:	d8005015 	stw	zero,320(sp)
    eef0:	050000c4 	movi	r20,3
    eef4:	003f2106 	br	eb7c <__alt_mem_epcs_flash_controller_0+0xff80db7c>
    eef8:	d8c04b04 	addi	r3,sp,300
    eefc:	8400040c 	andi	r16,r16,16
    ef00:	01800204 	movi	r6,8
    ef04:	000b883a 	mov	r5,zero
    ef08:	1809883a 	mov	r4,r3
    ef0c:	dc005415 	stw	r16,336(sp)
    ef10:	d8c05315 	stw	r3,332(sp)
    ef14:	000a4c00 	call	a4c0 <memset>
    ef18:	dc005417 	ldw	r16,336(sp)
    ef1c:	8000a026 	beq	r16,zero,f1a0 <__ssvfiscanf_r+0x9f4>
    ef20:	002d883a 	mov	r22,zero
    ef24:	0021883a 	mov	r16,zero
    ef28:	0009dec0 	call	9dec <__locale_mb_cur_max>
    ef2c:	14009026 	beq	r2,r16,f170 <__ssvfiscanf_r+0x9c4>
    ef30:	e0800017 	ldw	r2,0(fp)
    ef34:	e0c00117 	ldw	r3,4(fp)
    ef38:	dac05317 	ldw	r11,332(sp)
    ef3c:	12000003 	ldbu	r8,0(r2)
    ef40:	18ffffc4 	addi	r3,r3,-1
    ef44:	10800044 	addi	r2,r2,1
    ef48:	d9004104 	addi	r4,sp,260
    ef4c:	e0c00115 	stw	r3,4(fp)
    ef50:	e0800015 	stw	r2,0(fp)
    ef54:	85000044 	addi	r20,r16,1
    ef58:	dac00015 	stw	r11,0(sp)
    ef5c:	2421883a 	add	r16,r4,r16
    ef60:	200d883a 	mov	r6,r4
    ef64:	a00f883a 	mov	r7,r20
    ef68:	b00b883a 	mov	r5,r22
    ef6c:	8809883a 	mov	r4,r17
    ef70:	82000005 	stb	r8,0(r16)
    ef74:	000a05c0 	call	a05c <_mbrtowc_r>
    ef78:	00ffffc4 	movi	r3,-1
    ef7c:	10c07c26 	beq	r2,r3,f170 <__ssvfiscanf_r+0x9c4>
    ef80:	1000911e 	bne	r2,zero,f1c8 <__ssvfiscanf_r+0xa1c>
    ef84:	dac05417 	ldw	r11,336(sp)
    ef88:	5800951e 	bne	r11,zero,f1e0 <__ssvfiscanf_r+0xa34>
    ef8c:	b0000015 	stw	zero,0(r22)
    ef90:	9d27883a 	add	r19,r19,r20
    ef94:	b8ef883a 	add	r23,r23,r3
    ef98:	b5800104 	addi	r22,r22,4
    ef9c:	e0800117 	ldw	r2,4(fp)
    efa0:	0021883a 	mov	r16,zero
    efa4:	00807c16 	blt	zero,r2,f198 <__ssvfiscanf_r+0x9ec>
    efa8:	e00b883a 	mov	r5,fp
    efac:	8809883a 	mov	r4,r17
    efb0:	000e63c0 	call	e63c <__ssrefill_r>
    efb4:	10007826 	beq	r2,zero,f198 <__ssvfiscanf_r+0x9ec>
    efb8:	80006d1e 	bne	r16,zero,f170 <__ssvfiscanf_r+0x9c4>
    efbc:	d8c05417 	ldw	r3,336(sp)
    efc0:	1800031e 	bne	r3,zero,efd0 <__ssvfiscanf_r+0x824>
    efc4:	dac05117 	ldw	r11,324(sp)
    efc8:	5ac00044 	addi	r11,r11,1
    efcc:	dac05115 	stw	r11,324(sp)
    efd0:	a829883a 	mov	r20,r21
    efd4:	a00d883a 	mov	r6,r20
    efd8:	003e3306 	br	e8a8 <__alt_mem_epcs_flash_controller_0+0xff80d8a8>
    efdc:	8400040c 	andi	r16,r16,16
    efe0:	05ffffc4 	movi	r23,-1
    efe4:	803f6f1e 	bne	r16,zero,eda4 <__alt_mem_epcs_flash_controller_0+0xff80dda4>
    efe8:	dac04f17 	ldw	r11,316(sp)
    efec:	babfffc4 	addi	r10,r23,-1
    eff0:	5d400017 	ldw	r21,0(r11)
    eff4:	5c000104 	addi	r16,r11,4
    eff8:	a807883a 	mov	r3,r21
    effc:	aaaf883a 	add	r23,r21,r10
    f000:	00000306 	br	f010 <__ssvfiscanf_r+0x864>
    f004:	e1000017 	ldw	r4,0(fp)
    f008:	b007883a 	mov	r3,r22
    f00c:	20800003 	ldbu	r2,0(r4)
    f010:	10803fcc 	andi	r2,r2,255
    f014:	d9400104 	addi	r5,sp,4
    f018:	2885883a 	add	r2,r5,r2
    f01c:	10800007 	ldb	r2,0(r2)
    f020:	10007726 	beq	r2,zero,f200 <__ssvfiscanf_r+0xa54>
    f024:	e0800117 	ldw	r2,4(fp)
    f028:	21400044 	addi	r5,r4,1
    f02c:	e1400015 	stw	r5,0(fp)
    f030:	10bfffc4 	addi	r2,r2,-1
    f034:	e0800115 	stw	r2,4(fp)
    f038:	20800003 	ldbu	r2,0(r4)
    f03c:	1d800044 	addi	r22,r3,1
    f040:	18800005 	stb	r2,0(r3)
    f044:	1dc00726 	beq	r3,r23,f064 <__ssvfiscanf_r+0x8b8>
    f048:	e0800117 	ldw	r2,4(fp)
    f04c:	00bfed16 	blt	zero,r2,f004 <__alt_mem_epcs_flash_controller_0+0xff80e004>
    f050:	e00b883a 	mov	r5,fp
    f054:	8809883a 	mov	r4,r17
    f058:	000e63c0 	call	e63c <__ssrefill_r>
    f05c:	103fe926 	beq	r2,zero,f004 <__alt_mem_epcs_flash_controller_0+0xff80e004>
    f060:	ad804326 	beq	r21,r22,f170 <__ssvfiscanf_r+0x9c4>
    f064:	b56bc83a 	sub	r21,r22,r21
    f068:	a83e1326 	beq	r21,zero,e8b8 <__alt_mem_epcs_flash_controller_0+0xff80d8b8>
    f06c:	dac05117 	ldw	r11,324(sp)
    f070:	b0000005 	stb	zero,0(r22)
    f074:	dc004f15 	stw	r16,316(sp)
    f078:	5ac00044 	addi	r11,r11,1
    f07c:	dac05115 	stw	r11,324(sp)
    f080:	9d67883a 	add	r19,r19,r21
    f084:	a00d883a 	mov	r6,r20
    f088:	003e0706 	br	e8a8 <__alt_mem_epcs_flash_controller_0+0xff80d8a8>
    f08c:	d8c04b04 	addi	r3,sp,300
    f090:	8400040c 	andi	r16,r16,16
    f094:	01800204 	movi	r6,8
    f098:	000b883a 	mov	r5,zero
    f09c:	1809883a 	mov	r4,r3
    f0a0:	d8c05315 	stw	r3,332(sp)
    f0a4:	000a4c00 	call	a4c0 <memset>
    f0a8:	8001eb1e 	bne	r16,zero,f858 <__ssvfiscanf_r+0x10ac>
    f0ac:	dac04f17 	ldw	r11,316(sp)
    f0b0:	5d800017 	ldw	r22,0(r11)
    f0b4:	5ac00104 	addi	r11,r11,4
    f0b8:	dac04f15 	stw	r11,316(sp)
    f0bc:	000d883a 	mov	r6,zero
    f0c0:	3029883a 	mov	r20,r6
    f0c4:	e0800017 	ldw	r2,0(fp)
    f0c8:	90c00017 	ldw	r3,0(r18)
    f0cc:	10800003 	ldbu	r2,0(r2)
    f0d0:	1885883a 	add	r2,r3,r2
    f0d4:	10800043 	ldbu	r2,1(r2)
    f0d8:	1080020c 	andi	r2,r2,8
    f0dc:	1001ce1e 	bne	r2,zero,f818 <__ssvfiscanf_r+0x106c>
    f0e0:	b801cd26 	beq	r23,zero,f818 <__ssvfiscanf_r+0x106c>
    f0e4:	0009dec0 	call	9dec <__locale_mb_cur_max>
    f0e8:	a0802126 	beq	r20,r2,f170 <__ssvfiscanf_r+0x9c4>
    f0ec:	e0800017 	ldw	r2,0(fp)
    f0f0:	e1000117 	ldw	r4,4(fp)
    f0f4:	dac05317 	ldw	r11,332(sp)
    f0f8:	12000003 	ldbu	r8,0(r2)
    f0fc:	213fffc4 	addi	r4,r4,-1
    f100:	10800044 	addi	r2,r2,1
    f104:	e1000115 	stw	r4,4(fp)
    f108:	d9404104 	addi	r5,sp,260
    f10c:	e0800015 	stw	r2,0(fp)
    f110:	a0c00044 	addi	r3,r20,1
    f114:	dac00015 	stw	r11,0(sp)
    f118:	2d29883a 	add	r20,r5,r20
    f11c:	180f883a 	mov	r7,r3
    f120:	280d883a 	mov	r6,r5
    f124:	8809883a 	mov	r4,r17
    f128:	a2000005 	stb	r8,0(r20)
    f12c:	b00b883a 	mov	r5,r22
    f130:	d8c05a15 	stw	r3,360(sp)
    f134:	000a05c0 	call	a05c <_mbrtowc_r>
    f138:	013fffc4 	movi	r4,-1
    f13c:	d8c05a17 	ldw	r3,360(sp)
    f140:	11000b26 	beq	r2,r4,f170 <__ssvfiscanf_r+0x9c4>
    f144:	1001a226 	beq	r2,zero,f7d0 <__ssvfiscanf_r+0x1024>
    f148:	017fff84 	movi	r5,-2
    f14c:	1829883a 	mov	r20,r3
    f150:	1141e51e 	bne	r2,r5,f8e8 <__ssvfiscanf_r+0x113c>
    f154:	e0800117 	ldw	r2,4(fp)
    f158:	00bfda16 	blt	zero,r2,f0c4 <__alt_mem_epcs_flash_controller_0+0xff80e0c4>
    f15c:	e00b883a 	mov	r5,fp
    f160:	8809883a 	mov	r4,r17
    f164:	000e63c0 	call	e63c <__ssrefill_r>
    f168:	103fd626 	beq	r2,zero,f0c4 <__alt_mem_epcs_flash_controller_0+0xff80e0c4>
    f16c:	a001aa26 	beq	r20,zero,f818 <__ssvfiscanf_r+0x106c>
    f170:	dac05117 	ldw	r11,324(sp)
    f174:	583e6b26 	beq	r11,zero,eb24 <__alt_mem_epcs_flash_controller_0+0xff80db24>
    f178:	e080030b 	ldhu	r2,12(fp)
    f17c:	1080100c 	andi	r2,r2,64
    f180:	103e681e 	bne	r2,zero,eb24 <__alt_mem_epcs_flash_controller_0+0xff80db24>
    f184:	5805883a 	mov	r2,r11
    f188:	003e6706 	br	eb28 <__alt_mem_epcs_flash_controller_0+0xff80db28>
    f18c:	a821883a 	mov	r16,r21
    f190:	802b883a 	mov	r21,r16
    f194:	003fba06 	br	f080 <__alt_mem_epcs_flash_controller_0+0xff80e080>
    f198:	b83f631e 	bne	r23,zero,ef28 <__alt_mem_epcs_flash_controller_0+0xff80df28>
    f19c:	003f8706 	br	efbc <__alt_mem_epcs_flash_controller_0+0xff80dfbc>
    f1a0:	dac04f17 	ldw	r11,316(sp)
    f1a4:	5d800017 	ldw	r22,0(r11)
    f1a8:	5ac00104 	addi	r11,r11,4
    f1ac:	dac04f15 	stw	r11,316(sp)
    f1b0:	003f5c06 	br	ef24 <__alt_mem_epcs_flash_controller_0+0xff80df24>
    f1b4:	e00b883a 	mov	r5,fp
    f1b8:	8809883a 	mov	r4,r17
    f1bc:	000e63c0 	call	e63c <__ssrefill_r>
    f1c0:	103ed026 	beq	r2,zero,ed04 <__alt_mem_epcs_flash_controller_0+0xff80dd04>
    f1c4:	003fea06 	br	f170 <__alt_mem_epcs_flash_controller_0+0xff80e170>
    f1c8:	00ffff84 	movi	r3,-2
    f1cc:	10c0071e 	bne	r2,r3,f1ec <__ssvfiscanf_r+0xa40>
    f1d0:	e0800117 	ldw	r2,4(fp)
    f1d4:	a021883a 	mov	r16,r20
    f1d8:	00bf5316 	blt	zero,r2,ef28 <__alt_mem_epcs_flash_controller_0+0xff80df28>
    f1dc:	003f7206 	br	efa8 <__alt_mem_epcs_flash_controller_0+0xff80dfa8>
    f1e0:	9d27883a 	add	r19,r19,r20
    f1e4:	bdffffc4 	addi	r23,r23,-1
    f1e8:	003f6c06 	br	ef9c <__alt_mem_epcs_flash_controller_0+0xff80df9c>
    f1ec:	dac05417 	ldw	r11,336(sp)
    f1f0:	9d27883a 	add	r19,r19,r20
    f1f4:	bdffffc4 	addi	r23,r23,-1
    f1f8:	583f6726 	beq	r11,zero,ef98 <__alt_mem_epcs_flash_controller_0+0xff80df98>
    f1fc:	003f6706 	br	ef9c <__alt_mem_epcs_flash_controller_0+0xff80df9c>
    f200:	182d883a 	mov	r22,r3
    f204:	003f9706 	br	f064 <__alt_mem_epcs_flash_controller_0+0xff80e064>
    f208:	a83f9d1e 	bne	r21,zero,f080 <__alt_mem_epcs_flash_controller_0+0xff80e080>
    f20c:	003daa06 	br	e8b8 <__alt_mem_epcs_flash_controller_0+0xff80d8b8>
    f210:	803ed41e 	bne	r16,zero,ed64 <__alt_mem_epcs_flash_controller_0+0xff80dd64>
    f214:	003fd606 	br	f170 <__alt_mem_epcs_flash_controller_0+0xff80e170>
    f218:	dac04f17 	ldw	r11,316(sp)
    f21c:	df000015 	stw	fp,0(sp)
    f220:	b80f883a 	mov	r7,r23
    f224:	59400017 	ldw	r5,0(r11)
    f228:	01800044 	movi	r6,1
    f22c:	8809883a 	mov	r4,r17
    f230:	000e6ac0 	call	e6ac <_sfread_r>
    f234:	dac04f17 	ldw	r11,316(sp)
    f238:	58c00104 	addi	r3,r11,4
    f23c:	103fcc26 	beq	r2,zero,f170 <__alt_mem_epcs_flash_controller_0+0xff80e170>
    f240:	dac05117 	ldw	r11,324(sp)
    f244:	a829883a 	mov	r20,r21
    f248:	98a7883a 	add	r19,r19,r2
    f24c:	5ac00044 	addi	r11,r11,1
    f250:	dac05115 	stw	r11,324(sp)
    f254:	d8c04f15 	stw	r3,316(sp)
    f258:	a00d883a 	mov	r6,r20
    f25c:	003d9206 	br	e8a8 <__alt_mem_epcs_flash_controller_0+0xff80d8a8>
    f260:	e0800117 	ldw	r2,4(fp)
    f264:	80e0b03a 	or	r16,r16,r3
    f268:	00be8d16 	blt	zero,r2,eca0 <__alt_mem_epcs_flash_controller_0+0xff80dca0>
    f26c:	e00b883a 	mov	r5,fp
    f270:	8809883a 	mov	r4,r17
    f274:	000e63c0 	call	e63c <__ssrefill_r>
    f278:	103fbd1e 	bne	r2,zero,f170 <__alt_mem_epcs_flash_controller_0+0xff80e170>
    f27c:	95800017 	ldw	r22,0(r18)
    f280:	003e8706 	br	eca0 <__alt_mem_epcs_flash_controller_0+0xff80dca0>
    f284:	e00b883a 	mov	r5,fp
    f288:	8809883a 	mov	r4,r17
    f28c:	000e63c0 	call	e63c <__ssrefill_r>
    f290:	103e1826 	beq	r2,zero,eaf4 <__alt_mem_epcs_flash_controller_0+0xff80daf4>
    f294:	003fb606 	br	f170 <__alt_mem_epcs_flash_controller_0+0xff80e170>
    f298:	a1400083 	ldbu	r5,2(r20)
    f29c:	84000094 	ori	r16,r16,2
    f2a0:	a5000084 	addi	r20,r20,2
    f2a4:	2dc03fcc 	andi	r23,r5,255
    f2a8:	003d8e06 	br	e8e4 <__alt_mem_epcs_flash_controller_0+0xff80d8e4>
    f2ac:	8080004c 	andi	r2,r16,1
    f2b0:	10000b1e 	bne	r2,zero,f2e0 <__ssvfiscanf_r+0xb34>
    f2b4:	8400008c 	andi	r16,r16,2
    f2b8:	80000926 	beq	r16,zero,f2e0 <__ssvfiscanf_r+0xb34>
    f2bc:	dac04f17 	ldw	r11,316(sp)
    f2c0:	9807d7fa 	srai	r3,r19,31
    f2c4:	a829883a 	mov	r20,r21
    f2c8:	58800017 	ldw	r2,0(r11)
    f2cc:	5ac00104 	addi	r11,r11,4
    f2d0:	dac04f15 	stw	r11,316(sp)
    f2d4:	14c00015 	stw	r19,0(r2)
    f2d8:	10c00115 	stw	r3,4(r2)
    f2dc:	003d7106 	br	e8a4 <__alt_mem_epcs_flash_controller_0+0xff80d8a4>
    f2e0:	dac04f17 	ldw	r11,316(sp)
    f2e4:	a829883a 	mov	r20,r21
    f2e8:	58800017 	ldw	r2,0(r11)
    f2ec:	5ac00104 	addi	r11,r11,4
    f2f0:	dac04f15 	stw	r11,316(sp)
    f2f4:	14c00015 	stw	r19,0(r2)
    f2f8:	003d6a06 	br	e8a4 <__alt_mem_epcs_flash_controller_0+0xff80d8a4>
    f2fc:	e00b883a 	mov	r5,fp
    f300:	8809883a 	mov	r4,r17
    f304:	000e63c0 	call	e63c <__ssrefill_r>
    f308:	103f991e 	bne	r2,zero,f170 <__alt_mem_epcs_flash_controller_0+0xff80e170>
    f30c:	95800017 	ldw	r22,0(r18)
    f310:	05000084 	movi	r20,2
    f314:	003e1906 	br	eb7c <__alt_mem_epcs_flash_controller_0+0xff80db7c>
    f318:	e00b883a 	mov	r5,fp
    f31c:	8809883a 	mov	r4,r17
    f320:	000e63c0 	call	e63c <__ssrefill_r>
    f324:	103e9a26 	beq	r2,zero,ed90 <__alt_mem_epcs_flash_controller_0+0xff80dd90>
    f328:	003f9106 	br	f170 <__alt_mem_epcs_flash_controller_0+0xff80e170>
    f32c:	e00b883a 	mov	r5,fp
    f330:	8809883a 	mov	r4,r17
    f334:	000e63c0 	call	e63c <__ssrefill_r>
    f338:	103f8d1e 	bne	r2,zero,f170 <__alt_mem_epcs_flash_controller_0+0xff80e170>
    f33c:	95800017 	ldw	r22,0(r18)
    f340:	003e0806 	br	eb64 <__alt_mem_epcs_flash_controller_0+0xff80db64>
    f344:	e00b883a 	mov	r5,fp
    f348:	8809883a 	mov	r4,r17
    f34c:	000e63c0 	call	e63c <__ssrefill_r>
    f350:	103f871e 	bne	r2,zero,f170 <__alt_mem_epcs_flash_controller_0+0xff80e170>
    f354:	95800017 	ldw	r22,0(r18)
    f358:	003ee106 	br	eee0 <__alt_mem_epcs_flash_controller_0+0xff80dee0>
    f35c:	014000c4 	movi	r5,3
    f360:	a140ae1e 	bne	r20,r5,f61c <__ssvfiscanf_r+0xe70>
    f364:	b8ffffc4 	addi	r3,r23,-1
    f368:	01400984 	movi	r5,38
    f36c:	28c0d82e 	bgeu	r5,r3,f6d0 <__ssvfiscanf_r+0xf24>
    f370:	b9bff644 	addi	r6,r23,-39
    f374:	05c009c4 	movi	r23,39
    f378:	85836014 	ori	r22,r16,3456
    f37c:	0021883a 	mov	r16,zero
    f380:	a815883a 	mov	r10,r21
    f384:	982b883a 	mov	r21,r19
    f388:	8027883a 	mov	r19,r16
    f38c:	dc005017 	ldw	r16,320(sp)
    f390:	dd004104 	addi	r20,sp,260
    f394:	02401344 	movi	r9,77
    f398:	01c08004 	movi	r7,512
    f39c:	00ff7fc4 	movi	r3,-513
    f3a0:	023fdfc4 	movi	r8,-129
    f3a4:	217ff544 	addi	r5,r4,-43
    f3a8:	29403fcc 	andi	r5,r5,255
    f3ac:	49408836 	bltu	r9,r5,f5d0 <__ssvfiscanf_r+0xe24>
    f3b0:	280a90ba 	slli	r5,r5,2
    f3b4:	02c00074 	movhi	r11,1
    f3b8:	5afcf204 	addi	r11,r11,-3128
    f3bc:	2acb883a 	add	r5,r5,r11
    f3c0:	29400017 	ldw	r5,0(r5)
    f3c4:	2800683a 	jmp	r5
    f3c8:	0000f55c 	xori	zero,zero,981
    f3cc:	0000f5d0 	cmplti	zero,zero,983
    f3d0:	0000f55c 	xori	zero,zero,981
    f3d4:	0000f5d0 	cmplti	zero,zero,983
    f3d8:	0000f5d0 	cmplti	zero,zero,983
    f3dc:	0000f58c 	andi	zero,zero,982
    f3e0:	0000f56c 	andhi	zero,zero,981
    f3e4:	0000f56c 	andhi	zero,zero,981
    f3e8:	0000f56c 	andhi	zero,zero,981
    f3ec:	0000f56c 	andhi	zero,zero,981
    f3f0:	0000f56c 	andhi	zero,zero,981
    f3f4:	0000f56c 	andhi	zero,zero,981
    f3f8:	0000f56c 	andhi	zero,zero,981
    f3fc:	0000f5b4 	movhi	zero,982
    f400:	0000f5b4 	movhi	zero,982
    f404:	0000f5d0 	cmplti	zero,zero,983
    f408:	0000f5d0 	cmplti	zero,zero,983
    f40c:	0000f5d0 	cmplti	zero,zero,983
    f410:	0000f5d0 	cmplti	zero,zero,983
    f414:	0000f5d0 	cmplti	zero,zero,983
    f418:	0000f5d0 	cmplti	zero,zero,983
    f41c:	0000f5d0 	cmplti	zero,zero,983
    f420:	0000f548 	cmpgei	zero,zero,981
    f424:	0000f548 	cmpgei	zero,zero,981
    f428:	0000f548 	cmpgei	zero,zero,981
    f42c:	0000f548 	cmpgei	zero,zero,981
    f430:	0000f548 	cmpgei	zero,zero,981
    f434:	0000f548 	cmpgei	zero,zero,981
    f438:	0000f5d0 	cmplti	zero,zero,983
    f43c:	0000f5d0 	cmplti	zero,zero,983
    f440:	0000f5d0 	cmplti	zero,zero,983
    f444:	0000f5d0 	cmplti	zero,zero,983
    f448:	0000f5d0 	cmplti	zero,zero,983
    f44c:	0000f5d0 	cmplti	zero,zero,983
    f450:	0000f5d0 	cmplti	zero,zero,983
    f454:	0000f5d0 	cmplti	zero,zero,983
    f458:	0000f5d0 	cmplti	zero,zero,983
    f45c:	0000f5d0 	cmplti	zero,zero,983
    f460:	0000f5d0 	cmplti	zero,zero,983
    f464:	0000f5d0 	cmplti	zero,zero,983
    f468:	0000f5d0 	cmplti	zero,zero,983
    f46c:	0000f5d0 	cmplti	zero,zero,983
    f470:	0000f5d0 	cmplti	zero,zero,983
    f474:	0000f5d0 	cmplti	zero,zero,983
    f478:	0000f5d0 	cmplti	zero,zero,983
    f47c:	0000f500 	call	f50 <FlashTestBlockWrite>
    f480:	0000f5d0 	cmplti	zero,zero,983
    f484:	0000f5d0 	cmplti	zero,zero,983
    f488:	0000f5d0 	cmplti	zero,zero,983
    f48c:	0000f5d0 	cmplti	zero,zero,983
    f490:	0000f5d0 	cmplti	zero,zero,983
    f494:	0000f5d0 	cmplti	zero,zero,983
    f498:	0000f5d0 	cmplti	zero,zero,983
    f49c:	0000f5d0 	cmplti	zero,zero,983
    f4a0:	0000f548 	cmpgei	zero,zero,981
    f4a4:	0000f548 	cmpgei	zero,zero,981
    f4a8:	0000f548 	cmpgei	zero,zero,981
    f4ac:	0000f548 	cmpgei	zero,zero,981
    f4b0:	0000f548 	cmpgei	zero,zero,981
    f4b4:	0000f548 	cmpgei	zero,zero,981
    f4b8:	0000f5d0 	cmplti	zero,zero,983
    f4bc:	0000f5d0 	cmplti	zero,zero,983
    f4c0:	0000f5d0 	cmplti	zero,zero,983
    f4c4:	0000f5d0 	cmplti	zero,zero,983
    f4c8:	0000f5d0 	cmplti	zero,zero,983
    f4cc:	0000f5d0 	cmplti	zero,zero,983
    f4d0:	0000f5d0 	cmplti	zero,zero,983
    f4d4:	0000f5d0 	cmplti	zero,zero,983
    f4d8:	0000f5d0 	cmplti	zero,zero,983
    f4dc:	0000f5d0 	cmplti	zero,zero,983
    f4e0:	0000f5d0 	cmplti	zero,zero,983
    f4e4:	0000f5d0 	cmplti	zero,zero,983
    f4e8:	0000f5d0 	cmplti	zero,zero,983
    f4ec:	0000f5d0 	cmplti	zero,zero,983
    f4f0:	0000f5d0 	cmplti	zero,zero,983
    f4f4:	0000f5d0 	cmplti	zero,zero,983
    f4f8:	0000f5d0 	cmplti	zero,zero,983
    f4fc:	0000f500 	call	f50 <FlashTestBlockWrite>
    f500:	b141800c 	andi	r5,r22,1536
    f504:	29c0321e 	bne	r5,r7,f5d0 <__ssvfiscanf_r+0xe24>
    f508:	b0ec703a 	and	r22,r22,r3
    f50c:	b5814014 	ori	r22,r22,1280
    f510:	04000404 	movi	r16,16
    f514:	a1000005 	stb	r4,0(r20)
    f518:	a5000044 	addi	r20,r20,1
    f51c:	e1000117 	ldw	r4,4(fp)
    f520:	213fffc4 	addi	r4,r4,-1
    f524:	e1000115 	stw	r4,4(fp)
    f528:	0100580e 	bge	zero,r4,f68c <__ssvfiscanf_r+0xee0>
    f52c:	10800044 	addi	r2,r2,1
    f530:	e0800015 	stw	r2,0(fp)
    f534:	bdffffc4 	addi	r23,r23,-1
    f538:	b8002526 	beq	r23,zero,f5d0 <__ssvfiscanf_r+0xe24>
    f53c:	e0800017 	ldw	r2,0(fp)
    f540:	11000003 	ldbu	r4,0(r2)
    f544:	003f9706 	br	f3a4 <__alt_mem_epcs_flash_controller_0+0xff80e3a4>
    f548:	01400284 	movi	r5,10
    f54c:	2c00200e 	bge	r5,r16,f5d0 <__ssvfiscanf_r+0xe24>
    f550:	017d1fc4 	movi	r5,-2945
    f554:	b16c703a 	and	r22,r22,r5
    f558:	003fee06 	br	f514 <__alt_mem_epcs_flash_controller_0+0xff80e514>
    f55c:	b140200c 	andi	r5,r22,128
    f560:	28001b26 	beq	r5,zero,f5d0 <__ssvfiscanf_r+0xe24>
    f564:	b22c703a 	and	r22,r22,r8
    f568:	003fea06 	br	f514 <__alt_mem_epcs_flash_controller_0+0xff80e514>
    f56c:	02c000b4 	movhi	r11,2
    f570:	8421883a 	add	r16,r16,r16
    f574:	5af88704 	addi	r11,r11,-7652
    f578:	5c0b883a 	add	r5,r11,r16
    f57c:	2c00000f 	ldh	r16,0(r5)
    f580:	017d1fc4 	movi	r5,-2945
    f584:	b16c703a 	and	r22,r22,r5
    f588:	003fe206 	br	f514 <__alt_mem_epcs_flash_controller_0+0xff80e514>
    f58c:	b142000c 	andi	r5,r22,2048
    f590:	283fe026 	beq	r5,zero,f514 <__alt_mem_epcs_flash_controller_0+0xff80e514>
    f594:	8000021e 	bne	r16,zero,f5a0 <__ssvfiscanf_r+0xdf4>
    f598:	b5808014 	ori	r22,r22,512
    f59c:	04000204 	movi	r16,8
    f5a0:	b141000c 	andi	r5,r22,1024
    f5a4:	28009f26 	beq	r5,zero,f824 <__ssvfiscanf_r+0x1078>
    f5a8:	017e9fc4 	movi	r5,-1409
    f5ac:	b16c703a 	and	r22,r22,r5
    f5b0:	003fd806 	br	f514 <__alt_mem_epcs_flash_controller_0+0xff80e514>
    f5b4:	02c000b4 	movhi	r11,2
    f5b8:	8421883a 	add	r16,r16,r16
    f5bc:	5af88704 	addi	r11,r11,-7652
    f5c0:	5c0b883a 	add	r5,r11,r16
    f5c4:	2c00000f 	ldh	r16,0(r5)
    f5c8:	01400204 	movi	r5,8
    f5cc:	2c3fe016 	blt	r5,r16,f550 <__alt_mem_epcs_flash_controller_0+0xff80e550>
    f5d0:	dc005015 	stw	r16,320(sp)
    f5d4:	b080400c 	andi	r2,r22,256
    f5d8:	9821883a 	mov	r16,r19
    f5dc:	a827883a 	mov	r19,r21
    f5e0:	502b883a 	mov	r21,r10
    f5e4:	10000426 	beq	r2,zero,f5f8 <__ssvfiscanf_r+0xe4c>
    f5e8:	dac04e17 	ldw	r11,312(sp)
    f5ec:	5d009c36 	bltu	r11,r20,f860 <__ssvfiscanf_r+0x10b4>
    f5f0:	dac04e17 	ldw	r11,312(sp)
    f5f4:	a2fcb026 	beq	r20,r11,e8b8 <__alt_mem_epcs_flash_controller_0+0xff80d8b8>
    f5f8:	b080040c 	andi	r2,r22,16
    f5fc:	10006026 	beq	r2,zero,f780 <__ssvfiscanf_r+0xfd4>
    f600:	dac04e17 	ldw	r11,312(sp)
    f604:	a2e9c83a 	sub	r20,r20,r11
    f608:	a429883a 	add	r20,r20,r16
    f60c:	9d27883a 	add	r19,r19,r20
    f610:	a829883a 	mov	r20,r21
    f614:	a00d883a 	mov	r6,r20
    f618:	003ca306 	br	e8a8 <__alt_mem_epcs_flash_controller_0+0xff80d8a8>
    f61c:	b800011e 	bne	r23,zero,f624 <__ssvfiscanf_r+0xe78>
    f620:	05ffffc4 	movi	r23,-1
    f624:	8100004c 	andi	r4,r16,1
    f628:	203e981e 	bne	r4,zero,f08c <__alt_mem_epcs_flash_controller_0+0xff80e08c>
    f62c:	8400040c 	andi	r16,r16,16
    f630:	80002926 	beq	r16,zero,f6d8 <__ssvfiscanf_r+0xf2c>
    f634:	0021883a 	mov	r16,zero
    f638:	00000306 	br	f648 <__ssvfiscanf_r+0xe9c>
    f63c:	10c00003 	ldbu	r3,0(r2)
    f640:	b0c7883a 	add	r3,r22,r3
    f644:	18c00043 	ldbu	r3,1(r3)
    f648:	18c0020c 	andi	r3,r3,8
    f64c:	183dc51e 	bne	r3,zero,ed64 <__alt_mem_epcs_flash_controller_0+0xff80dd64>
    f650:	e0c00117 	ldw	r3,4(fp)
    f654:	10800044 	addi	r2,r2,1
    f658:	84000044 	addi	r16,r16,1
    f65c:	18ffffc4 	addi	r3,r3,-1
    f660:	e0c00115 	stw	r3,4(fp)
    f664:	e0800015 	stw	r2,0(fp)
    f668:	85fdbe26 	beq	r16,r23,ed64 <__alt_mem_epcs_flash_controller_0+0xff80dd64>
    f66c:	00fff316 	blt	zero,r3,f63c <__alt_mem_epcs_flash_controller_0+0xff80e63c>
    f670:	e00b883a 	mov	r5,fp
    f674:	8809883a 	mov	r4,r17
    f678:	000e63c0 	call	e63c <__ssrefill_r>
    f67c:	103db91e 	bne	r2,zero,ed64 <__alt_mem_epcs_flash_controller_0+0xff80dd64>
    f680:	95800017 	ldw	r22,0(r18)
    f684:	e0800017 	ldw	r2,0(fp)
    f688:	003fec06 	br	f63c <__alt_mem_epcs_flash_controller_0+0xff80e63c>
    f68c:	e00b883a 	mov	r5,fp
    f690:	8809883a 	mov	r4,r17
    f694:	d8c05a15 	stw	r3,360(sp)
    f698:	d9805715 	stw	r6,348(sp)
    f69c:	d9c05915 	stw	r7,356(sp)
    f6a0:	da005615 	stw	r8,344(sp)
    f6a4:	da405515 	stw	r9,340(sp)
    f6a8:	da805815 	stw	r10,352(sp)
    f6ac:	000e63c0 	call	e63c <__ssrefill_r>
    f6b0:	d8c05a17 	ldw	r3,360(sp)
    f6b4:	d9805717 	ldw	r6,348(sp)
    f6b8:	d9c05917 	ldw	r7,356(sp)
    f6bc:	da005617 	ldw	r8,344(sp)
    f6c0:	da405517 	ldw	r9,340(sp)
    f6c4:	da805817 	ldw	r10,352(sp)
    f6c8:	103f9a26 	beq	r2,zero,f534 <__alt_mem_epcs_flash_controller_0+0xff80e534>
    f6cc:	003fc006 	br	f5d0 <__alt_mem_epcs_flash_controller_0+0xff80e5d0>
    f6d0:	000d883a 	mov	r6,zero
    f6d4:	003f2806 	br	f378 <__alt_mem_epcs_flash_controller_0+0xff80e378>
    f6d8:	dac04f17 	ldw	r11,316(sp)
    f6dc:	babfffc4 	addi	r10,r23,-1
    f6e0:	5d000017 	ldw	r20,0(r11)
    f6e4:	5c000104 	addi	r16,r11,4
    f6e8:	a00b883a 	mov	r5,r20
    f6ec:	a2ad883a 	add	r22,r20,r10
    f6f0:	00000606 	br	f70c <__ssvfiscanf_r+0xf60>
    f6f4:	e0800017 	ldw	r2,0(fp)
    f6f8:	91000017 	ldw	r4,0(r18)
    f6fc:	b80b883a 	mov	r5,r23
    f700:	10c00003 	ldbu	r3,0(r2)
    f704:	20c7883a 	add	r3,r4,r3
    f708:	18c00043 	ldbu	r3,1(r3)
    f70c:	18c0020c 	andi	r3,r3,8
    f710:	2809883a 	mov	r4,r5
    f714:	1800101e 	bne	r3,zero,f758 <__ssvfiscanf_r+0xfac>
    f718:	e0c00117 	ldw	r3,4(fp)
    f71c:	11800044 	addi	r6,r2,1
    f720:	e1800015 	stw	r6,0(fp)
    f724:	18ffffc4 	addi	r3,r3,-1
    f728:	e0c00115 	stw	r3,4(fp)
    f72c:	10800003 	ldbu	r2,0(r2)
    f730:	25c00044 	addi	r23,r4,1
    f734:	28800005 	stb	r2,0(r5)
    f738:	25800626 	beq	r4,r22,f754 <__ssvfiscanf_r+0xfa8>
    f73c:	e0800117 	ldw	r2,4(fp)
    f740:	00bfec16 	blt	zero,r2,f6f4 <__alt_mem_epcs_flash_controller_0+0xff80e6f4>
    f744:	e00b883a 	mov	r5,fp
    f748:	8809883a 	mov	r4,r17
    f74c:	000e63c0 	call	e63c <__ssrefill_r>
    f750:	103fe826 	beq	r2,zero,f6f4 <__alt_mem_epcs_flash_controller_0+0xff80e6f4>
    f754:	b809883a 	mov	r4,r23
    f758:	dac05117 	ldw	r11,324(sp)
    f75c:	2529c83a 	sub	r20,r4,r20
    f760:	9d27883a 	add	r19,r19,r20
    f764:	5ac00044 	addi	r11,r11,1
    f768:	a829883a 	mov	r20,r21
    f76c:	20000005 	stb	zero,0(r4)
    f770:	dac05115 	stw	r11,324(sp)
    f774:	dc004f15 	stw	r16,316(sp)
    f778:	a00d883a 	mov	r6,r20
    f77c:	003c4a06 	br	e8a8 <__alt_mem_epcs_flash_controller_0+0xff80d8a8>
    f780:	d9c05017 	ldw	r7,320(sp)
    f784:	dac05217 	ldw	r11,328(sp)
    f788:	000d883a 	mov	r6,zero
    f78c:	d9404104 	addi	r5,sp,260
    f790:	8809883a 	mov	r4,r17
    f794:	a0000005 	stb	zero,0(r20)
    f798:	583ee83a 	callr	r11
    f79c:	b0c0080c 	andi	r3,r22,32
    f7a0:	1800271e 	bne	r3,zero,f840 <__ssvfiscanf_r+0x1094>
    f7a4:	b0c0010c 	andi	r3,r22,4
    f7a8:	18003326 	beq	r3,zero,f878 <__ssvfiscanf_r+0x10cc>
    f7ac:	dac04f17 	ldw	r11,316(sp)
    f7b0:	58c00017 	ldw	r3,0(r11)
    f7b4:	5ac00104 	addi	r11,r11,4
    f7b8:	dac04f15 	stw	r11,316(sp)
    f7bc:	1880000d 	sth	r2,0(r3)
    f7c0:	dac05117 	ldw	r11,324(sp)
    f7c4:	5ac00044 	addi	r11,r11,1
    f7c8:	dac05115 	stw	r11,324(sp)
    f7cc:	003f8c06 	br	f600 <__alt_mem_epcs_flash_controller_0+0xff80e600>
    f7d0:	b0000015 	stw	zero,0(r22)
    f7d4:	0009883a 	mov	r4,zero
    f7d8:	d8c05a15 	stw	r3,360(sp)
    f7dc:	0009d340 	call	9d34 <iswspace>
    f7e0:	d8c05a17 	ldw	r3,360(sp)
    f7e4:	10003826 	beq	r2,zero,f8c8 <__ssvfiscanf_r+0x111c>
    f7e8:	18000b26 	beq	r3,zero,f818 <__ssvfiscanf_r+0x106c>
    f7ec:	1d3fffc4 	addi	r20,r3,-1
    f7f0:	dac04104 	addi	r11,sp,260
    f7f4:	5d2f883a 	add	r23,r11,r20
    f7f8:	00000106 	br	f800 <__ssvfiscanf_r+0x1054>
    f7fc:	a53fffc4 	addi	r20,r20,-1
    f800:	b9400003 	ldbu	r5,0(r23)
    f804:	e00d883a 	mov	r6,fp
    f808:	8809883a 	mov	r4,r17
    f80c:	000e5340 	call	e534 <_sungetc_r>
    f810:	bdffffc4 	addi	r23,r23,-1
    f814:	a03ff91e 	bne	r20,zero,f7fc <__alt_mem_epcs_flash_controller_0+0xff80e7fc>
    f818:	803ded1e 	bne	r16,zero,efd0 <__alt_mem_epcs_flash_controller_0+0xff80dfd0>
    f81c:	b0000015 	stw	zero,0(r22)
    f820:	003de806 	br	efc4 <__alt_mem_epcs_flash_controller_0+0xff80dfc4>
    f824:	013f1fc4 	movi	r4,-897
    f828:	b12c703a 	and	r22,r22,r4
    f82c:	30000226 	beq	r6,zero,f838 <__ssvfiscanf_r+0x108c>
    f830:	31bfffc4 	addi	r6,r6,-1
    f834:	bdc00044 	addi	r23,r23,1
    f838:	9cc00044 	addi	r19,r19,1
    f83c:	003f3706 	br	f51c <__alt_mem_epcs_flash_controller_0+0xff80e51c>
    f840:	dac04f17 	ldw	r11,316(sp)
    f844:	58c00017 	ldw	r3,0(r11)
    f848:	5ac00104 	addi	r11,r11,4
    f84c:	dac04f15 	stw	r11,316(sp)
    f850:	18800015 	stw	r2,0(r3)
    f854:	003fda06 	br	f7c0 <__alt_mem_epcs_flash_controller_0+0xff80e7c0>
    f858:	dd804d04 	addi	r22,sp,308
    f85c:	003e1706 	br	f0bc <__alt_mem_epcs_flash_controller_0+0xff80e0bc>
    f860:	a17fffc7 	ldb	r5,-1(r20)
    f864:	e00d883a 	mov	r6,fp
    f868:	8809883a 	mov	r4,r17
    f86c:	a53fffc4 	addi	r20,r20,-1
    f870:	000e5340 	call	e534 <_sungetc_r>
    f874:	003f5e06 	br	f5f0 <__alt_mem_epcs_flash_controller_0+0xff80e5f0>
    f878:	b0c0004c 	andi	r3,r22,1
    f87c:	183ff01e 	bne	r3,zero,f840 <__alt_mem_epcs_flash_controller_0+0xff80e840>
    f880:	b580008c 	andi	r22,r22,2
    f884:	b03fee26 	beq	r22,zero,f840 <__alt_mem_epcs_flash_controller_0+0xff80e840>
    f888:	dac05217 	ldw	r11,328(sp)
    f88c:	00800074 	movhi	r2,1
    f890:	10b7e004 	addi	r2,r2,-8320
    f894:	d9c05017 	ldw	r7,320(sp)
    f898:	000d883a 	mov	r6,zero
    f89c:	d9404104 	addi	r5,sp,260
    f8a0:	8809883a 	mov	r4,r17
    f8a4:	58801226 	beq	r11,r2,f8f0 <__ssvfiscanf_r+0x1144>
    f8a8:	000dc7c0 	call	dc7c <_strtoll_r>
    f8ac:	dac04f17 	ldw	r11,316(sp)
    f8b0:	59000017 	ldw	r4,0(r11)
    f8b4:	5ac00104 	addi	r11,r11,4
    f8b8:	dac04f15 	stw	r11,316(sp)
    f8bc:	20800015 	stw	r2,0(r4)
    f8c0:	20c00115 	stw	r3,4(r4)
    f8c4:	003fbe06 	br	f7c0 <__alt_mem_epcs_flash_controller_0+0xff80e7c0>
    f8c8:	98e7883a 	add	r19,r19,r3
    f8cc:	bdffffc4 	addi	r23,r23,-1
    f8d0:	8000031e 	bne	r16,zero,f8e0 <__ssvfiscanf_r+0x1134>
    f8d4:	b5800104 	addi	r22,r22,4
    f8d8:	0029883a 	mov	r20,zero
    f8dc:	003e1d06 	br	f154 <__alt_mem_epcs_flash_controller_0+0xff80e154>
    f8e0:	0029883a 	mov	r20,zero
    f8e4:	003e1b06 	br	f154 <__alt_mem_epcs_flash_controller_0+0xff80e154>
    f8e8:	b1000017 	ldw	r4,0(r22)
    f8ec:	003fba06 	br	f7d8 <__alt_mem_epcs_flash_controller_0+0xff80e7d8>
    f8f0:	000e2140 	call	e214 <_strtoull_r>
    f8f4:	003fed06 	br	f8ac <__alt_mem_epcs_flash_controller_0+0xff80e8ac>

0000f8f8 <___svfprintf_internal_r>:
    f8f8:	deffb704 	addi	sp,sp,-292
    f8fc:	dfc04815 	stw	ra,288(sp)
    f900:	ddc04615 	stw	r23,280(sp)
    f904:	d9402d15 	stw	r5,180(sp)
    f908:	d9003915 	stw	r4,228(sp)
    f90c:	302f883a 	mov	r23,r6
    f910:	d9c02e15 	stw	r7,184(sp)
    f914:	df004715 	stw	fp,284(sp)
    f918:	dd804515 	stw	r22,276(sp)
    f91c:	dd404415 	stw	r21,272(sp)
    f920:	dd004315 	stw	r20,268(sp)
    f924:	dcc04215 	stw	r19,264(sp)
    f928:	dc804115 	stw	r18,260(sp)
    f92c:	dc404015 	stw	r17,256(sp)
    f930:	dc003f15 	stw	r16,252(sp)
    f934:	0009e100 	call	9e10 <_localeconv_r>
    f938:	10800017 	ldw	r2,0(r2)
    f93c:	1009883a 	mov	r4,r2
    f940:	d8803415 	stw	r2,208(sp)
    f944:	00033c80 	call	33c8 <strlen>
    f948:	d8c02d17 	ldw	r3,180(sp)
    f94c:	d8803815 	stw	r2,224(sp)
    f950:	1880030b 	ldhu	r2,12(r3)
    f954:	1080200c 	andi	r2,r2,128
    f958:	10000226 	beq	r2,zero,f964 <___svfprintf_internal_r+0x6c>
    f95c:	18800417 	ldw	r2,16(r3)
    f960:	1006b126 	beq	r2,zero,11428 <___svfprintf_internal_r+0x1b30>
    f964:	dcc03917 	ldw	r19,228(sp)
    f968:	d8c00404 	addi	r3,sp,16
    f96c:	054000b4 	movhi	r21,2
    f970:	d9001e04 	addi	r4,sp,120
    f974:	ad788f84 	addi	r21,r21,-7618
    f978:	d8c01e15 	stw	r3,120(sp)
    f97c:	d8002015 	stw	zero,128(sp)
    f980:	d8001f15 	stw	zero,124(sp)
    f984:	d8003315 	stw	zero,204(sp)
    f988:	d8003615 	stw	zero,216(sp)
    f98c:	d8003715 	stw	zero,220(sp)
    f990:	1811883a 	mov	r8,r3
    f994:	d8003a15 	stw	zero,232(sp)
    f998:	d8003b15 	stw	zero,236(sp)
    f99c:	d8002f15 	stw	zero,188(sp)
    f9a0:	d9002815 	stw	r4,160(sp)
    f9a4:	b8800007 	ldb	r2,0(r23)
    f9a8:	10027726 	beq	r2,zero,10388 <___svfprintf_internal_r+0xa90>
    f9ac:	00c00944 	movi	r3,37
    f9b0:	b823883a 	mov	r17,r23
    f9b4:	10c0021e 	bne	r2,r3,f9c0 <___svfprintf_internal_r+0xc8>
    f9b8:	00001406 	br	fa0c <___svfprintf_internal_r+0x114>
    f9bc:	10c00326 	beq	r2,r3,f9cc <___svfprintf_internal_r+0xd4>
    f9c0:	8c400044 	addi	r17,r17,1
    f9c4:	88800007 	ldb	r2,0(r17)
    f9c8:	103ffc1e 	bne	r2,zero,f9bc <__alt_mem_epcs_flash_controller_0+0xff80e9bc>
    f9cc:	8de1c83a 	sub	r16,r17,r23
    f9d0:	80000e26 	beq	r16,zero,fa0c <___svfprintf_internal_r+0x114>
    f9d4:	d8c02017 	ldw	r3,128(sp)
    f9d8:	d8801f17 	ldw	r2,124(sp)
    f9dc:	45c00015 	stw	r23,0(r8)
    f9e0:	1c07883a 	add	r3,r3,r16
    f9e4:	10800044 	addi	r2,r2,1
    f9e8:	d8c02015 	stw	r3,128(sp)
    f9ec:	44000115 	stw	r16,4(r8)
    f9f0:	d8801f15 	stw	r2,124(sp)
    f9f4:	00c001c4 	movi	r3,7
    f9f8:	18809916 	blt	r3,r2,fc60 <___svfprintf_internal_r+0x368>
    f9fc:	42000204 	addi	r8,r8,8
    fa00:	d9402f17 	ldw	r5,188(sp)
    fa04:	2c0b883a 	add	r5,r5,r16
    fa08:	d9402f15 	stw	r5,188(sp)
    fa0c:	88800007 	ldb	r2,0(r17)
    fa10:	10009a26 	beq	r2,zero,fc7c <___svfprintf_internal_r+0x384>
    fa14:	8dc00044 	addi	r23,r17,1
    fa18:	8c400047 	ldb	r17,1(r17)
    fa1c:	0021883a 	mov	r16,zero
    fa20:	00bfffc4 	movi	r2,-1
    fa24:	0025883a 	mov	r18,zero
    fa28:	dc002905 	stb	r16,164(sp)
    fa2c:	d8002785 	stb	zero,158(sp)
    fa30:	d8002b05 	stb	zero,172(sp)
    fa34:	d8802a15 	stw	r2,168(sp)
    fa38:	d8003115 	stw	zero,196(sp)
    fa3c:	05001604 	movi	r20,88
    fa40:	05800244 	movi	r22,9
    fa44:	4039883a 	mov	fp,r8
    fa48:	9021883a 	mov	r16,r18
    fa4c:	bdc00044 	addi	r23,r23,1
    fa50:	88bff804 	addi	r2,r17,-32
    fa54:	a0831e36 	bltu	r20,r2,106d0 <___svfprintf_internal_r+0xdd8>
    fa58:	100490ba 	slli	r2,r2,2
    fa5c:	00c00074 	movhi	r3,1
    fa60:	18fe9c04 	addi	r3,r3,-1424
    fa64:	10c5883a 	add	r2,r2,r3
    fa68:	10800017 	ldw	r2,0(r2)
    fa6c:	1000683a 	jmp	r2
    fa70:	00010618 	cmpnei	zero,zero,1048
    fa74:	000106d0 	cmplti	zero,zero,1051
    fa78:	000106d0 	cmplti	zero,zero,1051
    fa7c:	0001060c 	andi	zero,zero,1048
    fa80:	000106d0 	cmplti	zero,zero,1051
    fa84:	000106d0 	cmplti	zero,zero,1051
    fa88:	000106d0 	cmplti	zero,zero,1051
    fa8c:	000106d0 	cmplti	zero,zero,1051
    fa90:	000106d0 	cmplti	zero,zero,1051
    fa94:	000106d0 	cmplti	zero,zero,1051
    fa98:	0000fcd8 	cmpnei	zero,zero,1011
    fa9c:	0001051c 	xori	zero,zero,1044
    faa0:	000106d0 	cmplti	zero,zero,1051
    faa4:	0000fbe4 	muli	zero,zero,1007
    faa8:	0000fcfc 	xorhi	zero,zero,1011
    faac:	000106d0 	cmplti	zero,zero,1051
    fab0:	0000fd88 	cmpgei	zero,zero,1014
    fab4:	0000fd4c 	andi	zero,zero,1013
    fab8:	0000fd4c 	andi	zero,zero,1013
    fabc:	0000fd4c 	andi	zero,zero,1013
    fac0:	0000fd4c 	andi	zero,zero,1013
    fac4:	0000fd4c 	andi	zero,zero,1013
    fac8:	0000fd4c 	andi	zero,zero,1013
    facc:	0000fd4c 	andi	zero,zero,1013
    fad0:	0000fd4c 	andi	zero,zero,1013
    fad4:	0000fd4c 	andi	zero,zero,1013
    fad8:	000106d0 	cmplti	zero,zero,1051
    fadc:	000106d0 	cmplti	zero,zero,1051
    fae0:	000106d0 	cmplti	zero,zero,1051
    fae4:	000106d0 	cmplti	zero,zero,1051
    fae8:	000106d0 	cmplti	zero,zero,1051
    faec:	000106d0 	cmplti	zero,zero,1051
    faf0:	000106d0 	cmplti	zero,zero,1051
    faf4:	000106d0 	cmplti	zero,zero,1051
    faf8:	000106d0 	cmplti	zero,zero,1051
    fafc:	000106d0 	cmplti	zero,zero,1051
    fb00:	0000fe4c 	andi	zero,zero,1017
    fb04:	0000fd94 	movui	zero,1014
    fb08:	000106d0 	cmplti	zero,zero,1051
    fb0c:	0000fd94 	movui	zero,1014
    fb10:	000106d0 	cmplti	zero,zero,1051
    fb14:	000106d0 	cmplti	zero,zero,1051
    fb18:	000106d0 	cmplti	zero,zero,1051
    fb1c:	000106d0 	cmplti	zero,zero,1051
    fb20:	0000fe40 	call	fe4 <FlashTestBlockWrite+0x94>
    fb24:	000106d0 	cmplti	zero,zero,1051
    fb28:	000106d0 	cmplti	zero,zero,1051
    fb2c:	0000ff14 	movui	zero,1020
    fb30:	000106d0 	cmplti	zero,zero,1051
    fb34:	000106d0 	cmplti	zero,zero,1051
    fb38:	000106d0 	cmplti	zero,zero,1051
    fb3c:	000106d0 	cmplti	zero,zero,1051
    fb40:	000106d0 	cmplti	zero,zero,1051
    fb44:	00010390 	cmplti	zero,zero,1038
    fb48:	000106d0 	cmplti	zero,zero,1051
    fb4c:	000106d0 	cmplti	zero,zero,1051
    fb50:	000103fc 	xorhi	zero,zero,1039
    fb54:	000106d0 	cmplti	zero,zero,1051
    fb58:	000106d0 	cmplti	zero,zero,1051
    fb5c:	000106d0 	cmplti	zero,zero,1051
    fb60:	000106d0 	cmplti	zero,zero,1051
    fb64:	000106d0 	cmplti	zero,zero,1051
    fb68:	000106d0 	cmplti	zero,zero,1051
    fb6c:	000106d0 	cmplti	zero,zero,1051
    fb70:	000106d0 	cmplti	zero,zero,1051
    fb74:	000106d0 	cmplti	zero,zero,1051
    fb78:	000106d0 	cmplti	zero,zero,1051
    fb7c:	000104b8 	rdprs	zero,zero,1042
    fb80:	00010638 	rdprs	zero,zero,1048
    fb84:	0000fd94 	movui	zero,1014
    fb88:	0000fd94 	movui	zero,1014
    fb8c:	0000fd94 	movui	zero,1014
    fb90:	000106ac 	andhi	zero,zero,1050
    fb94:	00010638 	rdprs	zero,zero,1048
    fb98:	000106d0 	cmplti	zero,zero,1051
    fb9c:	000106d0 	cmplti	zero,zero,1051
    fba0:	00010658 	cmpnei	zero,zero,1049
    fba4:	000106d0 	cmplti	zero,zero,1051
    fba8:	0001066c 	andhi	zero,zero,1049
    fbac:	000104fc 	xorhi	zero,zero,1043
    fbb0:	0000fbf0 	cmpltui	zero,zero,1007
    fbb4:	00010534 	movhi	zero,1044
    fbb8:	000106d0 	cmplti	zero,zero,1051
    fbbc:	00010540 	call	1054 <FlashTestBlockWrite+0x104>
    fbc0:	000106d0 	cmplti	zero,zero,1051
    fbc4:	000105a4 	muli	zero,zero,1046
    fbc8:	000106d0 	cmplti	zero,zero,1051
    fbcc:	000106d0 	cmplti	zero,zero,1051
    fbd0:	000105c4 	movi	zero,1047
    fbd4:	d8c03117 	ldw	r3,196(sp)
    fbd8:	d8802e15 	stw	r2,184(sp)
    fbdc:	00c7c83a 	sub	r3,zero,r3
    fbe0:	d8c03115 	stw	r3,196(sp)
    fbe4:	84000114 	ori	r16,r16,4
    fbe8:	bc400007 	ldb	r17,0(r23)
    fbec:	003f9706 	br	fa4c <__alt_mem_epcs_flash_controller_0+0xff80ea4c>
    fbf0:	00800c04 	movi	r2,48
    fbf4:	d8802705 	stb	r2,156(sp)
    fbf8:	00801e04 	movi	r2,120
    fbfc:	d8802745 	stb	r2,157(sp)
    fc00:	d9002a17 	ldw	r4,168(sp)
    fc04:	d8802e17 	ldw	r2,184(sp)
    fc08:	d8002785 	stb	zero,158(sp)
    fc0c:	e011883a 	mov	r8,fp
    fc10:	10c00104 	addi	r3,r2,4
    fc14:	15000017 	ldw	r20,0(r2)
    fc18:	002d883a 	mov	r22,zero
    fc1c:	80800094 	ori	r2,r16,2
    fc20:	2002b616 	blt	r4,zero,106fc <___svfprintf_internal_r+0xe04>
    fc24:	00bfdfc4 	movi	r2,-129
    fc28:	80a4703a 	and	r18,r16,r2
    fc2c:	d8c02e15 	stw	r3,184(sp)
    fc30:	94800094 	ori	r18,r18,2
    fc34:	a002a01e 	bne	r20,zero,106b8 <___svfprintf_internal_r+0xdc0>
    fc38:	014000b4 	movhi	r5,2
    fc3c:	29776f04 	addi	r5,r5,-8772
    fc40:	d9403a15 	stw	r5,232(sp)
    fc44:	04401e04 	movi	r17,120
    fc48:	d8c02a17 	ldw	r3,168(sp)
    fc4c:	0039883a 	mov	fp,zero
    fc50:	1801e626 	beq	r3,zero,103ec <___svfprintf_internal_r+0xaf4>
    fc54:	0029883a 	mov	r20,zero
    fc58:	002d883a 	mov	r22,zero
    fc5c:	00020506 	br	10474 <___svfprintf_internal_r+0xb7c>
    fc60:	d9402d17 	ldw	r5,180(sp)
    fc64:	d9801e04 	addi	r6,sp,120
    fc68:	9809883a 	mov	r4,r19
    fc6c:	00147980 	call	14798 <__ssprint_r>
    fc70:	1000081e 	bne	r2,zero,fc94 <___svfprintf_internal_r+0x39c>
    fc74:	da000404 	addi	r8,sp,16
    fc78:	003f6106 	br	fa00 <__alt_mem_epcs_flash_controller_0+0xff80ea00>
    fc7c:	d8802017 	ldw	r2,128(sp)
    fc80:	10000426 	beq	r2,zero,fc94 <___svfprintf_internal_r+0x39c>
    fc84:	d9402d17 	ldw	r5,180(sp)
    fc88:	d9003917 	ldw	r4,228(sp)
    fc8c:	d9801e04 	addi	r6,sp,120
    fc90:	00147980 	call	14798 <__ssprint_r>
    fc94:	d8802d17 	ldw	r2,180(sp)
    fc98:	10c0030b 	ldhu	r3,12(r2)
    fc9c:	d8802f17 	ldw	r2,188(sp)
    fca0:	18c0100c 	andi	r3,r3,64
    fca4:	1806251e 	bne	r3,zero,1153c <___svfprintf_internal_r+0x1c44>
    fca8:	dfc04817 	ldw	ra,288(sp)
    fcac:	df004717 	ldw	fp,284(sp)
    fcb0:	ddc04617 	ldw	r23,280(sp)
    fcb4:	dd804517 	ldw	r22,276(sp)
    fcb8:	dd404417 	ldw	r21,272(sp)
    fcbc:	dd004317 	ldw	r20,268(sp)
    fcc0:	dcc04217 	ldw	r19,264(sp)
    fcc4:	dc804117 	ldw	r18,260(sp)
    fcc8:	dc404017 	ldw	r17,256(sp)
    fccc:	dc003f17 	ldw	r16,252(sp)
    fcd0:	dec04904 	addi	sp,sp,292
    fcd4:	f800283a 	ret
    fcd8:	d9002e17 	ldw	r4,184(sp)
    fcdc:	d9402e17 	ldw	r5,184(sp)
    fce0:	21000017 	ldw	r4,0(r4)
    fce4:	28800104 	addi	r2,r5,4
    fce8:	d9003115 	stw	r4,196(sp)
    fcec:	203fb916 	blt	r4,zero,fbd4 <__alt_mem_epcs_flash_controller_0+0xff80ebd4>
    fcf0:	d8802e15 	stw	r2,184(sp)
    fcf4:	bc400007 	ldb	r17,0(r23)
    fcf8:	003f5406 	br	fa4c <__alt_mem_epcs_flash_controller_0+0xff80ea4c>
    fcfc:	bc400007 	ldb	r17,0(r23)
    fd00:	01000a84 	movi	r4,42
    fd04:	b8c00044 	addi	r3,r23,1
    fd08:	89076926 	beq	r17,r4,11ab0 <___svfprintf_internal_r+0x21b8>
    fd0c:	8cbff404 	addi	r18,r17,-48
    fd10:	b486b936 	bltu	r22,r18,117f8 <___svfprintf_internal_r+0x1f00>
    fd14:	0009883a 	mov	r4,zero
    fd18:	1823883a 	mov	r17,r3
    fd1c:	01400284 	movi	r5,10
    fd20:	00024440 	call	2444 <__mulsi3>
    fd24:	88c00007 	ldb	r3,0(r17)
    fd28:	1489883a 	add	r4,r2,r18
    fd2c:	8dc00044 	addi	r23,r17,1
    fd30:	1cbff404 	addi	r18,r3,-48
    fd34:	b823883a 	mov	r17,r23
    fd38:	b4bff82e 	bgeu	r22,r18,fd1c <__alt_mem_epcs_flash_controller_0+0xff80ed1c>
    fd3c:	1823883a 	mov	r17,r3
    fd40:	20060416 	blt	r4,zero,11554 <___svfprintf_internal_r+0x1c5c>
    fd44:	d9002a15 	stw	r4,168(sp)
    fd48:	003f4106 	br	fa50 <__alt_mem_epcs_flash_controller_0+0xff80ea50>
    fd4c:	8cbff404 	addi	r18,r17,-48
    fd50:	d8003115 	stw	zero,196(sp)
    fd54:	0009883a 	mov	r4,zero
    fd58:	b823883a 	mov	r17,r23
    fd5c:	01400284 	movi	r5,10
    fd60:	00024440 	call	2444 <__mulsi3>
    fd64:	88c00007 	ldb	r3,0(r17)
    fd68:	9089883a 	add	r4,r18,r2
    fd6c:	bdc00044 	addi	r23,r23,1
    fd70:	1cbff404 	addi	r18,r3,-48
    fd74:	b823883a 	mov	r17,r23
    fd78:	b4bff82e 	bgeu	r22,r18,fd5c <__alt_mem_epcs_flash_controller_0+0xff80ed5c>
    fd7c:	1823883a 	mov	r17,r3
    fd80:	d9003115 	stw	r4,196(sp)
    fd84:	003f3206 	br	fa50 <__alt_mem_epcs_flash_controller_0+0xff80ea50>
    fd88:	84002014 	ori	r16,r16,128
    fd8c:	bc400007 	ldb	r17,0(r23)
    fd90:	003f2e06 	br	fa4c <__alt_mem_epcs_flash_controller_0+0xff80ea4c>
    fd94:	8025883a 	mov	r18,r16
    fd98:	dc002903 	ldbu	r16,164(sp)
    fd9c:	e011883a 	mov	r8,fp
    fda0:	84003fcc 	andi	r16,r16,255
    fda4:	8007721e 	bne	r16,zero,11b70 <___svfprintf_internal_r+0x2278>
    fda8:	9080020c 	andi	r2,r18,8
    fdac:	1004a526 	beq	r2,zero,11044 <___svfprintf_internal_r+0x174c>
    fdb0:	d9002e17 	ldw	r4,184(sp)
    fdb4:	d9402e17 	ldw	r5,184(sp)
    fdb8:	d8802e17 	ldw	r2,184(sp)
    fdbc:	21000017 	ldw	r4,0(r4)
    fdc0:	29400117 	ldw	r5,4(r5)
    fdc4:	10800204 	addi	r2,r2,8
    fdc8:	d9003615 	stw	r4,216(sp)
    fdcc:	d9403715 	stw	r5,220(sp)
    fdd0:	d8802e15 	stw	r2,184(sp)
    fdd4:	d9003617 	ldw	r4,216(sp)
    fdd8:	d9403717 	ldw	r5,220(sp)
    fddc:	da003e15 	stw	r8,248(sp)
    fde0:	04000044 	movi	r16,1
    fde4:	000bfbc0 	call	bfbc <__fpclassifyd>
    fde8:	da003e17 	ldw	r8,248(sp)
    fdec:	1404731e 	bne	r2,r16,10fbc <___svfprintf_internal_r+0x16c4>
    fdf0:	d9003617 	ldw	r4,216(sp)
    fdf4:	d9403717 	ldw	r5,220(sp)
    fdf8:	000d883a 	mov	r6,zero
    fdfc:	000f883a 	mov	r7,zero
    fe00:	001820c0 	call	1820c <__ledf2>
    fe04:	da003e17 	ldw	r8,248(sp)
    fe08:	10061b16 	blt	r2,zero,11678 <___svfprintf_internal_r+0x1d80>
    fe0c:	df002783 	ldbu	fp,158(sp)
    fe10:	008011c4 	movi	r2,71
    fe14:	1445810e 	bge	r2,r17,1141c <___svfprintf_internal_r+0x1b24>
    fe18:	040000b4 	movhi	r16,2
    fe1c:	84376704 	addi	r16,r16,-8804
    fe20:	00c000c4 	movi	r3,3
    fe24:	00bfdfc4 	movi	r2,-129
    fe28:	d8c02915 	stw	r3,164(sp)
    fe2c:	90a4703a 	and	r18,r18,r2
    fe30:	d8c02b15 	stw	r3,172(sp)
    fe34:	d8002a15 	stw	zero,168(sp)
    fe38:	d8003215 	stw	zero,200(sp)
    fe3c:	00006c06 	br	fff0 <___svfprintf_internal_r+0x6f8>
    fe40:	84000214 	ori	r16,r16,8
    fe44:	bc400007 	ldb	r17,0(r23)
    fe48:	003f0006 	br	fa4c <__alt_mem_epcs_flash_controller_0+0xff80ea4c>
    fe4c:	8025883a 	mov	r18,r16
    fe50:	dc002903 	ldbu	r16,164(sp)
    fe54:	e011883a 	mov	r8,fp
    fe58:	84003fcc 	andi	r16,r16,255
    fe5c:	80073f1e 	bne	r16,zero,11b5c <___svfprintf_internal_r+0x2264>
    fe60:	94800414 	ori	r18,r18,16
    fe64:	9080080c 	andi	r2,r18,32
    fe68:	1003bb26 	beq	r2,zero,10d58 <___svfprintf_internal_r+0x1460>
    fe6c:	d9002e17 	ldw	r4,184(sp)
    fe70:	20800117 	ldw	r2,4(r4)
    fe74:	25000017 	ldw	r20,0(r4)
    fe78:	21000204 	addi	r4,r4,8
    fe7c:	d9002e15 	stw	r4,184(sp)
    fe80:	102d883a 	mov	r22,r2
    fe84:	1003bd16 	blt	r2,zero,10d7c <___svfprintf_internal_r+0x1484>
    fe88:	d9002a17 	ldw	r4,168(sp)
    fe8c:	df002783 	ldbu	fp,158(sp)
    fe90:	2003d016 	blt	r4,zero,10dd4 <___svfprintf_internal_r+0x14dc>
    fe94:	00ffdfc4 	movi	r3,-129
    fe98:	a584b03a 	or	r2,r20,r22
    fe9c:	90e4703a 	and	r18,r18,r3
    fea0:	10015026 	beq	r2,zero,103e4 <___svfprintf_internal_r+0xaec>
    fea4:	b0037026 	beq	r22,zero,10c68 <___svfprintf_internal_r+0x1370>
    fea8:	dc402915 	stw	r17,164(sp)
    feac:	dc001e04 	addi	r16,sp,120
    feb0:	b023883a 	mov	r17,r22
    feb4:	402d883a 	mov	r22,r8
    feb8:	a009883a 	mov	r4,r20
    febc:	880b883a 	mov	r5,r17
    fec0:	01800284 	movi	r6,10
    fec4:	000f883a 	mov	r7,zero
    fec8:	001666c0 	call	1666c <__umoddi3>
    fecc:	10800c04 	addi	r2,r2,48
    fed0:	843fffc4 	addi	r16,r16,-1
    fed4:	a009883a 	mov	r4,r20
    fed8:	880b883a 	mov	r5,r17
    fedc:	80800005 	stb	r2,0(r16)
    fee0:	01800284 	movi	r6,10
    fee4:	000f883a 	mov	r7,zero
    fee8:	00160700 	call	16070 <__udivdi3>
    feec:	1029883a 	mov	r20,r2
    fef0:	10c4b03a 	or	r2,r2,r3
    fef4:	1823883a 	mov	r17,r3
    fef8:	103fef1e 	bne	r2,zero,feb8 <__alt_mem_epcs_flash_controller_0+0xff80eeb8>
    fefc:	d8c02817 	ldw	r3,160(sp)
    ff00:	dc402917 	ldw	r17,164(sp)
    ff04:	b011883a 	mov	r8,r22
    ff08:	1c07c83a 	sub	r3,r3,r16
    ff0c:	d8c02b15 	stw	r3,172(sp)
    ff10:	00003106 	br	ffd8 <___svfprintf_internal_r+0x6e0>
    ff14:	8025883a 	mov	r18,r16
    ff18:	dc002903 	ldbu	r16,164(sp)
    ff1c:	e011883a 	mov	r8,fp
    ff20:	84003fcc 	andi	r16,r16,255
    ff24:	80070a1e 	bne	r16,zero,11b50 <___svfprintf_internal_r+0x2258>
    ff28:	94800414 	ori	r18,r18,16
    ff2c:	9080080c 	andi	r2,r18,32
    ff30:	1002f626 	beq	r2,zero,10b0c <___svfprintf_internal_r+0x1214>
    ff34:	d9002e17 	ldw	r4,184(sp)
    ff38:	d9402a17 	ldw	r5,168(sp)
    ff3c:	d8002785 	stb	zero,158(sp)
    ff40:	20800204 	addi	r2,r4,8
    ff44:	25000017 	ldw	r20,0(r4)
    ff48:	25800117 	ldw	r22,4(r4)
    ff4c:	28043716 	blt	r5,zero,1102c <___svfprintf_internal_r+0x1734>
    ff50:	013fdfc4 	movi	r4,-129
    ff54:	a586b03a 	or	r3,r20,r22
    ff58:	d8802e15 	stw	r2,184(sp)
    ff5c:	9124703a 	and	r18,r18,r4
    ff60:	1802f71e 	bne	r3,zero,10b40 <___svfprintf_internal_r+0x1248>
    ff64:	d9402a17 	ldw	r5,168(sp)
    ff68:	0039883a 	mov	fp,zero
    ff6c:	2806df26 	beq	r5,zero,11aec <___svfprintf_internal_r+0x21f4>
    ff70:	0029883a 	mov	r20,zero
    ff74:	002d883a 	mov	r22,zero
    ff78:	dc001e04 	addi	r16,sp,120
    ff7c:	a006d0fa 	srli	r3,r20,3
    ff80:	b008977a 	slli	r4,r22,29
    ff84:	b02cd0fa 	srli	r22,r22,3
    ff88:	a50001cc 	andi	r20,r20,7
    ff8c:	a0800c04 	addi	r2,r20,48
    ff90:	843fffc4 	addi	r16,r16,-1
    ff94:	20e8b03a 	or	r20,r4,r3
    ff98:	80800005 	stb	r2,0(r16)
    ff9c:	a586b03a 	or	r3,r20,r22
    ffa0:	183ff61e 	bne	r3,zero,ff7c <__alt_mem_epcs_flash_controller_0+0xff80ef7c>
    ffa4:	90c0004c 	andi	r3,r18,1
    ffa8:	18013f26 	beq	r3,zero,104a8 <___svfprintf_internal_r+0xbb0>
    ffac:	10803fcc 	andi	r2,r2,255
    ffb0:	1080201c 	xori	r2,r2,128
    ffb4:	10bfe004 	addi	r2,r2,-128
    ffb8:	00c00c04 	movi	r3,48
    ffbc:	10c13a26 	beq	r2,r3,104a8 <___svfprintf_internal_r+0xbb0>
    ffc0:	80ffffc5 	stb	r3,-1(r16)
    ffc4:	d8c02817 	ldw	r3,160(sp)
    ffc8:	80bfffc4 	addi	r2,r16,-1
    ffcc:	1021883a 	mov	r16,r2
    ffd0:	1887c83a 	sub	r3,r3,r2
    ffd4:	d8c02b15 	stw	r3,172(sp)
    ffd8:	d8802b17 	ldw	r2,172(sp)
    ffdc:	d9002a17 	ldw	r4,168(sp)
    ffe0:	1100010e 	bge	r2,r4,ffe8 <___svfprintf_internal_r+0x6f0>
    ffe4:	2005883a 	mov	r2,r4
    ffe8:	d8802915 	stw	r2,164(sp)
    ffec:	d8003215 	stw	zero,200(sp)
    fff0:	e7003fcc 	andi	fp,fp,255
    fff4:	e700201c 	xori	fp,fp,128
    fff8:	e73fe004 	addi	fp,fp,-128
    fffc:	e0000326 	beq	fp,zero,1000c <___svfprintf_internal_r+0x714>
   10000:	d8c02917 	ldw	r3,164(sp)
   10004:	18c00044 	addi	r3,r3,1
   10008:	d8c02915 	stw	r3,164(sp)
   1000c:	90c0008c 	andi	r3,r18,2
   10010:	d8c02c15 	stw	r3,176(sp)
   10014:	18000326 	beq	r3,zero,10024 <___svfprintf_internal_r+0x72c>
   10018:	d8c02917 	ldw	r3,164(sp)
   1001c:	18c00084 	addi	r3,r3,2
   10020:	d8c02915 	stw	r3,164(sp)
   10024:	90c0210c 	andi	r3,r18,132
   10028:	d8c03015 	stw	r3,192(sp)
   1002c:	1801c31e 	bne	r3,zero,1073c <___svfprintf_internal_r+0xe44>
   10030:	d9003117 	ldw	r4,196(sp)
   10034:	d8c02917 	ldw	r3,164(sp)
   10038:	20e9c83a 	sub	r20,r4,r3
   1003c:	0501bf0e 	bge	zero,r20,1073c <___svfprintf_internal_r+0xe44>
   10040:	02400404 	movi	r9,16
   10044:	d8c02017 	ldw	r3,128(sp)
   10048:	d8801f17 	ldw	r2,124(sp)
   1004c:	4d053d0e 	bge	r9,r20,11544 <___svfprintf_internal_r+0x1c4c>
   10050:	014000b4 	movhi	r5,2
   10054:	29789384 	addi	r5,r5,-7602
   10058:	dc403c15 	stw	r17,240(sp)
   1005c:	d9403515 	stw	r5,212(sp)
   10060:	a023883a 	mov	r17,r20
   10064:	482d883a 	mov	r22,r9
   10068:	9029883a 	mov	r20,r18
   1006c:	070001c4 	movi	fp,7
   10070:	8025883a 	mov	r18,r16
   10074:	dc002d17 	ldw	r16,180(sp)
   10078:	00000306 	br	10088 <___svfprintf_internal_r+0x790>
   1007c:	8c7ffc04 	addi	r17,r17,-16
   10080:	42000204 	addi	r8,r8,8
   10084:	b440130e 	bge	r22,r17,100d4 <___svfprintf_internal_r+0x7dc>
   10088:	010000b4 	movhi	r4,2
   1008c:	18c00404 	addi	r3,r3,16
   10090:	10800044 	addi	r2,r2,1
   10094:	21389384 	addi	r4,r4,-7602
   10098:	41000015 	stw	r4,0(r8)
   1009c:	45800115 	stw	r22,4(r8)
   100a0:	d8c02015 	stw	r3,128(sp)
   100a4:	d8801f15 	stw	r2,124(sp)
   100a8:	e0bff40e 	bge	fp,r2,1007c <__alt_mem_epcs_flash_controller_0+0xff80f07c>
   100ac:	d9801e04 	addi	r6,sp,120
   100b0:	800b883a 	mov	r5,r16
   100b4:	9809883a 	mov	r4,r19
   100b8:	00147980 	call	14798 <__ssprint_r>
   100bc:	103ef51e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   100c0:	8c7ffc04 	addi	r17,r17,-16
   100c4:	d8c02017 	ldw	r3,128(sp)
   100c8:	d8801f17 	ldw	r2,124(sp)
   100cc:	da000404 	addi	r8,sp,16
   100d0:	b47fed16 	blt	r22,r17,10088 <__alt_mem_epcs_flash_controller_0+0xff80f088>
   100d4:	9021883a 	mov	r16,r18
   100d8:	a025883a 	mov	r18,r20
   100dc:	8829883a 	mov	r20,r17
   100e0:	dc403c17 	ldw	r17,240(sp)
   100e4:	d9403517 	ldw	r5,212(sp)
   100e8:	a0c7883a 	add	r3,r20,r3
   100ec:	10800044 	addi	r2,r2,1
   100f0:	41400015 	stw	r5,0(r8)
   100f4:	45000115 	stw	r20,4(r8)
   100f8:	d8c02015 	stw	r3,128(sp)
   100fc:	d8801f15 	stw	r2,124(sp)
   10100:	010001c4 	movi	r4,7
   10104:	2082c116 	blt	r4,r2,10c0c <___svfprintf_internal_r+0x1314>
   10108:	df002787 	ldb	fp,158(sp)
   1010c:	42000204 	addi	r8,r8,8
   10110:	e0000c26 	beq	fp,zero,10144 <___svfprintf_internal_r+0x84c>
   10114:	d8801f17 	ldw	r2,124(sp)
   10118:	d9002784 	addi	r4,sp,158
   1011c:	18c00044 	addi	r3,r3,1
   10120:	10800044 	addi	r2,r2,1
   10124:	41000015 	stw	r4,0(r8)
   10128:	01000044 	movi	r4,1
   1012c:	41000115 	stw	r4,4(r8)
   10130:	d8c02015 	stw	r3,128(sp)
   10134:	d8801f15 	stw	r2,124(sp)
   10138:	010001c4 	movi	r4,7
   1013c:	20825a16 	blt	r4,r2,10aa8 <___svfprintf_internal_r+0x11b0>
   10140:	42000204 	addi	r8,r8,8
   10144:	d8802c17 	ldw	r2,176(sp)
   10148:	10000c26 	beq	r2,zero,1017c <___svfprintf_internal_r+0x884>
   1014c:	d8801f17 	ldw	r2,124(sp)
   10150:	d9002704 	addi	r4,sp,156
   10154:	18c00084 	addi	r3,r3,2
   10158:	10800044 	addi	r2,r2,1
   1015c:	41000015 	stw	r4,0(r8)
   10160:	01000084 	movi	r4,2
   10164:	41000115 	stw	r4,4(r8)
   10168:	d8c02015 	stw	r3,128(sp)
   1016c:	d8801f15 	stw	r2,124(sp)
   10170:	010001c4 	movi	r4,7
   10174:	20825416 	blt	r4,r2,10ac8 <___svfprintf_internal_r+0x11d0>
   10178:	42000204 	addi	r8,r8,8
   1017c:	d9003017 	ldw	r4,192(sp)
   10180:	00802004 	movi	r2,128
   10184:	2081b926 	beq	r4,r2,1086c <___svfprintf_internal_r+0xf74>
   10188:	d9402a17 	ldw	r5,168(sp)
   1018c:	d8802b17 	ldw	r2,172(sp)
   10190:	28adc83a 	sub	r22,r5,r2
   10194:	05802f0e 	bge	zero,r22,10254 <___svfprintf_internal_r+0x95c>
   10198:	07000404 	movi	fp,16
   1019c:	d8801f17 	ldw	r2,124(sp)
   101a0:	e583e20e 	bge	fp,r22,1112c <___svfprintf_internal_r+0x1834>
   101a4:	014000b4 	movhi	r5,2
   101a8:	29788f84 	addi	r5,r5,-7618
   101ac:	dc402a15 	stw	r17,168(sp)
   101b0:	d9402c15 	stw	r5,176(sp)
   101b4:	b023883a 	mov	r17,r22
   101b8:	050001c4 	movi	r20,7
   101bc:	902d883a 	mov	r22,r18
   101c0:	8025883a 	mov	r18,r16
   101c4:	dc002d17 	ldw	r16,180(sp)
   101c8:	00000306 	br	101d8 <___svfprintf_internal_r+0x8e0>
   101cc:	8c7ffc04 	addi	r17,r17,-16
   101d0:	42000204 	addi	r8,r8,8
   101d4:	e440110e 	bge	fp,r17,1021c <___svfprintf_internal_r+0x924>
   101d8:	18c00404 	addi	r3,r3,16
   101dc:	10800044 	addi	r2,r2,1
   101e0:	45400015 	stw	r21,0(r8)
   101e4:	47000115 	stw	fp,4(r8)
   101e8:	d8c02015 	stw	r3,128(sp)
   101ec:	d8801f15 	stw	r2,124(sp)
   101f0:	a0bff60e 	bge	r20,r2,101cc <__alt_mem_epcs_flash_controller_0+0xff80f1cc>
   101f4:	d9801e04 	addi	r6,sp,120
   101f8:	800b883a 	mov	r5,r16
   101fc:	9809883a 	mov	r4,r19
   10200:	00147980 	call	14798 <__ssprint_r>
   10204:	103ea31e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   10208:	8c7ffc04 	addi	r17,r17,-16
   1020c:	d8c02017 	ldw	r3,128(sp)
   10210:	d8801f17 	ldw	r2,124(sp)
   10214:	da000404 	addi	r8,sp,16
   10218:	e47fef16 	blt	fp,r17,101d8 <__alt_mem_epcs_flash_controller_0+0xff80f1d8>
   1021c:	9021883a 	mov	r16,r18
   10220:	b025883a 	mov	r18,r22
   10224:	882d883a 	mov	r22,r17
   10228:	dc402a17 	ldw	r17,168(sp)
   1022c:	d9002c17 	ldw	r4,176(sp)
   10230:	1d87883a 	add	r3,r3,r22
   10234:	10800044 	addi	r2,r2,1
   10238:	41000015 	stw	r4,0(r8)
   1023c:	45800115 	stw	r22,4(r8)
   10240:	d8c02015 	stw	r3,128(sp)
   10244:	d8801f15 	stw	r2,124(sp)
   10248:	010001c4 	movi	r4,7
   1024c:	20820e16 	blt	r4,r2,10a88 <___svfprintf_internal_r+0x1190>
   10250:	42000204 	addi	r8,r8,8
   10254:	9080400c 	andi	r2,r18,256
   10258:	10013a1e 	bne	r2,zero,10744 <___svfprintf_internal_r+0xe4c>
   1025c:	d9402b17 	ldw	r5,172(sp)
   10260:	d8801f17 	ldw	r2,124(sp)
   10264:	44000015 	stw	r16,0(r8)
   10268:	1947883a 	add	r3,r3,r5
   1026c:	10800044 	addi	r2,r2,1
   10270:	41400115 	stw	r5,4(r8)
   10274:	d8c02015 	stw	r3,128(sp)
   10278:	d8801f15 	stw	r2,124(sp)
   1027c:	010001c4 	movi	r4,7
   10280:	2081f316 	blt	r4,r2,10a50 <___svfprintf_internal_r+0x1158>
   10284:	42000204 	addi	r8,r8,8
   10288:	9480010c 	andi	r18,r18,4
   1028c:	90003226 	beq	r18,zero,10358 <___svfprintf_internal_r+0xa60>
   10290:	d9403117 	ldw	r5,196(sp)
   10294:	d8802917 	ldw	r2,164(sp)
   10298:	28a1c83a 	sub	r16,r5,r2
   1029c:	04002e0e 	bge	zero,r16,10358 <___svfprintf_internal_r+0xa60>
   102a0:	04400404 	movi	r17,16
   102a4:	d8801f17 	ldw	r2,124(sp)
   102a8:	8c04db0e 	bge	r17,r16,11618 <___svfprintf_internal_r+0x1d20>
   102ac:	014000b4 	movhi	r5,2
   102b0:	29789384 	addi	r5,r5,-7602
   102b4:	d9403515 	stw	r5,212(sp)
   102b8:	048001c4 	movi	r18,7
   102bc:	dd002d17 	ldw	r20,180(sp)
   102c0:	00000306 	br	102d0 <___svfprintf_internal_r+0x9d8>
   102c4:	843ffc04 	addi	r16,r16,-16
   102c8:	42000204 	addi	r8,r8,8
   102cc:	8c00130e 	bge	r17,r16,1031c <___svfprintf_internal_r+0xa24>
   102d0:	010000b4 	movhi	r4,2
   102d4:	18c00404 	addi	r3,r3,16
   102d8:	10800044 	addi	r2,r2,1
   102dc:	21389384 	addi	r4,r4,-7602
   102e0:	41000015 	stw	r4,0(r8)
   102e4:	44400115 	stw	r17,4(r8)
   102e8:	d8c02015 	stw	r3,128(sp)
   102ec:	d8801f15 	stw	r2,124(sp)
   102f0:	90bff40e 	bge	r18,r2,102c4 <__alt_mem_epcs_flash_controller_0+0xff80f2c4>
   102f4:	d9801e04 	addi	r6,sp,120
   102f8:	a00b883a 	mov	r5,r20
   102fc:	9809883a 	mov	r4,r19
   10300:	00147980 	call	14798 <__ssprint_r>
   10304:	103e631e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   10308:	843ffc04 	addi	r16,r16,-16
   1030c:	d8c02017 	ldw	r3,128(sp)
   10310:	d8801f17 	ldw	r2,124(sp)
   10314:	da000404 	addi	r8,sp,16
   10318:	8c3fed16 	blt	r17,r16,102d0 <__alt_mem_epcs_flash_controller_0+0xff80f2d0>
   1031c:	d9403517 	ldw	r5,212(sp)
   10320:	1c07883a 	add	r3,r3,r16
   10324:	10800044 	addi	r2,r2,1
   10328:	41400015 	stw	r5,0(r8)
   1032c:	44000115 	stw	r16,4(r8)
   10330:	d8c02015 	stw	r3,128(sp)
   10334:	d8801f15 	stw	r2,124(sp)
   10338:	010001c4 	movi	r4,7
   1033c:	2080060e 	bge	r4,r2,10358 <___svfprintf_internal_r+0xa60>
   10340:	d9402d17 	ldw	r5,180(sp)
   10344:	d9801e04 	addi	r6,sp,120
   10348:	9809883a 	mov	r4,r19
   1034c:	00147980 	call	14798 <__ssprint_r>
   10350:	103e501e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   10354:	d8c02017 	ldw	r3,128(sp)
   10358:	d8803117 	ldw	r2,196(sp)
   1035c:	d9002917 	ldw	r4,164(sp)
   10360:	1100010e 	bge	r2,r4,10368 <___svfprintf_internal_r+0xa70>
   10364:	2005883a 	mov	r2,r4
   10368:	d9402f17 	ldw	r5,188(sp)
   1036c:	288b883a 	add	r5,r5,r2
   10370:	d9402f15 	stw	r5,188(sp)
   10374:	1801be1e 	bne	r3,zero,10a70 <___svfprintf_internal_r+0x1178>
   10378:	b8800007 	ldb	r2,0(r23)
   1037c:	d8001f15 	stw	zero,124(sp)
   10380:	da000404 	addi	r8,sp,16
   10384:	103d891e 	bne	r2,zero,f9ac <__alt_mem_epcs_flash_controller_0+0xff80e9ac>
   10388:	b823883a 	mov	r17,r23
   1038c:	003d9f06 	br	fa0c <__alt_mem_epcs_flash_controller_0+0xff80ea0c>
   10390:	8025883a 	mov	r18,r16
   10394:	dc002903 	ldbu	r16,164(sp)
   10398:	e011883a 	mov	r8,fp
   1039c:	84003fcc 	andi	r16,r16,255
   103a0:	8005e61e 	bne	r16,zero,11b3c <___svfprintf_internal_r+0x2244>
   103a4:	94800414 	ori	r18,r18,16
   103a8:	9080080c 	andi	r2,r18,32
   103ac:	10022026 	beq	r2,zero,10c30 <___svfprintf_internal_r+0x1338>
   103b0:	d9002e17 	ldw	r4,184(sp)
   103b4:	d9402a17 	ldw	r5,168(sp)
   103b8:	d8002785 	stb	zero,158(sp)
   103bc:	20c00204 	addi	r3,r4,8
   103c0:	25000017 	ldw	r20,0(r4)
   103c4:	25800117 	ldw	r22,4(r4)
   103c8:	2803ad16 	blt	r5,zero,11280 <___svfprintf_internal_r+0x1988>
   103cc:	013fdfc4 	movi	r4,-129
   103d0:	a584b03a 	or	r2,r20,r22
   103d4:	d8c02e15 	stw	r3,184(sp)
   103d8:	9124703a 	and	r18,r18,r4
   103dc:	0039883a 	mov	fp,zero
   103e0:	103eb01e 	bne	r2,zero,fea4 <__alt_mem_epcs_flash_controller_0+0xff80eea4>
   103e4:	d8802a17 	ldw	r2,168(sp)
   103e8:	1002e71e 	bne	r2,zero,10f88 <___svfprintf_internal_r+0x1690>
   103ec:	d8002a15 	stw	zero,168(sp)
   103f0:	d8002b15 	stw	zero,172(sp)
   103f4:	dc001e04 	addi	r16,sp,120
   103f8:	003ef706 	br	ffd8 <__alt_mem_epcs_flash_controller_0+0xff80efd8>
   103fc:	8025883a 	mov	r18,r16
   10400:	dc002903 	ldbu	r16,164(sp)
   10404:	e011883a 	mov	r8,fp
   10408:	84003fcc 	andi	r16,r16,255
   1040c:	8005c81e 	bne	r16,zero,11b30 <___svfprintf_internal_r+0x2238>
   10410:	010000b4 	movhi	r4,2
   10414:	21376a04 	addi	r4,r4,-8792
   10418:	d9003a15 	stw	r4,232(sp)
   1041c:	9080080c 	andi	r2,r18,32
   10420:	10007226 	beq	r2,zero,105ec <___svfprintf_internal_r+0xcf4>
   10424:	d9402e17 	ldw	r5,184(sp)
   10428:	2d000017 	ldw	r20,0(r5)
   1042c:	2d800117 	ldw	r22,4(r5)
   10430:	29400204 	addi	r5,r5,8
   10434:	d9402e15 	stw	r5,184(sp)
   10438:	9080004c 	andi	r2,r18,1
   1043c:	1001aa26 	beq	r2,zero,10ae8 <___svfprintf_internal_r+0x11f0>
   10440:	a584b03a 	or	r2,r20,r22
   10444:	10032526 	beq	r2,zero,110dc <___svfprintf_internal_r+0x17e4>
   10448:	d8c02a17 	ldw	r3,168(sp)
   1044c:	00800c04 	movi	r2,48
   10450:	d8802705 	stb	r2,156(sp)
   10454:	dc402745 	stb	r17,157(sp)
   10458:	d8002785 	stb	zero,158(sp)
   1045c:	90800094 	ori	r2,r18,2
   10460:	1804a316 	blt	r3,zero,116f0 <___svfprintf_internal_r+0x1df8>
   10464:	00bfdfc4 	movi	r2,-129
   10468:	90a4703a 	and	r18,r18,r2
   1046c:	94800094 	ori	r18,r18,2
   10470:	0039883a 	mov	fp,zero
   10474:	d9003a17 	ldw	r4,232(sp)
   10478:	dc001e04 	addi	r16,sp,120
   1047c:	a08003cc 	andi	r2,r20,15
   10480:	b006973a 	slli	r3,r22,28
   10484:	2085883a 	add	r2,r4,r2
   10488:	a028d13a 	srli	r20,r20,4
   1048c:	10800003 	ldbu	r2,0(r2)
   10490:	b02cd13a 	srli	r22,r22,4
   10494:	843fffc4 	addi	r16,r16,-1
   10498:	1d28b03a 	or	r20,r3,r20
   1049c:	80800005 	stb	r2,0(r16)
   104a0:	a584b03a 	or	r2,r20,r22
   104a4:	103ff51e 	bne	r2,zero,1047c <__alt_mem_epcs_flash_controller_0+0xff80f47c>
   104a8:	d8c02817 	ldw	r3,160(sp)
   104ac:	1c07c83a 	sub	r3,r3,r16
   104b0:	d8c02b15 	stw	r3,172(sp)
   104b4:	003ec806 	br	ffd8 <__alt_mem_epcs_flash_controller_0+0xff80efd8>
   104b8:	d8c02e17 	ldw	r3,184(sp)
   104bc:	d9002e17 	ldw	r4,184(sp)
   104c0:	8025883a 	mov	r18,r16
   104c4:	18800017 	ldw	r2,0(r3)
   104c8:	21000104 	addi	r4,r4,4
   104cc:	00c00044 	movi	r3,1
   104d0:	e011883a 	mov	r8,fp
   104d4:	d8c02915 	stw	r3,164(sp)
   104d8:	d8002785 	stb	zero,158(sp)
   104dc:	d8801405 	stb	r2,80(sp)
   104e0:	d9002e15 	stw	r4,184(sp)
   104e4:	d8c02b15 	stw	r3,172(sp)
   104e8:	d8002a15 	stw	zero,168(sp)
   104ec:	d8003215 	stw	zero,200(sp)
   104f0:	dc001404 	addi	r16,sp,80
   104f4:	0039883a 	mov	fp,zero
   104f8:	003ec406 	br	1000c <__alt_mem_epcs_flash_controller_0+0xff80f00c>
   104fc:	8025883a 	mov	r18,r16
   10500:	dc002903 	ldbu	r16,164(sp)
   10504:	e011883a 	mov	r8,fp
   10508:	84003fcc 	andi	r16,r16,255
   1050c:	803e8726 	beq	r16,zero,ff2c <__alt_mem_epcs_flash_controller_0+0xff80ef2c>
   10510:	d8c02b03 	ldbu	r3,172(sp)
   10514:	d8c02785 	stb	r3,158(sp)
   10518:	003e8406 	br	ff2c <__alt_mem_epcs_flash_controller_0+0xff80ef2c>
   1051c:	00c00044 	movi	r3,1
   10520:	d8c02905 	stb	r3,164(sp)
   10524:	00c00ac4 	movi	r3,43
   10528:	d8c02b05 	stb	r3,172(sp)
   1052c:	bc400007 	ldb	r17,0(r23)
   10530:	003d4606 	br	fa4c <__alt_mem_epcs_flash_controller_0+0xff80ea4c>
   10534:	84000814 	ori	r16,r16,32
   10538:	bc400007 	ldb	r17,0(r23)
   1053c:	003d4306 	br	fa4c <__alt_mem_epcs_flash_controller_0+0xff80ea4c>
   10540:	d8802e17 	ldw	r2,184(sp)
   10544:	8025883a 	mov	r18,r16
   10548:	d8002785 	stb	zero,158(sp)
   1054c:	14000017 	ldw	r16,0(r2)
   10550:	e011883a 	mov	r8,fp
   10554:	15000104 	addi	r20,r2,4
   10558:	80042126 	beq	r16,zero,115e0 <___svfprintf_internal_r+0x1ce8>
   1055c:	d8c02a17 	ldw	r3,168(sp)
   10560:	1803ee16 	blt	r3,zero,1151c <___svfprintf_internal_r+0x1c24>
   10564:	180d883a 	mov	r6,r3
   10568:	000b883a 	mov	r5,zero
   1056c:	8009883a 	mov	r4,r16
   10570:	df003e15 	stw	fp,248(sp)
   10574:	000a2800 	call	a280 <memchr>
   10578:	da003e17 	ldw	r8,248(sp)
   1057c:	10046a26 	beq	r2,zero,11728 <___svfprintf_internal_r+0x1e30>
   10580:	1405c83a 	sub	r2,r2,r16
   10584:	d8802b15 	stw	r2,172(sp)
   10588:	1003ea16 	blt	r2,zero,11534 <___svfprintf_internal_r+0x1c3c>
   1058c:	df002783 	ldbu	fp,158(sp)
   10590:	d8802915 	stw	r2,164(sp)
   10594:	dd002e15 	stw	r20,184(sp)
   10598:	d8002a15 	stw	zero,168(sp)
   1059c:	d8003215 	stw	zero,200(sp)
   105a0:	003e9306 	br	fff0 <__alt_mem_epcs_flash_controller_0+0xff80eff0>
   105a4:	8025883a 	mov	r18,r16
   105a8:	dc002903 	ldbu	r16,164(sp)
   105ac:	e011883a 	mov	r8,fp
   105b0:	84003fcc 	andi	r16,r16,255
   105b4:	803f7c26 	beq	r16,zero,103a8 <__alt_mem_epcs_flash_controller_0+0xff80f3a8>
   105b8:	d8c02b03 	ldbu	r3,172(sp)
   105bc:	d8c02785 	stb	r3,158(sp)
   105c0:	003f7906 	br	103a8 <__alt_mem_epcs_flash_controller_0+0xff80f3a8>
   105c4:	8025883a 	mov	r18,r16
   105c8:	dc002903 	ldbu	r16,164(sp)
   105cc:	e011883a 	mov	r8,fp
   105d0:	84003fcc 	andi	r16,r16,255
   105d4:	8005741e 	bne	r16,zero,11ba8 <___svfprintf_internal_r+0x22b0>
   105d8:	010000b4 	movhi	r4,2
   105dc:	21376f04 	addi	r4,r4,-8772
   105e0:	d9003a15 	stw	r4,232(sp)
   105e4:	9080080c 	andi	r2,r18,32
   105e8:	103f8e1e 	bne	r2,zero,10424 <__alt_mem_epcs_flash_controller_0+0xff80f424>
   105ec:	9080040c 	andi	r2,r18,16
   105f0:	1002a726 	beq	r2,zero,11090 <___svfprintf_internal_r+0x1798>
   105f4:	d8802e17 	ldw	r2,184(sp)
   105f8:	002d883a 	mov	r22,zero
   105fc:	15000017 	ldw	r20,0(r2)
   10600:	10800104 	addi	r2,r2,4
   10604:	d8802e15 	stw	r2,184(sp)
   10608:	003f8b06 	br	10438 <__alt_mem_epcs_flash_controller_0+0xff80f438>
   1060c:	84000054 	ori	r16,r16,1
   10610:	bc400007 	ldb	r17,0(r23)
   10614:	003d0d06 	br	fa4c <__alt_mem_epcs_flash_controller_0+0xff80ea4c>
   10618:	d8802b07 	ldb	r2,172(sp)
   1061c:	1002a41e 	bne	r2,zero,110b0 <___svfprintf_internal_r+0x17b8>
   10620:	00c00044 	movi	r3,1
   10624:	d8c02905 	stb	r3,164(sp)
   10628:	00c00804 	movi	r3,32
   1062c:	d8c02b05 	stb	r3,172(sp)
   10630:	bc400007 	ldb	r17,0(r23)
   10634:	003d0506 	br	fa4c <__alt_mem_epcs_flash_controller_0+0xff80ea4c>
   10638:	8025883a 	mov	r18,r16
   1063c:	dc002903 	ldbu	r16,164(sp)
   10640:	e011883a 	mov	r8,fp
   10644:	84003fcc 	andi	r16,r16,255
   10648:	803e0626 	beq	r16,zero,fe64 <__alt_mem_epcs_flash_controller_0+0xff80ee64>
   1064c:	d8c02b03 	ldbu	r3,172(sp)
   10650:	d8c02785 	stb	r3,158(sp)
   10654:	003e0306 	br	fe64 <__alt_mem_epcs_flash_controller_0+0xff80ee64>
   10658:	bc400007 	ldb	r17,0(r23)
   1065c:	00801b04 	movi	r2,108
   10660:	88830a26 	beq	r17,r2,1128c <___svfprintf_internal_r+0x1994>
   10664:	84000414 	ori	r16,r16,16
   10668:	003cf806 	br	fa4c <__alt_mem_epcs_flash_controller_0+0xff80ea4c>
   1066c:	8025883a 	mov	r18,r16
   10670:	dc002903 	ldbu	r16,164(sp)
   10674:	e011883a 	mov	r8,fp
   10678:	84003fcc 	andi	r16,r16,255
   1067c:	8005471e 	bne	r16,zero,11b9c <___svfprintf_internal_r+0x22a4>
   10680:	9080080c 	andi	r2,r18,32
   10684:	10028c26 	beq	r2,zero,110b8 <___svfprintf_internal_r+0x17c0>
   10688:	d9002e17 	ldw	r4,184(sp)
   1068c:	d9402f17 	ldw	r5,188(sp)
   10690:	20800017 	ldw	r2,0(r4)
   10694:	2807d7fa 	srai	r3,r5,31
   10698:	21000104 	addi	r4,r4,4
   1069c:	d9002e15 	stw	r4,184(sp)
   106a0:	11400015 	stw	r5,0(r2)
   106a4:	10c00115 	stw	r3,4(r2)
   106a8:	003cbe06 	br	f9a4 <__alt_mem_epcs_flash_controller_0+0xff80e9a4>
   106ac:	84001014 	ori	r16,r16,64
   106b0:	bc400007 	ldb	r17,0(r23)
   106b4:	003ce506 	br	fa4c <__alt_mem_epcs_flash_controller_0+0xff80ea4c>
   106b8:	010000b4 	movhi	r4,2
   106bc:	21376f04 	addi	r4,r4,-8772
   106c0:	0039883a 	mov	fp,zero
   106c4:	d9003a15 	stw	r4,232(sp)
   106c8:	04401e04 	movi	r17,120
   106cc:	003f6906 	br	10474 <__alt_mem_epcs_flash_controller_0+0xff80f474>
   106d0:	8025883a 	mov	r18,r16
   106d4:	dc002903 	ldbu	r16,164(sp)
   106d8:	e011883a 	mov	r8,fp
   106dc:	84003fcc 	andi	r16,r16,255
   106e0:	8005261e 	bne	r16,zero,11b7c <___svfprintf_internal_r+0x2284>
   106e4:	883d6526 	beq	r17,zero,fc7c <__alt_mem_epcs_flash_controller_0+0xff80ec7c>
   106e8:	00c00044 	movi	r3,1
   106ec:	d8c02915 	stw	r3,164(sp)
   106f0:	dc401405 	stb	r17,80(sp)
   106f4:	d8002785 	stb	zero,158(sp)
   106f8:	003f7a06 	br	104e4 <__alt_mem_epcs_flash_controller_0+0xff80f4e4>
   106fc:	010000b4 	movhi	r4,2
   10700:	21376f04 	addi	r4,r4,-8772
   10704:	d9003a15 	stw	r4,232(sp)
   10708:	d8c02e15 	stw	r3,184(sp)
   1070c:	1025883a 	mov	r18,r2
   10710:	04401e04 	movi	r17,120
   10714:	a584b03a 	or	r2,r20,r22
   10718:	1000fa1e 	bne	r2,zero,10b04 <___svfprintf_internal_r+0x120c>
   1071c:	0039883a 	mov	fp,zero
   10720:	00800084 	movi	r2,2
   10724:	10803fcc 	andi	r2,r2,255
   10728:	00c00044 	movi	r3,1
   1072c:	10c21626 	beq	r2,r3,10f88 <___svfprintf_internal_r+0x1690>
   10730:	00c00084 	movi	r3,2
   10734:	10fe0e1e 	bne	r2,r3,ff70 <__alt_mem_epcs_flash_controller_0+0xff80ef70>
   10738:	003d4606 	br	fc54 <__alt_mem_epcs_flash_controller_0+0xff80ec54>
   1073c:	d8c02017 	ldw	r3,128(sp)
   10740:	003e7306 	br	10110 <__alt_mem_epcs_flash_controller_0+0xff80f110>
   10744:	00801944 	movi	r2,101
   10748:	14407c0e 	bge	r2,r17,1093c <___svfprintf_internal_r+0x1044>
   1074c:	d9003617 	ldw	r4,216(sp)
   10750:	d9403717 	ldw	r5,220(sp)
   10754:	000d883a 	mov	r6,zero
   10758:	000f883a 	mov	r7,zero
   1075c:	d8c03d15 	stw	r3,244(sp)
   10760:	da003e15 	stw	r8,248(sp)
   10764:	00180a80 	call	180a8 <__eqdf2>
   10768:	d8c03d17 	ldw	r3,244(sp)
   1076c:	da003e17 	ldw	r8,248(sp)
   10770:	1000f51e 	bne	r2,zero,10b48 <___svfprintf_internal_r+0x1250>
   10774:	d8801f17 	ldw	r2,124(sp)
   10778:	010000b4 	movhi	r4,2
   1077c:	21377604 	addi	r4,r4,-8744
   10780:	18c00044 	addi	r3,r3,1
   10784:	10800044 	addi	r2,r2,1
   10788:	41000015 	stw	r4,0(r8)
   1078c:	01000044 	movi	r4,1
   10790:	41000115 	stw	r4,4(r8)
   10794:	d8c02015 	stw	r3,128(sp)
   10798:	d8801f15 	stw	r2,124(sp)
   1079c:	010001c4 	movi	r4,7
   107a0:	20826616 	blt	r4,r2,1113c <___svfprintf_internal_r+0x1844>
   107a4:	42000204 	addi	r8,r8,8
   107a8:	d8802617 	ldw	r2,152(sp)
   107ac:	d9403317 	ldw	r5,204(sp)
   107b0:	11400216 	blt	r2,r5,107bc <___svfprintf_internal_r+0xec4>
   107b4:	9080004c 	andi	r2,r18,1
   107b8:	103eb326 	beq	r2,zero,10288 <__alt_mem_epcs_flash_controller_0+0xff80f288>
   107bc:	d8803817 	ldw	r2,224(sp)
   107c0:	d9003417 	ldw	r4,208(sp)
   107c4:	d9403817 	ldw	r5,224(sp)
   107c8:	1887883a 	add	r3,r3,r2
   107cc:	d8801f17 	ldw	r2,124(sp)
   107d0:	41000015 	stw	r4,0(r8)
   107d4:	41400115 	stw	r5,4(r8)
   107d8:	10800044 	addi	r2,r2,1
   107dc:	d8c02015 	stw	r3,128(sp)
   107e0:	d8801f15 	stw	r2,124(sp)
   107e4:	010001c4 	movi	r4,7
   107e8:	2082af16 	blt	r4,r2,112a8 <___svfprintf_internal_r+0x19b0>
   107ec:	42000204 	addi	r8,r8,8
   107f0:	d8803317 	ldw	r2,204(sp)
   107f4:	143fffc4 	addi	r16,r2,-1
   107f8:	043ea30e 	bge	zero,r16,10288 <__alt_mem_epcs_flash_controller_0+0xff80f288>
   107fc:	04400404 	movi	r17,16
   10800:	d8801f17 	ldw	r2,124(sp)
   10804:	8c00860e 	bge	r17,r16,10a20 <___svfprintf_internal_r+0x1128>
   10808:	014000b4 	movhi	r5,2
   1080c:	29788f84 	addi	r5,r5,-7618
   10810:	d9402c15 	stw	r5,176(sp)
   10814:	058001c4 	movi	r22,7
   10818:	dd002d17 	ldw	r20,180(sp)
   1081c:	00000306 	br	1082c <___svfprintf_internal_r+0xf34>
   10820:	42000204 	addi	r8,r8,8
   10824:	843ffc04 	addi	r16,r16,-16
   10828:	8c00800e 	bge	r17,r16,10a2c <___svfprintf_internal_r+0x1134>
   1082c:	18c00404 	addi	r3,r3,16
   10830:	10800044 	addi	r2,r2,1
   10834:	45400015 	stw	r21,0(r8)
   10838:	44400115 	stw	r17,4(r8)
   1083c:	d8c02015 	stw	r3,128(sp)
   10840:	d8801f15 	stw	r2,124(sp)
   10844:	b0bff60e 	bge	r22,r2,10820 <__alt_mem_epcs_flash_controller_0+0xff80f820>
   10848:	d9801e04 	addi	r6,sp,120
   1084c:	a00b883a 	mov	r5,r20
   10850:	9809883a 	mov	r4,r19
   10854:	00147980 	call	14798 <__ssprint_r>
   10858:	103d0e1e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   1085c:	d8c02017 	ldw	r3,128(sp)
   10860:	d8801f17 	ldw	r2,124(sp)
   10864:	da000404 	addi	r8,sp,16
   10868:	003fee06 	br	10824 <__alt_mem_epcs_flash_controller_0+0xff80f824>
   1086c:	d9403117 	ldw	r5,196(sp)
   10870:	d8802917 	ldw	r2,164(sp)
   10874:	28adc83a 	sub	r22,r5,r2
   10878:	05be430e 	bge	zero,r22,10188 <__alt_mem_epcs_flash_controller_0+0xff80f188>
   1087c:	07000404 	movi	fp,16
   10880:	d8801f17 	ldw	r2,124(sp)
   10884:	e583a20e 	bge	fp,r22,11710 <___svfprintf_internal_r+0x1e18>
   10888:	014000b4 	movhi	r5,2
   1088c:	29788f84 	addi	r5,r5,-7618
   10890:	dc403015 	stw	r17,192(sp)
   10894:	d9402c15 	stw	r5,176(sp)
   10898:	b023883a 	mov	r17,r22
   1089c:	050001c4 	movi	r20,7
   108a0:	902d883a 	mov	r22,r18
   108a4:	8025883a 	mov	r18,r16
   108a8:	dc002d17 	ldw	r16,180(sp)
   108ac:	00000306 	br	108bc <___svfprintf_internal_r+0xfc4>
   108b0:	8c7ffc04 	addi	r17,r17,-16
   108b4:	42000204 	addi	r8,r8,8
   108b8:	e440110e 	bge	fp,r17,10900 <___svfprintf_internal_r+0x1008>
   108bc:	18c00404 	addi	r3,r3,16
   108c0:	10800044 	addi	r2,r2,1
   108c4:	45400015 	stw	r21,0(r8)
   108c8:	47000115 	stw	fp,4(r8)
   108cc:	d8c02015 	stw	r3,128(sp)
   108d0:	d8801f15 	stw	r2,124(sp)
   108d4:	a0bff60e 	bge	r20,r2,108b0 <__alt_mem_epcs_flash_controller_0+0xff80f8b0>
   108d8:	d9801e04 	addi	r6,sp,120
   108dc:	800b883a 	mov	r5,r16
   108e0:	9809883a 	mov	r4,r19
   108e4:	00147980 	call	14798 <__ssprint_r>
   108e8:	103cea1e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   108ec:	8c7ffc04 	addi	r17,r17,-16
   108f0:	d8c02017 	ldw	r3,128(sp)
   108f4:	d8801f17 	ldw	r2,124(sp)
   108f8:	da000404 	addi	r8,sp,16
   108fc:	e47fef16 	blt	fp,r17,108bc <__alt_mem_epcs_flash_controller_0+0xff80f8bc>
   10900:	9021883a 	mov	r16,r18
   10904:	b025883a 	mov	r18,r22
   10908:	882d883a 	mov	r22,r17
   1090c:	dc403017 	ldw	r17,192(sp)
   10910:	d9002c17 	ldw	r4,176(sp)
   10914:	1d87883a 	add	r3,r3,r22
   10918:	10800044 	addi	r2,r2,1
   1091c:	41000015 	stw	r4,0(r8)
   10920:	45800115 	stw	r22,4(r8)
   10924:	d8c02015 	stw	r3,128(sp)
   10928:	d8801f15 	stw	r2,124(sp)
   1092c:	010001c4 	movi	r4,7
   10930:	20819a16 	blt	r4,r2,10f9c <___svfprintf_internal_r+0x16a4>
   10934:	42000204 	addi	r8,r8,8
   10938:	003e1306 	br	10188 <__alt_mem_epcs_flash_controller_0+0xff80f188>
   1093c:	d9403317 	ldw	r5,204(sp)
   10940:	00800044 	movi	r2,1
   10944:	18c00044 	addi	r3,r3,1
   10948:	1141710e 	bge	r2,r5,10f10 <___svfprintf_internal_r+0x1618>
   1094c:	dc401f17 	ldw	r17,124(sp)
   10950:	00800044 	movi	r2,1
   10954:	40800115 	stw	r2,4(r8)
   10958:	8c400044 	addi	r17,r17,1
   1095c:	44000015 	stw	r16,0(r8)
   10960:	d8c02015 	stw	r3,128(sp)
   10964:	dc401f15 	stw	r17,124(sp)
   10968:	008001c4 	movi	r2,7
   1096c:	14417416 	blt	r2,r17,10f40 <___svfprintf_internal_r+0x1648>
   10970:	42000204 	addi	r8,r8,8
   10974:	d8803817 	ldw	r2,224(sp)
   10978:	d9003417 	ldw	r4,208(sp)
   1097c:	8c400044 	addi	r17,r17,1
   10980:	10c7883a 	add	r3,r2,r3
   10984:	40800115 	stw	r2,4(r8)
   10988:	41000015 	stw	r4,0(r8)
   1098c:	d8c02015 	stw	r3,128(sp)
   10990:	dc401f15 	stw	r17,124(sp)
   10994:	008001c4 	movi	r2,7
   10998:	14417216 	blt	r2,r17,10f64 <___svfprintf_internal_r+0x166c>
   1099c:	45800204 	addi	r22,r8,8
   109a0:	d9003617 	ldw	r4,216(sp)
   109a4:	d9403717 	ldw	r5,220(sp)
   109a8:	000d883a 	mov	r6,zero
   109ac:	000f883a 	mov	r7,zero
   109b0:	d8c03d15 	stw	r3,244(sp)
   109b4:	00180a80 	call	180a8 <__eqdf2>
   109b8:	d8c03d17 	ldw	r3,244(sp)
   109bc:	1000b326 	beq	r2,zero,10c8c <___svfprintf_internal_r+0x1394>
   109c0:	d9403317 	ldw	r5,204(sp)
   109c4:	84000044 	addi	r16,r16,1
   109c8:	8c400044 	addi	r17,r17,1
   109cc:	28bfffc4 	addi	r2,r5,-1
   109d0:	1887883a 	add	r3,r3,r2
   109d4:	b0800115 	stw	r2,4(r22)
   109d8:	b4000015 	stw	r16,0(r22)
   109dc:	d8c02015 	stw	r3,128(sp)
   109e0:	dc401f15 	stw	r17,124(sp)
   109e4:	008001c4 	movi	r2,7
   109e8:	1440d216 	blt	r2,r17,10d34 <___svfprintf_internal_r+0x143c>
   109ec:	b5800204 	addi	r22,r22,8
   109f0:	d9003b17 	ldw	r4,236(sp)
   109f4:	df0022c4 	addi	fp,sp,139
   109f8:	8c400044 	addi	r17,r17,1
   109fc:	20c7883a 	add	r3,r4,r3
   10a00:	b7000015 	stw	fp,0(r22)
   10a04:	b1000115 	stw	r4,4(r22)
   10a08:	d8c02015 	stw	r3,128(sp)
   10a0c:	dc401f15 	stw	r17,124(sp)
   10a10:	008001c4 	movi	r2,7
   10a14:	14400e16 	blt	r2,r17,10a50 <___svfprintf_internal_r+0x1158>
   10a18:	b2000204 	addi	r8,r22,8
   10a1c:	003e1a06 	br	10288 <__alt_mem_epcs_flash_controller_0+0xff80f288>
   10a20:	010000b4 	movhi	r4,2
   10a24:	21388f84 	addi	r4,r4,-7618
   10a28:	d9002c15 	stw	r4,176(sp)
   10a2c:	d9002c17 	ldw	r4,176(sp)
   10a30:	1c07883a 	add	r3,r3,r16
   10a34:	44000115 	stw	r16,4(r8)
   10a38:	41000015 	stw	r4,0(r8)
   10a3c:	10800044 	addi	r2,r2,1
   10a40:	d8c02015 	stw	r3,128(sp)
   10a44:	d8801f15 	stw	r2,124(sp)
   10a48:	010001c4 	movi	r4,7
   10a4c:	20be0d0e 	bge	r4,r2,10284 <__alt_mem_epcs_flash_controller_0+0xff80f284>
   10a50:	d9402d17 	ldw	r5,180(sp)
   10a54:	d9801e04 	addi	r6,sp,120
   10a58:	9809883a 	mov	r4,r19
   10a5c:	00147980 	call	14798 <__ssprint_r>
   10a60:	103c8c1e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   10a64:	d8c02017 	ldw	r3,128(sp)
   10a68:	da000404 	addi	r8,sp,16
   10a6c:	003e0606 	br	10288 <__alt_mem_epcs_flash_controller_0+0xff80f288>
   10a70:	d9402d17 	ldw	r5,180(sp)
   10a74:	d9801e04 	addi	r6,sp,120
   10a78:	9809883a 	mov	r4,r19
   10a7c:	00147980 	call	14798 <__ssprint_r>
   10a80:	103e3d26 	beq	r2,zero,10378 <__alt_mem_epcs_flash_controller_0+0xff80f378>
   10a84:	003c8306 	br	fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   10a88:	d9402d17 	ldw	r5,180(sp)
   10a8c:	d9801e04 	addi	r6,sp,120
   10a90:	9809883a 	mov	r4,r19
   10a94:	00147980 	call	14798 <__ssprint_r>
   10a98:	103c7e1e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   10a9c:	d8c02017 	ldw	r3,128(sp)
   10aa0:	da000404 	addi	r8,sp,16
   10aa4:	003deb06 	br	10254 <__alt_mem_epcs_flash_controller_0+0xff80f254>
   10aa8:	d9402d17 	ldw	r5,180(sp)
   10aac:	d9801e04 	addi	r6,sp,120
   10ab0:	9809883a 	mov	r4,r19
   10ab4:	00147980 	call	14798 <__ssprint_r>
   10ab8:	103c761e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   10abc:	d8c02017 	ldw	r3,128(sp)
   10ac0:	da000404 	addi	r8,sp,16
   10ac4:	003d9f06 	br	10144 <__alt_mem_epcs_flash_controller_0+0xff80f144>
   10ac8:	d9402d17 	ldw	r5,180(sp)
   10acc:	d9801e04 	addi	r6,sp,120
   10ad0:	9809883a 	mov	r4,r19
   10ad4:	00147980 	call	14798 <__ssprint_r>
   10ad8:	103c6e1e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   10adc:	d8c02017 	ldw	r3,128(sp)
   10ae0:	da000404 	addi	r8,sp,16
   10ae4:	003da506 	br	1017c <__alt_mem_epcs_flash_controller_0+0xff80f17c>
   10ae8:	d9402a17 	ldw	r5,168(sp)
   10aec:	d8002785 	stb	zero,158(sp)
   10af0:	283f0816 	blt	r5,zero,10714 <__alt_mem_epcs_flash_controller_0+0xff80f714>
   10af4:	00ffdfc4 	movi	r3,-129
   10af8:	a584b03a 	or	r2,r20,r22
   10afc:	90e4703a 	and	r18,r18,r3
   10b00:	103c5126 	beq	r2,zero,fc48 <__alt_mem_epcs_flash_controller_0+0xff80ec48>
   10b04:	0039883a 	mov	fp,zero
   10b08:	003e5a06 	br	10474 <__alt_mem_epcs_flash_controller_0+0xff80f474>
   10b0c:	9080040c 	andi	r2,r18,16
   10b10:	10013d26 	beq	r2,zero,11008 <___svfprintf_internal_r+0x1710>
   10b14:	d8c02e17 	ldw	r3,184(sp)
   10b18:	d9002a17 	ldw	r4,168(sp)
   10b1c:	d8002785 	stb	zero,158(sp)
   10b20:	18800104 	addi	r2,r3,4
   10b24:	1d000017 	ldw	r20,0(r3)
   10b28:	002d883a 	mov	r22,zero
   10b2c:	20013f16 	blt	r4,zero,1102c <___svfprintf_internal_r+0x1734>
   10b30:	00ffdfc4 	movi	r3,-129
   10b34:	d8802e15 	stw	r2,184(sp)
   10b38:	90e4703a 	and	r18,r18,r3
   10b3c:	a03d0926 	beq	r20,zero,ff64 <__alt_mem_epcs_flash_controller_0+0xff80ef64>
   10b40:	0039883a 	mov	fp,zero
   10b44:	003d0c06 	br	ff78 <__alt_mem_epcs_flash_controller_0+0xff80ef78>
   10b48:	dc402617 	ldw	r17,152(sp)
   10b4c:	0441830e 	bge	zero,r17,1115c <___svfprintf_internal_r+0x1864>
   10b50:	dc403217 	ldw	r17,200(sp)
   10b54:	d8803317 	ldw	r2,204(sp)
   10b58:	1440010e 	bge	r2,r17,10b60 <___svfprintf_internal_r+0x1268>
   10b5c:	1023883a 	mov	r17,r2
   10b60:	04400a0e 	bge	zero,r17,10b8c <___svfprintf_internal_r+0x1294>
   10b64:	d8801f17 	ldw	r2,124(sp)
   10b68:	1c47883a 	add	r3,r3,r17
   10b6c:	44000015 	stw	r16,0(r8)
   10b70:	10800044 	addi	r2,r2,1
   10b74:	44400115 	stw	r17,4(r8)
   10b78:	d8c02015 	stw	r3,128(sp)
   10b7c:	d8801f15 	stw	r2,124(sp)
   10b80:	010001c4 	movi	r4,7
   10b84:	20827516 	blt	r4,r2,1155c <___svfprintf_internal_r+0x1c64>
   10b88:	42000204 	addi	r8,r8,8
   10b8c:	88027b16 	blt	r17,zero,1157c <___svfprintf_internal_r+0x1c84>
   10b90:	d9003217 	ldw	r4,200(sp)
   10b94:	2463c83a 	sub	r17,r4,r17
   10b98:	0440990e 	bge	zero,r17,10e00 <___svfprintf_internal_r+0x1508>
   10b9c:	05800404 	movi	r22,16
   10ba0:	d8801f17 	ldw	r2,124(sp)
   10ba4:	b441530e 	bge	r22,r17,110f4 <___svfprintf_internal_r+0x17fc>
   10ba8:	010000b4 	movhi	r4,2
   10bac:	21388f84 	addi	r4,r4,-7618
   10bb0:	d9002c15 	stw	r4,176(sp)
   10bb4:	070001c4 	movi	fp,7
   10bb8:	dd002d17 	ldw	r20,180(sp)
   10bbc:	00000306 	br	10bcc <___svfprintf_internal_r+0x12d4>
   10bc0:	42000204 	addi	r8,r8,8
   10bc4:	8c7ffc04 	addi	r17,r17,-16
   10bc8:	b4414d0e 	bge	r22,r17,11100 <___svfprintf_internal_r+0x1808>
   10bcc:	18c00404 	addi	r3,r3,16
   10bd0:	10800044 	addi	r2,r2,1
   10bd4:	45400015 	stw	r21,0(r8)
   10bd8:	45800115 	stw	r22,4(r8)
   10bdc:	d8c02015 	stw	r3,128(sp)
   10be0:	d8801f15 	stw	r2,124(sp)
   10be4:	e0bff60e 	bge	fp,r2,10bc0 <__alt_mem_epcs_flash_controller_0+0xff80fbc0>
   10be8:	d9801e04 	addi	r6,sp,120
   10bec:	a00b883a 	mov	r5,r20
   10bf0:	9809883a 	mov	r4,r19
   10bf4:	00147980 	call	14798 <__ssprint_r>
   10bf8:	103c261e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   10bfc:	d8c02017 	ldw	r3,128(sp)
   10c00:	d8801f17 	ldw	r2,124(sp)
   10c04:	da000404 	addi	r8,sp,16
   10c08:	003fee06 	br	10bc4 <__alt_mem_epcs_flash_controller_0+0xff80fbc4>
   10c0c:	d9402d17 	ldw	r5,180(sp)
   10c10:	d9801e04 	addi	r6,sp,120
   10c14:	9809883a 	mov	r4,r19
   10c18:	00147980 	call	14798 <__ssprint_r>
   10c1c:	103c1d1e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   10c20:	d8c02017 	ldw	r3,128(sp)
   10c24:	df002787 	ldb	fp,158(sp)
   10c28:	da000404 	addi	r8,sp,16
   10c2c:	003d3806 	br	10110 <__alt_mem_epcs_flash_controller_0+0xff80f110>
   10c30:	9080040c 	andi	r2,r18,16
   10c34:	10005c26 	beq	r2,zero,10da8 <___svfprintf_internal_r+0x14b0>
   10c38:	d8c02e17 	ldw	r3,184(sp)
   10c3c:	d9002a17 	ldw	r4,168(sp)
   10c40:	d8002785 	stb	zero,158(sp)
   10c44:	18800104 	addi	r2,r3,4
   10c48:	1d000017 	ldw	r20,0(r3)
   10c4c:	002d883a 	mov	r22,zero
   10c50:	20005e16 	blt	r4,zero,10dcc <___svfprintf_internal_r+0x14d4>
   10c54:	00ffdfc4 	movi	r3,-129
   10c58:	d8802e15 	stw	r2,184(sp)
   10c5c:	90e4703a 	and	r18,r18,r3
   10c60:	0039883a 	mov	fp,zero
   10c64:	a03ddf26 	beq	r20,zero,103e4 <__alt_mem_epcs_flash_controller_0+0xff80f3e4>
   10c68:	00800244 	movi	r2,9
   10c6c:	153c8e36 	bltu	r2,r20,fea8 <__alt_mem_epcs_flash_controller_0+0xff80eea8>
   10c70:	a5000c04 	addi	r20,r20,48
   10c74:	dc001dc4 	addi	r16,sp,119
   10c78:	dd001dc5 	stb	r20,119(sp)
   10c7c:	d8c02817 	ldw	r3,160(sp)
   10c80:	1c07c83a 	sub	r3,r3,r16
   10c84:	d8c02b15 	stw	r3,172(sp)
   10c88:	003cd306 	br	ffd8 <__alt_mem_epcs_flash_controller_0+0xff80efd8>
   10c8c:	d8803317 	ldw	r2,204(sp)
   10c90:	143fffc4 	addi	r16,r2,-1
   10c94:	043f560e 	bge	zero,r16,109f0 <__alt_mem_epcs_flash_controller_0+0xff80f9f0>
   10c98:	07000404 	movi	fp,16
   10c9c:	e403530e 	bge	fp,r16,119ec <___svfprintf_internal_r+0x20f4>
   10ca0:	014000b4 	movhi	r5,2
   10ca4:	29788f84 	addi	r5,r5,-7618
   10ca8:	d9402c15 	stw	r5,176(sp)
   10cac:	01c001c4 	movi	r7,7
   10cb0:	dd002d17 	ldw	r20,180(sp)
   10cb4:	00000306 	br	10cc4 <___svfprintf_internal_r+0x13cc>
   10cb8:	843ffc04 	addi	r16,r16,-16
   10cbc:	b5800204 	addi	r22,r22,8
   10cc0:	e400130e 	bge	fp,r16,10d10 <___svfprintf_internal_r+0x1418>
   10cc4:	18c00404 	addi	r3,r3,16
   10cc8:	8c400044 	addi	r17,r17,1
   10ccc:	b5400015 	stw	r21,0(r22)
   10cd0:	b7000115 	stw	fp,4(r22)
   10cd4:	d8c02015 	stw	r3,128(sp)
   10cd8:	dc401f15 	stw	r17,124(sp)
   10cdc:	3c7ff60e 	bge	r7,r17,10cb8 <__alt_mem_epcs_flash_controller_0+0xff80fcb8>
   10ce0:	d9801e04 	addi	r6,sp,120
   10ce4:	a00b883a 	mov	r5,r20
   10ce8:	9809883a 	mov	r4,r19
   10cec:	d9c03d15 	stw	r7,244(sp)
   10cf0:	00147980 	call	14798 <__ssprint_r>
   10cf4:	d9c03d17 	ldw	r7,244(sp)
   10cf8:	103be61e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   10cfc:	843ffc04 	addi	r16,r16,-16
   10d00:	d8c02017 	ldw	r3,128(sp)
   10d04:	dc401f17 	ldw	r17,124(sp)
   10d08:	dd800404 	addi	r22,sp,16
   10d0c:	e43fed16 	blt	fp,r16,10cc4 <__alt_mem_epcs_flash_controller_0+0xff80fcc4>
   10d10:	d8802c17 	ldw	r2,176(sp)
   10d14:	1c07883a 	add	r3,r3,r16
   10d18:	8c400044 	addi	r17,r17,1
   10d1c:	b0800015 	stw	r2,0(r22)
   10d20:	b4000115 	stw	r16,4(r22)
   10d24:	d8c02015 	stw	r3,128(sp)
   10d28:	dc401f15 	stw	r17,124(sp)
   10d2c:	008001c4 	movi	r2,7
   10d30:	147f2e0e 	bge	r2,r17,109ec <__alt_mem_epcs_flash_controller_0+0xff80f9ec>
   10d34:	d9402d17 	ldw	r5,180(sp)
   10d38:	d9801e04 	addi	r6,sp,120
   10d3c:	9809883a 	mov	r4,r19
   10d40:	00147980 	call	14798 <__ssprint_r>
   10d44:	103bd31e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   10d48:	d8c02017 	ldw	r3,128(sp)
   10d4c:	dc401f17 	ldw	r17,124(sp)
   10d50:	dd800404 	addi	r22,sp,16
   10d54:	003f2606 	br	109f0 <__alt_mem_epcs_flash_controller_0+0xff80f9f0>
   10d58:	9080040c 	andi	r2,r18,16
   10d5c:	1000c326 	beq	r2,zero,1106c <___svfprintf_internal_r+0x1774>
   10d60:	d9402e17 	ldw	r5,184(sp)
   10d64:	2d000017 	ldw	r20,0(r5)
   10d68:	29400104 	addi	r5,r5,4
   10d6c:	d9402e15 	stw	r5,184(sp)
   10d70:	a02dd7fa 	srai	r22,r20,31
   10d74:	b005883a 	mov	r2,r22
   10d78:	103c430e 	bge	r2,zero,fe88 <__alt_mem_epcs_flash_controller_0+0xff80ee88>
   10d7c:	d9402a17 	ldw	r5,168(sp)
   10d80:	0529c83a 	sub	r20,zero,r20
   10d84:	07000b44 	movi	fp,45
   10d88:	a004c03a 	cmpne	r2,r20,zero
   10d8c:	05adc83a 	sub	r22,zero,r22
   10d90:	df002785 	stb	fp,158(sp)
   10d94:	b0adc83a 	sub	r22,r22,r2
   10d98:	28022e16 	blt	r5,zero,11654 <___svfprintf_internal_r+0x1d5c>
   10d9c:	00bfdfc4 	movi	r2,-129
   10da0:	90a4703a 	and	r18,r18,r2
   10da4:	003c3f06 	br	fea4 <__alt_mem_epcs_flash_controller_0+0xff80eea4>
   10da8:	9080100c 	andi	r2,r18,64
   10dac:	d8002785 	stb	zero,158(sp)
   10db0:	10012526 	beq	r2,zero,11248 <___svfprintf_internal_r+0x1950>
   10db4:	d9402e17 	ldw	r5,184(sp)
   10db8:	d8c02a17 	ldw	r3,168(sp)
   10dbc:	002d883a 	mov	r22,zero
   10dc0:	28800104 	addi	r2,r5,4
   10dc4:	2d00000b 	ldhu	r20,0(r5)
   10dc8:	183fa20e 	bge	r3,zero,10c54 <__alt_mem_epcs_flash_controller_0+0xff80fc54>
   10dcc:	d8802e15 	stw	r2,184(sp)
   10dd0:	0039883a 	mov	fp,zero
   10dd4:	a584b03a 	or	r2,r20,r22
   10dd8:	103c321e 	bne	r2,zero,fea4 <__alt_mem_epcs_flash_controller_0+0xff80eea4>
   10ddc:	00800044 	movi	r2,1
   10de0:	003e5006 	br	10724 <__alt_mem_epcs_flash_controller_0+0xff80f724>
   10de4:	d9402d17 	ldw	r5,180(sp)
   10de8:	d9801e04 	addi	r6,sp,120
   10dec:	9809883a 	mov	r4,r19
   10df0:	00147980 	call	14798 <__ssprint_r>
   10df4:	103ba71e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   10df8:	d8c02017 	ldw	r3,128(sp)
   10dfc:	da000404 	addi	r8,sp,16
   10e00:	d9003217 	ldw	r4,200(sp)
   10e04:	d8802617 	ldw	r2,152(sp)
   10e08:	d9403317 	ldw	r5,204(sp)
   10e0c:	8123883a 	add	r17,r16,r4
   10e10:	11400216 	blt	r2,r5,10e1c <___svfprintf_internal_r+0x1524>
   10e14:	9100004c 	andi	r4,r18,1
   10e18:	20000d26 	beq	r4,zero,10e50 <___svfprintf_internal_r+0x1558>
   10e1c:	d9003817 	ldw	r4,224(sp)
   10e20:	d9403417 	ldw	r5,208(sp)
   10e24:	1907883a 	add	r3,r3,r4
   10e28:	d9001f17 	ldw	r4,124(sp)
   10e2c:	41400015 	stw	r5,0(r8)
   10e30:	d9403817 	ldw	r5,224(sp)
   10e34:	21000044 	addi	r4,r4,1
   10e38:	d8c02015 	stw	r3,128(sp)
   10e3c:	41400115 	stw	r5,4(r8)
   10e40:	d9001f15 	stw	r4,124(sp)
   10e44:	014001c4 	movi	r5,7
   10e48:	2901dc16 	blt	r5,r4,115bc <___svfprintf_internal_r+0x1cc4>
   10e4c:	42000204 	addi	r8,r8,8
   10e50:	d9003317 	ldw	r4,204(sp)
   10e54:	8121883a 	add	r16,r16,r4
   10e58:	2085c83a 	sub	r2,r4,r2
   10e5c:	8461c83a 	sub	r16,r16,r17
   10e60:	1400010e 	bge	r2,r16,10e68 <___svfprintf_internal_r+0x1570>
   10e64:	1021883a 	mov	r16,r2
   10e68:	04000a0e 	bge	zero,r16,10e94 <___svfprintf_internal_r+0x159c>
   10e6c:	d9001f17 	ldw	r4,124(sp)
   10e70:	1c07883a 	add	r3,r3,r16
   10e74:	44400015 	stw	r17,0(r8)
   10e78:	21000044 	addi	r4,r4,1
   10e7c:	44000115 	stw	r16,4(r8)
   10e80:	d8c02015 	stw	r3,128(sp)
   10e84:	d9001f15 	stw	r4,124(sp)
   10e88:	014001c4 	movi	r5,7
   10e8c:	2901e616 	blt	r5,r4,11628 <___svfprintf_internal_r+0x1d30>
   10e90:	42000204 	addi	r8,r8,8
   10e94:	8001f616 	blt	r16,zero,11670 <___svfprintf_internal_r+0x1d78>
   10e98:	1421c83a 	sub	r16,r2,r16
   10e9c:	043cfa0e 	bge	zero,r16,10288 <__alt_mem_epcs_flash_controller_0+0xff80f288>
   10ea0:	04400404 	movi	r17,16
   10ea4:	d8801f17 	ldw	r2,124(sp)
   10ea8:	8c3edd0e 	bge	r17,r16,10a20 <__alt_mem_epcs_flash_controller_0+0xff80fa20>
   10eac:	014000b4 	movhi	r5,2
   10eb0:	29788f84 	addi	r5,r5,-7618
   10eb4:	d9402c15 	stw	r5,176(sp)
   10eb8:	058001c4 	movi	r22,7
   10ebc:	dd002d17 	ldw	r20,180(sp)
   10ec0:	00000306 	br	10ed0 <___svfprintf_internal_r+0x15d8>
   10ec4:	42000204 	addi	r8,r8,8
   10ec8:	843ffc04 	addi	r16,r16,-16
   10ecc:	8c3ed70e 	bge	r17,r16,10a2c <__alt_mem_epcs_flash_controller_0+0xff80fa2c>
   10ed0:	18c00404 	addi	r3,r3,16
   10ed4:	10800044 	addi	r2,r2,1
   10ed8:	45400015 	stw	r21,0(r8)
   10edc:	44400115 	stw	r17,4(r8)
   10ee0:	d8c02015 	stw	r3,128(sp)
   10ee4:	d8801f15 	stw	r2,124(sp)
   10ee8:	b0bff60e 	bge	r22,r2,10ec4 <__alt_mem_epcs_flash_controller_0+0xff80fec4>
   10eec:	d9801e04 	addi	r6,sp,120
   10ef0:	a00b883a 	mov	r5,r20
   10ef4:	9809883a 	mov	r4,r19
   10ef8:	00147980 	call	14798 <__ssprint_r>
   10efc:	103b651e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   10f00:	d8c02017 	ldw	r3,128(sp)
   10f04:	d8801f17 	ldw	r2,124(sp)
   10f08:	da000404 	addi	r8,sp,16
   10f0c:	003fee06 	br	10ec8 <__alt_mem_epcs_flash_controller_0+0xff80fec8>
   10f10:	9088703a 	and	r4,r18,r2
   10f14:	203e8d1e 	bne	r4,zero,1094c <__alt_mem_epcs_flash_controller_0+0xff80f94c>
   10f18:	dc401f17 	ldw	r17,124(sp)
   10f1c:	40800115 	stw	r2,4(r8)
   10f20:	44000015 	stw	r16,0(r8)
   10f24:	8c400044 	addi	r17,r17,1
   10f28:	d8c02015 	stw	r3,128(sp)
   10f2c:	dc401f15 	stw	r17,124(sp)
   10f30:	008001c4 	movi	r2,7
   10f34:	147f7f16 	blt	r2,r17,10d34 <__alt_mem_epcs_flash_controller_0+0xff80fd34>
   10f38:	45800204 	addi	r22,r8,8
   10f3c:	003eac06 	br	109f0 <__alt_mem_epcs_flash_controller_0+0xff80f9f0>
   10f40:	d9402d17 	ldw	r5,180(sp)
   10f44:	d9801e04 	addi	r6,sp,120
   10f48:	9809883a 	mov	r4,r19
   10f4c:	00147980 	call	14798 <__ssprint_r>
   10f50:	103b501e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   10f54:	d8c02017 	ldw	r3,128(sp)
   10f58:	dc401f17 	ldw	r17,124(sp)
   10f5c:	da000404 	addi	r8,sp,16
   10f60:	003e8406 	br	10974 <__alt_mem_epcs_flash_controller_0+0xff80f974>
   10f64:	d9402d17 	ldw	r5,180(sp)
   10f68:	d9801e04 	addi	r6,sp,120
   10f6c:	9809883a 	mov	r4,r19
   10f70:	00147980 	call	14798 <__ssprint_r>
   10f74:	103b471e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   10f78:	d8c02017 	ldw	r3,128(sp)
   10f7c:	dc401f17 	ldw	r17,124(sp)
   10f80:	dd800404 	addi	r22,sp,16
   10f84:	003e8606 	br	109a0 <__alt_mem_epcs_flash_controller_0+0xff80f9a0>
   10f88:	0029883a 	mov	r20,zero
   10f8c:	a5000c04 	addi	r20,r20,48
   10f90:	dc001dc4 	addi	r16,sp,119
   10f94:	dd001dc5 	stb	r20,119(sp)
   10f98:	003f3806 	br	10c7c <__alt_mem_epcs_flash_controller_0+0xff80fc7c>
   10f9c:	d9402d17 	ldw	r5,180(sp)
   10fa0:	d9801e04 	addi	r6,sp,120
   10fa4:	9809883a 	mov	r4,r19
   10fa8:	00147980 	call	14798 <__ssprint_r>
   10fac:	103b391e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   10fb0:	d8c02017 	ldw	r3,128(sp)
   10fb4:	da000404 	addi	r8,sp,16
   10fb8:	003c7306 	br	10188 <__alt_mem_epcs_flash_controller_0+0xff80f188>
   10fbc:	d9003617 	ldw	r4,216(sp)
   10fc0:	d9403717 	ldw	r5,220(sp)
   10fc4:	da003e15 	stw	r8,248(sp)
   10fc8:	000bfbc0 	call	bfbc <__fpclassifyd>
   10fcc:	da003e17 	ldw	r8,248(sp)
   10fd0:	1000bd1e 	bne	r2,zero,112c8 <___svfprintf_internal_r+0x19d0>
   10fd4:	008011c4 	movi	r2,71
   10fd8:	14411e0e 	bge	r2,r17,11454 <___svfprintf_internal_r+0x1b5c>
   10fdc:	040000b4 	movhi	r16,2
   10fe0:	84376904 	addi	r16,r16,-8796
   10fe4:	00c000c4 	movi	r3,3
   10fe8:	00bfdfc4 	movi	r2,-129
   10fec:	d8c02915 	stw	r3,164(sp)
   10ff0:	90a4703a 	and	r18,r18,r2
   10ff4:	df002783 	ldbu	fp,158(sp)
   10ff8:	d8c02b15 	stw	r3,172(sp)
   10ffc:	d8002a15 	stw	zero,168(sp)
   11000:	d8003215 	stw	zero,200(sp)
   11004:	003bfa06 	br	fff0 <__alt_mem_epcs_flash_controller_0+0xff80eff0>
   11008:	9080100c 	andi	r2,r18,64
   1100c:	d8002785 	stb	zero,158(sp)
   11010:	10009426 	beq	r2,zero,11264 <___svfprintf_internal_r+0x196c>
   11014:	d9402e17 	ldw	r5,184(sp)
   11018:	d8c02a17 	ldw	r3,168(sp)
   1101c:	002d883a 	mov	r22,zero
   11020:	28800104 	addi	r2,r5,4
   11024:	2d00000b 	ldhu	r20,0(r5)
   11028:	183ec10e 	bge	r3,zero,10b30 <__alt_mem_epcs_flash_controller_0+0xff80fb30>
   1102c:	a586b03a 	or	r3,r20,r22
   11030:	d8802e15 	stw	r2,184(sp)
   11034:	183ec21e 	bne	r3,zero,10b40 <__alt_mem_epcs_flash_controller_0+0xff80fb40>
   11038:	0039883a 	mov	fp,zero
   1103c:	0005883a 	mov	r2,zero
   11040:	003db806 	br	10724 <__alt_mem_epcs_flash_controller_0+0xff80f724>
   11044:	d8c02e17 	ldw	r3,184(sp)
   11048:	d9002e17 	ldw	r4,184(sp)
   1104c:	d9402e17 	ldw	r5,184(sp)
   11050:	18c00017 	ldw	r3,0(r3)
   11054:	21000117 	ldw	r4,4(r4)
   11058:	29400204 	addi	r5,r5,8
   1105c:	d8c03615 	stw	r3,216(sp)
   11060:	d9003715 	stw	r4,220(sp)
   11064:	d9402e15 	stw	r5,184(sp)
   11068:	003b5a06 	br	fdd4 <__alt_mem_epcs_flash_controller_0+0xff80edd4>
   1106c:	9080100c 	andi	r2,r18,64
   11070:	10010726 	beq	r2,zero,11490 <___svfprintf_internal_r+0x1b98>
   11074:	d8802e17 	ldw	r2,184(sp)
   11078:	1500000f 	ldh	r20,0(r2)
   1107c:	10800104 	addi	r2,r2,4
   11080:	d8802e15 	stw	r2,184(sp)
   11084:	a02dd7fa 	srai	r22,r20,31
   11088:	b005883a 	mov	r2,r22
   1108c:	003b7d06 	br	fe84 <__alt_mem_epcs_flash_controller_0+0xff80ee84>
   11090:	9080100c 	andi	r2,r18,64
   11094:	10010526 	beq	r2,zero,114ac <___svfprintf_internal_r+0x1bb4>
   11098:	d8c02e17 	ldw	r3,184(sp)
   1109c:	002d883a 	mov	r22,zero
   110a0:	1d00000b 	ldhu	r20,0(r3)
   110a4:	18c00104 	addi	r3,r3,4
   110a8:	d8c02e15 	stw	r3,184(sp)
   110ac:	003ce206 	br	10438 <__alt_mem_epcs_flash_controller_0+0xff80f438>
   110b0:	bc400007 	ldb	r17,0(r23)
   110b4:	003a6506 	br	fa4c <__alt_mem_epcs_flash_controller_0+0xff80ea4c>
   110b8:	9080040c 	andi	r2,r18,16
   110bc:	10010126 	beq	r2,zero,114c4 <___svfprintf_internal_r+0x1bcc>
   110c0:	d8c02e17 	ldw	r3,184(sp)
   110c4:	d9002f17 	ldw	r4,188(sp)
   110c8:	18800017 	ldw	r2,0(r3)
   110cc:	18c00104 	addi	r3,r3,4
   110d0:	d8c02e15 	stw	r3,184(sp)
   110d4:	11000015 	stw	r4,0(r2)
   110d8:	003a3206 	br	f9a4 <__alt_mem_epcs_flash_controller_0+0xff80e9a4>
   110dc:	d9002a17 	ldw	r4,168(sp)
   110e0:	d8002785 	stb	zero,158(sp)
   110e4:	203d8d16 	blt	r4,zero,1071c <__alt_mem_epcs_flash_controller_0+0xff80f71c>
   110e8:	00bfdfc4 	movi	r2,-129
   110ec:	90a4703a 	and	r18,r18,r2
   110f0:	003ad506 	br	fc48 <__alt_mem_epcs_flash_controller_0+0xff80ec48>
   110f4:	014000b4 	movhi	r5,2
   110f8:	29788f84 	addi	r5,r5,-7618
   110fc:	d9402c15 	stw	r5,176(sp)
   11100:	d9402c17 	ldw	r5,176(sp)
   11104:	1c47883a 	add	r3,r3,r17
   11108:	10800044 	addi	r2,r2,1
   1110c:	41400015 	stw	r5,0(r8)
   11110:	44400115 	stw	r17,4(r8)
   11114:	d8c02015 	stw	r3,128(sp)
   11118:	d8801f15 	stw	r2,124(sp)
   1111c:	010001c4 	movi	r4,7
   11120:	20bf3016 	blt	r4,r2,10de4 <__alt_mem_epcs_flash_controller_0+0xff80fde4>
   11124:	42000204 	addi	r8,r8,8
   11128:	003f3506 	br	10e00 <__alt_mem_epcs_flash_controller_0+0xff80fe00>
   1112c:	010000b4 	movhi	r4,2
   11130:	21388f84 	addi	r4,r4,-7618
   11134:	d9002c15 	stw	r4,176(sp)
   11138:	003c3c06 	br	1022c <__alt_mem_epcs_flash_controller_0+0xff80f22c>
   1113c:	d9402d17 	ldw	r5,180(sp)
   11140:	d9801e04 	addi	r6,sp,120
   11144:	9809883a 	mov	r4,r19
   11148:	00147980 	call	14798 <__ssprint_r>
   1114c:	103ad11e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   11150:	d8c02017 	ldw	r3,128(sp)
   11154:	da000404 	addi	r8,sp,16
   11158:	003d9306 	br	107a8 <__alt_mem_epcs_flash_controller_0+0xff80f7a8>
   1115c:	d8801f17 	ldw	r2,124(sp)
   11160:	014000b4 	movhi	r5,2
   11164:	01000044 	movi	r4,1
   11168:	18c00044 	addi	r3,r3,1
   1116c:	10800044 	addi	r2,r2,1
   11170:	29777604 	addi	r5,r5,-8744
   11174:	41000115 	stw	r4,4(r8)
   11178:	41400015 	stw	r5,0(r8)
   1117c:	d8c02015 	stw	r3,128(sp)
   11180:	d8801f15 	stw	r2,124(sp)
   11184:	010001c4 	movi	r4,7
   11188:	2080b516 	blt	r4,r2,11460 <___svfprintf_internal_r+0x1b68>
   1118c:	42000204 	addi	r8,r8,8
   11190:	8800041e 	bne	r17,zero,111a4 <___svfprintf_internal_r+0x18ac>
   11194:	d8803317 	ldw	r2,204(sp)
   11198:	1000021e 	bne	r2,zero,111a4 <___svfprintf_internal_r+0x18ac>
   1119c:	9080004c 	andi	r2,r18,1
   111a0:	103c3926 	beq	r2,zero,10288 <__alt_mem_epcs_flash_controller_0+0xff80f288>
   111a4:	d9003817 	ldw	r4,224(sp)
   111a8:	d8801f17 	ldw	r2,124(sp)
   111ac:	d9403417 	ldw	r5,208(sp)
   111b0:	20c7883a 	add	r3,r4,r3
   111b4:	10800044 	addi	r2,r2,1
   111b8:	41000115 	stw	r4,4(r8)
   111bc:	41400015 	stw	r5,0(r8)
   111c0:	d8c02015 	stw	r3,128(sp)
   111c4:	d8801f15 	stw	r2,124(sp)
   111c8:	010001c4 	movi	r4,7
   111cc:	20818016 	blt	r4,r2,117d0 <___svfprintf_internal_r+0x1ed8>
   111d0:	42000204 	addi	r8,r8,8
   111d4:	0463c83a 	sub	r17,zero,r17
   111d8:	0440cb0e 	bge	zero,r17,11508 <___svfprintf_internal_r+0x1c10>
   111dc:	05800404 	movi	r22,16
   111e0:	b440e80e 	bge	r22,r17,11584 <___svfprintf_internal_r+0x1c8c>
   111e4:	014000b4 	movhi	r5,2
   111e8:	29788f84 	addi	r5,r5,-7618
   111ec:	d9402c15 	stw	r5,176(sp)
   111f0:	070001c4 	movi	fp,7
   111f4:	dd002d17 	ldw	r20,180(sp)
   111f8:	00000306 	br	11208 <___svfprintf_internal_r+0x1910>
   111fc:	42000204 	addi	r8,r8,8
   11200:	8c7ffc04 	addi	r17,r17,-16
   11204:	b440e20e 	bge	r22,r17,11590 <___svfprintf_internal_r+0x1c98>
   11208:	18c00404 	addi	r3,r3,16
   1120c:	10800044 	addi	r2,r2,1
   11210:	45400015 	stw	r21,0(r8)
   11214:	45800115 	stw	r22,4(r8)
   11218:	d8c02015 	stw	r3,128(sp)
   1121c:	d8801f15 	stw	r2,124(sp)
   11220:	e0bff60e 	bge	fp,r2,111fc <__alt_mem_epcs_flash_controller_0+0xff8101fc>
   11224:	d9801e04 	addi	r6,sp,120
   11228:	a00b883a 	mov	r5,r20
   1122c:	9809883a 	mov	r4,r19
   11230:	00147980 	call	14798 <__ssprint_r>
   11234:	103a971e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   11238:	d8c02017 	ldw	r3,128(sp)
   1123c:	d8801f17 	ldw	r2,124(sp)
   11240:	da000404 	addi	r8,sp,16
   11244:	003fee06 	br	11200 <__alt_mem_epcs_flash_controller_0+0xff810200>
   11248:	d9002e17 	ldw	r4,184(sp)
   1124c:	d9402a17 	ldw	r5,168(sp)
   11250:	002d883a 	mov	r22,zero
   11254:	20800104 	addi	r2,r4,4
   11258:	25000017 	ldw	r20,0(r4)
   1125c:	283e7d0e 	bge	r5,zero,10c54 <__alt_mem_epcs_flash_controller_0+0xff80fc54>
   11260:	003eda06 	br	10dcc <__alt_mem_epcs_flash_controller_0+0xff80fdcc>
   11264:	d9002e17 	ldw	r4,184(sp)
   11268:	d9402a17 	ldw	r5,168(sp)
   1126c:	002d883a 	mov	r22,zero
   11270:	20800104 	addi	r2,r4,4
   11274:	25000017 	ldw	r20,0(r4)
   11278:	283e2d0e 	bge	r5,zero,10b30 <__alt_mem_epcs_flash_controller_0+0xff80fb30>
   1127c:	003f6b06 	br	1102c <__alt_mem_epcs_flash_controller_0+0xff81002c>
   11280:	d8c02e15 	stw	r3,184(sp)
   11284:	0039883a 	mov	fp,zero
   11288:	003ed206 	br	10dd4 <__alt_mem_epcs_flash_controller_0+0xff80fdd4>
   1128c:	bc400043 	ldbu	r17,1(r23)
   11290:	84000814 	ori	r16,r16,32
   11294:	bdc00044 	addi	r23,r23,1
   11298:	8c403fcc 	andi	r17,r17,255
   1129c:	8c40201c 	xori	r17,r17,128
   112a0:	8c7fe004 	addi	r17,r17,-128
   112a4:	0039e906 	br	fa4c <__alt_mem_epcs_flash_controller_0+0xff80ea4c>
   112a8:	d9402d17 	ldw	r5,180(sp)
   112ac:	d9801e04 	addi	r6,sp,120
   112b0:	9809883a 	mov	r4,r19
   112b4:	00147980 	call	14798 <__ssprint_r>
   112b8:	103a761e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   112bc:	d8c02017 	ldw	r3,128(sp)
   112c0:	da000404 	addi	r8,sp,16
   112c4:	003d4a06 	br	107f0 <__alt_mem_epcs_flash_controller_0+0xff80f7f0>
   112c8:	d9002a17 	ldw	r4,168(sp)
   112cc:	05bff7c4 	movi	r22,-33
   112d0:	00bfffc4 	movi	r2,-1
   112d4:	8dac703a 	and	r22,r17,r22
   112d8:	20806a26 	beq	r4,r2,11484 <___svfprintf_internal_r+0x1b8c>
   112dc:	008011c4 	movi	r2,71
   112e0:	b0813726 	beq	r22,r2,117c0 <___svfprintf_internal_r+0x1ec8>
   112e4:	d9003717 	ldw	r4,220(sp)
   112e8:	90c04014 	ori	r3,r18,256
   112ec:	d8c02c15 	stw	r3,176(sp)
   112f0:	20015d16 	blt	r4,zero,11868 <___svfprintf_internal_r+0x1f70>
   112f4:	dd003717 	ldw	r20,220(sp)
   112f8:	d8002905 	stb	zero,164(sp)
   112fc:	00801984 	movi	r2,102
   11300:	88814026 	beq	r17,r2,11804 <___svfprintf_internal_r+0x1f0c>
   11304:	00801184 	movi	r2,70
   11308:	88817126 	beq	r17,r2,118d0 <___svfprintf_internal_r+0x1fd8>
   1130c:	00801144 	movi	r2,69
   11310:	b0816226 	beq	r22,r2,1189c <___svfprintf_internal_r+0x1fa4>
   11314:	d8c02a17 	ldw	r3,168(sp)
   11318:	d8802104 	addi	r2,sp,132
   1131c:	d8800315 	stw	r2,12(sp)
   11320:	d9403617 	ldw	r5,216(sp)
   11324:	d8802504 	addi	r2,sp,148
   11328:	d8800215 	stw	r2,8(sp)
   1132c:	d8802604 	addi	r2,sp,152
   11330:	d8c00015 	stw	r3,0(sp)
   11334:	d8800115 	stw	r2,4(sp)
   11338:	01c00084 	movi	r7,2
   1133c:	a00d883a 	mov	r6,r20
   11340:	9809883a 	mov	r4,r19
   11344:	d8c03d15 	stw	r3,244(sp)
   11348:	da003e15 	stw	r8,248(sp)
   1134c:	00075d00 	call	75d0 <_dtoa_r>
   11350:	1021883a 	mov	r16,r2
   11354:	008019c4 	movi	r2,103
   11358:	d8c03d17 	ldw	r3,244(sp)
   1135c:	da003e17 	ldw	r8,248(sp)
   11360:	8880e726 	beq	r17,r2,11700 <___svfprintf_internal_r+0x1e08>
   11364:	008011c4 	movi	r2,71
   11368:	8880d426 	beq	r17,r2,116bc <___svfprintf_internal_r+0x1dc4>
   1136c:	80f9883a 	add	fp,r16,r3
   11370:	d9003617 	ldw	r4,216(sp)
   11374:	000d883a 	mov	r6,zero
   11378:	000f883a 	mov	r7,zero
   1137c:	a00b883a 	mov	r5,r20
   11380:	da003e15 	stw	r8,248(sp)
   11384:	00180a80 	call	180a8 <__eqdf2>
   11388:	da003e17 	ldw	r8,248(sp)
   1138c:	1000e426 	beq	r2,zero,11720 <___svfprintf_internal_r+0x1e28>
   11390:	d8802117 	ldw	r2,132(sp)
   11394:	1700062e 	bgeu	r2,fp,113b0 <___svfprintf_internal_r+0x1ab8>
   11398:	01000c04 	movi	r4,48
   1139c:	10c00044 	addi	r3,r2,1
   113a0:	d8c02115 	stw	r3,132(sp)
   113a4:	11000005 	stb	r4,0(r2)
   113a8:	d8802117 	ldw	r2,132(sp)
   113ac:	173ffb36 	bltu	r2,fp,1139c <__alt_mem_epcs_flash_controller_0+0xff81039c>
   113b0:	1405c83a 	sub	r2,r2,r16
   113b4:	d8803315 	stw	r2,204(sp)
   113b8:	008011c4 	movi	r2,71
   113bc:	b080c526 	beq	r22,r2,116d4 <___svfprintf_internal_r+0x1ddc>
   113c0:	00801944 	movi	r2,101
   113c4:	1441d80e 	bge	r2,r17,11b28 <___svfprintf_internal_r+0x2230>
   113c8:	d8c02617 	ldw	r3,152(sp)
   113cc:	00801984 	movi	r2,102
   113d0:	d8c03215 	stw	r3,200(sp)
   113d4:	88813426 	beq	r17,r2,118a8 <___svfprintf_internal_r+0x1fb0>
   113d8:	d8c03217 	ldw	r3,200(sp)
   113dc:	d9003317 	ldw	r4,204(sp)
   113e0:	19012516 	blt	r3,r4,11878 <___svfprintf_internal_r+0x1f80>
   113e4:	9480004c 	andi	r18,r18,1
   113e8:	9001841e 	bne	r18,zero,119fc <___svfprintf_internal_r+0x2104>
   113ec:	1805883a 	mov	r2,r3
   113f0:	1801cb16 	blt	r3,zero,11b20 <___svfprintf_internal_r+0x2228>
   113f4:	d8c03217 	ldw	r3,200(sp)
   113f8:	044019c4 	movi	r17,103
   113fc:	d8c02b15 	stw	r3,172(sp)
   11400:	df002907 	ldb	fp,164(sp)
   11404:	e000a61e 	bne	fp,zero,116a0 <___svfprintf_internal_r+0x1da8>
   11408:	df002783 	ldbu	fp,158(sp)
   1140c:	d8802915 	stw	r2,164(sp)
   11410:	dc802c17 	ldw	r18,176(sp)
   11414:	d8002a15 	stw	zero,168(sp)
   11418:	003af506 	br	fff0 <__alt_mem_epcs_flash_controller_0+0xff80eff0>
   1141c:	040000b4 	movhi	r16,2
   11420:	84376604 	addi	r16,r16,-8808
   11424:	003a7e06 	br	fe20 <__alt_mem_epcs_flash_controller_0+0xff80ee20>
   11428:	d9003917 	ldw	r4,228(sp)
   1142c:	04001004 	movi	r16,64
   11430:	800b883a 	mov	r5,r16
   11434:	000258c0 	call	258c <_malloc_r>
   11438:	d9002d17 	ldw	r4,180(sp)
   1143c:	20800015 	stw	r2,0(r4)
   11440:	20800415 	stw	r2,16(r4)
   11444:	1001d026 	beq	r2,zero,11b88 <___svfprintf_internal_r+0x2290>
   11448:	d8802d17 	ldw	r2,180(sp)
   1144c:	14000515 	stw	r16,20(r2)
   11450:	00394406 	br	f964 <__alt_mem_epcs_flash_controller_0+0xff80e964>
   11454:	040000b4 	movhi	r16,2
   11458:	84376804 	addi	r16,r16,-8800
   1145c:	003ee106 	br	10fe4 <__alt_mem_epcs_flash_controller_0+0xff80ffe4>
   11460:	d9402d17 	ldw	r5,180(sp)
   11464:	d9801e04 	addi	r6,sp,120
   11468:	9809883a 	mov	r4,r19
   1146c:	00147980 	call	14798 <__ssprint_r>
   11470:	103a081e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   11474:	dc402617 	ldw	r17,152(sp)
   11478:	d8c02017 	ldw	r3,128(sp)
   1147c:	da000404 	addi	r8,sp,16
   11480:	003f4306 	br	11190 <__alt_mem_epcs_flash_controller_0+0xff810190>
   11484:	01400184 	movi	r5,6
   11488:	d9402a15 	stw	r5,168(sp)
   1148c:	003f9506 	br	112e4 <__alt_mem_epcs_flash_controller_0+0xff8102e4>
   11490:	d8c02e17 	ldw	r3,184(sp)
   11494:	1d000017 	ldw	r20,0(r3)
   11498:	18c00104 	addi	r3,r3,4
   1149c:	d8c02e15 	stw	r3,184(sp)
   114a0:	a02dd7fa 	srai	r22,r20,31
   114a4:	b005883a 	mov	r2,r22
   114a8:	003a7606 	br	fe84 <__alt_mem_epcs_flash_controller_0+0xff80ee84>
   114ac:	d9002e17 	ldw	r4,184(sp)
   114b0:	002d883a 	mov	r22,zero
   114b4:	25000017 	ldw	r20,0(r4)
   114b8:	21000104 	addi	r4,r4,4
   114bc:	d9002e15 	stw	r4,184(sp)
   114c0:	003bdd06 	br	10438 <__alt_mem_epcs_flash_controller_0+0xff80f438>
   114c4:	9480100c 	andi	r18,r18,64
   114c8:	90006e26 	beq	r18,zero,11684 <___svfprintf_internal_r+0x1d8c>
   114cc:	d9402e17 	ldw	r5,184(sp)
   114d0:	d8c02f17 	ldw	r3,188(sp)
   114d4:	28800017 	ldw	r2,0(r5)
   114d8:	29400104 	addi	r5,r5,4
   114dc:	d9402e15 	stw	r5,184(sp)
   114e0:	10c0000d 	sth	r3,0(r2)
   114e4:	00392f06 	br	f9a4 <__alt_mem_epcs_flash_controller_0+0xff80e9a4>
   114e8:	d9402d17 	ldw	r5,180(sp)
   114ec:	d9801e04 	addi	r6,sp,120
   114f0:	9809883a 	mov	r4,r19
   114f4:	00147980 	call	14798 <__ssprint_r>
   114f8:	1039e61e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   114fc:	d8c02017 	ldw	r3,128(sp)
   11500:	d8801f17 	ldw	r2,124(sp)
   11504:	da000404 	addi	r8,sp,16
   11508:	d9403317 	ldw	r5,204(sp)
   1150c:	10800044 	addi	r2,r2,1
   11510:	44000015 	stw	r16,0(r8)
   11514:	28c7883a 	add	r3,r5,r3
   11518:	003b5506 	br	10270 <__alt_mem_epcs_flash_controller_0+0xff80f270>
   1151c:	8009883a 	mov	r4,r16
   11520:	df003e15 	stw	fp,248(sp)
   11524:	00033c80 	call	33c8 <strlen>
   11528:	d8802b15 	stw	r2,172(sp)
   1152c:	da003e17 	ldw	r8,248(sp)
   11530:	103c160e 	bge	r2,zero,1058c <__alt_mem_epcs_flash_controller_0+0xff80f58c>
   11534:	0005883a 	mov	r2,zero
   11538:	003c1406 	br	1058c <__alt_mem_epcs_flash_controller_0+0xff80f58c>
   1153c:	00bfffc4 	movi	r2,-1
   11540:	0039d906 	br	fca8 <__alt_mem_epcs_flash_controller_0+0xff80eca8>
   11544:	010000b4 	movhi	r4,2
   11548:	21389384 	addi	r4,r4,-7602
   1154c:	d9003515 	stw	r4,212(sp)
   11550:	003ae406 	br	100e4 <__alt_mem_epcs_flash_controller_0+0xff80f0e4>
   11554:	013fffc4 	movi	r4,-1
   11558:	0039fa06 	br	fd44 <__alt_mem_epcs_flash_controller_0+0xff80ed44>
   1155c:	d9402d17 	ldw	r5,180(sp)
   11560:	d9801e04 	addi	r6,sp,120
   11564:	9809883a 	mov	r4,r19
   11568:	00147980 	call	14798 <__ssprint_r>
   1156c:	1039c91e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   11570:	d8c02017 	ldw	r3,128(sp)
   11574:	da000404 	addi	r8,sp,16
   11578:	003d8406 	br	10b8c <__alt_mem_epcs_flash_controller_0+0xff80fb8c>
   1157c:	0023883a 	mov	r17,zero
   11580:	003d8306 	br	10b90 <__alt_mem_epcs_flash_controller_0+0xff80fb90>
   11584:	010000b4 	movhi	r4,2
   11588:	21388f84 	addi	r4,r4,-7618
   1158c:	d9002c15 	stw	r4,176(sp)
   11590:	d9002c17 	ldw	r4,176(sp)
   11594:	1c47883a 	add	r3,r3,r17
   11598:	10800044 	addi	r2,r2,1
   1159c:	41000015 	stw	r4,0(r8)
   115a0:	44400115 	stw	r17,4(r8)
   115a4:	d8c02015 	stw	r3,128(sp)
   115a8:	d8801f15 	stw	r2,124(sp)
   115ac:	010001c4 	movi	r4,7
   115b0:	20bfcd16 	blt	r4,r2,114e8 <__alt_mem_epcs_flash_controller_0+0xff8104e8>
   115b4:	42000204 	addi	r8,r8,8
   115b8:	003fd306 	br	11508 <__alt_mem_epcs_flash_controller_0+0xff810508>
   115bc:	d9402d17 	ldw	r5,180(sp)
   115c0:	d9801e04 	addi	r6,sp,120
   115c4:	9809883a 	mov	r4,r19
   115c8:	00147980 	call	14798 <__ssprint_r>
   115cc:	1039b11e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   115d0:	d8802617 	ldw	r2,152(sp)
   115d4:	d8c02017 	ldw	r3,128(sp)
   115d8:	da000404 	addi	r8,sp,16
   115dc:	003e1c06 	br	10e50 <__alt_mem_epcs_flash_controller_0+0xff80fe50>
   115e0:	d8802a17 	ldw	r2,168(sp)
   115e4:	00c00184 	movi	r3,6
   115e8:	1880012e 	bgeu	r3,r2,115f0 <___svfprintf_internal_r+0x1cf8>
   115ec:	1805883a 	mov	r2,r3
   115f0:	d8802b15 	stw	r2,172(sp)
   115f4:	1000f316 	blt	r2,zero,119c4 <___svfprintf_internal_r+0x20cc>
   115f8:	040000b4 	movhi	r16,2
   115fc:	d8802915 	stw	r2,164(sp)
   11600:	dd002e15 	stw	r20,184(sp)
   11604:	d8002a15 	stw	zero,168(sp)
   11608:	d8003215 	stw	zero,200(sp)
   1160c:	84377404 	addi	r16,r16,-8752
   11610:	0039883a 	mov	fp,zero
   11614:	003a7d06 	br	1000c <__alt_mem_epcs_flash_controller_0+0xff80f00c>
   11618:	010000b4 	movhi	r4,2
   1161c:	21389384 	addi	r4,r4,-7602
   11620:	d9003515 	stw	r4,212(sp)
   11624:	003b3d06 	br	1031c <__alt_mem_epcs_flash_controller_0+0xff80f31c>
   11628:	d9402d17 	ldw	r5,180(sp)
   1162c:	d9801e04 	addi	r6,sp,120
   11630:	9809883a 	mov	r4,r19
   11634:	00147980 	call	14798 <__ssprint_r>
   11638:	1039961e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   1163c:	d8802617 	ldw	r2,152(sp)
   11640:	d9403317 	ldw	r5,204(sp)
   11644:	d8c02017 	ldw	r3,128(sp)
   11648:	da000404 	addi	r8,sp,16
   1164c:	2885c83a 	sub	r2,r5,r2
   11650:	003e1006 	br	10e94 <__alt_mem_epcs_flash_controller_0+0xff80fe94>
   11654:	00800044 	movi	r2,1
   11658:	10803fcc 	andi	r2,r2,255
   1165c:	00c00044 	movi	r3,1
   11660:	10fa1026 	beq	r2,r3,fea4 <__alt_mem_epcs_flash_controller_0+0xff80eea4>
   11664:	00c00084 	movi	r3,2
   11668:	10fb8226 	beq	r2,r3,10474 <__alt_mem_epcs_flash_controller_0+0xff80f474>
   1166c:	003a4206 	br	ff78 <__alt_mem_epcs_flash_controller_0+0xff80ef78>
   11670:	0021883a 	mov	r16,zero
   11674:	003e0806 	br	10e98 <__alt_mem_epcs_flash_controller_0+0xff80fe98>
   11678:	07000b44 	movi	fp,45
   1167c:	df002785 	stb	fp,158(sp)
   11680:	0039e306 	br	fe10 <__alt_mem_epcs_flash_controller_0+0xff80ee10>
   11684:	d9002e17 	ldw	r4,184(sp)
   11688:	d9402f17 	ldw	r5,188(sp)
   1168c:	20800017 	ldw	r2,0(r4)
   11690:	21000104 	addi	r4,r4,4
   11694:	d9002e15 	stw	r4,184(sp)
   11698:	11400015 	stw	r5,0(r2)
   1169c:	0038c106 	br	f9a4 <__alt_mem_epcs_flash_controller_0+0xff80e9a4>
   116a0:	00c00b44 	movi	r3,45
   116a4:	d8c02785 	stb	r3,158(sp)
   116a8:	d8802915 	stw	r2,164(sp)
   116ac:	dc802c17 	ldw	r18,176(sp)
   116b0:	d8002a15 	stw	zero,168(sp)
   116b4:	07000b44 	movi	fp,45
   116b8:	003a5106 	br	10000 <__alt_mem_epcs_flash_controller_0+0xff80f000>
   116bc:	9080004c 	andi	r2,r18,1
   116c0:	1000941e 	bne	r2,zero,11914 <___svfprintf_internal_r+0x201c>
   116c4:	d8802117 	ldw	r2,132(sp)
   116c8:	1405c83a 	sub	r2,r2,r16
   116cc:	d8803315 	stw	r2,204(sp)
   116d0:	b441151e 	bne	r22,r17,11b28 <___svfprintf_internal_r+0x2230>
   116d4:	dd802617 	ldw	r22,152(sp)
   116d8:	00bfff44 	movi	r2,-3
   116dc:	b0801a16 	blt	r22,r2,11748 <___svfprintf_internal_r+0x1e50>
   116e0:	d9402a17 	ldw	r5,168(sp)
   116e4:	2d801816 	blt	r5,r22,11748 <___svfprintf_internal_r+0x1e50>
   116e8:	dd803215 	stw	r22,200(sp)
   116ec:	003f3a06 	br	113d8 <__alt_mem_epcs_flash_controller_0+0xff8103d8>
   116f0:	1025883a 	mov	r18,r2
   116f4:	0039883a 	mov	fp,zero
   116f8:	00800084 	movi	r2,2
   116fc:	003fd606 	br	11658 <__alt_mem_epcs_flash_controller_0+0xff810658>
   11700:	9080004c 	andi	r2,r18,1
   11704:	103f191e 	bne	r2,zero,1136c <__alt_mem_epcs_flash_controller_0+0xff81036c>
   11708:	d8802117 	ldw	r2,132(sp)
   1170c:	003f2806 	br	113b0 <__alt_mem_epcs_flash_controller_0+0xff8103b0>
   11710:	010000b4 	movhi	r4,2
   11714:	21388f84 	addi	r4,r4,-7618
   11718:	d9002c15 	stw	r4,176(sp)
   1171c:	003c7c06 	br	10910 <__alt_mem_epcs_flash_controller_0+0xff80f910>
   11720:	e005883a 	mov	r2,fp
   11724:	003f2206 	br	113b0 <__alt_mem_epcs_flash_controller_0+0xff8103b0>
   11728:	d9002a17 	ldw	r4,168(sp)
   1172c:	df002783 	ldbu	fp,158(sp)
   11730:	dd002e15 	stw	r20,184(sp)
   11734:	d9002915 	stw	r4,164(sp)
   11738:	d9002b15 	stw	r4,172(sp)
   1173c:	d8002a15 	stw	zero,168(sp)
   11740:	d8003215 	stw	zero,200(sp)
   11744:	003a2a06 	br	fff0 <__alt_mem_epcs_flash_controller_0+0xff80eff0>
   11748:	8c7fff84 	addi	r17,r17,-2
   1174c:	b5bfffc4 	addi	r22,r22,-1
   11750:	dd802615 	stw	r22,152(sp)
   11754:	dc4022c5 	stb	r17,139(sp)
   11758:	b000c316 	blt	r22,zero,11a68 <___svfprintf_internal_r+0x2170>
   1175c:	00800ac4 	movi	r2,43
   11760:	d8802305 	stb	r2,140(sp)
   11764:	00800244 	movi	r2,9
   11768:	15806e16 	blt	r2,r22,11924 <___svfprintf_internal_r+0x202c>
   1176c:	00800c04 	movi	r2,48
   11770:	b5800c04 	addi	r22,r22,48
   11774:	d8802345 	stb	r2,141(sp)
   11778:	dd802385 	stb	r22,142(sp)
   1177c:	d88023c4 	addi	r2,sp,143
   11780:	df0022c4 	addi	fp,sp,139
   11784:	d8c03317 	ldw	r3,204(sp)
   11788:	1739c83a 	sub	fp,r2,fp
   1178c:	d9003317 	ldw	r4,204(sp)
   11790:	e0c7883a 	add	r3,fp,r3
   11794:	df003b15 	stw	fp,236(sp)
   11798:	d8c02b15 	stw	r3,172(sp)
   1179c:	00800044 	movi	r2,1
   117a0:	1100b70e 	bge	r2,r4,11a80 <___svfprintf_internal_r+0x2188>
   117a4:	d8c02b17 	ldw	r3,172(sp)
   117a8:	18c00044 	addi	r3,r3,1
   117ac:	d8c02b15 	stw	r3,172(sp)
   117b0:	1805883a 	mov	r2,r3
   117b4:	1800b016 	blt	r3,zero,11a78 <___svfprintf_internal_r+0x2180>
   117b8:	d8003215 	stw	zero,200(sp)
   117bc:	003f1006 	br	11400 <__alt_mem_epcs_flash_controller_0+0xff810400>
   117c0:	d8802a17 	ldw	r2,168(sp)
   117c4:	103ec71e 	bne	r2,zero,112e4 <__alt_mem_epcs_flash_controller_0+0xff8102e4>
   117c8:	dc002a15 	stw	r16,168(sp)
   117cc:	003ec506 	br	112e4 <__alt_mem_epcs_flash_controller_0+0xff8102e4>
   117d0:	d9402d17 	ldw	r5,180(sp)
   117d4:	d9801e04 	addi	r6,sp,120
   117d8:	9809883a 	mov	r4,r19
   117dc:	00147980 	call	14798 <__ssprint_r>
   117e0:	10392c1e 	bne	r2,zero,fc94 <__alt_mem_epcs_flash_controller_0+0xff80ec94>
   117e4:	dc402617 	ldw	r17,152(sp)
   117e8:	d8c02017 	ldw	r3,128(sp)
   117ec:	d8801f17 	ldw	r2,124(sp)
   117f0:	da000404 	addi	r8,sp,16
   117f4:	003e7706 	br	111d4 <__alt_mem_epcs_flash_controller_0+0xff8101d4>
   117f8:	182f883a 	mov	r23,r3
   117fc:	d8002a15 	stw	zero,168(sp)
   11800:	00389306 	br	fa50 <__alt_mem_epcs_flash_controller_0+0xff80ea50>
   11804:	d8c02a17 	ldw	r3,168(sp)
   11808:	d8802104 	addi	r2,sp,132
   1180c:	d8800315 	stw	r2,12(sp)
   11810:	d9403617 	ldw	r5,216(sp)
   11814:	d8802504 	addi	r2,sp,148
   11818:	d8800215 	stw	r2,8(sp)
   1181c:	d8802604 	addi	r2,sp,152
   11820:	d8c00015 	stw	r3,0(sp)
   11824:	9809883a 	mov	r4,r19
   11828:	d8800115 	stw	r2,4(sp)
   1182c:	01c000c4 	movi	r7,3
   11830:	a00d883a 	mov	r6,r20
   11834:	da003e15 	stw	r8,248(sp)
   11838:	00075d00 	call	75d0 <_dtoa_r>
   1183c:	d9002a17 	ldw	r4,168(sp)
   11840:	da003e17 	ldw	r8,248(sp)
   11844:	1021883a 	mov	r16,r2
   11848:	1139883a 	add	fp,r2,r4
   1184c:	2007883a 	mov	r3,r4
   11850:	81000007 	ldb	r4,0(r16)
   11854:	00800c04 	movi	r2,48
   11858:	20806f26 	beq	r4,r2,11a18 <___svfprintf_internal_r+0x2120>
   1185c:	d8c02617 	ldw	r3,152(sp)
   11860:	e0f9883a 	add	fp,fp,r3
   11864:	003ec206 	br	11370 <__alt_mem_epcs_flash_controller_0+0xff810370>
   11868:	00c00b44 	movi	r3,45
   1186c:	2520003c 	xorhi	r20,r4,32768
   11870:	d8c02905 	stb	r3,164(sp)
   11874:	003ea106 	br	112fc <__alt_mem_epcs_flash_controller_0+0xff8102fc>
   11878:	d8c03217 	ldw	r3,200(sp)
   1187c:	00c0890e 	bge	zero,r3,11aa4 <___svfprintf_internal_r+0x21ac>
   11880:	00800044 	movi	r2,1
   11884:	d9003317 	ldw	r4,204(sp)
   11888:	1105883a 	add	r2,r2,r4
   1188c:	d8802b15 	stw	r2,172(sp)
   11890:	10005f16 	blt	r2,zero,11a10 <___svfprintf_internal_r+0x2118>
   11894:	044019c4 	movi	r17,103
   11898:	003ed906 	br	11400 <__alt_mem_epcs_flash_controller_0+0xff810400>
   1189c:	d9002a17 	ldw	r4,168(sp)
   118a0:	20c00044 	addi	r3,r4,1
   118a4:	003e9c06 	br	11318 <__alt_mem_epcs_flash_controller_0+0xff810318>
   118a8:	d9002a17 	ldw	r4,168(sp)
   118ac:	00c0680e 	bge	zero,r3,11a50 <___svfprintf_internal_r+0x2158>
   118b0:	2000461e 	bne	r4,zero,119cc <___svfprintf_internal_r+0x20d4>
   118b4:	9480004c 	andi	r18,r18,1
   118b8:	9000441e 	bne	r18,zero,119cc <___svfprintf_internal_r+0x20d4>
   118bc:	1805883a 	mov	r2,r3
   118c0:	1800a116 	blt	r3,zero,11b48 <___svfprintf_internal_r+0x2250>
   118c4:	d8c03217 	ldw	r3,200(sp)
   118c8:	d8c02b15 	stw	r3,172(sp)
   118cc:	003ecc06 	br	11400 <__alt_mem_epcs_flash_controller_0+0xff810400>
   118d0:	d9402a17 	ldw	r5,168(sp)
   118d4:	d8802104 	addi	r2,sp,132
   118d8:	d8800315 	stw	r2,12(sp)
   118dc:	d9400015 	stw	r5,0(sp)
   118e0:	d8802504 	addi	r2,sp,148
   118e4:	d9403617 	ldw	r5,216(sp)
   118e8:	d8800215 	stw	r2,8(sp)
   118ec:	d8802604 	addi	r2,sp,152
   118f0:	d8800115 	stw	r2,4(sp)
   118f4:	01c000c4 	movi	r7,3
   118f8:	a00d883a 	mov	r6,r20
   118fc:	9809883a 	mov	r4,r19
   11900:	da003e15 	stw	r8,248(sp)
   11904:	00075d00 	call	75d0 <_dtoa_r>
   11908:	d8c02a17 	ldw	r3,168(sp)
   1190c:	da003e17 	ldw	r8,248(sp)
   11910:	1021883a 	mov	r16,r2
   11914:	00801184 	movi	r2,70
   11918:	80f9883a 	add	fp,r16,r3
   1191c:	88bfcc26 	beq	r17,r2,11850 <__alt_mem_epcs_flash_controller_0+0xff810850>
   11920:	003e9306 	br	11370 <__alt_mem_epcs_flash_controller_0+0xff810370>
   11924:	df0022c4 	addi	fp,sp,139
   11928:	dc002a15 	stw	r16,168(sp)
   1192c:	9829883a 	mov	r20,r19
   11930:	e021883a 	mov	r16,fp
   11934:	4027883a 	mov	r19,r8
   11938:	b009883a 	mov	r4,r22
   1193c:	01400284 	movi	r5,10
   11940:	00023140 	call	2314 <__modsi3>
   11944:	10800c04 	addi	r2,r2,48
   11948:	843fffc4 	addi	r16,r16,-1
   1194c:	b009883a 	mov	r4,r22
   11950:	01400284 	movi	r5,10
   11954:	80800005 	stb	r2,0(r16)
   11958:	00022900 	call	2290 <__divsi3>
   1195c:	102d883a 	mov	r22,r2
   11960:	00800244 	movi	r2,9
   11964:	15bff416 	blt	r2,r22,11938 <__alt_mem_epcs_flash_controller_0+0xff810938>
   11968:	9811883a 	mov	r8,r19
   1196c:	b0800c04 	addi	r2,r22,48
   11970:	a027883a 	mov	r19,r20
   11974:	8029883a 	mov	r20,r16
   11978:	a17fffc4 	addi	r5,r20,-1
   1197c:	a0bfffc5 	stb	r2,-1(r20)
   11980:	dc002a17 	ldw	r16,168(sp)
   11984:	2f00782e 	bgeu	r5,fp,11b68 <___svfprintf_internal_r+0x2270>
   11988:	d9c02384 	addi	r7,sp,142
   1198c:	3d0fc83a 	sub	r7,r7,r20
   11990:	d9002344 	addi	r4,sp,141
   11994:	e1cf883a 	add	r7,fp,r7
   11998:	00000106 	br	119a0 <___svfprintf_internal_r+0x20a8>
   1199c:	28800003 	ldbu	r2,0(r5)
   119a0:	20800005 	stb	r2,0(r4)
   119a4:	21000044 	addi	r4,r4,1
   119a8:	29400044 	addi	r5,r5,1
   119ac:	21fffb1e 	bne	r4,r7,1199c <__alt_mem_epcs_flash_controller_0+0xff81099c>
   119b0:	d8802304 	addi	r2,sp,140
   119b4:	1505c83a 	sub	r2,r2,r20
   119b8:	d8c02344 	addi	r3,sp,141
   119bc:	1885883a 	add	r2,r3,r2
   119c0:	003f7006 	br	11784 <__alt_mem_epcs_flash_controller_0+0xff810784>
   119c4:	0005883a 	mov	r2,zero
   119c8:	003f0b06 	br	115f8 <__alt_mem_epcs_flash_controller_0+0xff8105f8>
   119cc:	d9002a17 	ldw	r4,168(sp)
   119d0:	d8c03217 	ldw	r3,200(sp)
   119d4:	20800044 	addi	r2,r4,1
   119d8:	1885883a 	add	r2,r3,r2
   119dc:	d8802b15 	stw	r2,172(sp)
   119e0:	103e870e 	bge	r2,zero,11400 <__alt_mem_epcs_flash_controller_0+0xff810400>
   119e4:	0005883a 	mov	r2,zero
   119e8:	003e8506 	br	11400 <__alt_mem_epcs_flash_controller_0+0xff810400>
   119ec:	010000b4 	movhi	r4,2
   119f0:	21388f84 	addi	r4,r4,-7618
   119f4:	d9002c15 	stw	r4,176(sp)
   119f8:	003cc506 	br	10d10 <__alt_mem_epcs_flash_controller_0+0xff80fd10>
   119fc:	d8c03217 	ldw	r3,200(sp)
   11a00:	18c00044 	addi	r3,r3,1
   11a04:	d8c02b15 	stw	r3,172(sp)
   11a08:	1805883a 	mov	r2,r3
   11a0c:	183fa10e 	bge	r3,zero,11894 <__alt_mem_epcs_flash_controller_0+0xff810894>
   11a10:	0005883a 	mov	r2,zero
   11a14:	003f9f06 	br	11894 <__alt_mem_epcs_flash_controller_0+0xff810894>
   11a18:	d9003617 	ldw	r4,216(sp)
   11a1c:	000d883a 	mov	r6,zero
   11a20:	000f883a 	mov	r7,zero
   11a24:	a00b883a 	mov	r5,r20
   11a28:	d8c03d15 	stw	r3,244(sp)
   11a2c:	da003e15 	stw	r8,248(sp)
   11a30:	00180a80 	call	180a8 <__eqdf2>
   11a34:	d8c03d17 	ldw	r3,244(sp)
   11a38:	da003e17 	ldw	r8,248(sp)
   11a3c:	103f8726 	beq	r2,zero,1185c <__alt_mem_epcs_flash_controller_0+0xff81085c>
   11a40:	00800044 	movi	r2,1
   11a44:	10c7c83a 	sub	r3,r2,r3
   11a48:	d8c02615 	stw	r3,152(sp)
   11a4c:	003f8406 	br	11860 <__alt_mem_epcs_flash_controller_0+0xff810860>
   11a50:	20000e1e 	bne	r4,zero,11a8c <___svfprintf_internal_r+0x2194>
   11a54:	9480004c 	andi	r18,r18,1
   11a58:	90000c1e 	bne	r18,zero,11a8c <___svfprintf_internal_r+0x2194>
   11a5c:	00800044 	movi	r2,1
   11a60:	d8802b15 	stw	r2,172(sp)
   11a64:	003e6606 	br	11400 <__alt_mem_epcs_flash_controller_0+0xff810400>
   11a68:	00800b44 	movi	r2,45
   11a6c:	05adc83a 	sub	r22,zero,r22
   11a70:	d8802305 	stb	r2,140(sp)
   11a74:	003f3b06 	br	11764 <__alt_mem_epcs_flash_controller_0+0xff810764>
   11a78:	0005883a 	mov	r2,zero
   11a7c:	003f4e06 	br	117b8 <__alt_mem_epcs_flash_controller_0+0xff8107b8>
   11a80:	90a4703a 	and	r18,r18,r2
   11a84:	903f4a26 	beq	r18,zero,117b0 <__alt_mem_epcs_flash_controller_0+0xff8107b0>
   11a88:	003f4606 	br	117a4 <__alt_mem_epcs_flash_controller_0+0xff8107a4>
   11a8c:	d8c02a17 	ldw	r3,168(sp)
   11a90:	18c00084 	addi	r3,r3,2
   11a94:	d8c02b15 	stw	r3,172(sp)
   11a98:	1805883a 	mov	r2,r3
   11a9c:	183e580e 	bge	r3,zero,11400 <__alt_mem_epcs_flash_controller_0+0xff810400>
   11aa0:	003fd006 	br	119e4 <__alt_mem_epcs_flash_controller_0+0xff8109e4>
   11aa4:	00800084 	movi	r2,2
   11aa8:	10c5c83a 	sub	r2,r2,r3
   11aac:	003f7506 	br	11884 <__alt_mem_epcs_flash_controller_0+0xff810884>
   11ab0:	d9402e17 	ldw	r5,184(sp)
   11ab4:	d9002e17 	ldw	r4,184(sp)
   11ab8:	bc400043 	ldbu	r17,1(r23)
   11abc:	29400017 	ldw	r5,0(r5)
   11ac0:	20800104 	addi	r2,r4,4
   11ac4:	d8802e15 	stw	r2,184(sp)
   11ac8:	d9402a15 	stw	r5,168(sp)
   11acc:	182f883a 	mov	r23,r3
   11ad0:	283df10e 	bge	r5,zero,11298 <__alt_mem_epcs_flash_controller_0+0xff810298>
   11ad4:	8c403fcc 	andi	r17,r17,255
   11ad8:	017fffc4 	movi	r5,-1
   11adc:	8c40201c 	xori	r17,r17,128
   11ae0:	d9402a15 	stw	r5,168(sp)
   11ae4:	8c7fe004 	addi	r17,r17,-128
   11ae8:	0037d806 	br	fa4c <__alt_mem_epcs_flash_controller_0+0xff80ea4c>
   11aec:	9080004c 	andi	r2,r18,1
   11af0:	0039883a 	mov	fp,zero
   11af4:	10000726 	beq	r2,zero,11b14 <___svfprintf_internal_r+0x221c>
   11af8:	d8c02817 	ldw	r3,160(sp)
   11afc:	dc001dc4 	addi	r16,sp,119
   11b00:	00800c04 	movi	r2,48
   11b04:	1c07c83a 	sub	r3,r3,r16
   11b08:	d8801dc5 	stb	r2,119(sp)
   11b0c:	d8c02b15 	stw	r3,172(sp)
   11b10:	00393106 	br	ffd8 <__alt_mem_epcs_flash_controller_0+0xff80efd8>
   11b14:	d8002b15 	stw	zero,172(sp)
   11b18:	dc001e04 	addi	r16,sp,120
   11b1c:	00392e06 	br	ffd8 <__alt_mem_epcs_flash_controller_0+0xff80efd8>
   11b20:	0005883a 	mov	r2,zero
   11b24:	003e3306 	br	113f4 <__alt_mem_epcs_flash_controller_0+0xff8103f4>
   11b28:	dd802617 	ldw	r22,152(sp)
   11b2c:	003f0706 	br	1174c <__alt_mem_epcs_flash_controller_0+0xff81074c>
   11b30:	d8c02b03 	ldbu	r3,172(sp)
   11b34:	d8c02785 	stb	r3,158(sp)
   11b38:	003a3506 	br	10410 <__alt_mem_epcs_flash_controller_0+0xff80f410>
   11b3c:	d8c02b03 	ldbu	r3,172(sp)
   11b40:	d8c02785 	stb	r3,158(sp)
   11b44:	003a1706 	br	103a4 <__alt_mem_epcs_flash_controller_0+0xff80f3a4>
   11b48:	0005883a 	mov	r2,zero
   11b4c:	003f5d06 	br	118c4 <__alt_mem_epcs_flash_controller_0+0xff8108c4>
   11b50:	d8c02b03 	ldbu	r3,172(sp)
   11b54:	d8c02785 	stb	r3,158(sp)
   11b58:	0038f306 	br	ff28 <__alt_mem_epcs_flash_controller_0+0xff80ef28>
   11b5c:	d8c02b03 	ldbu	r3,172(sp)
   11b60:	d8c02785 	stb	r3,158(sp)
   11b64:	0038be06 	br	fe60 <__alt_mem_epcs_flash_controller_0+0xff80ee60>
   11b68:	d8802344 	addi	r2,sp,141
   11b6c:	003f0506 	br	11784 <__alt_mem_epcs_flash_controller_0+0xff810784>
   11b70:	d8c02b03 	ldbu	r3,172(sp)
   11b74:	d8c02785 	stb	r3,158(sp)
   11b78:	00388b06 	br	fda8 <__alt_mem_epcs_flash_controller_0+0xff80eda8>
   11b7c:	d8c02b03 	ldbu	r3,172(sp)
   11b80:	d8c02785 	stb	r3,158(sp)
   11b84:	003ad706 	br	106e4 <__alt_mem_epcs_flash_controller_0+0xff80f6e4>
   11b88:	d9403917 	ldw	r5,228(sp)
   11b8c:	00800304 	movi	r2,12
   11b90:	28800015 	stw	r2,0(r5)
   11b94:	00bfffc4 	movi	r2,-1
   11b98:	00384306 	br	fca8 <__alt_mem_epcs_flash_controller_0+0xff80eca8>
   11b9c:	d8c02b03 	ldbu	r3,172(sp)
   11ba0:	d8c02785 	stb	r3,158(sp)
   11ba4:	003ab606 	br	10680 <__alt_mem_epcs_flash_controller_0+0xff80f680>
   11ba8:	d8c02b03 	ldbu	r3,172(sp)
   11bac:	d8c02785 	stb	r3,158(sp)
   11bb0:	003a8906 	br	105d8 <__alt_mem_epcs_flash_controller_0+0xff80f5d8>

00011bb4 <__submore>:
   11bb4:	defffa04 	addi	sp,sp,-24
   11bb8:	dc000015 	stw	r16,0(sp)
   11bbc:	2821883a 	mov	r16,r5
   11bc0:	29400c17 	ldw	r5,48(r5)
   11bc4:	dfc00515 	stw	ra,20(sp)
   11bc8:	dd000415 	stw	r20,16(sp)
   11bcc:	dcc00315 	stw	r19,12(sp)
   11bd0:	dc800215 	stw	r18,8(sp)
   11bd4:	dc400115 	stw	r17,4(sp)
   11bd8:	80801004 	addi	r2,r16,64
   11bdc:	28801726 	beq	r5,r2,11c3c <__submore+0x88>
   11be0:	84400d17 	ldw	r17,52(r16)
   11be4:	8c67883a 	add	r19,r17,r17
   11be8:	980d883a 	mov	r6,r19
   11bec:	000b8680 	call	b868 <_realloc_r>
   11bf0:	1025883a 	mov	r18,r2
   11bf4:	10002226 	beq	r2,zero,11c80 <__submore+0xcc>
   11bf8:	1469883a 	add	r20,r2,r17
   11bfc:	880d883a 	mov	r6,r17
   11c00:	100b883a 	mov	r5,r2
   11c04:	a009883a 	mov	r4,r20
   11c08:	0002e140 	call	2e14 <memcpy>
   11c0c:	0005883a 	mov	r2,zero
   11c10:	85000015 	stw	r20,0(r16)
   11c14:	84800c15 	stw	r18,48(r16)
   11c18:	84c00d15 	stw	r19,52(r16)
   11c1c:	dfc00517 	ldw	ra,20(sp)
   11c20:	dd000417 	ldw	r20,16(sp)
   11c24:	dcc00317 	ldw	r19,12(sp)
   11c28:	dc800217 	ldw	r18,8(sp)
   11c2c:	dc400117 	ldw	r17,4(sp)
   11c30:	dc000017 	ldw	r16,0(sp)
   11c34:	dec00604 	addi	sp,sp,24
   11c38:	f800283a 	ret
   11c3c:	04410004 	movi	r17,1024
   11c40:	880b883a 	mov	r5,r17
   11c44:	000258c0 	call	258c <_malloc_r>
   11c48:	1007883a 	mov	r3,r2
   11c4c:	10000c26 	beq	r2,zero,11c80 <__submore+0xcc>
   11c50:	80801083 	ldbu	r2,66(r16)
   11c54:	80c00c15 	stw	r3,48(r16)
   11c58:	84400d15 	stw	r17,52(r16)
   11c5c:	1880ffc5 	stb	r2,1023(r3)
   11c60:	81401043 	ldbu	r5,65(r16)
   11c64:	1900ff44 	addi	r4,r3,1021
   11c68:	0005883a 	mov	r2,zero
   11c6c:	1940ff85 	stb	r5,1022(r3)
   11c70:	81401003 	ldbu	r5,64(r16)
   11c74:	1940ff45 	stb	r5,1021(r3)
   11c78:	81000015 	stw	r4,0(r16)
   11c7c:	003fe706 	br	11c1c <__alt_mem_epcs_flash_controller_0+0xff810c1c>
   11c80:	00bfffc4 	movi	r2,-1
   11c84:	003fe506 	br	11c1c <__alt_mem_epcs_flash_controller_0+0xff810c1c>

00011c88 <_ungetc_r>:
   11c88:	00bfffc4 	movi	r2,-1
   11c8c:	28806126 	beq	r5,r2,11e14 <_ungetc_r+0x18c>
   11c90:	defffb04 	addi	sp,sp,-20
   11c94:	dcc00315 	stw	r19,12(sp)
   11c98:	dc400115 	stw	r17,4(sp)
   11c9c:	dc000015 	stw	r16,0(sp)
   11ca0:	dfc00415 	stw	ra,16(sp)
   11ca4:	dc800215 	stw	r18,8(sp)
   11ca8:	2023883a 	mov	r17,r4
   11cac:	3021883a 	mov	r16,r6
   11cb0:	2827883a 	mov	r19,r5
   11cb4:	20000226 	beq	r4,zero,11cc0 <_ungetc_r+0x38>
   11cb8:	20800e17 	ldw	r2,56(r4)
   11cbc:	10002e26 	beq	r2,zero,11d78 <_ungetc_r+0xf0>
   11cc0:	80c0030b 	ldhu	r3,12(r16)
   11cc4:	1888000c 	andi	r2,r3,8192
   11cc8:	1000051e 	bne	r2,zero,11ce0 <_ungetc_r+0x58>
   11ccc:	81001917 	ldw	r4,100(r16)
   11cd0:	00b7ffc4 	movi	r2,-8193
   11cd4:	18c80014 	ori	r3,r3,8192
   11cd8:	2084703a 	and	r2,r4,r2
   11cdc:	80801915 	stw	r2,100(r16)
   11ce0:	00bff7c4 	movi	r2,-33
   11ce4:	1884703a 	and	r2,r3,r2
   11ce8:	8080030d 	sth	r2,12(r16)
   11cec:	1900010c 	andi	r4,r3,4
   11cf0:	2000061e 	bne	r4,zero,11d0c <_ungetc_r+0x84>
   11cf4:	1900040c 	andi	r4,r3,16
   11cf8:	20001d26 	beq	r4,zero,11d70 <_ungetc_r+0xe8>
   11cfc:	18c0020c 	andi	r3,r3,8
   11d00:	1800331e 	bne	r3,zero,11dd0 <_ungetc_r+0x148>
   11d04:	10800114 	ori	r2,r2,4
   11d08:	8080030d 	sth	r2,12(r16)
   11d0c:	80800c17 	ldw	r2,48(r16)
   11d10:	9c803fcc 	andi	r18,r19,255
   11d14:	10001a26 	beq	r2,zero,11d80 <_ungetc_r+0xf8>
   11d18:	80c00117 	ldw	r3,4(r16)
   11d1c:	80800d17 	ldw	r2,52(r16)
   11d20:	18800f0e 	bge	r3,r2,11d60 <_ungetc_r+0xd8>
   11d24:	80c00017 	ldw	r3,0(r16)
   11d28:	9005883a 	mov	r2,r18
   11d2c:	193fffc4 	addi	r4,r3,-1
   11d30:	81000015 	stw	r4,0(r16)
   11d34:	1cffffc5 	stb	r19,-1(r3)
   11d38:	80c00117 	ldw	r3,4(r16)
   11d3c:	18c00044 	addi	r3,r3,1
   11d40:	80c00115 	stw	r3,4(r16)
   11d44:	dfc00417 	ldw	ra,16(sp)
   11d48:	dcc00317 	ldw	r19,12(sp)
   11d4c:	dc800217 	ldw	r18,8(sp)
   11d50:	dc400117 	ldw	r17,4(sp)
   11d54:	dc000017 	ldw	r16,0(sp)
   11d58:	dec00504 	addi	sp,sp,20
   11d5c:	f800283a 	ret
   11d60:	800b883a 	mov	r5,r16
   11d64:	8809883a 	mov	r4,r17
   11d68:	0011bb40 	call	11bb4 <__submore>
   11d6c:	103fed26 	beq	r2,zero,11d24 <__alt_mem_epcs_flash_controller_0+0xff810d24>
   11d70:	00bfffc4 	movi	r2,-1
   11d74:	003ff306 	br	11d44 <__alt_mem_epcs_flash_controller_0+0xff810d44>
   11d78:	00092600 	call	9260 <__sinit>
   11d7c:	003fd006 	br	11cc0 <__alt_mem_epcs_flash_controller_0+0xff810cc0>
   11d80:	80c00417 	ldw	r3,16(r16)
   11d84:	80800017 	ldw	r2,0(r16)
   11d88:	18000326 	beq	r3,zero,11d98 <_ungetc_r+0x110>
   11d8c:	1880022e 	bgeu	r3,r2,11d98 <_ungetc_r+0x110>
   11d90:	10ffffc3 	ldbu	r3,-1(r2)
   11d94:	90c01826 	beq	r18,r3,11df8 <_ungetc_r+0x170>
   11d98:	81400117 	ldw	r5,4(r16)
   11d9c:	80800e15 	stw	r2,56(r16)
   11da0:	008000c4 	movi	r2,3
   11da4:	81001004 	addi	r4,r16,64
   11da8:	80c01084 	addi	r3,r16,66
   11dac:	80800d15 	stw	r2,52(r16)
   11db0:	00800044 	movi	r2,1
   11db4:	80800115 	stw	r2,4(r16)
   11db8:	81400f15 	stw	r5,60(r16)
   11dbc:	81000c15 	stw	r4,48(r16)
   11dc0:	84c01085 	stb	r19,66(r16)
   11dc4:	80c00015 	stw	r3,0(r16)
   11dc8:	9005883a 	mov	r2,r18
   11dcc:	003fdd06 	br	11d44 <__alt_mem_epcs_flash_controller_0+0xff810d44>
   11dd0:	800b883a 	mov	r5,r16
   11dd4:	8809883a 	mov	r4,r17
   11dd8:	0008e740 	call	8e74 <_fflush_r>
   11ddc:	103fe41e 	bne	r2,zero,11d70 <__alt_mem_epcs_flash_controller_0+0xff810d70>
   11de0:	8080030b 	ldhu	r2,12(r16)
   11de4:	00fffdc4 	movi	r3,-9
   11de8:	80000215 	stw	zero,8(r16)
   11dec:	1884703a 	and	r2,r3,r2
   11df0:	80000615 	stw	zero,24(r16)
   11df4:	003fc306 	br	11d04 <__alt_mem_epcs_flash_controller_0+0xff810d04>
   11df8:	80c00117 	ldw	r3,4(r16)
   11dfc:	10bfffc4 	addi	r2,r2,-1
   11e00:	80800015 	stw	r2,0(r16)
   11e04:	18800044 	addi	r2,r3,1
   11e08:	80800115 	stw	r2,4(r16)
   11e0c:	9005883a 	mov	r2,r18
   11e10:	003fcc06 	br	11d44 <__alt_mem_epcs_flash_controller_0+0xff810d44>
   11e14:	00bfffc4 	movi	r2,-1
   11e18:	f800283a 	ret

00011e1c <ungetc>:
   11e1c:	008000b4 	movhi	r2,2
   11e20:	10801c04 	addi	r2,r2,112
   11e24:	280d883a 	mov	r6,r5
   11e28:	200b883a 	mov	r5,r4
   11e2c:	11000017 	ldw	r4,0(r2)
   11e30:	0011c881 	jmpi	11c88 <_ungetc_r>

00011e34 <__sprint_r.part.0>:
   11e34:	28801917 	ldw	r2,100(r5)
   11e38:	defff604 	addi	sp,sp,-40
   11e3c:	dd400515 	stw	r21,20(sp)
   11e40:	dfc00915 	stw	ra,36(sp)
   11e44:	df000815 	stw	fp,32(sp)
   11e48:	ddc00715 	stw	r23,28(sp)
   11e4c:	dd800615 	stw	r22,24(sp)
   11e50:	dd000415 	stw	r20,16(sp)
   11e54:	dcc00315 	stw	r19,12(sp)
   11e58:	dc800215 	stw	r18,8(sp)
   11e5c:	dc400115 	stw	r17,4(sp)
   11e60:	dc000015 	stw	r16,0(sp)
   11e64:	1088000c 	andi	r2,r2,8192
   11e68:	302b883a 	mov	r21,r6
   11e6c:	10002e26 	beq	r2,zero,11f28 <__sprint_r.part.0+0xf4>
   11e70:	30800217 	ldw	r2,8(r6)
   11e74:	35800017 	ldw	r22,0(r6)
   11e78:	10002926 	beq	r2,zero,11f20 <__sprint_r.part.0+0xec>
   11e7c:	2827883a 	mov	r19,r5
   11e80:	2029883a 	mov	r20,r4
   11e84:	b5c00104 	addi	r23,r22,4
   11e88:	04bfffc4 	movi	r18,-1
   11e8c:	bc400017 	ldw	r17,0(r23)
   11e90:	b4000017 	ldw	r16,0(r22)
   11e94:	0039883a 	mov	fp,zero
   11e98:	8822d0ba 	srli	r17,r17,2
   11e9c:	8800031e 	bne	r17,zero,11eac <__sprint_r.part.0+0x78>
   11ea0:	00001806 	br	11f04 <__sprint_r.part.0+0xd0>
   11ea4:	84000104 	addi	r16,r16,4
   11ea8:	8f001526 	beq	r17,fp,11f00 <__sprint_r.part.0+0xcc>
   11eac:	81400017 	ldw	r5,0(r16)
   11eb0:	980d883a 	mov	r6,r19
   11eb4:	a009883a 	mov	r4,r20
   11eb8:	00139c80 	call	139c8 <_fputwc_r>
   11ebc:	e7000044 	addi	fp,fp,1
   11ec0:	14bff81e 	bne	r2,r18,11ea4 <__alt_mem_epcs_flash_controller_0+0xff810ea4>
   11ec4:	9005883a 	mov	r2,r18
   11ec8:	a8000215 	stw	zero,8(r21)
   11ecc:	a8000115 	stw	zero,4(r21)
   11ed0:	dfc00917 	ldw	ra,36(sp)
   11ed4:	df000817 	ldw	fp,32(sp)
   11ed8:	ddc00717 	ldw	r23,28(sp)
   11edc:	dd800617 	ldw	r22,24(sp)
   11ee0:	dd400517 	ldw	r21,20(sp)
   11ee4:	dd000417 	ldw	r20,16(sp)
   11ee8:	dcc00317 	ldw	r19,12(sp)
   11eec:	dc800217 	ldw	r18,8(sp)
   11ef0:	dc400117 	ldw	r17,4(sp)
   11ef4:	dc000017 	ldw	r16,0(sp)
   11ef8:	dec00a04 	addi	sp,sp,40
   11efc:	f800283a 	ret
   11f00:	a8800217 	ldw	r2,8(r21)
   11f04:	8c63883a 	add	r17,r17,r17
   11f08:	8c63883a 	add	r17,r17,r17
   11f0c:	1445c83a 	sub	r2,r2,r17
   11f10:	a8800215 	stw	r2,8(r21)
   11f14:	b5800204 	addi	r22,r22,8
   11f18:	bdc00204 	addi	r23,r23,8
   11f1c:	103fdb1e 	bne	r2,zero,11e8c <__alt_mem_epcs_flash_controller_0+0xff810e8c>
   11f20:	0005883a 	mov	r2,zero
   11f24:	003fe806 	br	11ec8 <__alt_mem_epcs_flash_controller_0+0xff810ec8>
   11f28:	00096e40 	call	96e4 <__sfvwrite_r>
   11f2c:	003fe606 	br	11ec8 <__alt_mem_epcs_flash_controller_0+0xff810ec8>

00011f30 <__sprint_r>:
   11f30:	30c00217 	ldw	r3,8(r6)
   11f34:	18000126 	beq	r3,zero,11f3c <__sprint_r+0xc>
   11f38:	0011e341 	jmpi	11e34 <__sprint_r.part.0>
   11f3c:	30000115 	stw	zero,4(r6)
   11f40:	0005883a 	mov	r2,zero
   11f44:	f800283a 	ret

00011f48 <___vfiprintf_internal_r>:
   11f48:	deffca04 	addi	sp,sp,-216
   11f4c:	dd403115 	stw	r21,196(sp)
   11f50:	dfc03515 	stw	ra,212(sp)
   11f54:	df003415 	stw	fp,208(sp)
   11f58:	ddc03315 	stw	r23,204(sp)
   11f5c:	dd803215 	stw	r22,200(sp)
   11f60:	dd003015 	stw	r20,192(sp)
   11f64:	dcc02f15 	stw	r19,188(sp)
   11f68:	dc802e15 	stw	r18,184(sp)
   11f6c:	dc402d15 	stw	r17,180(sp)
   11f70:	dc002c15 	stw	r16,176(sp)
   11f74:	d9002115 	stw	r4,132(sp)
   11f78:	d9402015 	stw	r5,128(sp)
   11f7c:	d9c02215 	stw	r7,136(sp)
   11f80:	302b883a 	mov	r21,r6
   11f84:	20000226 	beq	r4,zero,11f90 <___vfiprintf_internal_r+0x48>
   11f88:	20800e17 	ldw	r2,56(r4)
   11f8c:	1000cf26 	beq	r2,zero,122cc <___vfiprintf_internal_r+0x384>
   11f90:	d8c02017 	ldw	r3,128(sp)
   11f94:	1880030b 	ldhu	r2,12(r3)
   11f98:	10c8000c 	andi	r3,r2,8192
   11f9c:	1800071e 	bne	r3,zero,11fbc <___vfiprintf_internal_r+0x74>
   11fa0:	d9402017 	ldw	r5,128(sp)
   11fa4:	00f7ffc4 	movi	r3,-8193
   11fa8:	10880014 	ori	r2,r2,8192
   11fac:	29001917 	ldw	r4,100(r5)
   11fb0:	2880030d 	sth	r2,12(r5)
   11fb4:	20c6703a 	and	r3,r4,r3
   11fb8:	28c01915 	stw	r3,100(r5)
   11fbc:	10c0020c 	andi	r3,r2,8
   11fc0:	1800a526 	beq	r3,zero,12258 <___vfiprintf_internal_r+0x310>
   11fc4:	d9002017 	ldw	r4,128(sp)
   11fc8:	20c00417 	ldw	r3,16(r4)
   11fcc:	1800a226 	beq	r3,zero,12258 <___vfiprintf_internal_r+0x310>
   11fd0:	1080068c 	andi	r2,r2,26
   11fd4:	00c00284 	movi	r3,10
   11fd8:	10c0a826 	beq	r2,r3,1227c <___vfiprintf_internal_r+0x334>
   11fdc:	d9001a04 	addi	r4,sp,104
   11fe0:	d94019c4 	addi	r5,sp,103
   11fe4:	048000b4 	movhi	r18,2
   11fe8:	2145c83a 	sub	r2,r4,r5
   11fec:	94b89784 	addi	r18,r18,-7586
   11ff0:	d9001e15 	stw	r4,120(sp)
   11ff4:	d9401f15 	stw	r5,124(sp)
   11ff8:	dec01a15 	stw	sp,104(sp)
   11ffc:	d8001c15 	stw	zero,112(sp)
   12000:	d8001b15 	stw	zero,108(sp)
   12004:	d811883a 	mov	r8,sp
   12008:	d8002615 	stw	zero,152(sp)
   1200c:	d8002415 	stw	zero,144(sp)
   12010:	d8802815 	stw	r2,160(sp)
   12014:	a82d883a 	mov	r22,r21
   12018:	b0800007 	ldb	r2,0(r22)
   1201c:	10040d26 	beq	r2,zero,13054 <___vfiprintf_internal_r+0x110c>
   12020:	00c00944 	movi	r3,37
   12024:	b029883a 	mov	r20,r22
   12028:	10c0021e 	bne	r2,r3,12034 <___vfiprintf_internal_r+0xec>
   1202c:	00001606 	br	12088 <___vfiprintf_internal_r+0x140>
   12030:	10c00326 	beq	r2,r3,12040 <___vfiprintf_internal_r+0xf8>
   12034:	a5000044 	addi	r20,r20,1
   12038:	a0800007 	ldb	r2,0(r20)
   1203c:	103ffc1e 	bne	r2,zero,12030 <__alt_mem_epcs_flash_controller_0+0xff811030>
   12040:	a5a1c83a 	sub	r16,r20,r22
   12044:	80001026 	beq	r16,zero,12088 <___vfiprintf_internal_r+0x140>
   12048:	d8c01c17 	ldw	r3,112(sp)
   1204c:	d8801b17 	ldw	r2,108(sp)
   12050:	45800015 	stw	r22,0(r8)
   12054:	80c7883a 	add	r3,r16,r3
   12058:	10800044 	addi	r2,r2,1
   1205c:	44000115 	stw	r16,4(r8)
   12060:	d8c01c15 	stw	r3,112(sp)
   12064:	d8801b15 	stw	r2,108(sp)
   12068:	010001c4 	movi	r4,7
   1206c:	2080750e 	bge	r4,r2,12244 <___vfiprintf_internal_r+0x2fc>
   12070:	1803951e 	bne	r3,zero,12ec8 <___vfiprintf_internal_r+0xf80>
   12074:	d8c02417 	ldw	r3,144(sp)
   12078:	d8001b15 	stw	zero,108(sp)
   1207c:	d811883a 	mov	r8,sp
   12080:	1c07883a 	add	r3,r3,r16
   12084:	d8c02415 	stw	r3,144(sp)
   12088:	a0800007 	ldb	r2,0(r20)
   1208c:	1002e026 	beq	r2,zero,12c10 <___vfiprintf_internal_r+0xcc8>
   12090:	a5800044 	addi	r22,r20,1
   12094:	a0c00047 	ldb	r3,1(r20)
   12098:	d8001d85 	stb	zero,118(sp)
   1209c:	0027883a 	mov	r19,zero
   120a0:	d8002305 	stb	zero,140(sp)
   120a4:	043fffc4 	movi	r16,-1
   120a8:	d8002515 	stw	zero,148(sp)
   120ac:	0023883a 	mov	r17,zero
   120b0:	05001604 	movi	r20,88
   120b4:	05400244 	movi	r21,9
   120b8:	402f883a 	mov	r23,r8
   120bc:	b5800044 	addi	r22,r22,1
   120c0:	18bff804 	addi	r2,r3,-32
   120c4:	a0827736 	bltu	r20,r2,12aa4 <___vfiprintf_internal_r+0xb5c>
   120c8:	100490ba 	slli	r2,r2,2
   120cc:	01000074 	movhi	r4,1
   120d0:	21083804 	addi	r4,r4,8416
   120d4:	1105883a 	add	r2,r2,r4
   120d8:	10800017 	ldw	r2,0(r2)
   120dc:	1000683a 	jmp	r2
   120e0:	000127a4 	muli	zero,zero,1182
   120e4:	00012aa4 	muli	zero,zero,1194
   120e8:	00012aa4 	muli	zero,zero,1194
   120ec:	000127c0 	call	127c <FlashTestReadWrite+0x14>
   120f0:	00012aa4 	muli	zero,zero,1194
   120f4:	00012aa4 	muli	zero,zero,1194
   120f8:	00012aa4 	muli	zero,zero,1194
   120fc:	00012aa4 	muli	zero,zero,1194
   12100:	00012aa4 	muli	zero,zero,1194
   12104:	00012aa4 	muli	zero,zero,1194
   12108:	000129c8 	cmpgei	zero,zero,1191
   1210c:	000129ec 	andhi	zero,zero,1191
   12110:	00012aa4 	muli	zero,zero,1194
   12114:	000122e4 	muli	zero,zero,1163
   12118:	00012a00 	call	12a0 <FlashTestReadWrite+0x38>
   1211c:	00012aa4 	muli	zero,zero,1194
   12120:	000127cc 	andi	zero,zero,1183
   12124:	000127d8 	cmpnei	zero,zero,1183
   12128:	000127d8 	cmpnei	zero,zero,1183
   1212c:	000127d8 	cmpnei	zero,zero,1183
   12130:	000127d8 	cmpnei	zero,zero,1183
   12134:	000127d8 	cmpnei	zero,zero,1183
   12138:	000127d8 	cmpnei	zero,zero,1183
   1213c:	000127d8 	cmpnei	zero,zero,1183
   12140:	000127d8 	cmpnei	zero,zero,1183
   12144:	000127d8 	cmpnei	zero,zero,1183
   12148:	00012aa4 	muli	zero,zero,1194
   1214c:	00012aa4 	muli	zero,zero,1194
   12150:	00012aa4 	muli	zero,zero,1194
   12154:	00012aa4 	muli	zero,zero,1194
   12158:	00012aa4 	muli	zero,zero,1194
   1215c:	00012aa4 	muli	zero,zero,1194
   12160:	00012aa4 	muli	zero,zero,1194
   12164:	00012aa4 	muli	zero,zero,1194
   12168:	00012aa4 	muli	zero,zero,1194
   1216c:	00012aa4 	muli	zero,zero,1194
   12170:	00012818 	cmpnei	zero,zero,1184
   12174:	00012aa4 	muli	zero,zero,1194
   12178:	00012aa4 	muli	zero,zero,1194
   1217c:	00012aa4 	muli	zero,zero,1194
   12180:	00012aa4 	muli	zero,zero,1194
   12184:	00012aa4 	muli	zero,zero,1194
   12188:	00012aa4 	muli	zero,zero,1194
   1218c:	00012aa4 	muli	zero,zero,1194
   12190:	00012aa4 	muli	zero,zero,1194
   12194:	00012aa4 	muli	zero,zero,1194
   12198:	00012aa4 	muli	zero,zero,1194
   1219c:	00012854 	movui	zero,1185
   121a0:	00012aa4 	muli	zero,zero,1194
   121a4:	00012aa4 	muli	zero,zero,1194
   121a8:	00012aa4 	muli	zero,zero,1194
   121ac:	00012aa4 	muli	zero,zero,1194
   121b0:	00012aa4 	muli	zero,zero,1194
   121b4:	000128b0 	cmpltui	zero,zero,1186
   121b8:	00012aa4 	muli	zero,zero,1194
   121bc:	00012aa4 	muli	zero,zero,1194
   121c0:	00012924 	muli	zero,zero,1188
   121c4:	00012aa4 	muli	zero,zero,1194
   121c8:	00012aa4 	muli	zero,zero,1194
   121cc:	00012aa4 	muli	zero,zero,1194
   121d0:	00012aa4 	muli	zero,zero,1194
   121d4:	00012aa4 	muli	zero,zero,1194
   121d8:	00012aa4 	muli	zero,zero,1194
   121dc:	00012aa4 	muli	zero,zero,1194
   121e0:	00012aa4 	muli	zero,zero,1194
   121e4:	00012aa4 	muli	zero,zero,1194
   121e8:	00012aa4 	muli	zero,zero,1194
   121ec:	000126cc 	andi	zero,zero,1179
   121f0:	000126fc 	xorhi	zero,zero,1179
   121f4:	00012aa4 	muli	zero,zero,1194
   121f8:	00012aa4 	muli	zero,zero,1194
   121fc:	00012aa4 	muli	zero,zero,1194
   12200:	00012a4c 	andi	zero,zero,1193
   12204:	000126fc 	xorhi	zero,zero,1179
   12208:	00012aa4 	muli	zero,zero,1194
   1220c:	00012aa4 	muli	zero,zero,1194
   12210:	000125a4 	muli	zero,zero,1174
   12214:	00012aa4 	muli	zero,zero,1194
   12218:	000125b8 	rdprs	zero,zero,1174
   1221c:	000125f0 	cmpltui	zero,zero,1175
   12220:	000122f0 	cmpltui	zero,zero,1163
   12224:	00012598 	cmpnei	zero,zero,1174
   12228:	00012aa4 	muli	zero,zero,1194
   1222c:	00012964 	muli	zero,zero,1189
   12230:	00012aa4 	muli	zero,zero,1194
   12234:	000129b0 	cmpltui	zero,zero,1190
   12238:	00012aa4 	muli	zero,zero,1194
   1223c:	00012aa4 	muli	zero,zero,1194
   12240:	00012674 	movhi	zero,1177
   12244:	42000204 	addi	r8,r8,8
   12248:	d8c02417 	ldw	r3,144(sp)
   1224c:	1c07883a 	add	r3,r3,r16
   12250:	d8c02415 	stw	r3,144(sp)
   12254:	003f8c06 	br	12088 <__alt_mem_epcs_flash_controller_0+0xff811088>
   12258:	d9402017 	ldw	r5,128(sp)
   1225c:	d9002117 	ldw	r4,132(sp)
   12260:	00072000 	call	7200 <__swsetup_r>
   12264:	1003c11e 	bne	r2,zero,1316c <___vfiprintf_internal_r+0x1224>
   12268:	d9402017 	ldw	r5,128(sp)
   1226c:	00c00284 	movi	r3,10
   12270:	2880030b 	ldhu	r2,12(r5)
   12274:	1080068c 	andi	r2,r2,26
   12278:	10ff581e 	bne	r2,r3,11fdc <__alt_mem_epcs_flash_controller_0+0xff810fdc>
   1227c:	d8c02017 	ldw	r3,128(sp)
   12280:	1880038f 	ldh	r2,14(r3)
   12284:	103f5516 	blt	r2,zero,11fdc <__alt_mem_epcs_flash_controller_0+0xff810fdc>
   12288:	d9c02217 	ldw	r7,136(sp)
   1228c:	d9002117 	ldw	r4,132(sp)
   12290:	a80d883a 	mov	r6,r21
   12294:	180b883a 	mov	r5,r3
   12298:	00134700 	call	13470 <__sbprintf>
   1229c:	dfc03517 	ldw	ra,212(sp)
   122a0:	df003417 	ldw	fp,208(sp)
   122a4:	ddc03317 	ldw	r23,204(sp)
   122a8:	dd803217 	ldw	r22,200(sp)
   122ac:	dd403117 	ldw	r21,196(sp)
   122b0:	dd003017 	ldw	r20,192(sp)
   122b4:	dcc02f17 	ldw	r19,188(sp)
   122b8:	dc802e17 	ldw	r18,184(sp)
   122bc:	dc402d17 	ldw	r17,180(sp)
   122c0:	dc002c17 	ldw	r16,176(sp)
   122c4:	dec03604 	addi	sp,sp,216
   122c8:	f800283a 	ret
   122cc:	00092600 	call	9260 <__sinit>
   122d0:	003f2f06 	br	11f90 <__alt_mem_epcs_flash_controller_0+0xff810f90>
   122d4:	d8c02517 	ldw	r3,148(sp)
   122d8:	d8802215 	stw	r2,136(sp)
   122dc:	00c7c83a 	sub	r3,zero,r3
   122e0:	d8c02515 	stw	r3,148(sp)
   122e4:	8c400114 	ori	r17,r17,4
   122e8:	b0c00007 	ldb	r3,0(r22)
   122ec:	003f7306 	br	120bc <__alt_mem_epcs_flash_controller_0+0xff8110bc>
   122f0:	00800c04 	movi	r2,48
   122f4:	d9402217 	ldw	r5,136(sp)
   122f8:	d8801d05 	stb	r2,116(sp)
   122fc:	00801e04 	movi	r2,120
   12300:	d8801d45 	stb	r2,117(sp)
   12304:	d8001d85 	stb	zero,118(sp)
   12308:	b811883a 	mov	r8,r23
   1230c:	28c00104 	addi	r3,r5,4
   12310:	2cc00017 	ldw	r19,0(r5)
   12314:	0029883a 	mov	r20,zero
   12318:	88800094 	ori	r2,r17,2
   1231c:	80032516 	blt	r16,zero,12fb4 <___vfiprintf_internal_r+0x106c>
   12320:	00bfdfc4 	movi	r2,-129
   12324:	88a2703a 	and	r17,r17,r2
   12328:	d8c02215 	stw	r3,136(sp)
   1232c:	8c400094 	ori	r17,r17,2
   12330:	98032a1e 	bne	r19,zero,12fdc <___vfiprintf_internal_r+0x1094>
   12334:	008000b4 	movhi	r2,2
   12338:	10b76f04 	addi	r2,r2,-8772
   1233c:	d8802615 	stw	r2,152(sp)
   12340:	002b883a 	mov	r21,zero
   12344:	8001741e 	bne	r16,zero,12918 <___vfiprintf_internal_r+0x9d0>
   12348:	0021883a 	mov	r16,zero
   1234c:	0029883a 	mov	r20,zero
   12350:	ddc01a04 	addi	r23,sp,104
   12354:	8027883a 	mov	r19,r16
   12358:	8500010e 	bge	r16,r20,12360 <___vfiprintf_internal_r+0x418>
   1235c:	a027883a 	mov	r19,r20
   12360:	ad403fcc 	andi	r21,r21,255
   12364:	ad40201c 	xori	r21,r21,128
   12368:	ad7fe004 	addi	r21,r21,-128
   1236c:	a8000126 	beq	r21,zero,12374 <___vfiprintf_internal_r+0x42c>
   12370:	9cc00044 	addi	r19,r19,1
   12374:	89c0008c 	andi	r7,r17,2
   12378:	38000126 	beq	r7,zero,12380 <___vfiprintf_internal_r+0x438>
   1237c:	9cc00084 	addi	r19,r19,2
   12380:	88c0210c 	andi	r3,r17,132
   12384:	1801dd1e 	bne	r3,zero,12afc <___vfiprintf_internal_r+0xbb4>
   12388:	d9402517 	ldw	r5,148(sp)
   1238c:	2cebc83a 	sub	r21,r5,r19
   12390:	0541da0e 	bge	zero,r21,12afc <___vfiprintf_internal_r+0xbb4>
   12394:	07000404 	movi	fp,16
   12398:	d8801c17 	ldw	r2,112(sp)
   1239c:	e543be0e 	bge	fp,r21,13298 <___vfiprintf_internal_r+0x1350>
   123a0:	014000b4 	movhi	r5,2
   123a4:	29789b84 	addi	r5,r5,-7570
   123a8:	dc002715 	stw	r16,156(sp)
   123ac:	d9801b17 	ldw	r6,108(sp)
   123b0:	a821883a 	mov	r16,r21
   123b4:	d9402315 	stw	r5,140(sp)
   123b8:	028001c4 	movi	r10,7
   123bc:	d9c02915 	stw	r7,164(sp)
   123c0:	182b883a 	mov	r21,r3
   123c4:	00000506 	br	123dc <___vfiprintf_internal_r+0x494>
   123c8:	31000084 	addi	r4,r6,2
   123cc:	42000204 	addi	r8,r8,8
   123d0:	180d883a 	mov	r6,r3
   123d4:	843ffc04 	addi	r16,r16,-16
   123d8:	e4000f0e 	bge	fp,r16,12418 <___vfiprintf_internal_r+0x4d0>
   123dc:	010000b4 	movhi	r4,2
   123e0:	10800404 	addi	r2,r2,16
   123e4:	30c00044 	addi	r3,r6,1
   123e8:	21389b84 	addi	r4,r4,-7570
   123ec:	41000015 	stw	r4,0(r8)
   123f0:	47000115 	stw	fp,4(r8)
   123f4:	d8801c15 	stw	r2,112(sp)
   123f8:	d8c01b15 	stw	r3,108(sp)
   123fc:	50fff20e 	bge	r10,r3,123c8 <__alt_mem_epcs_flash_controller_0+0xff8113c8>
   12400:	1001b21e 	bne	r2,zero,12acc <___vfiprintf_internal_r+0xb84>
   12404:	843ffc04 	addi	r16,r16,-16
   12408:	000d883a 	mov	r6,zero
   1240c:	01000044 	movi	r4,1
   12410:	d811883a 	mov	r8,sp
   12414:	e43ff116 	blt	fp,r16,123dc <__alt_mem_epcs_flash_controller_0+0xff8113dc>
   12418:	a807883a 	mov	r3,r21
   1241c:	d9c02917 	ldw	r7,164(sp)
   12420:	802b883a 	mov	r21,r16
   12424:	dc002717 	ldw	r16,156(sp)
   12428:	d9402317 	ldw	r5,140(sp)
   1242c:	a885883a 	add	r2,r21,r2
   12430:	45400115 	stw	r21,4(r8)
   12434:	41400015 	stw	r5,0(r8)
   12438:	d8801c15 	stw	r2,112(sp)
   1243c:	d9001b15 	stw	r4,108(sp)
   12440:	014001c4 	movi	r5,7
   12444:	29026216 	blt	r5,r4,12dd0 <___vfiprintf_internal_r+0xe88>
   12448:	d9801d87 	ldb	r6,118(sp)
   1244c:	42000204 	addi	r8,r8,8
   12450:	21400044 	addi	r5,r4,1
   12454:	3001ae1e 	bne	r6,zero,12b10 <___vfiprintf_internal_r+0xbc8>
   12458:	3801bb26 	beq	r7,zero,12b48 <___vfiprintf_internal_r+0xc00>
   1245c:	d9001d04 	addi	r4,sp,116
   12460:	10800084 	addi	r2,r2,2
   12464:	41000015 	stw	r4,0(r8)
   12468:	01000084 	movi	r4,2
   1246c:	41000115 	stw	r4,4(r8)
   12470:	d8801c15 	stw	r2,112(sp)
   12474:	d9401b15 	stw	r5,108(sp)
   12478:	010001c4 	movi	r4,7
   1247c:	2142680e 	bge	r4,r5,12e20 <___vfiprintf_internal_r+0xed8>
   12480:	1002b11e 	bne	r2,zero,12f48 <___vfiprintf_internal_r+0x1000>
   12484:	01802004 	movi	r6,128
   12488:	01400044 	movi	r5,1
   1248c:	0009883a 	mov	r4,zero
   12490:	d811883a 	mov	r8,sp
   12494:	1981ae1e 	bne	r3,r6,12b50 <___vfiprintf_internal_r+0xc08>
   12498:	d8c02517 	ldw	r3,148(sp)
   1249c:	1cf9c83a 	sub	fp,r3,r19
   124a0:	0701ab0e 	bge	zero,fp,12b50 <___vfiprintf_internal_r+0xc08>
   124a4:	05400404 	movi	r21,16
   124a8:	af03a90e 	bge	r21,fp,13350 <___vfiprintf_internal_r+0x1408>
   124ac:	014000b4 	movhi	r5,2
   124b0:	29789784 	addi	r5,r5,-7586
   124b4:	d9402315 	stw	r5,140(sp)
   124b8:	01c001c4 	movi	r7,7
   124bc:	00000506 	br	124d4 <___vfiprintf_internal_r+0x58c>
   124c0:	21800084 	addi	r6,r4,2
   124c4:	42000204 	addi	r8,r8,8
   124c8:	1809883a 	mov	r4,r3
   124cc:	e73ffc04 	addi	fp,fp,-16
   124d0:	af000d0e 	bge	r21,fp,12508 <___vfiprintf_internal_r+0x5c0>
   124d4:	10800404 	addi	r2,r2,16
   124d8:	20c00044 	addi	r3,r4,1
   124dc:	44800015 	stw	r18,0(r8)
   124e0:	45400115 	stw	r21,4(r8)
   124e4:	d8801c15 	stw	r2,112(sp)
   124e8:	d8c01b15 	stw	r3,108(sp)
   124ec:	38fff40e 	bge	r7,r3,124c0 <__alt_mem_epcs_flash_controller_0+0xff8114c0>
   124f0:	10022b1e 	bne	r2,zero,12da0 <___vfiprintf_internal_r+0xe58>
   124f4:	e73ffc04 	addi	fp,fp,-16
   124f8:	01800044 	movi	r6,1
   124fc:	0009883a 	mov	r4,zero
   12500:	d811883a 	mov	r8,sp
   12504:	af3ff316 	blt	r21,fp,124d4 <__alt_mem_epcs_flash_controller_0+0xff8114d4>
   12508:	d8c02317 	ldw	r3,140(sp)
   1250c:	1705883a 	add	r2,r2,fp
   12510:	47000115 	stw	fp,4(r8)
   12514:	40c00015 	stw	r3,0(r8)
   12518:	d8801c15 	stw	r2,112(sp)
   1251c:	d9801b15 	stw	r6,108(sp)
   12520:	00c001c4 	movi	r3,7
   12524:	19829416 	blt	r3,r6,12f78 <___vfiprintf_internal_r+0x1030>
   12528:	8521c83a 	sub	r16,r16,r20
   1252c:	42000204 	addi	r8,r8,8
   12530:	31400044 	addi	r5,r6,1
   12534:	3009883a 	mov	r4,r6
   12538:	04018716 	blt	zero,r16,12b58 <___vfiprintf_internal_r+0xc10>
   1253c:	a085883a 	add	r2,r20,r2
   12540:	45c00015 	stw	r23,0(r8)
   12544:	45000115 	stw	r20,4(r8)
   12548:	d8801c15 	stw	r2,112(sp)
   1254c:	d9401b15 	stw	r5,108(sp)
   12550:	00c001c4 	movi	r3,7
   12554:	1941c20e 	bge	r3,r5,12c60 <___vfiprintf_internal_r+0xd18>
   12558:	1002531e 	bne	r2,zero,12ea8 <___vfiprintf_internal_r+0xf60>
   1255c:	d8001b15 	stw	zero,108(sp)
   12560:	8c40010c 	andi	r17,r17,4
   12564:	88023226 	beq	r17,zero,12e30 <___vfiprintf_internal_r+0xee8>
   12568:	d9002517 	ldw	r4,148(sp)
   1256c:	24e3c83a 	sub	r17,r4,r19
   12570:	04432916 	blt	zero,r17,13218 <___vfiprintf_internal_r+0x12d0>
   12574:	d8802517 	ldw	r2,148(sp)
   12578:	14c0010e 	bge	r2,r19,12580 <___vfiprintf_internal_r+0x638>
   1257c:	9805883a 	mov	r2,r19
   12580:	d8c02417 	ldw	r3,144(sp)
   12584:	1887883a 	add	r3,r3,r2
   12588:	d8c02415 	stw	r3,144(sp)
   1258c:	d8001b15 	stw	zero,108(sp)
   12590:	d811883a 	mov	r8,sp
   12594:	003ea006 	br	12018 <__alt_mem_epcs_flash_controller_0+0xff811018>
   12598:	8c400814 	ori	r17,r17,32
   1259c:	b0c00007 	ldb	r3,0(r22)
   125a0:	003ec606 	br	120bc <__alt_mem_epcs_flash_controller_0+0xff8110bc>
   125a4:	b0c00007 	ldb	r3,0(r22)
   125a8:	00801b04 	movi	r2,108
   125ac:	18832026 	beq	r3,r2,13230 <___vfiprintf_internal_r+0x12e8>
   125b0:	8c400414 	ori	r17,r17,16
   125b4:	003ec106 	br	120bc <__alt_mem_epcs_flash_controller_0+0xff8110bc>
   125b8:	9cc03fcc 	andi	r19,r19,255
   125bc:	b811883a 	mov	r8,r23
   125c0:	9803981e 	bne	r19,zero,13424 <___vfiprintf_internal_r+0x14dc>
   125c4:	8880080c 	andi	r2,r17,32
   125c8:	1002be26 	beq	r2,zero,130c4 <___vfiprintf_internal_r+0x117c>
   125cc:	d9002217 	ldw	r4,136(sp)
   125d0:	d9402417 	ldw	r5,144(sp)
   125d4:	20800017 	ldw	r2,0(r4)
   125d8:	2807d7fa 	srai	r3,r5,31
   125dc:	21000104 	addi	r4,r4,4
   125e0:	d9002215 	stw	r4,136(sp)
   125e4:	11400015 	stw	r5,0(r2)
   125e8:	10c00115 	stw	r3,4(r2)
   125ec:	003e8a06 	br	12018 <__alt_mem_epcs_flash_controller_0+0xff811018>
   125f0:	9cc03fcc 	andi	r19,r19,255
   125f4:	b811883a 	mov	r8,r23
   125f8:	9803871e 	bne	r19,zero,13418 <___vfiprintf_internal_r+0x14d0>
   125fc:	8880080c 	andi	r2,r17,32
   12600:	10009a26 	beq	r2,zero,1286c <___vfiprintf_internal_r+0x924>
   12604:	d9002217 	ldw	r4,136(sp)
   12608:	d8001d85 	stb	zero,118(sp)
   1260c:	20800204 	addi	r2,r4,8
   12610:	24c00017 	ldw	r19,0(r4)
   12614:	25000117 	ldw	r20,4(r4)
   12618:	8002a416 	blt	r16,zero,130ac <___vfiprintf_internal_r+0x1164>
   1261c:	013fdfc4 	movi	r4,-129
   12620:	9d06b03a 	or	r3,r19,r20
   12624:	d8802215 	stw	r2,136(sp)
   12628:	8922703a 	and	r17,r17,r4
   1262c:	18009b26 	beq	r3,zero,1289c <___vfiprintf_internal_r+0x954>
   12630:	002b883a 	mov	r21,zero
   12634:	ddc01a04 	addi	r23,sp,104
   12638:	9806d0fa 	srli	r3,r19,3
   1263c:	a008977a 	slli	r4,r20,29
   12640:	a028d0fa 	srli	r20,r20,3
   12644:	9cc001cc 	andi	r19,r19,7
   12648:	98800c04 	addi	r2,r19,48
   1264c:	bdffffc4 	addi	r23,r23,-1
   12650:	20e6b03a 	or	r19,r4,r3
   12654:	b8800005 	stb	r2,0(r23)
   12658:	9d06b03a 	or	r3,r19,r20
   1265c:	183ff61e 	bne	r3,zero,12638 <__alt_mem_epcs_flash_controller_0+0xff811638>
   12660:	88c0004c 	andi	r3,r17,1
   12664:	18021f1e 	bne	r3,zero,12ee4 <___vfiprintf_internal_r+0xf9c>
   12668:	d9401e17 	ldw	r5,120(sp)
   1266c:	2de9c83a 	sub	r20,r5,r23
   12670:	003f3806 	br	12354 <__alt_mem_epcs_flash_controller_0+0xff811354>
   12674:	9cc03fcc 	andi	r19,r19,255
   12678:	b811883a 	mov	r8,r23
   1267c:	98034f1e 	bne	r19,zero,133bc <___vfiprintf_internal_r+0x1474>
   12680:	008000b4 	movhi	r2,2
   12684:	10b76f04 	addi	r2,r2,-8772
   12688:	d8802615 	stw	r2,152(sp)
   1268c:	8880080c 	andi	r2,r17,32
   12690:	1000ac26 	beq	r2,zero,12944 <___vfiprintf_internal_r+0x9fc>
   12694:	d9002217 	ldw	r4,136(sp)
   12698:	24c00017 	ldw	r19,0(r4)
   1269c:	25000117 	ldw	r20,4(r4)
   126a0:	21000204 	addi	r4,r4,8
   126a4:	d9002215 	stw	r4,136(sp)
   126a8:	8880004c 	andi	r2,r17,1
   126ac:	1001e726 	beq	r2,zero,12e4c <___vfiprintf_internal_r+0xf04>
   126b0:	9d04b03a 	or	r2,r19,r20
   126b4:	10025c1e 	bne	r2,zero,13028 <___vfiprintf_internal_r+0x10e0>
   126b8:	d8001d85 	stb	zero,118(sp)
   126bc:	80024416 	blt	r16,zero,12fd0 <___vfiprintf_internal_r+0x1088>
   126c0:	00bfdfc4 	movi	r2,-129
   126c4:	88a2703a 	and	r17,r17,r2
   126c8:	003f1d06 	br	12340 <__alt_mem_epcs_flash_controller_0+0xff811340>
   126cc:	d8c02217 	ldw	r3,136(sp)
   126d0:	04c00044 	movi	r19,1
   126d4:	b811883a 	mov	r8,r23
   126d8:	18800017 	ldw	r2,0(r3)
   126dc:	18c00104 	addi	r3,r3,4
   126e0:	d8001d85 	stb	zero,118(sp)
   126e4:	d8801005 	stb	r2,64(sp)
   126e8:	d8c02215 	stw	r3,136(sp)
   126ec:	9829883a 	mov	r20,r19
   126f0:	ddc01004 	addi	r23,sp,64
   126f4:	0021883a 	mov	r16,zero
   126f8:	003f1e06 	br	12374 <__alt_mem_epcs_flash_controller_0+0xff811374>
   126fc:	9cc03fcc 	andi	r19,r19,255
   12700:	b811883a 	mov	r8,r23
   12704:	9803331e 	bne	r19,zero,133d4 <___vfiprintf_internal_r+0x148c>
   12708:	8880080c 	andi	r2,r17,32
   1270c:	10004826 	beq	r2,zero,12830 <___vfiprintf_internal_r+0x8e8>
   12710:	d9002217 	ldw	r4,136(sp)
   12714:	20800117 	ldw	r2,4(r4)
   12718:	24c00017 	ldw	r19,0(r4)
   1271c:	21000204 	addi	r4,r4,8
   12720:	d9002215 	stw	r4,136(sp)
   12724:	1029883a 	mov	r20,r2
   12728:	10024c16 	blt	r2,zero,1305c <___vfiprintf_internal_r+0x1114>
   1272c:	dd401d83 	ldbu	r21,118(sp)
   12730:	80007116 	blt	r16,zero,128f8 <___vfiprintf_internal_r+0x9b0>
   12734:	00ffdfc4 	movi	r3,-129
   12738:	9d04b03a 	or	r2,r19,r20
   1273c:	88e2703a 	and	r17,r17,r3
   12740:	1000d126 	beq	r2,zero,12a88 <___vfiprintf_internal_r+0xb40>
   12744:	a0023526 	beq	r20,zero,1301c <___vfiprintf_internal_r+0x10d4>
   12748:	ddc01a04 	addi	r23,sp,104
   1274c:	4039883a 	mov	fp,r8
   12750:	9809883a 	mov	r4,r19
   12754:	a00b883a 	mov	r5,r20
   12758:	01800284 	movi	r6,10
   1275c:	000f883a 	mov	r7,zero
   12760:	001666c0 	call	1666c <__umoddi3>
   12764:	10800c04 	addi	r2,r2,48
   12768:	bdffffc4 	addi	r23,r23,-1
   1276c:	9809883a 	mov	r4,r19
   12770:	a00b883a 	mov	r5,r20
   12774:	b8800005 	stb	r2,0(r23)
   12778:	01800284 	movi	r6,10
   1277c:	000f883a 	mov	r7,zero
   12780:	00160700 	call	16070 <__udivdi3>
   12784:	1027883a 	mov	r19,r2
   12788:	10c4b03a 	or	r2,r2,r3
   1278c:	1829883a 	mov	r20,r3
   12790:	103fef1e 	bne	r2,zero,12750 <__alt_mem_epcs_flash_controller_0+0xff811750>
   12794:	d9001e17 	ldw	r4,120(sp)
   12798:	e011883a 	mov	r8,fp
   1279c:	25e9c83a 	sub	r20,r4,r23
   127a0:	003eec06 	br	12354 <__alt_mem_epcs_flash_controller_0+0xff811354>
   127a4:	d8802307 	ldb	r2,140(sp)
   127a8:	1002361e 	bne	r2,zero,13084 <___vfiprintf_internal_r+0x113c>
   127ac:	00c00804 	movi	r3,32
   127b0:	d8c02305 	stb	r3,140(sp)
   127b4:	04c00044 	movi	r19,1
   127b8:	b0c00007 	ldb	r3,0(r22)
   127bc:	003e3f06 	br	120bc <__alt_mem_epcs_flash_controller_0+0xff8110bc>
   127c0:	8c400054 	ori	r17,r17,1
   127c4:	b0c00007 	ldb	r3,0(r22)
   127c8:	003e3c06 	br	120bc <__alt_mem_epcs_flash_controller_0+0xff8110bc>
   127cc:	8c402014 	ori	r17,r17,128
   127d0:	b0c00007 	ldb	r3,0(r22)
   127d4:	003e3906 	br	120bc <__alt_mem_epcs_flash_controller_0+0xff8110bc>
   127d8:	dc002715 	stw	r16,156(sp)
   127dc:	d8002515 	stw	zero,148(sp)
   127e0:	1f3ff404 	addi	fp,r3,-48
   127e4:	0009883a 	mov	r4,zero
   127e8:	b021883a 	mov	r16,r22
   127ec:	01400284 	movi	r5,10
   127f0:	00024440 	call	2444 <__mulsi3>
   127f4:	80c00007 	ldb	r3,0(r16)
   127f8:	e089883a 	add	r4,fp,r2
   127fc:	b5800044 	addi	r22,r22,1
   12800:	1f3ff404 	addi	fp,r3,-48
   12804:	b021883a 	mov	r16,r22
   12808:	af3ff82e 	bgeu	r21,fp,127ec <__alt_mem_epcs_flash_controller_0+0xff8117ec>
   1280c:	d9002515 	stw	r4,148(sp)
   12810:	dc002717 	ldw	r16,156(sp)
   12814:	003e2a06 	br	120c0 <__alt_mem_epcs_flash_controller_0+0xff8110c0>
   12818:	9cc03fcc 	andi	r19,r19,255
   1281c:	b811883a 	mov	r8,r23
   12820:	9802e91e 	bne	r19,zero,133c8 <___vfiprintf_internal_r+0x1480>
   12824:	8c400414 	ori	r17,r17,16
   12828:	8880080c 	andi	r2,r17,32
   1282c:	103fb81e 	bne	r2,zero,12710 <__alt_mem_epcs_flash_controller_0+0xff811710>
   12830:	8880040c 	andi	r2,r17,16
   12834:	10022e26 	beq	r2,zero,130f0 <___vfiprintf_internal_r+0x11a8>
   12838:	d9402217 	ldw	r5,136(sp)
   1283c:	2cc00017 	ldw	r19,0(r5)
   12840:	29400104 	addi	r5,r5,4
   12844:	d9402215 	stw	r5,136(sp)
   12848:	9829d7fa 	srai	r20,r19,31
   1284c:	a005883a 	mov	r2,r20
   12850:	003fb506 	br	12728 <__alt_mem_epcs_flash_controller_0+0xff811728>
   12854:	9cc03fcc 	andi	r19,r19,255
   12858:	b811883a 	mov	r8,r23
   1285c:	9802fa1e 	bne	r19,zero,13448 <___vfiprintf_internal_r+0x1500>
   12860:	8c400414 	ori	r17,r17,16
   12864:	8880080c 	andi	r2,r17,32
   12868:	103f661e 	bne	r2,zero,12604 <__alt_mem_epcs_flash_controller_0+0xff811604>
   1286c:	8880040c 	andi	r2,r17,16
   12870:	10020626 	beq	r2,zero,1308c <___vfiprintf_internal_r+0x1144>
   12874:	d9402217 	ldw	r5,136(sp)
   12878:	d8001d85 	stb	zero,118(sp)
   1287c:	0029883a 	mov	r20,zero
   12880:	28800104 	addi	r2,r5,4
   12884:	2cc00017 	ldw	r19,0(r5)
   12888:	80020816 	blt	r16,zero,130ac <___vfiprintf_internal_r+0x1164>
   1288c:	00ffdfc4 	movi	r3,-129
   12890:	d8802215 	stw	r2,136(sp)
   12894:	88e2703a 	and	r17,r17,r3
   12898:	983f651e 	bne	r19,zero,12630 <__alt_mem_epcs_flash_controller_0+0xff811630>
   1289c:	002b883a 	mov	r21,zero
   128a0:	8002cf26 	beq	r16,zero,133e0 <___vfiprintf_internal_r+0x1498>
   128a4:	0027883a 	mov	r19,zero
   128a8:	0029883a 	mov	r20,zero
   128ac:	003f6106 	br	12634 <__alt_mem_epcs_flash_controller_0+0xff811634>
   128b0:	9cc03fcc 	andi	r19,r19,255
   128b4:	b811883a 	mov	r8,r23
   128b8:	9802e01e 	bne	r19,zero,1343c <___vfiprintf_internal_r+0x14f4>
   128bc:	8c400414 	ori	r17,r17,16
   128c0:	8880080c 	andi	r2,r17,32
   128c4:	1000641e 	bne	r2,zero,12a58 <___vfiprintf_internal_r+0xb10>
   128c8:	8880040c 	andi	r2,r17,16
   128cc:	1001c81e 	bne	r2,zero,12ff0 <___vfiprintf_internal_r+0x10a8>
   128d0:	8880100c 	andi	r2,r17,64
   128d4:	d8001d85 	stb	zero,118(sp)
   128d8:	1002281e 	bne	r2,zero,1317c <___vfiprintf_internal_r+0x1234>
   128dc:	d9002217 	ldw	r4,136(sp)
   128e0:	0029883a 	mov	r20,zero
   128e4:	20800104 	addi	r2,r4,4
   128e8:	24c00017 	ldw	r19,0(r4)
   128ec:	8001c60e 	bge	r16,zero,13008 <___vfiprintf_internal_r+0x10c0>
   128f0:	d8802215 	stw	r2,136(sp)
   128f4:	002b883a 	mov	r21,zero
   128f8:	9d04b03a 	or	r2,r19,r20
   128fc:	103f911e 	bne	r2,zero,12744 <__alt_mem_epcs_flash_controller_0+0xff811744>
   12900:	00800044 	movi	r2,1
   12904:	10803fcc 	andi	r2,r2,255
   12908:	00c00044 	movi	r3,1
   1290c:	10c05f26 	beq	r2,r3,12a8c <___vfiprintf_internal_r+0xb44>
   12910:	00c00084 	movi	r3,2
   12914:	10ffe31e 	bne	r2,r3,128a4 <__alt_mem_epcs_flash_controller_0+0xff8118a4>
   12918:	0027883a 	mov	r19,zero
   1291c:	0029883a 	mov	r20,zero
   12920:	00015106 	br	12e68 <___vfiprintf_internal_r+0xf20>
   12924:	9cc03fcc 	andi	r19,r19,255
   12928:	b811883a 	mov	r8,r23
   1292c:	9802c01e 	bne	r19,zero,13430 <___vfiprintf_internal_r+0x14e8>
   12930:	014000b4 	movhi	r5,2
   12934:	29776a04 	addi	r5,r5,-8792
   12938:	d9402615 	stw	r5,152(sp)
   1293c:	8880080c 	andi	r2,r17,32
   12940:	103f541e 	bne	r2,zero,12694 <__alt_mem_epcs_flash_controller_0+0xff811694>
   12944:	8880040c 	andi	r2,r17,16
   12948:	1001f226 	beq	r2,zero,13114 <___vfiprintf_internal_r+0x11cc>
   1294c:	d9402217 	ldw	r5,136(sp)
   12950:	0029883a 	mov	r20,zero
   12954:	2cc00017 	ldw	r19,0(r5)
   12958:	29400104 	addi	r5,r5,4
   1295c:	d9402215 	stw	r5,136(sp)
   12960:	003f5106 	br	126a8 <__alt_mem_epcs_flash_controller_0+0xff8116a8>
   12964:	d8c02217 	ldw	r3,136(sp)
   12968:	b811883a 	mov	r8,r23
   1296c:	d8001d85 	stb	zero,118(sp)
   12970:	1dc00017 	ldw	r23,0(r3)
   12974:	1f000104 	addi	fp,r3,4
   12978:	b8025926 	beq	r23,zero,132e0 <___vfiprintf_internal_r+0x1398>
   1297c:	80023316 	blt	r16,zero,1324c <___vfiprintf_internal_r+0x1304>
   12980:	800d883a 	mov	r6,r16
   12984:	000b883a 	mov	r5,zero
   12988:	b809883a 	mov	r4,r23
   1298c:	da002a15 	stw	r8,168(sp)
   12990:	000a2800 	call	a280 <memchr>
   12994:	da002a17 	ldw	r8,168(sp)
   12998:	10026826 	beq	r2,zero,1333c <___vfiprintf_internal_r+0x13f4>
   1299c:	15e9c83a 	sub	r20,r2,r23
   129a0:	dd401d83 	ldbu	r21,118(sp)
   129a4:	df002215 	stw	fp,136(sp)
   129a8:	0021883a 	mov	r16,zero
   129ac:	003e6906 	br	12354 <__alt_mem_epcs_flash_controller_0+0xff811354>
   129b0:	9cc03fcc 	andi	r19,r19,255
   129b4:	b811883a 	mov	r8,r23
   129b8:	983fc126 	beq	r19,zero,128c0 <__alt_mem_epcs_flash_controller_0+0xff8118c0>
   129bc:	d8c02303 	ldbu	r3,140(sp)
   129c0:	d8c01d85 	stb	r3,118(sp)
   129c4:	003fbe06 	br	128c0 <__alt_mem_epcs_flash_controller_0+0xff8118c0>
   129c8:	d9002217 	ldw	r4,136(sp)
   129cc:	d9402217 	ldw	r5,136(sp)
   129d0:	21000017 	ldw	r4,0(r4)
   129d4:	28800104 	addi	r2,r5,4
   129d8:	d9002515 	stw	r4,148(sp)
   129dc:	203e3d16 	blt	r4,zero,122d4 <__alt_mem_epcs_flash_controller_0+0xff8112d4>
   129e0:	d8802215 	stw	r2,136(sp)
   129e4:	b0c00007 	ldb	r3,0(r22)
   129e8:	003db406 	br	120bc <__alt_mem_epcs_flash_controller_0+0xff8110bc>
   129ec:	00c00ac4 	movi	r3,43
   129f0:	d8c02305 	stb	r3,140(sp)
   129f4:	04c00044 	movi	r19,1
   129f8:	b0c00007 	ldb	r3,0(r22)
   129fc:	003daf06 	br	120bc <__alt_mem_epcs_flash_controller_0+0xff8110bc>
   12a00:	b0c00007 	ldb	r3,0(r22)
   12a04:	01000a84 	movi	r4,42
   12a08:	b4000044 	addi	r16,r22,1
   12a0c:	19025e26 	beq	r3,r4,13388 <___vfiprintf_internal_r+0x1440>
   12a10:	1f3ff404 	addi	fp,r3,-48
   12a14:	0009883a 	mov	r4,zero
   12a18:	af025236 	bltu	r21,fp,13364 <___vfiprintf_internal_r+0x141c>
   12a1c:	01400284 	movi	r5,10
   12a20:	00024440 	call	2444 <__mulsi3>
   12a24:	80c00007 	ldb	r3,0(r16)
   12a28:	1709883a 	add	r4,r2,fp
   12a2c:	85800044 	addi	r22,r16,1
   12a30:	1f3ff404 	addi	fp,r3,-48
   12a34:	b021883a 	mov	r16,r22
   12a38:	af3ff82e 	bgeu	r21,fp,12a1c <__alt_mem_epcs_flash_controller_0+0xff811a1c>
   12a3c:	2021883a 	mov	r16,r4
   12a40:	203d9f0e 	bge	r4,zero,120c0 <__alt_mem_epcs_flash_controller_0+0xff8110c0>
   12a44:	043fffc4 	movi	r16,-1
   12a48:	003d9d06 	br	120c0 <__alt_mem_epcs_flash_controller_0+0xff8110c0>
   12a4c:	8c401014 	ori	r17,r17,64
   12a50:	b0c00007 	ldb	r3,0(r22)
   12a54:	003d9906 	br	120bc <__alt_mem_epcs_flash_controller_0+0xff8110bc>
   12a58:	d9002217 	ldw	r4,136(sp)
   12a5c:	d8001d85 	stb	zero,118(sp)
   12a60:	20c00204 	addi	r3,r4,8
   12a64:	24c00017 	ldw	r19,0(r4)
   12a68:	25000117 	ldw	r20,4(r4)
   12a6c:	8001e716 	blt	r16,zero,1320c <___vfiprintf_internal_r+0x12c4>
   12a70:	013fdfc4 	movi	r4,-129
   12a74:	9d04b03a 	or	r2,r19,r20
   12a78:	d8c02215 	stw	r3,136(sp)
   12a7c:	8922703a 	and	r17,r17,r4
   12a80:	002b883a 	mov	r21,zero
   12a84:	103f2f1e 	bne	r2,zero,12744 <__alt_mem_epcs_flash_controller_0+0xff811744>
   12a88:	803e2f26 	beq	r16,zero,12348 <__alt_mem_epcs_flash_controller_0+0xff811348>
   12a8c:	0027883a 	mov	r19,zero
   12a90:	9cc00c04 	addi	r19,r19,48
   12a94:	dcc019c5 	stb	r19,103(sp)
   12a98:	dd002817 	ldw	r20,160(sp)
   12a9c:	ddc019c4 	addi	r23,sp,103
   12aa0:	003e2c06 	br	12354 <__alt_mem_epcs_flash_controller_0+0xff811354>
   12aa4:	9cc03fcc 	andi	r19,r19,255
   12aa8:	b811883a 	mov	r8,r23
   12aac:	9802571e 	bne	r19,zero,1340c <___vfiprintf_internal_r+0x14c4>
   12ab0:	18005726 	beq	r3,zero,12c10 <___vfiprintf_internal_r+0xcc8>
   12ab4:	04c00044 	movi	r19,1
   12ab8:	d8c01005 	stb	r3,64(sp)
   12abc:	d8001d85 	stb	zero,118(sp)
   12ac0:	9829883a 	mov	r20,r19
   12ac4:	ddc01004 	addi	r23,sp,64
   12ac8:	003f0a06 	br	126f4 <__alt_mem_epcs_flash_controller_0+0xff8116f4>
   12acc:	d9402017 	ldw	r5,128(sp)
   12ad0:	d9002117 	ldw	r4,132(sp)
   12ad4:	d9801a04 	addi	r6,sp,104
   12ad8:	da802a15 	stw	r10,168(sp)
   12adc:	0011e340 	call	11e34 <__sprint_r.part.0>
   12ae0:	da802a17 	ldw	r10,168(sp)
   12ae4:	1000501e 	bne	r2,zero,12c28 <___vfiprintf_internal_r+0xce0>
   12ae8:	d9801b17 	ldw	r6,108(sp)
   12aec:	d8801c17 	ldw	r2,112(sp)
   12af0:	d811883a 	mov	r8,sp
   12af4:	31000044 	addi	r4,r6,1
   12af8:	003e3606 	br	123d4 <__alt_mem_epcs_flash_controller_0+0xff8113d4>
   12afc:	d9001b17 	ldw	r4,108(sp)
   12b00:	d8801c17 	ldw	r2,112(sp)
   12b04:	21400044 	addi	r5,r4,1
   12b08:	d9801d87 	ldb	r6,118(sp)
   12b0c:	303e5226 	beq	r6,zero,12458 <__alt_mem_epcs_flash_controller_0+0xff811458>
   12b10:	01800044 	movi	r6,1
   12b14:	d9001d84 	addi	r4,sp,118
   12b18:	1185883a 	add	r2,r2,r6
   12b1c:	41000015 	stw	r4,0(r8)
   12b20:	41800115 	stw	r6,4(r8)
   12b24:	d8801c15 	stw	r2,112(sp)
   12b28:	d9401b15 	stw	r5,108(sp)
   12b2c:	010001c4 	movi	r4,7
   12b30:	2140b00e 	bge	r4,r5,12df4 <___vfiprintf_internal_r+0xeac>
   12b34:	1000f61e 	bne	r2,zero,12f10 <___vfiprintf_internal_r+0xfc8>
   12b38:	3800b31e 	bne	r7,zero,12e08 <___vfiprintf_internal_r+0xec0>
   12b3c:	0009883a 	mov	r4,zero
   12b40:	300b883a 	mov	r5,r6
   12b44:	d811883a 	mov	r8,sp
   12b48:	01802004 	movi	r6,128
   12b4c:	19be5226 	beq	r3,r6,12498 <__alt_mem_epcs_flash_controller_0+0xff811498>
   12b50:	8521c83a 	sub	r16,r16,r20
   12b54:	043e790e 	bge	zero,r16,1253c <__alt_mem_epcs_flash_controller_0+0xff81153c>
   12b58:	05400404 	movi	r21,16
   12b5c:	ac01b00e 	bge	r21,r16,13220 <___vfiprintf_internal_r+0x12d8>
   12b60:	014000b4 	movhi	r5,2
   12b64:	29789784 	addi	r5,r5,-7586
   12b68:	d9402315 	stw	r5,140(sp)
   12b6c:	070001c4 	movi	fp,7
   12b70:	00000506 	br	12b88 <___vfiprintf_internal_r+0xc40>
   12b74:	21400084 	addi	r5,r4,2
   12b78:	42000204 	addi	r8,r8,8
   12b7c:	1809883a 	mov	r4,r3
   12b80:	843ffc04 	addi	r16,r16,-16
   12b84:	ac000d0e 	bge	r21,r16,12bbc <___vfiprintf_internal_r+0xc74>
   12b88:	10800404 	addi	r2,r2,16
   12b8c:	20c00044 	addi	r3,r4,1
   12b90:	44800015 	stw	r18,0(r8)
   12b94:	45400115 	stw	r21,4(r8)
   12b98:	d8801c15 	stw	r2,112(sp)
   12b9c:	d8c01b15 	stw	r3,108(sp)
   12ba0:	e0fff40e 	bge	fp,r3,12b74 <__alt_mem_epcs_flash_controller_0+0xff811b74>
   12ba4:	1000101e 	bne	r2,zero,12be8 <___vfiprintf_internal_r+0xca0>
   12ba8:	843ffc04 	addi	r16,r16,-16
   12bac:	01400044 	movi	r5,1
   12bb0:	0009883a 	mov	r4,zero
   12bb4:	d811883a 	mov	r8,sp
   12bb8:	ac3ff316 	blt	r21,r16,12b88 <__alt_mem_epcs_flash_controller_0+0xff811b88>
   12bbc:	d8c02317 	ldw	r3,140(sp)
   12bc0:	1405883a 	add	r2,r2,r16
   12bc4:	44000115 	stw	r16,4(r8)
   12bc8:	40c00015 	stw	r3,0(r8)
   12bcc:	d8801c15 	stw	r2,112(sp)
   12bd0:	d9401b15 	stw	r5,108(sp)
   12bd4:	00c001c4 	movi	r3,7
   12bd8:	19401916 	blt	r3,r5,12c40 <___vfiprintf_internal_r+0xcf8>
   12bdc:	42000204 	addi	r8,r8,8
   12be0:	29400044 	addi	r5,r5,1
   12be4:	003e5506 	br	1253c <__alt_mem_epcs_flash_controller_0+0xff81153c>
   12be8:	d9402017 	ldw	r5,128(sp)
   12bec:	d9002117 	ldw	r4,132(sp)
   12bf0:	d9801a04 	addi	r6,sp,104
   12bf4:	0011e340 	call	11e34 <__sprint_r.part.0>
   12bf8:	10000b1e 	bne	r2,zero,12c28 <___vfiprintf_internal_r+0xce0>
   12bfc:	d9001b17 	ldw	r4,108(sp)
   12c00:	d8801c17 	ldw	r2,112(sp)
   12c04:	d811883a 	mov	r8,sp
   12c08:	21400044 	addi	r5,r4,1
   12c0c:	003fdc06 	br	12b80 <__alt_mem_epcs_flash_controller_0+0xff811b80>
   12c10:	d8801c17 	ldw	r2,112(sp)
   12c14:	10000426 	beq	r2,zero,12c28 <___vfiprintf_internal_r+0xce0>
   12c18:	d9402017 	ldw	r5,128(sp)
   12c1c:	d9002117 	ldw	r4,132(sp)
   12c20:	d9801a04 	addi	r6,sp,104
   12c24:	0011e340 	call	11e34 <__sprint_r.part.0>
   12c28:	d9402017 	ldw	r5,128(sp)
   12c2c:	2880030b 	ldhu	r2,12(r5)
   12c30:	1080100c 	andi	r2,r2,64
   12c34:	10014d1e 	bne	r2,zero,1316c <___vfiprintf_internal_r+0x1224>
   12c38:	d8802417 	ldw	r2,144(sp)
   12c3c:	003d9706 	br	1229c <__alt_mem_epcs_flash_controller_0+0xff81129c>
   12c40:	1000d21e 	bne	r2,zero,12f8c <___vfiprintf_internal_r+0x1044>
   12c44:	00c00044 	movi	r3,1
   12c48:	a005883a 	mov	r2,r20
   12c4c:	ddc00015 	stw	r23,0(sp)
   12c50:	dd000115 	stw	r20,4(sp)
   12c54:	dd001c15 	stw	r20,112(sp)
   12c58:	d8c01b15 	stw	r3,108(sp)
   12c5c:	d811883a 	mov	r8,sp
   12c60:	42000204 	addi	r8,r8,8
   12c64:	8c40010c 	andi	r17,r17,4
   12c68:	88004026 	beq	r17,zero,12d6c <___vfiprintf_internal_r+0xe24>
   12c6c:	d9002517 	ldw	r4,148(sp)
   12c70:	24e3c83a 	sub	r17,r4,r19
   12c74:	04403d0e 	bge	zero,r17,12d6c <___vfiprintf_internal_r+0xe24>
   12c78:	04000404 	movi	r16,16
   12c7c:	8441a90e 	bge	r16,r17,13324 <___vfiprintf_internal_r+0x13dc>
   12c80:	00c000b4 	movhi	r3,2
   12c84:	18f89b84 	addi	r3,r3,-7570
   12c88:	d9001b17 	ldw	r4,108(sp)
   12c8c:	d8c02315 	stw	r3,140(sp)
   12c90:	050001c4 	movi	r20,7
   12c94:	dd402117 	ldw	r21,132(sp)
   12c98:	ddc02017 	ldw	r23,128(sp)
   12c9c:	00000506 	br	12cb4 <___vfiprintf_internal_r+0xd6c>
   12ca0:	21400084 	addi	r5,r4,2
   12ca4:	42000204 	addi	r8,r8,8
   12ca8:	1809883a 	mov	r4,r3
   12cac:	8c7ffc04 	addi	r17,r17,-16
   12cb0:	84400f0e 	bge	r16,r17,12cf0 <___vfiprintf_internal_r+0xda8>
   12cb4:	014000b4 	movhi	r5,2
   12cb8:	10800404 	addi	r2,r2,16
   12cbc:	20c00044 	addi	r3,r4,1
   12cc0:	29789b84 	addi	r5,r5,-7570
   12cc4:	41400015 	stw	r5,0(r8)
   12cc8:	44000115 	stw	r16,4(r8)
   12ccc:	d8801c15 	stw	r2,112(sp)
   12cd0:	d8c01b15 	stw	r3,108(sp)
   12cd4:	a0fff20e 	bge	r20,r3,12ca0 <__alt_mem_epcs_flash_controller_0+0xff811ca0>
   12cd8:	1000141e 	bne	r2,zero,12d2c <___vfiprintf_internal_r+0xde4>
   12cdc:	8c7ffc04 	addi	r17,r17,-16
   12ce0:	01400044 	movi	r5,1
   12ce4:	0009883a 	mov	r4,zero
   12ce8:	d811883a 	mov	r8,sp
   12cec:	847ff116 	blt	r16,r17,12cb4 <__alt_mem_epcs_flash_controller_0+0xff811cb4>
   12cf0:	d8c02317 	ldw	r3,140(sp)
   12cf4:	1445883a 	add	r2,r2,r17
   12cf8:	44400115 	stw	r17,4(r8)
   12cfc:	40c00015 	stw	r3,0(r8)
   12d00:	d8801c15 	stw	r2,112(sp)
   12d04:	d9401b15 	stw	r5,108(sp)
   12d08:	00c001c4 	movi	r3,7
   12d0c:	1940170e 	bge	r3,r5,12d6c <___vfiprintf_internal_r+0xe24>
   12d10:	1000101e 	bne	r2,zero,12d54 <___vfiprintf_internal_r+0xe0c>
   12d14:	d8802517 	ldw	r2,148(sp)
   12d18:	14c11616 	blt	r2,r19,13174 <___vfiprintf_internal_r+0x122c>
   12d1c:	d9002417 	ldw	r4,144(sp)
   12d20:	2089883a 	add	r4,r4,r2
   12d24:	d9002415 	stw	r4,144(sp)
   12d28:	003e1806 	br	1258c <__alt_mem_epcs_flash_controller_0+0xff81158c>
   12d2c:	d9801a04 	addi	r6,sp,104
   12d30:	b80b883a 	mov	r5,r23
   12d34:	a809883a 	mov	r4,r21
   12d38:	0011e340 	call	11e34 <__sprint_r.part.0>
   12d3c:	103fba1e 	bne	r2,zero,12c28 <__alt_mem_epcs_flash_controller_0+0xff811c28>
   12d40:	d9001b17 	ldw	r4,108(sp)
   12d44:	d8801c17 	ldw	r2,112(sp)
   12d48:	d811883a 	mov	r8,sp
   12d4c:	21400044 	addi	r5,r4,1
   12d50:	003fd606 	br	12cac <__alt_mem_epcs_flash_controller_0+0xff811cac>
   12d54:	d9402017 	ldw	r5,128(sp)
   12d58:	d9002117 	ldw	r4,132(sp)
   12d5c:	d9801a04 	addi	r6,sp,104
   12d60:	0011e340 	call	11e34 <__sprint_r.part.0>
   12d64:	103fb01e 	bne	r2,zero,12c28 <__alt_mem_epcs_flash_controller_0+0xff811c28>
   12d68:	d8801c17 	ldw	r2,112(sp)
   12d6c:	d8c02517 	ldw	r3,148(sp)
   12d70:	1cc0010e 	bge	r3,r19,12d78 <___vfiprintf_internal_r+0xe30>
   12d74:	9807883a 	mov	r3,r19
   12d78:	d9002417 	ldw	r4,144(sp)
   12d7c:	20c9883a 	add	r4,r4,r3
   12d80:	d9002415 	stw	r4,144(sp)
   12d84:	103e0126 	beq	r2,zero,1258c <__alt_mem_epcs_flash_controller_0+0xff81158c>
   12d88:	d9402017 	ldw	r5,128(sp)
   12d8c:	d9002117 	ldw	r4,132(sp)
   12d90:	d9801a04 	addi	r6,sp,104
   12d94:	0011e340 	call	11e34 <__sprint_r.part.0>
   12d98:	103dfc26 	beq	r2,zero,1258c <__alt_mem_epcs_flash_controller_0+0xff81158c>
   12d9c:	003fa206 	br	12c28 <__alt_mem_epcs_flash_controller_0+0xff811c28>
   12da0:	d9402017 	ldw	r5,128(sp)
   12da4:	d9002117 	ldw	r4,132(sp)
   12da8:	d9801a04 	addi	r6,sp,104
   12dac:	d9c02b15 	stw	r7,172(sp)
   12db0:	0011e340 	call	11e34 <__sprint_r.part.0>
   12db4:	d9c02b17 	ldw	r7,172(sp)
   12db8:	103f9b1e 	bne	r2,zero,12c28 <__alt_mem_epcs_flash_controller_0+0xff811c28>
   12dbc:	d9001b17 	ldw	r4,108(sp)
   12dc0:	d8801c17 	ldw	r2,112(sp)
   12dc4:	d811883a 	mov	r8,sp
   12dc8:	21800044 	addi	r6,r4,1
   12dcc:	003dbf06 	br	124cc <__alt_mem_epcs_flash_controller_0+0xff8114cc>
   12dd0:	1000d81e 	bne	r2,zero,13134 <___vfiprintf_internal_r+0x11ec>
   12dd4:	d9001d87 	ldb	r4,118(sp)
   12dd8:	20000a26 	beq	r4,zero,12e04 <___vfiprintf_internal_r+0xebc>
   12ddc:	00800044 	movi	r2,1
   12de0:	d9001d84 	addi	r4,sp,118
   12de4:	100b883a 	mov	r5,r2
   12de8:	d9000015 	stw	r4,0(sp)
   12dec:	d8800115 	stw	r2,4(sp)
   12df0:	d811883a 	mov	r8,sp
   12df4:	2809883a 	mov	r4,r5
   12df8:	42000204 	addi	r8,r8,8
   12dfc:	29400044 	addi	r5,r5,1
   12e00:	003d9506 	br	12458 <__alt_mem_epcs_flash_controller_0+0xff811458>
   12e04:	3800fd26 	beq	r7,zero,131fc <___vfiprintf_internal_r+0x12b4>
   12e08:	00800084 	movi	r2,2
   12e0c:	d9001d04 	addi	r4,sp,116
   12e10:	d9000015 	stw	r4,0(sp)
   12e14:	d8800115 	stw	r2,4(sp)
   12e18:	01400044 	movi	r5,1
   12e1c:	d811883a 	mov	r8,sp
   12e20:	2809883a 	mov	r4,r5
   12e24:	42000204 	addi	r8,r8,8
   12e28:	29400044 	addi	r5,r5,1
   12e2c:	003f4606 	br	12b48 <__alt_mem_epcs_flash_controller_0+0xff811b48>
   12e30:	d8802517 	ldw	r2,148(sp)
   12e34:	14c0010e 	bge	r2,r19,12e3c <___vfiprintf_internal_r+0xef4>
   12e38:	9805883a 	mov	r2,r19
   12e3c:	d9402417 	ldw	r5,144(sp)
   12e40:	288b883a 	add	r5,r5,r2
   12e44:	d9402415 	stw	r5,144(sp)
   12e48:	003dd006 	br	1258c <__alt_mem_epcs_flash_controller_0+0xff81158c>
   12e4c:	d8001d85 	stb	zero,118(sp)
   12e50:	80005d16 	blt	r16,zero,12fc8 <___vfiprintf_internal_r+0x1080>
   12e54:	00ffdfc4 	movi	r3,-129
   12e58:	9d04b03a 	or	r2,r19,r20
   12e5c:	88e2703a 	and	r17,r17,r3
   12e60:	103d3726 	beq	r2,zero,12340 <__alt_mem_epcs_flash_controller_0+0xff811340>
   12e64:	002b883a 	mov	r21,zero
   12e68:	d9002617 	ldw	r4,152(sp)
   12e6c:	ddc01a04 	addi	r23,sp,104
   12e70:	988003cc 	andi	r2,r19,15
   12e74:	a006973a 	slli	r3,r20,28
   12e78:	2085883a 	add	r2,r4,r2
   12e7c:	9826d13a 	srli	r19,r19,4
   12e80:	10800003 	ldbu	r2,0(r2)
   12e84:	a028d13a 	srli	r20,r20,4
   12e88:	bdffffc4 	addi	r23,r23,-1
   12e8c:	1ce6b03a 	or	r19,r3,r19
   12e90:	b8800005 	stb	r2,0(r23)
   12e94:	9d04b03a 	or	r2,r19,r20
   12e98:	103ff51e 	bne	r2,zero,12e70 <__alt_mem_epcs_flash_controller_0+0xff811e70>
   12e9c:	d8801e17 	ldw	r2,120(sp)
   12ea0:	15e9c83a 	sub	r20,r2,r23
   12ea4:	003d2b06 	br	12354 <__alt_mem_epcs_flash_controller_0+0xff811354>
   12ea8:	d9402017 	ldw	r5,128(sp)
   12eac:	d9002117 	ldw	r4,132(sp)
   12eb0:	d9801a04 	addi	r6,sp,104
   12eb4:	0011e340 	call	11e34 <__sprint_r.part.0>
   12eb8:	103f5b1e 	bne	r2,zero,12c28 <__alt_mem_epcs_flash_controller_0+0xff811c28>
   12ebc:	d8801c17 	ldw	r2,112(sp)
   12ec0:	d811883a 	mov	r8,sp
   12ec4:	003f6706 	br	12c64 <__alt_mem_epcs_flash_controller_0+0xff811c64>
   12ec8:	d9402017 	ldw	r5,128(sp)
   12ecc:	d9002117 	ldw	r4,132(sp)
   12ed0:	d9801a04 	addi	r6,sp,104
   12ed4:	0011e340 	call	11e34 <__sprint_r.part.0>
   12ed8:	103f531e 	bne	r2,zero,12c28 <__alt_mem_epcs_flash_controller_0+0xff811c28>
   12edc:	d811883a 	mov	r8,sp
   12ee0:	003cd906 	br	12248 <__alt_mem_epcs_flash_controller_0+0xff811248>
   12ee4:	10803fcc 	andi	r2,r2,255
   12ee8:	1080201c 	xori	r2,r2,128
   12eec:	10bfe004 	addi	r2,r2,-128
   12ef0:	00c00c04 	movi	r3,48
   12ef4:	10ffe926 	beq	r2,r3,12e9c <__alt_mem_epcs_flash_controller_0+0xff811e9c>
   12ef8:	b8ffffc5 	stb	r3,-1(r23)
   12efc:	d8c01e17 	ldw	r3,120(sp)
   12f00:	b8bfffc4 	addi	r2,r23,-1
   12f04:	102f883a 	mov	r23,r2
   12f08:	18a9c83a 	sub	r20,r3,r2
   12f0c:	003d1106 	br	12354 <__alt_mem_epcs_flash_controller_0+0xff811354>
   12f10:	d9402017 	ldw	r5,128(sp)
   12f14:	d9002117 	ldw	r4,132(sp)
   12f18:	d9801a04 	addi	r6,sp,104
   12f1c:	d8c02a15 	stw	r3,168(sp)
   12f20:	d9c02b15 	stw	r7,172(sp)
   12f24:	0011e340 	call	11e34 <__sprint_r.part.0>
   12f28:	d8c02a17 	ldw	r3,168(sp)
   12f2c:	d9c02b17 	ldw	r7,172(sp)
   12f30:	103f3d1e 	bne	r2,zero,12c28 <__alt_mem_epcs_flash_controller_0+0xff811c28>
   12f34:	d9001b17 	ldw	r4,108(sp)
   12f38:	d8801c17 	ldw	r2,112(sp)
   12f3c:	d811883a 	mov	r8,sp
   12f40:	21400044 	addi	r5,r4,1
   12f44:	003d4406 	br	12458 <__alt_mem_epcs_flash_controller_0+0xff811458>
   12f48:	d9402017 	ldw	r5,128(sp)
   12f4c:	d9002117 	ldw	r4,132(sp)
   12f50:	d9801a04 	addi	r6,sp,104
   12f54:	d8c02a15 	stw	r3,168(sp)
   12f58:	0011e340 	call	11e34 <__sprint_r.part.0>
   12f5c:	d8c02a17 	ldw	r3,168(sp)
   12f60:	103f311e 	bne	r2,zero,12c28 <__alt_mem_epcs_flash_controller_0+0xff811c28>
   12f64:	d9001b17 	ldw	r4,108(sp)
   12f68:	d8801c17 	ldw	r2,112(sp)
   12f6c:	d811883a 	mov	r8,sp
   12f70:	21400044 	addi	r5,r4,1
   12f74:	003ef406 	br	12b48 <__alt_mem_epcs_flash_controller_0+0xff811b48>
   12f78:	1000bd1e 	bne	r2,zero,13270 <___vfiprintf_internal_r+0x1328>
   12f7c:	01400044 	movi	r5,1
   12f80:	0009883a 	mov	r4,zero
   12f84:	d811883a 	mov	r8,sp
   12f88:	003ef106 	br	12b50 <__alt_mem_epcs_flash_controller_0+0xff811b50>
   12f8c:	d9402017 	ldw	r5,128(sp)
   12f90:	d9002117 	ldw	r4,132(sp)
   12f94:	d9801a04 	addi	r6,sp,104
   12f98:	0011e340 	call	11e34 <__sprint_r.part.0>
   12f9c:	103f221e 	bne	r2,zero,12c28 <__alt_mem_epcs_flash_controller_0+0xff811c28>
   12fa0:	d9401b17 	ldw	r5,108(sp)
   12fa4:	d8801c17 	ldw	r2,112(sp)
   12fa8:	d811883a 	mov	r8,sp
   12fac:	29400044 	addi	r5,r5,1
   12fb0:	003d6206 	br	1253c <__alt_mem_epcs_flash_controller_0+0xff81153c>
   12fb4:	014000b4 	movhi	r5,2
   12fb8:	29776f04 	addi	r5,r5,-8772
   12fbc:	d9402615 	stw	r5,152(sp)
   12fc0:	d8c02215 	stw	r3,136(sp)
   12fc4:	1023883a 	mov	r17,r2
   12fc8:	9d04b03a 	or	r2,r19,r20
   12fcc:	103fa51e 	bne	r2,zero,12e64 <__alt_mem_epcs_flash_controller_0+0xff811e64>
   12fd0:	002b883a 	mov	r21,zero
   12fd4:	00800084 	movi	r2,2
   12fd8:	003e4a06 	br	12904 <__alt_mem_epcs_flash_controller_0+0xff811904>
   12fdc:	014000b4 	movhi	r5,2
   12fe0:	29776f04 	addi	r5,r5,-8772
   12fe4:	002b883a 	mov	r21,zero
   12fe8:	d9402615 	stw	r5,152(sp)
   12fec:	003f9e06 	br	12e68 <__alt_mem_epcs_flash_controller_0+0xff811e68>
   12ff0:	d9402217 	ldw	r5,136(sp)
   12ff4:	d8001d85 	stb	zero,118(sp)
   12ff8:	0029883a 	mov	r20,zero
   12ffc:	28800104 	addi	r2,r5,4
   13000:	2cc00017 	ldw	r19,0(r5)
   13004:	803e3a16 	blt	r16,zero,128f0 <__alt_mem_epcs_flash_controller_0+0xff8118f0>
   13008:	00ffdfc4 	movi	r3,-129
   1300c:	d8802215 	stw	r2,136(sp)
   13010:	88e2703a 	and	r17,r17,r3
   13014:	002b883a 	mov	r21,zero
   13018:	983e9b26 	beq	r19,zero,12a88 <__alt_mem_epcs_flash_controller_0+0xff811a88>
   1301c:	00800244 	movi	r2,9
   13020:	14fdc936 	bltu	r2,r19,12748 <__alt_mem_epcs_flash_controller_0+0xff811748>
   13024:	003e9a06 	br	12a90 <__alt_mem_epcs_flash_controller_0+0xff811a90>
   13028:	00800c04 	movi	r2,48
   1302c:	d8c01d45 	stb	r3,117(sp)
   13030:	d8801d05 	stb	r2,116(sp)
   13034:	d8001d85 	stb	zero,118(sp)
   13038:	88c00094 	ori	r3,r17,2
   1303c:	80009c16 	blt	r16,zero,132b0 <___vfiprintf_internal_r+0x1368>
   13040:	00bfdfc4 	movi	r2,-129
   13044:	88a2703a 	and	r17,r17,r2
   13048:	8c400094 	ori	r17,r17,2
   1304c:	002b883a 	mov	r21,zero
   13050:	003f8506 	br	12e68 <__alt_mem_epcs_flash_controller_0+0xff811e68>
   13054:	b029883a 	mov	r20,r22
   13058:	003c0b06 	br	12088 <__alt_mem_epcs_flash_controller_0+0xff811088>
   1305c:	04e7c83a 	sub	r19,zero,r19
   13060:	05400b44 	movi	r21,45
   13064:	9804c03a 	cmpne	r2,r19,zero
   13068:	0529c83a 	sub	r20,zero,r20
   1306c:	dd401d85 	stb	r21,118(sp)
   13070:	a0a9c83a 	sub	r20,r20,r2
   13074:	80009716 	blt	r16,zero,132d4 <___vfiprintf_internal_r+0x138c>
   13078:	00bfdfc4 	movi	r2,-129
   1307c:	88a2703a 	and	r17,r17,r2
   13080:	003db006 	br	12744 <__alt_mem_epcs_flash_controller_0+0xff811744>
   13084:	b0c00007 	ldb	r3,0(r22)
   13088:	003c0c06 	br	120bc <__alt_mem_epcs_flash_controller_0+0xff8110bc>
   1308c:	8880100c 	andi	r2,r17,64
   13090:	d8001d85 	stb	zero,118(sp)
   13094:	1000461e 	bne	r2,zero,131b0 <___vfiprintf_internal_r+0x1268>
   13098:	d9002217 	ldw	r4,136(sp)
   1309c:	0029883a 	mov	r20,zero
   130a0:	20800104 	addi	r2,r4,4
   130a4:	24c00017 	ldw	r19,0(r4)
   130a8:	803df80e 	bge	r16,zero,1288c <__alt_mem_epcs_flash_controller_0+0xff81188c>
   130ac:	9d06b03a 	or	r3,r19,r20
   130b0:	d8802215 	stw	r2,136(sp)
   130b4:	183d5e1e 	bne	r3,zero,12630 <__alt_mem_epcs_flash_controller_0+0xff811630>
   130b8:	002b883a 	mov	r21,zero
   130bc:	0005883a 	mov	r2,zero
   130c0:	003e1006 	br	12904 <__alt_mem_epcs_flash_controller_0+0xff811904>
   130c4:	8880040c 	andi	r2,r17,16
   130c8:	1000321e 	bne	r2,zero,13194 <___vfiprintf_internal_r+0x124c>
   130cc:	8c40100c 	andi	r17,r17,64
   130d0:	88008d26 	beq	r17,zero,13308 <___vfiprintf_internal_r+0x13c0>
   130d4:	d9402217 	ldw	r5,136(sp)
   130d8:	d8c02417 	ldw	r3,144(sp)
   130dc:	28800017 	ldw	r2,0(r5)
   130e0:	29400104 	addi	r5,r5,4
   130e4:	d9402215 	stw	r5,136(sp)
   130e8:	10c0000d 	sth	r3,0(r2)
   130ec:	003bca06 	br	12018 <__alt_mem_epcs_flash_controller_0+0xff811018>
   130f0:	8880100c 	andi	r2,r17,64
   130f4:	10003a26 	beq	r2,zero,131e0 <___vfiprintf_internal_r+0x1298>
   130f8:	d8802217 	ldw	r2,136(sp)
   130fc:	14c0000f 	ldh	r19,0(r2)
   13100:	10800104 	addi	r2,r2,4
   13104:	d8802215 	stw	r2,136(sp)
   13108:	9829d7fa 	srai	r20,r19,31
   1310c:	a005883a 	mov	r2,r20
   13110:	003d8506 	br	12728 <__alt_mem_epcs_flash_controller_0+0xff811728>
   13114:	8880100c 	andi	r2,r17,64
   13118:	10002b26 	beq	r2,zero,131c8 <___vfiprintf_internal_r+0x1280>
   1311c:	d8802217 	ldw	r2,136(sp)
   13120:	0029883a 	mov	r20,zero
   13124:	14c0000b 	ldhu	r19,0(r2)
   13128:	10800104 	addi	r2,r2,4
   1312c:	d8802215 	stw	r2,136(sp)
   13130:	003d5d06 	br	126a8 <__alt_mem_epcs_flash_controller_0+0xff8116a8>
   13134:	d9402017 	ldw	r5,128(sp)
   13138:	d9002117 	ldw	r4,132(sp)
   1313c:	d9801a04 	addi	r6,sp,104
   13140:	d8c02a15 	stw	r3,168(sp)
   13144:	d9c02b15 	stw	r7,172(sp)
   13148:	0011e340 	call	11e34 <__sprint_r.part.0>
   1314c:	d8c02a17 	ldw	r3,168(sp)
   13150:	d9c02b17 	ldw	r7,172(sp)
   13154:	103eb41e 	bne	r2,zero,12c28 <__alt_mem_epcs_flash_controller_0+0xff811c28>
   13158:	d9001b17 	ldw	r4,108(sp)
   1315c:	d8801c17 	ldw	r2,112(sp)
   13160:	d811883a 	mov	r8,sp
   13164:	21400044 	addi	r5,r4,1
   13168:	003e6706 	br	12b08 <__alt_mem_epcs_flash_controller_0+0xff811b08>
   1316c:	00bfffc4 	movi	r2,-1
   13170:	003c4a06 	br	1229c <__alt_mem_epcs_flash_controller_0+0xff81129c>
   13174:	9805883a 	mov	r2,r19
   13178:	003ee806 	br	12d1c <__alt_mem_epcs_flash_controller_0+0xff811d1c>
   1317c:	d8c02217 	ldw	r3,136(sp)
   13180:	0029883a 	mov	r20,zero
   13184:	18800104 	addi	r2,r3,4
   13188:	1cc0000b 	ldhu	r19,0(r3)
   1318c:	803f9e0e 	bge	r16,zero,13008 <__alt_mem_epcs_flash_controller_0+0xff812008>
   13190:	003dd706 	br	128f0 <__alt_mem_epcs_flash_controller_0+0xff8118f0>
   13194:	d8c02217 	ldw	r3,136(sp)
   13198:	d9002417 	ldw	r4,144(sp)
   1319c:	18800017 	ldw	r2,0(r3)
   131a0:	18c00104 	addi	r3,r3,4
   131a4:	d8c02215 	stw	r3,136(sp)
   131a8:	11000015 	stw	r4,0(r2)
   131ac:	003b9a06 	br	12018 <__alt_mem_epcs_flash_controller_0+0xff811018>
   131b0:	d8c02217 	ldw	r3,136(sp)
   131b4:	0029883a 	mov	r20,zero
   131b8:	18800104 	addi	r2,r3,4
   131bc:	1cc0000b 	ldhu	r19,0(r3)
   131c0:	803db20e 	bge	r16,zero,1288c <__alt_mem_epcs_flash_controller_0+0xff81188c>
   131c4:	003fb906 	br	130ac <__alt_mem_epcs_flash_controller_0+0xff8120ac>
   131c8:	d9002217 	ldw	r4,136(sp)
   131cc:	0029883a 	mov	r20,zero
   131d0:	24c00017 	ldw	r19,0(r4)
   131d4:	21000104 	addi	r4,r4,4
   131d8:	d9002215 	stw	r4,136(sp)
   131dc:	003d3206 	br	126a8 <__alt_mem_epcs_flash_controller_0+0xff8116a8>
   131e0:	d8c02217 	ldw	r3,136(sp)
   131e4:	1cc00017 	ldw	r19,0(r3)
   131e8:	18c00104 	addi	r3,r3,4
   131ec:	d8c02215 	stw	r3,136(sp)
   131f0:	9829d7fa 	srai	r20,r19,31
   131f4:	a005883a 	mov	r2,r20
   131f8:	003d4b06 	br	12728 <__alt_mem_epcs_flash_controller_0+0xff811728>
   131fc:	0009883a 	mov	r4,zero
   13200:	01400044 	movi	r5,1
   13204:	d811883a 	mov	r8,sp
   13208:	003e4f06 	br	12b48 <__alt_mem_epcs_flash_controller_0+0xff811b48>
   1320c:	d8c02215 	stw	r3,136(sp)
   13210:	002b883a 	mov	r21,zero
   13214:	003db806 	br	128f8 <__alt_mem_epcs_flash_controller_0+0xff8118f8>
   13218:	d811883a 	mov	r8,sp
   1321c:	003e9606 	br	12c78 <__alt_mem_epcs_flash_controller_0+0xff811c78>
   13220:	010000b4 	movhi	r4,2
   13224:	21389784 	addi	r4,r4,-7586
   13228:	d9002315 	stw	r4,140(sp)
   1322c:	003e6306 	br	12bbc <__alt_mem_epcs_flash_controller_0+0xff811bbc>
   13230:	b0c00043 	ldbu	r3,1(r22)
   13234:	8c400814 	ori	r17,r17,32
   13238:	b5800044 	addi	r22,r22,1
   1323c:	18c03fcc 	andi	r3,r3,255
   13240:	18c0201c 	xori	r3,r3,128
   13244:	18ffe004 	addi	r3,r3,-128
   13248:	003b9c06 	br	120bc <__alt_mem_epcs_flash_controller_0+0xff8110bc>
   1324c:	b809883a 	mov	r4,r23
   13250:	da002a15 	stw	r8,168(sp)
   13254:	00033c80 	call	33c8 <strlen>
   13258:	1029883a 	mov	r20,r2
   1325c:	dd401d83 	ldbu	r21,118(sp)
   13260:	df002215 	stw	fp,136(sp)
   13264:	0021883a 	mov	r16,zero
   13268:	da002a17 	ldw	r8,168(sp)
   1326c:	003c3906 	br	12354 <__alt_mem_epcs_flash_controller_0+0xff811354>
   13270:	d9402017 	ldw	r5,128(sp)
   13274:	d9002117 	ldw	r4,132(sp)
   13278:	d9801a04 	addi	r6,sp,104
   1327c:	0011e340 	call	11e34 <__sprint_r.part.0>
   13280:	103e691e 	bne	r2,zero,12c28 <__alt_mem_epcs_flash_controller_0+0xff811c28>
   13284:	d9001b17 	ldw	r4,108(sp)
   13288:	d8801c17 	ldw	r2,112(sp)
   1328c:	d811883a 	mov	r8,sp
   13290:	21400044 	addi	r5,r4,1
   13294:	003e2e06 	br	12b50 <__alt_mem_epcs_flash_controller_0+0xff811b50>
   13298:	010000b4 	movhi	r4,2
   1329c:	21389b84 	addi	r4,r4,-7570
   132a0:	d9002315 	stw	r4,140(sp)
   132a4:	d9001b17 	ldw	r4,108(sp)
   132a8:	21000044 	addi	r4,r4,1
   132ac:	003c5e06 	br	12428 <__alt_mem_epcs_flash_controller_0+0xff811428>
   132b0:	002b883a 	mov	r21,zero
   132b4:	00800084 	movi	r2,2
   132b8:	10803fcc 	andi	r2,r2,255
   132bc:	01000044 	movi	r4,1
   132c0:	11002b26 	beq	r2,r4,13370 <___vfiprintf_internal_r+0x1428>
   132c4:	01000084 	movi	r4,2
   132c8:	11002b1e 	bne	r2,r4,13378 <___vfiprintf_internal_r+0x1430>
   132cc:	1823883a 	mov	r17,r3
   132d0:	003ee506 	br	12e68 <__alt_mem_epcs_flash_controller_0+0xff811e68>
   132d4:	8807883a 	mov	r3,r17
   132d8:	00800044 	movi	r2,1
   132dc:	003ff606 	br	132b8 <__alt_mem_epcs_flash_controller_0+0xff8122b8>
   132e0:	00800184 	movi	r2,6
   132e4:	1400012e 	bgeu	r2,r16,132ec <___vfiprintf_internal_r+0x13a4>
   132e8:	1021883a 	mov	r16,r2
   132ec:	8029883a 	mov	r20,r16
   132f0:	8027883a 	mov	r19,r16
   132f4:	80002216 	blt	r16,zero,13380 <___vfiprintf_internal_r+0x1438>
   132f8:	05c000b4 	movhi	r23,2
   132fc:	df002215 	stw	fp,136(sp)
   13300:	bdf77404 	addi	r23,r23,-8752
   13304:	003cfb06 	br	126f4 <__alt_mem_epcs_flash_controller_0+0xff8116f4>
   13308:	d9002217 	ldw	r4,136(sp)
   1330c:	d9402417 	ldw	r5,144(sp)
   13310:	20800017 	ldw	r2,0(r4)
   13314:	21000104 	addi	r4,r4,4
   13318:	d9002215 	stw	r4,136(sp)
   1331c:	11400015 	stw	r5,0(r2)
   13320:	003b3d06 	br	12018 <__alt_mem_epcs_flash_controller_0+0xff811018>
   13324:	014000b4 	movhi	r5,2
   13328:	29789b84 	addi	r5,r5,-7570
   1332c:	d9402315 	stw	r5,140(sp)
   13330:	d9401b17 	ldw	r5,108(sp)
   13334:	29400044 	addi	r5,r5,1
   13338:	003e6d06 	br	12cf0 <__alt_mem_epcs_flash_controller_0+0xff811cf0>
   1333c:	8029883a 	mov	r20,r16
   13340:	dd401d83 	ldbu	r21,118(sp)
   13344:	df002215 	stw	fp,136(sp)
   13348:	0021883a 	mov	r16,zero
   1334c:	003c0106 	br	12354 <__alt_mem_epcs_flash_controller_0+0xff811354>
   13350:	00c000b4 	movhi	r3,2
   13354:	18f89784 	addi	r3,r3,-7586
   13358:	d8c02315 	stw	r3,140(sp)
   1335c:	280d883a 	mov	r6,r5
   13360:	003c6906 	br	12508 <__alt_mem_epcs_flash_controller_0+0xff811508>
   13364:	802d883a 	mov	r22,r16
   13368:	0021883a 	mov	r16,zero
   1336c:	003b5406 	br	120c0 <__alt_mem_epcs_flash_controller_0+0xff8110c0>
   13370:	1823883a 	mov	r17,r3
   13374:	003cf306 	br	12744 <__alt_mem_epcs_flash_controller_0+0xff811744>
   13378:	1823883a 	mov	r17,r3
   1337c:	003cad06 	br	12634 <__alt_mem_epcs_flash_controller_0+0xff811634>
   13380:	0027883a 	mov	r19,zero
   13384:	003fdc06 	br	132f8 <__alt_mem_epcs_flash_controller_0+0xff8122f8>
   13388:	d9402217 	ldw	r5,136(sp)
   1338c:	8005883a 	mov	r2,r16
   13390:	b0c00043 	ldbu	r3,1(r22)
   13394:	2c000017 	ldw	r16,0(r5)
   13398:	29000104 	addi	r4,r5,4
   1339c:	d9002215 	stw	r4,136(sp)
   133a0:	102d883a 	mov	r22,r2
   133a4:	803fa50e 	bge	r16,zero,1323c <__alt_mem_epcs_flash_controller_0+0xff81223c>
   133a8:	18c03fcc 	andi	r3,r3,255
   133ac:	18c0201c 	xori	r3,r3,128
   133b0:	043fffc4 	movi	r16,-1
   133b4:	18ffe004 	addi	r3,r3,-128
   133b8:	003b4006 	br	120bc <__alt_mem_epcs_flash_controller_0+0xff8110bc>
   133bc:	d9402303 	ldbu	r5,140(sp)
   133c0:	d9401d85 	stb	r5,118(sp)
   133c4:	003cae06 	br	12680 <__alt_mem_epcs_flash_controller_0+0xff811680>
   133c8:	d8c02303 	ldbu	r3,140(sp)
   133cc:	d8c01d85 	stb	r3,118(sp)
   133d0:	003d1406 	br	12824 <__alt_mem_epcs_flash_controller_0+0xff811824>
   133d4:	d8c02303 	ldbu	r3,140(sp)
   133d8:	d8c01d85 	stb	r3,118(sp)
   133dc:	003cca06 	br	12708 <__alt_mem_epcs_flash_controller_0+0xff811708>
   133e0:	8880004c 	andi	r2,r17,1
   133e4:	002b883a 	mov	r21,zero
   133e8:	10000526 	beq	r2,zero,13400 <___vfiprintf_internal_r+0x14b8>
   133ec:	00800c04 	movi	r2,48
   133f0:	d88019c5 	stb	r2,103(sp)
   133f4:	dd002817 	ldw	r20,160(sp)
   133f8:	ddc019c4 	addi	r23,sp,103
   133fc:	003bd506 	br	12354 <__alt_mem_epcs_flash_controller_0+0xff811354>
   13400:	0029883a 	mov	r20,zero
   13404:	ddc01a04 	addi	r23,sp,104
   13408:	003bd206 	br	12354 <__alt_mem_epcs_flash_controller_0+0xff811354>
   1340c:	d9002303 	ldbu	r4,140(sp)
   13410:	d9001d85 	stb	r4,118(sp)
   13414:	003da606 	br	12ab0 <__alt_mem_epcs_flash_controller_0+0xff811ab0>
   13418:	d8c02303 	ldbu	r3,140(sp)
   1341c:	d8c01d85 	stb	r3,118(sp)
   13420:	003c7606 	br	125fc <__alt_mem_epcs_flash_controller_0+0xff8115fc>
   13424:	d8c02303 	ldbu	r3,140(sp)
   13428:	d8c01d85 	stb	r3,118(sp)
   1342c:	003c6506 	br	125c4 <__alt_mem_epcs_flash_controller_0+0xff8115c4>
   13430:	d9002303 	ldbu	r4,140(sp)
   13434:	d9001d85 	stb	r4,118(sp)
   13438:	003d3d06 	br	12930 <__alt_mem_epcs_flash_controller_0+0xff811930>
   1343c:	d8c02303 	ldbu	r3,140(sp)
   13440:	d8c01d85 	stb	r3,118(sp)
   13444:	003d1d06 	br	128bc <__alt_mem_epcs_flash_controller_0+0xff8118bc>
   13448:	d8c02303 	ldbu	r3,140(sp)
   1344c:	d8c01d85 	stb	r3,118(sp)
   13450:	003d0306 	br	12860 <__alt_mem_epcs_flash_controller_0+0xff811860>

00013454 <__vfiprintf_internal>:
   13454:	008000b4 	movhi	r2,2
   13458:	10801c04 	addi	r2,r2,112
   1345c:	300f883a 	mov	r7,r6
   13460:	280d883a 	mov	r6,r5
   13464:	200b883a 	mov	r5,r4
   13468:	11000017 	ldw	r4,0(r2)
   1346c:	0011f481 	jmpi	11f48 <___vfiprintf_internal_r>

00013470 <__sbprintf>:
   13470:	2880030b 	ldhu	r2,12(r5)
   13474:	2ac01917 	ldw	r11,100(r5)
   13478:	2a80038b 	ldhu	r10,14(r5)
   1347c:	2a400717 	ldw	r9,28(r5)
   13480:	2a000917 	ldw	r8,36(r5)
   13484:	defee204 	addi	sp,sp,-1144
   13488:	00c10004 	movi	r3,1024
   1348c:	dc011a15 	stw	r16,1128(sp)
   13490:	10bfff4c 	andi	r2,r2,65533
   13494:	2821883a 	mov	r16,r5
   13498:	d8cb883a 	add	r5,sp,r3
   1349c:	dc811c15 	stw	r18,1136(sp)
   134a0:	dc411b15 	stw	r17,1132(sp)
   134a4:	dfc11d15 	stw	ra,1140(sp)
   134a8:	2025883a 	mov	r18,r4
   134ac:	d881030d 	sth	r2,1036(sp)
   134b0:	dac11915 	stw	r11,1124(sp)
   134b4:	da81038d 	sth	r10,1038(sp)
   134b8:	da410715 	stw	r9,1052(sp)
   134bc:	da010915 	stw	r8,1060(sp)
   134c0:	dec10015 	stw	sp,1024(sp)
   134c4:	dec10415 	stw	sp,1040(sp)
   134c8:	d8c10215 	stw	r3,1032(sp)
   134cc:	d8c10515 	stw	r3,1044(sp)
   134d0:	d8010615 	stw	zero,1048(sp)
   134d4:	0011f480 	call	11f48 <___vfiprintf_internal_r>
   134d8:	1023883a 	mov	r17,r2
   134dc:	10000416 	blt	r2,zero,134f0 <__sbprintf+0x80>
   134e0:	d9410004 	addi	r5,sp,1024
   134e4:	9009883a 	mov	r4,r18
   134e8:	0008e740 	call	8e74 <_fflush_r>
   134ec:	10000d1e 	bne	r2,zero,13524 <__sbprintf+0xb4>
   134f0:	d881030b 	ldhu	r2,1036(sp)
   134f4:	1080100c 	andi	r2,r2,64
   134f8:	10000326 	beq	r2,zero,13508 <__sbprintf+0x98>
   134fc:	8080030b 	ldhu	r2,12(r16)
   13500:	10801014 	ori	r2,r2,64
   13504:	8080030d 	sth	r2,12(r16)
   13508:	8805883a 	mov	r2,r17
   1350c:	dfc11d17 	ldw	ra,1140(sp)
   13510:	dc811c17 	ldw	r18,1136(sp)
   13514:	dc411b17 	ldw	r17,1132(sp)
   13518:	dc011a17 	ldw	r16,1128(sp)
   1351c:	dec11e04 	addi	sp,sp,1144
   13520:	f800283a 	ret
   13524:	047fffc4 	movi	r17,-1
   13528:	003ff106 	br	134f0 <__alt_mem_epcs_flash_controller_0+0xff8124f0>

0001352c <__swbuf_r>:
   1352c:	defffb04 	addi	sp,sp,-20
   13530:	dcc00315 	stw	r19,12(sp)
   13534:	dc800215 	stw	r18,8(sp)
   13538:	dc000015 	stw	r16,0(sp)
   1353c:	dfc00415 	stw	ra,16(sp)
   13540:	dc400115 	stw	r17,4(sp)
   13544:	2025883a 	mov	r18,r4
   13548:	2827883a 	mov	r19,r5
   1354c:	3021883a 	mov	r16,r6
   13550:	20000226 	beq	r4,zero,1355c <__swbuf_r+0x30>
   13554:	20800e17 	ldw	r2,56(r4)
   13558:	10004226 	beq	r2,zero,13664 <__swbuf_r+0x138>
   1355c:	80800617 	ldw	r2,24(r16)
   13560:	8100030b 	ldhu	r4,12(r16)
   13564:	80800215 	stw	r2,8(r16)
   13568:	2080020c 	andi	r2,r4,8
   1356c:	10003626 	beq	r2,zero,13648 <__swbuf_r+0x11c>
   13570:	80c00417 	ldw	r3,16(r16)
   13574:	18003426 	beq	r3,zero,13648 <__swbuf_r+0x11c>
   13578:	2088000c 	andi	r2,r4,8192
   1357c:	9c403fcc 	andi	r17,r19,255
   13580:	10001a26 	beq	r2,zero,135ec <__swbuf_r+0xc0>
   13584:	80800017 	ldw	r2,0(r16)
   13588:	81000517 	ldw	r4,20(r16)
   1358c:	10c7c83a 	sub	r3,r2,r3
   13590:	1900200e 	bge	r3,r4,13614 <__swbuf_r+0xe8>
   13594:	18c00044 	addi	r3,r3,1
   13598:	81000217 	ldw	r4,8(r16)
   1359c:	11400044 	addi	r5,r2,1
   135a0:	81400015 	stw	r5,0(r16)
   135a4:	213fffc4 	addi	r4,r4,-1
   135a8:	81000215 	stw	r4,8(r16)
   135ac:	14c00005 	stb	r19,0(r2)
   135b0:	80800517 	ldw	r2,20(r16)
   135b4:	10c01e26 	beq	r2,r3,13630 <__swbuf_r+0x104>
   135b8:	8080030b 	ldhu	r2,12(r16)
   135bc:	1080004c 	andi	r2,r2,1
   135c0:	10000226 	beq	r2,zero,135cc <__swbuf_r+0xa0>
   135c4:	00800284 	movi	r2,10
   135c8:	88801926 	beq	r17,r2,13630 <__swbuf_r+0x104>
   135cc:	8805883a 	mov	r2,r17
   135d0:	dfc00417 	ldw	ra,16(sp)
   135d4:	dcc00317 	ldw	r19,12(sp)
   135d8:	dc800217 	ldw	r18,8(sp)
   135dc:	dc400117 	ldw	r17,4(sp)
   135e0:	dc000017 	ldw	r16,0(sp)
   135e4:	dec00504 	addi	sp,sp,20
   135e8:	f800283a 	ret
   135ec:	81401917 	ldw	r5,100(r16)
   135f0:	00b7ffc4 	movi	r2,-8193
   135f4:	21080014 	ori	r4,r4,8192
   135f8:	2884703a 	and	r2,r5,r2
   135fc:	80801915 	stw	r2,100(r16)
   13600:	80800017 	ldw	r2,0(r16)
   13604:	8100030d 	sth	r4,12(r16)
   13608:	81000517 	ldw	r4,20(r16)
   1360c:	10c7c83a 	sub	r3,r2,r3
   13610:	193fe016 	blt	r3,r4,13594 <__alt_mem_epcs_flash_controller_0+0xff812594>
   13614:	800b883a 	mov	r5,r16
   13618:	9009883a 	mov	r4,r18
   1361c:	0008e740 	call	8e74 <_fflush_r>
   13620:	1000071e 	bne	r2,zero,13640 <__swbuf_r+0x114>
   13624:	80800017 	ldw	r2,0(r16)
   13628:	00c00044 	movi	r3,1
   1362c:	003fda06 	br	13598 <__alt_mem_epcs_flash_controller_0+0xff812598>
   13630:	800b883a 	mov	r5,r16
   13634:	9009883a 	mov	r4,r18
   13638:	0008e740 	call	8e74 <_fflush_r>
   1363c:	103fe326 	beq	r2,zero,135cc <__alt_mem_epcs_flash_controller_0+0xff8125cc>
   13640:	00bfffc4 	movi	r2,-1
   13644:	003fe206 	br	135d0 <__alt_mem_epcs_flash_controller_0+0xff8125d0>
   13648:	800b883a 	mov	r5,r16
   1364c:	9009883a 	mov	r4,r18
   13650:	00072000 	call	7200 <__swsetup_r>
   13654:	103ffa1e 	bne	r2,zero,13640 <__alt_mem_epcs_flash_controller_0+0xff812640>
   13658:	8100030b 	ldhu	r4,12(r16)
   1365c:	80c00417 	ldw	r3,16(r16)
   13660:	003fc506 	br	13578 <__alt_mem_epcs_flash_controller_0+0xff812578>
   13664:	00092600 	call	9260 <__sinit>
   13668:	003fbc06 	br	1355c <__alt_mem_epcs_flash_controller_0+0xff81255c>

0001366c <__swbuf>:
   1366c:	008000b4 	movhi	r2,2
   13670:	10801c04 	addi	r2,r2,112
   13674:	280d883a 	mov	r6,r5
   13678:	200b883a 	mov	r5,r4
   1367c:	11000017 	ldw	r4,0(r2)
   13680:	001352c1 	jmpi	1352c <__swbuf_r>

00013684 <_calloc_r>:
   13684:	defffe04 	addi	sp,sp,-8
   13688:	2805883a 	mov	r2,r5
   1368c:	dc000015 	stw	r16,0(sp)
   13690:	300b883a 	mov	r5,r6
   13694:	2021883a 	mov	r16,r4
   13698:	1009883a 	mov	r4,r2
   1369c:	dfc00115 	stw	ra,4(sp)
   136a0:	00024440 	call	2444 <__mulsi3>
   136a4:	100b883a 	mov	r5,r2
   136a8:	8009883a 	mov	r4,r16
   136ac:	000258c0 	call	258c <_malloc_r>
   136b0:	10002926 	beq	r2,zero,13758 <_calloc_r+0xd4>
   136b4:	11bfff17 	ldw	r6,-4(r2)
   136b8:	1021883a 	mov	r16,r2
   136bc:	00bfff04 	movi	r2,-4
   136c0:	308c703a 	and	r6,r6,r2
   136c4:	00c00904 	movi	r3,36
   136c8:	308d883a 	add	r6,r6,r2
   136cc:	19801636 	bltu	r3,r6,13728 <_calloc_r+0xa4>
   136d0:	008004c4 	movi	r2,19
   136d4:	11800b2e 	bgeu	r2,r6,13704 <_calloc_r+0x80>
   136d8:	80000015 	stw	zero,0(r16)
   136dc:	80000115 	stw	zero,4(r16)
   136e0:	008006c4 	movi	r2,27
   136e4:	11801a2e 	bgeu	r2,r6,13750 <_calloc_r+0xcc>
   136e8:	80000215 	stw	zero,8(r16)
   136ec:	80000315 	stw	zero,12(r16)
   136f0:	30c0151e 	bne	r6,r3,13748 <_calloc_r+0xc4>
   136f4:	80000415 	stw	zero,16(r16)
   136f8:	80800604 	addi	r2,r16,24
   136fc:	80000515 	stw	zero,20(r16)
   13700:	00000106 	br	13708 <_calloc_r+0x84>
   13704:	8005883a 	mov	r2,r16
   13708:	10000015 	stw	zero,0(r2)
   1370c:	10000115 	stw	zero,4(r2)
   13710:	10000215 	stw	zero,8(r2)
   13714:	8005883a 	mov	r2,r16
   13718:	dfc00117 	ldw	ra,4(sp)
   1371c:	dc000017 	ldw	r16,0(sp)
   13720:	dec00204 	addi	sp,sp,8
   13724:	f800283a 	ret
   13728:	000b883a 	mov	r5,zero
   1372c:	8009883a 	mov	r4,r16
   13730:	000a4c00 	call	a4c0 <memset>
   13734:	8005883a 	mov	r2,r16
   13738:	dfc00117 	ldw	ra,4(sp)
   1373c:	dc000017 	ldw	r16,0(sp)
   13740:	dec00204 	addi	sp,sp,8
   13744:	f800283a 	ret
   13748:	80800404 	addi	r2,r16,16
   1374c:	003fee06 	br	13708 <__alt_mem_epcs_flash_controller_0+0xff812708>
   13750:	80800204 	addi	r2,r16,8
   13754:	003fec06 	br	13708 <__alt_mem_epcs_flash_controller_0+0xff812708>
   13758:	0005883a 	mov	r2,zero
   1375c:	003fee06 	br	13718 <__alt_mem_epcs_flash_controller_0+0xff812718>

00013760 <_fclose_r>:
   13760:	28003926 	beq	r5,zero,13848 <_fclose_r+0xe8>
   13764:	defffc04 	addi	sp,sp,-16
   13768:	dc400115 	stw	r17,4(sp)
   1376c:	dc000015 	stw	r16,0(sp)
   13770:	dfc00315 	stw	ra,12(sp)
   13774:	dc800215 	stw	r18,8(sp)
   13778:	2023883a 	mov	r17,r4
   1377c:	2821883a 	mov	r16,r5
   13780:	20000226 	beq	r4,zero,1378c <_fclose_r+0x2c>
   13784:	20800e17 	ldw	r2,56(r4)
   13788:	10002726 	beq	r2,zero,13828 <_fclose_r+0xc8>
   1378c:	8080030f 	ldh	r2,12(r16)
   13790:	1000071e 	bne	r2,zero,137b0 <_fclose_r+0x50>
   13794:	0005883a 	mov	r2,zero
   13798:	dfc00317 	ldw	ra,12(sp)
   1379c:	dc800217 	ldw	r18,8(sp)
   137a0:	dc400117 	ldw	r17,4(sp)
   137a4:	dc000017 	ldw	r16,0(sp)
   137a8:	dec00404 	addi	sp,sp,16
   137ac:	f800283a 	ret
   137b0:	800b883a 	mov	r5,r16
   137b4:	8809883a 	mov	r4,r17
   137b8:	0008c580 	call	8c58 <__sflush_r>
   137bc:	1025883a 	mov	r18,r2
   137c0:	80800b17 	ldw	r2,44(r16)
   137c4:	10000426 	beq	r2,zero,137d8 <_fclose_r+0x78>
   137c8:	81400717 	ldw	r5,28(r16)
   137cc:	8809883a 	mov	r4,r17
   137d0:	103ee83a 	callr	r2
   137d4:	10001616 	blt	r2,zero,13830 <_fclose_r+0xd0>
   137d8:	8080030b 	ldhu	r2,12(r16)
   137dc:	1080200c 	andi	r2,r2,128
   137e0:	1000151e 	bne	r2,zero,13838 <_fclose_r+0xd8>
   137e4:	81400c17 	ldw	r5,48(r16)
   137e8:	28000526 	beq	r5,zero,13800 <_fclose_r+0xa0>
   137ec:	80801004 	addi	r2,r16,64
   137f0:	28800226 	beq	r5,r2,137fc <_fclose_r+0x9c>
   137f4:	8809883a 	mov	r4,r17
   137f8:	00093d40 	call	93d4 <_free_r>
   137fc:	80000c15 	stw	zero,48(r16)
   13800:	81401117 	ldw	r5,68(r16)
   13804:	28000326 	beq	r5,zero,13814 <_fclose_r+0xb4>
   13808:	8809883a 	mov	r4,r17
   1380c:	00093d40 	call	93d4 <_free_r>
   13810:	80001115 	stw	zero,68(r16)
   13814:	00092700 	call	9270 <__sfp_lock_acquire>
   13818:	8000030d 	sth	zero,12(r16)
   1381c:	00092740 	call	9274 <__sfp_lock_release>
   13820:	9005883a 	mov	r2,r18
   13824:	003fdc06 	br	13798 <__alt_mem_epcs_flash_controller_0+0xff812798>
   13828:	00092600 	call	9260 <__sinit>
   1382c:	003fd706 	br	1378c <__alt_mem_epcs_flash_controller_0+0xff81278c>
   13830:	04bfffc4 	movi	r18,-1
   13834:	003fe806 	br	137d8 <__alt_mem_epcs_flash_controller_0+0xff8127d8>
   13838:	81400417 	ldw	r5,16(r16)
   1383c:	8809883a 	mov	r4,r17
   13840:	00093d40 	call	93d4 <_free_r>
   13844:	003fe706 	br	137e4 <__alt_mem_epcs_flash_controller_0+0xff8127e4>
   13848:	0005883a 	mov	r2,zero
   1384c:	f800283a 	ret

00013850 <fclose>:
   13850:	008000b4 	movhi	r2,2
   13854:	10801c04 	addi	r2,r2,112
   13858:	200b883a 	mov	r5,r4
   1385c:	11000017 	ldw	r4,0(r2)
   13860:	00137601 	jmpi	13760 <_fclose_r>

00013864 <__fputwc>:
   13864:	defff804 	addi	sp,sp,-32
   13868:	dcc00415 	stw	r19,16(sp)
   1386c:	dc800315 	stw	r18,12(sp)
   13870:	dc000115 	stw	r16,4(sp)
   13874:	dfc00715 	stw	ra,28(sp)
   13878:	dd400615 	stw	r21,24(sp)
   1387c:	dd000515 	stw	r20,20(sp)
   13880:	dc400215 	stw	r17,8(sp)
   13884:	2027883a 	mov	r19,r4
   13888:	2825883a 	mov	r18,r5
   1388c:	3021883a 	mov	r16,r6
   13890:	0009dec0 	call	9dec <__locale_mb_cur_max>
   13894:	00c00044 	movi	r3,1
   13898:	10c03e26 	beq	r2,r3,13994 <__fputwc+0x130>
   1389c:	81c01704 	addi	r7,r16,92
   138a0:	900d883a 	mov	r6,r18
   138a4:	d80b883a 	mov	r5,sp
   138a8:	9809883a 	mov	r4,r19
   138ac:	0015d080 	call	15d08 <_wcrtomb_r>
   138b0:	1029883a 	mov	r20,r2
   138b4:	00bfffc4 	movi	r2,-1
   138b8:	a0802026 	beq	r20,r2,1393c <__fputwc+0xd8>
   138bc:	d9400003 	ldbu	r5,0(sp)
   138c0:	a0001c26 	beq	r20,zero,13934 <__fputwc+0xd0>
   138c4:	0023883a 	mov	r17,zero
   138c8:	05400284 	movi	r21,10
   138cc:	00000906 	br	138f4 <__fputwc+0x90>
   138d0:	80800017 	ldw	r2,0(r16)
   138d4:	11400005 	stb	r5,0(r2)
   138d8:	80c00017 	ldw	r3,0(r16)
   138dc:	18c00044 	addi	r3,r3,1
   138e0:	80c00015 	stw	r3,0(r16)
   138e4:	8c400044 	addi	r17,r17,1
   138e8:	dc45883a 	add	r2,sp,r17
   138ec:	8d00112e 	bgeu	r17,r20,13934 <__fputwc+0xd0>
   138f0:	11400003 	ldbu	r5,0(r2)
   138f4:	80c00217 	ldw	r3,8(r16)
   138f8:	18ffffc4 	addi	r3,r3,-1
   138fc:	80c00215 	stw	r3,8(r16)
   13900:	183ff30e 	bge	r3,zero,138d0 <__alt_mem_epcs_flash_controller_0+0xff8128d0>
   13904:	80800617 	ldw	r2,24(r16)
   13908:	18801916 	blt	r3,r2,13970 <__fputwc+0x10c>
   1390c:	80800017 	ldw	r2,0(r16)
   13910:	11400005 	stb	r5,0(r2)
   13914:	80800017 	ldw	r2,0(r16)
   13918:	10c00003 	ldbu	r3,0(r2)
   1391c:	10800044 	addi	r2,r2,1
   13920:	1d402326 	beq	r3,r21,139b0 <__fputwc+0x14c>
   13924:	80800015 	stw	r2,0(r16)
   13928:	8c400044 	addi	r17,r17,1
   1392c:	dc45883a 	add	r2,sp,r17
   13930:	8d3fef36 	bltu	r17,r20,138f0 <__alt_mem_epcs_flash_controller_0+0xff8128f0>
   13934:	9005883a 	mov	r2,r18
   13938:	00000406 	br	1394c <__fputwc+0xe8>
   1393c:	80c0030b 	ldhu	r3,12(r16)
   13940:	a005883a 	mov	r2,r20
   13944:	18c01014 	ori	r3,r3,64
   13948:	80c0030d 	sth	r3,12(r16)
   1394c:	dfc00717 	ldw	ra,28(sp)
   13950:	dd400617 	ldw	r21,24(sp)
   13954:	dd000517 	ldw	r20,20(sp)
   13958:	dcc00417 	ldw	r19,16(sp)
   1395c:	dc800317 	ldw	r18,12(sp)
   13960:	dc400217 	ldw	r17,8(sp)
   13964:	dc000117 	ldw	r16,4(sp)
   13968:	dec00804 	addi	sp,sp,32
   1396c:	f800283a 	ret
   13970:	800d883a 	mov	r6,r16
   13974:	29403fcc 	andi	r5,r5,255
   13978:	9809883a 	mov	r4,r19
   1397c:	001352c0 	call	1352c <__swbuf_r>
   13980:	10bfffe0 	cmpeqi	r2,r2,-1
   13984:	10803fcc 	andi	r2,r2,255
   13988:	103fd626 	beq	r2,zero,138e4 <__alt_mem_epcs_flash_controller_0+0xff8128e4>
   1398c:	00bfffc4 	movi	r2,-1
   13990:	003fee06 	br	1394c <__alt_mem_epcs_flash_controller_0+0xff81294c>
   13994:	90ffffc4 	addi	r3,r18,-1
   13998:	01003f84 	movi	r4,254
   1399c:	20ffbf36 	bltu	r4,r3,1389c <__alt_mem_epcs_flash_controller_0+0xff81289c>
   139a0:	900b883a 	mov	r5,r18
   139a4:	dc800005 	stb	r18,0(sp)
   139a8:	1029883a 	mov	r20,r2
   139ac:	003fc506 	br	138c4 <__alt_mem_epcs_flash_controller_0+0xff8128c4>
   139b0:	800d883a 	mov	r6,r16
   139b4:	a80b883a 	mov	r5,r21
   139b8:	9809883a 	mov	r4,r19
   139bc:	001352c0 	call	1352c <__swbuf_r>
   139c0:	10bfffe0 	cmpeqi	r2,r2,-1
   139c4:	003fef06 	br	13984 <__alt_mem_epcs_flash_controller_0+0xff812984>

000139c8 <_fputwc_r>:
   139c8:	3080030b 	ldhu	r2,12(r6)
   139cc:	10c8000c 	andi	r3,r2,8192
   139d0:	1800051e 	bne	r3,zero,139e8 <_fputwc_r+0x20>
   139d4:	30c01917 	ldw	r3,100(r6)
   139d8:	10880014 	ori	r2,r2,8192
   139dc:	3080030d 	sth	r2,12(r6)
   139e0:	18880014 	ori	r2,r3,8192
   139e4:	30801915 	stw	r2,100(r6)
   139e8:	00138641 	jmpi	13864 <__fputwc>

000139ec <fputwc>:
   139ec:	008000b4 	movhi	r2,2
   139f0:	defffc04 	addi	sp,sp,-16
   139f4:	10801c04 	addi	r2,r2,112
   139f8:	dc000115 	stw	r16,4(sp)
   139fc:	14000017 	ldw	r16,0(r2)
   13a00:	dc400215 	stw	r17,8(sp)
   13a04:	dfc00315 	stw	ra,12(sp)
   13a08:	2023883a 	mov	r17,r4
   13a0c:	80000226 	beq	r16,zero,13a18 <fputwc+0x2c>
   13a10:	80800e17 	ldw	r2,56(r16)
   13a14:	10001026 	beq	r2,zero,13a58 <fputwc+0x6c>
   13a18:	2880030b 	ldhu	r2,12(r5)
   13a1c:	10c8000c 	andi	r3,r2,8192
   13a20:	1800051e 	bne	r3,zero,13a38 <fputwc+0x4c>
   13a24:	28c01917 	ldw	r3,100(r5)
   13a28:	10880014 	ori	r2,r2,8192
   13a2c:	2880030d 	sth	r2,12(r5)
   13a30:	18880014 	ori	r2,r3,8192
   13a34:	28801915 	stw	r2,100(r5)
   13a38:	280d883a 	mov	r6,r5
   13a3c:	8009883a 	mov	r4,r16
   13a40:	880b883a 	mov	r5,r17
   13a44:	dfc00317 	ldw	ra,12(sp)
   13a48:	dc400217 	ldw	r17,8(sp)
   13a4c:	dc000117 	ldw	r16,4(sp)
   13a50:	dec00404 	addi	sp,sp,16
   13a54:	00138641 	jmpi	13864 <__fputwc>
   13a58:	8009883a 	mov	r4,r16
   13a5c:	d9400015 	stw	r5,0(sp)
   13a60:	00092600 	call	9260 <__sinit>
   13a64:	d9400017 	ldw	r5,0(sp)
   13a68:	003feb06 	br	13a18 <__alt_mem_epcs_flash_controller_0+0xff812a18>

00013a6c <_fstat_r>:
   13a6c:	defffd04 	addi	sp,sp,-12
   13a70:	2805883a 	mov	r2,r5
   13a74:	dc000015 	stw	r16,0(sp)
   13a78:	040000b4 	movhi	r16,2
   13a7c:	dc400115 	stw	r17,4(sp)
   13a80:	84072604 	addi	r16,r16,7320
   13a84:	2023883a 	mov	r17,r4
   13a88:	300b883a 	mov	r5,r6
   13a8c:	1009883a 	mov	r4,r2
   13a90:	dfc00215 	stw	ra,8(sp)
   13a94:	80000015 	stw	zero,0(r16)
   13a98:	0019ab00 	call	19ab0 <fstat>
   13a9c:	00ffffc4 	movi	r3,-1
   13aa0:	10c00526 	beq	r2,r3,13ab8 <_fstat_r+0x4c>
   13aa4:	dfc00217 	ldw	ra,8(sp)
   13aa8:	dc400117 	ldw	r17,4(sp)
   13aac:	dc000017 	ldw	r16,0(sp)
   13ab0:	dec00304 	addi	sp,sp,12
   13ab4:	f800283a 	ret
   13ab8:	80c00017 	ldw	r3,0(r16)
   13abc:	183ff926 	beq	r3,zero,13aa4 <__alt_mem_epcs_flash_controller_0+0xff812aa4>
   13ac0:	88c00015 	stw	r3,0(r17)
   13ac4:	003ff706 	br	13aa4 <__alt_mem_epcs_flash_controller_0+0xff812aa4>

00013ac8 <rshift>:
   13ac8:	2807d17a 	srai	r3,r5,5
   13acc:	20800417 	ldw	r2,16(r4)
   13ad0:	22000504 	addi	r8,r4,20
   13ad4:	1880250e 	bge	r3,r2,13b6c <rshift+0xa4>
   13ad8:	1085883a 	add	r2,r2,r2
   13adc:	18c7883a 	add	r3,r3,r3
   13ae0:	1085883a 	add	r2,r2,r2
   13ae4:	18c7883a 	add	r3,r3,r3
   13ae8:	294007cc 	andi	r5,r5,31
   13aec:	4085883a 	add	r2,r8,r2
   13af0:	40c7883a 	add	r3,r8,r3
   13af4:	28002026 	beq	r5,zero,13b78 <rshift+0xb0>
   13af8:	19800017 	ldw	r6,0(r3)
   13afc:	02c00804 	movi	r11,32
   13b00:	19c00104 	addi	r7,r3,4
   13b04:	5957c83a 	sub	r11,r11,r5
   13b08:	314cd83a 	srl	r6,r6,r5
   13b0c:	38802c2e 	bgeu	r7,r2,13bc0 <rshift+0xf8>
   13b10:	4015883a 	mov	r10,r8
   13b14:	3a400017 	ldw	r9,0(r7)
   13b18:	52800104 	addi	r10,r10,4
   13b1c:	39c00104 	addi	r7,r7,4
   13b20:	4ad2983a 	sll	r9,r9,r11
   13b24:	498cb03a 	or	r6,r9,r6
   13b28:	51bfff15 	stw	r6,-4(r10)
   13b2c:	39bfff17 	ldw	r6,-4(r7)
   13b30:	314cd83a 	srl	r6,r6,r5
   13b34:	38bff736 	bltu	r7,r2,13b14 <__alt_mem_epcs_flash_controller_0+0xff812b14>
   13b38:	10c7c83a 	sub	r3,r2,r3
   13b3c:	18fffec4 	addi	r3,r3,-5
   13b40:	1806d0ba 	srli	r3,r3,2
   13b44:	18c00044 	addi	r3,r3,1
   13b48:	18c7883a 	add	r3,r3,r3
   13b4c:	18c7883a 	add	r3,r3,r3
   13b50:	40c7883a 	add	r3,r8,r3
   13b54:	19800015 	stw	r6,0(r3)
   13b58:	30000126 	beq	r6,zero,13b60 <rshift+0x98>
   13b5c:	18c00104 	addi	r3,r3,4
   13b60:	1a05c83a 	sub	r2,r3,r8
   13b64:	1005d0ba 	srai	r2,r2,2
   13b68:	00001206 	br	13bb4 <rshift+0xec>
   13b6c:	20000415 	stw	zero,16(r4)
   13b70:	20000515 	stw	zero,20(r4)
   13b74:	f800283a 	ret
   13b78:	18bffc2e 	bgeu	r3,r2,13b6c <__alt_mem_epcs_flash_controller_0+0xff812b6c>
   13b7c:	180d883a 	mov	r6,r3
   13b80:	400b883a 	mov	r5,r8
   13b84:	31c00017 	ldw	r7,0(r6)
   13b88:	29400104 	addi	r5,r5,4
   13b8c:	31800104 	addi	r6,r6,4
   13b90:	29ffff15 	stw	r7,-4(r5)
   13b94:	30bffb36 	bltu	r6,r2,13b84 <__alt_mem_epcs_flash_controller_0+0xff812b84>
   13b98:	00c6303a 	nor	r3,zero,r3
   13b9c:	1885883a 	add	r2,r3,r2
   13ba0:	1004d0ba 	srli	r2,r2,2
   13ba4:	10800044 	addi	r2,r2,1
   13ba8:	1085883a 	add	r2,r2,r2
   13bac:	1085883a 	add	r2,r2,r2
   13bb0:	1005d0ba 	srai	r2,r2,2
   13bb4:	20800415 	stw	r2,16(r4)
   13bb8:	103fed26 	beq	r2,zero,13b70 <__alt_mem_epcs_flash_controller_0+0xff812b70>
   13bbc:	f800283a 	ret
   13bc0:	4007883a 	mov	r3,r8
   13bc4:	003fe306 	br	13b54 <__alt_mem_epcs_flash_controller_0+0xff812b54>

00013bc8 <__gethex>:
   13bc8:	deffea04 	addi	sp,sp,-88
   13bcc:	d9c00415 	stw	r7,16(sp)
   13bd0:	dfc01515 	stw	ra,84(sp)
   13bd4:	dd001015 	stw	r20,64(sp)
   13bd8:	dcc00f15 	stw	r19,60(sp)
   13bdc:	2829883a 	mov	r20,r5
   13be0:	dc800e15 	stw	r18,56(sp)
   13be4:	d9000215 	stw	r4,8(sp)
   13be8:	d9800115 	stw	r6,4(sp)
   13bec:	df001415 	stw	fp,80(sp)
   13bf0:	ddc01315 	stw	r23,76(sp)
   13bf4:	dd801215 	stw	r22,72(sp)
   13bf8:	dd401115 	stw	r21,68(sp)
   13bfc:	dc400d15 	stw	r17,52(sp)
   13c00:	dc000c15 	stw	r16,48(sp)
   13c04:	0009e100 	call	9e10 <_localeconv_r>
   13c08:	14800017 	ldw	r18,0(r2)
   13c0c:	9009883a 	mov	r4,r18
   13c10:	00033c80 	call	33c8 <strlen>
   13c14:	a1c00017 	ldw	r7,0(r20)
   13c18:	1027883a 	mov	r19,r2
   13c1c:	9085883a 	add	r2,r18,r2
   13c20:	10bfffc3 	ldbu	r2,-1(r2)
   13c24:	38c00083 	ldbu	r3,2(r7)
   13c28:	d8800305 	stb	r2,12(sp)
   13c2c:	00800c04 	movi	r2,48
   13c30:	18815a1e 	bne	r3,r2,1419c <__gethex+0x5d4>
   13c34:	013fff84 	movi	r4,-2
   13c38:	388000c4 	addi	r2,r7,3
   13c3c:	21c9c83a 	sub	r4,r4,r7
   13c40:	180b883a 	mov	r5,r3
   13c44:	20b9883a 	add	fp,r4,r2
   13c48:	102f883a 	mov	r23,r2
   13c4c:	10800044 	addi	r2,r2,1
   13c50:	10ffffc3 	ldbu	r3,-1(r2)
   13c54:	197ffb26 	beq	r3,r5,13c44 <__alt_mem_epcs_flash_controller_0+0xff812c44>
   13c58:	058000b4 	movhi	r22,2
   13c5c:	b5b89f84 	addi	r22,r22,-7554
   13c60:	b0c7883a 	add	r3,r22,r3
   13c64:	18800003 	ldbu	r2,0(r3)
   13c68:	10008726 	beq	r2,zero,13e88 <__gethex+0x2c0>
   13c6c:	b8800003 	ldbu	r2,0(r23)
   13c70:	d8000015 	stw	zero,0(sp)
   13c74:	0021883a 	mov	r16,zero
   13c78:	b085883a 	add	r2,r22,r2
   13c7c:	10800003 	ldbu	r2,0(r2)
   13c80:	b823883a 	mov	r17,r23
   13c84:	10000526 	beq	r2,zero,13c9c <__gethex+0xd4>
   13c88:	8c400044 	addi	r17,r17,1
   13c8c:	88800003 	ldbu	r2,0(r17)
   13c90:	b085883a 	add	r2,r22,r2
   13c94:	10800003 	ldbu	r2,0(r2)
   13c98:	103ffb1e 	bne	r2,zero,13c88 <__alt_mem_epcs_flash_controller_0+0xff812c88>
   13c9c:	980d883a 	mov	r6,r19
   13ca0:	900b883a 	mov	r5,r18
   13ca4:	8809883a 	mov	r4,r17
   13ca8:	00146c80 	call	146c8 <strncmp>
   13cac:	1000031e 	bne	r2,zero,13cbc <__gethex+0xf4>
   13cb0:	80015c26 	beq	r16,zero,14224 <__gethex+0x65c>
   13cb4:	88800003 	ldbu	r2,0(r17)
   13cb8:	00000206 	br	13cc4 <__gethex+0xfc>
   13cbc:	88800003 	ldbu	r2,0(r17)
   13cc0:	80012926 	beq	r16,zero,14168 <__gethex+0x5a0>
   13cc4:	8c21c83a 	sub	r16,r17,r16
   13cc8:	8421883a 	add	r16,r16,r16
   13ccc:	8421883a 	add	r16,r16,r16
   13cd0:	0421c83a 	sub	r16,zero,r16
   13cd4:	10803fcc 	andi	r2,r2,255
   13cd8:	01001404 	movi	r4,80
   13cdc:	11008826 	beq	r2,r4,13f00 <__gethex+0x338>
   13ce0:	01001c04 	movi	r4,112
   13ce4:	11008626 	beq	r2,r4,13f00 <__gethex+0x338>
   13ce8:	882b883a 	mov	r21,r17
   13cec:	d8c00017 	ldw	r3,0(sp)
   13cf0:	a4400015 	stw	r17,0(r20)
   13cf4:	1800711e 	bne	r3,zero,13ebc <__gethex+0x2f4>
   13cf8:	adc5c83a 	sub	r2,r21,r23
   13cfc:	10bfffc4 	addi	r2,r2,-1
   13d00:	00c001c4 	movi	r3,7
   13d04:	000b883a 	mov	r5,zero
   13d08:	1880030e 	bge	r3,r2,13d18 <__gethex+0x150>
   13d0c:	1005d07a 	srai	r2,r2,1
   13d10:	29400044 	addi	r5,r5,1
   13d14:	18bffd16 	blt	r3,r2,13d0c <__alt_mem_epcs_flash_controller_0+0xff812d0c>
   13d18:	d9000217 	ldw	r4,8(sp)
   13d1c:	000a5e80 	call	a5e8 <_Balloc>
   13d20:	10c00504 	addi	r3,r2,20
   13d24:	d8c00015 	stw	r3,0(sp)
   13d28:	1029883a 	mov	r20,r2
   13d2c:	bd417c2e 	bgeu	r23,r21,14320 <__gethex+0x758>
   13d30:	dc400303 	ldbu	r17,12(sp)
   13d34:	03000044 	movi	r12,1
   13d38:	1813883a 	mov	r9,r3
   13d3c:	0039883a 	mov	fp,zero
   13d40:	0007883a 	mov	r3,zero
   13d44:	64d9c83a 	sub	r12,r12,r19
   13d48:	02800804 	movi	r10,32
   13d4c:	a8bfffc3 	ldbu	r2,-1(r21)
   13d50:	ab7fffc4 	addi	r13,r21,-1
   13d54:	88803026 	beq	r17,r2,13e18 <__gethex+0x250>
   13d58:	e2804526 	beq	fp,r10,13e70 <__gethex+0x2a8>
   13d5c:	e00b883a 	mov	r5,fp
   13d60:	e7000104 	addi	fp,fp,4
   13d64:	a93fffc3 	ldbu	r4,-1(r21)
   13d68:	682b883a 	mov	r21,r13
   13d6c:	b109883a 	add	r4,r22,r4
   13d70:	20800003 	ldbu	r2,0(r4)
   13d74:	108003cc 	andi	r2,r2,15
   13d78:	1144983a 	sll	r2,r2,r5
   13d7c:	1886b03a 	or	r3,r3,r2
   13d80:	bd7ff236 	bltu	r23,r21,13d4c <__alt_mem_epcs_flash_controller_0+0xff812d4c>
   13d84:	d9000017 	ldw	r4,0(sp)
   13d88:	48800104 	addi	r2,r9,4
   13d8c:	48c00015 	stw	r3,0(r9)
   13d90:	1105c83a 	sub	r2,r2,r4
   13d94:	1005d0ba 	srai	r2,r2,2
   13d98:	1809883a 	mov	r4,r3
   13d9c:	a0800415 	stw	r2,16(r20)
   13da0:	1022917a 	slli	r17,r2,5
   13da4:	000a9040 	call	a904 <__hi0bits>
   13da8:	d8c00117 	ldw	r3,4(sp)
   13dac:	8885c83a 	sub	r2,r17,r2
   13db0:	1c800017 	ldw	r18,0(r3)
   13db4:	9080d016 	blt	r18,r2,140f8 <__gethex+0x530>
   13db8:	1480ed16 	blt	r2,r18,14170 <__gethex+0x5a8>
   13dbc:	0027883a 	mov	r19,zero
   13dc0:	d8c00117 	ldw	r3,4(sp)
   13dc4:	18800217 	ldw	r2,8(r3)
   13dc8:	14009416 	blt	r2,r16,1401c <__gethex+0x454>
   13dcc:	d8c00117 	ldw	r3,4(sp)
   13dd0:	18800117 	ldw	r2,4(r3)
   13dd4:	8080b30e 	bge	r16,r2,140a4 <__gethex+0x4dc>
   13dd8:	1421c83a 	sub	r16,r2,r16
   13ddc:	8480f616 	blt	r16,r18,141b8 <__gethex+0x5f0>
   13de0:	18c00317 	ldw	r3,12(r3)
   13de4:	01000084 	movi	r4,2
   13de8:	19015226 	beq	r3,r4,14334 <__gethex+0x76c>
   13dec:	010000c4 	movi	r4,3
   13df0:	19013726 	beq	r3,r4,142d0 <__gethex+0x708>
   13df4:	01000044 	movi	r4,1
   13df8:	19015126 	beq	r3,r4,14340 <__gethex+0x778>
   13dfc:	d9000217 	ldw	r4,8(sp)
   13e00:	a00b883a 	mov	r5,r20
   13e04:	000a6900 	call	a690 <_Bfree>
   13e08:	d8801617 	ldw	r2,88(sp)
   13e0c:	10000015 	stw	zero,0(r2)
   13e10:	00801404 	movi	r2,80
   13e14:	00002b06 	br	13ec4 <__gethex+0x2fc>
   13e18:	6b1d883a 	add	r14,r13,r12
   13e1c:	75ffce36 	bltu	r14,r23,13d58 <__alt_mem_epcs_flash_controller_0+0xff812d58>
   13e20:	7009883a 	mov	r4,r14
   13e24:	980d883a 	mov	r6,r19
   13e28:	900b883a 	mov	r5,r18
   13e2c:	d8c00715 	stw	r3,28(sp)
   13e30:	da400615 	stw	r9,24(sp)
   13e34:	da800b15 	stw	r10,44(sp)
   13e38:	db000a15 	stw	r12,40(sp)
   13e3c:	db400815 	stw	r13,32(sp)
   13e40:	db800915 	stw	r14,36(sp)
   13e44:	00146c80 	call	146c8 <strncmp>
   13e48:	d8c00717 	ldw	r3,28(sp)
   13e4c:	da400617 	ldw	r9,24(sp)
   13e50:	da800b17 	ldw	r10,44(sp)
   13e54:	db000a17 	ldw	r12,40(sp)
   13e58:	db400817 	ldw	r13,32(sp)
   13e5c:	db800917 	ldw	r14,36(sp)
   13e60:	103fbd1e 	bne	r2,zero,13d58 <__alt_mem_epcs_flash_controller_0+0xff812d58>
   13e64:	702b883a 	mov	r21,r14
   13e68:	bd7fb836 	bltu	r23,r21,13d4c <__alt_mem_epcs_flash_controller_0+0xff812d4c>
   13e6c:	003fc506 	br	13d84 <__alt_mem_epcs_flash_controller_0+0xff812d84>
   13e70:	07000104 	movi	fp,4
   13e74:	48c00015 	stw	r3,0(r9)
   13e78:	000b883a 	mov	r5,zero
   13e7c:	4f13883a 	add	r9,r9,fp
   13e80:	0007883a 	mov	r3,zero
   13e84:	003fb706 	br	13d64 <__alt_mem_epcs_flash_controller_0+0xff812d64>
   13e88:	980d883a 	mov	r6,r19
   13e8c:	900b883a 	mov	r5,r18
   13e90:	b809883a 	mov	r4,r23
   13e94:	00146c80 	call	146c8 <strncmp>
   13e98:	10006c26 	beq	r2,zero,1404c <__gethex+0x484>
   13e9c:	b8800003 	ldbu	r2,0(r23)
   13ea0:	b823883a 	mov	r17,r23
   13ea4:	10803fcc 	andi	r2,r2,255
   13ea8:	01001404 	movi	r4,80
   13eac:	11001126 	beq	r2,r4,13ef4 <__gethex+0x32c>
   13eb0:	01001c04 	movi	r4,112
   13eb4:	11000f26 	beq	r2,r4,13ef4 <__gethex+0x32c>
   13eb8:	a4400015 	stw	r17,0(r20)
   13ebc:	e0008c1e 	bne	fp,zero,140f0 <__gethex+0x528>
   13ec0:	00800184 	movi	r2,6
   13ec4:	dfc01517 	ldw	ra,84(sp)
   13ec8:	df001417 	ldw	fp,80(sp)
   13ecc:	ddc01317 	ldw	r23,76(sp)
   13ed0:	dd801217 	ldw	r22,72(sp)
   13ed4:	dd401117 	ldw	r21,68(sp)
   13ed8:	dd001017 	ldw	r20,64(sp)
   13edc:	dcc00f17 	ldw	r19,60(sp)
   13ee0:	dc800e17 	ldw	r18,56(sp)
   13ee4:	dc400d17 	ldw	r17,52(sp)
   13ee8:	dc000c17 	ldw	r16,48(sp)
   13eec:	dec01604 	addi	sp,sp,88
   13ef0:	f800283a 	ret
   13ef4:	00c00044 	movi	r3,1
   13ef8:	0021883a 	mov	r16,zero
   13efc:	d8c00015 	stw	r3,0(sp)
   13f00:	88800043 	ldbu	r2,1(r17)
   13f04:	01400ac4 	movi	r5,43
   13f08:	11003fcc 	andi	r4,r2,255
   13f0c:	21407626 	beq	r4,r5,140e8 <__gethex+0x520>
   13f10:	01400b44 	movi	r5,45
   13f14:	21404826 	beq	r4,r5,14038 <__gethex+0x470>
   13f18:	8ac00044 	addi	r11,r17,1
   13f1c:	d8000515 	stw	zero,20(sp)
   13f20:	10803fcc 	andi	r2,r2,255
   13f24:	b085883a 	add	r2,r22,r2
   13f28:	11000003 	ldbu	r4,0(r2)
   13f2c:	05400604 	movi	r21,24
   13f30:	20bfffc4 	addi	r2,r4,-1
   13f34:	10803fcc 	andi	r2,r2,255
   13f38:	a8bf6b36 	bltu	r21,r2,13ce8 <__alt_mem_epcs_flash_controller_0+0xff812ce8>
   13f3c:	58800043 	ldbu	r2,1(r11)
   13f40:	014000b4 	movhi	r5,2
   13f44:	29789f84 	addi	r5,r5,-7554
   13f48:	2885883a 	add	r2,r5,r2
   13f4c:	12800003 	ldbu	r10,0(r2)
   13f50:	21003fcc 	andi	r4,r4,255
   13f54:	213ffc04 	addi	r4,r4,-16
   13f58:	50bfffc4 	addi	r2,r10,-1
   13f5c:	10803fcc 	andi	r2,r2,255
   13f60:	5ac00044 	addi	r11,r11,1
   13f64:	51803fcc 	andi	r6,r10,255
   13f68:	a8801036 	bltu	r21,r2,13fac <__gethex+0x3e4>
   13f6c:	5ac00044 	addi	r11,r11,1
   13f70:	01400284 	movi	r5,10
   13f74:	d9800715 	stw	r6,28(sp)
   13f78:	dac00615 	stw	r11,24(sp)
   13f7c:	00024440 	call	2444 <__mulsi3>
   13f80:	dac00617 	ldw	r11,24(sp)
   13f84:	d9800717 	ldw	r6,28(sp)
   13f88:	5a800003 	ldbu	r10,0(r11)
   13f8c:	1185883a 	add	r2,r2,r6
   13f90:	113ffc04 	addi	r4,r2,-16
   13f94:	b295883a 	add	r10,r22,r10
   13f98:	51400003 	ldbu	r5,0(r10)
   13f9c:	2abfffc4 	addi	r10,r5,-1
   13fa0:	52803fcc 	andi	r10,r10,255
   13fa4:	29803fcc 	andi	r6,r5,255
   13fa8:	aabff02e 	bgeu	r21,r10,13f6c <__alt_mem_epcs_flash_controller_0+0xff812f6c>
   13fac:	d8c00517 	ldw	r3,20(sp)
   13fb0:	18000126 	beq	r3,zero,13fb8 <__gethex+0x3f0>
   13fb4:	0109c83a 	sub	r4,zero,r4
   13fb8:	882b883a 	mov	r21,r17
   13fbc:	8121883a 	add	r16,r16,r4
   13fc0:	5823883a 	mov	r17,r11
   13fc4:	003f4906 	br	13cec <__alt_mem_epcs_flash_controller_0+0xff812cec>
   13fc8:	a0800217 	ldw	r2,8(r20)
   13fcc:	a880f20e 	bge	r21,r2,14398 <__gethex+0x7d0>
   13fd0:	a807883a 	mov	r3,r21
   13fd4:	18800144 	addi	r2,r3,5
   13fd8:	1085883a 	add	r2,r2,r2
   13fdc:	18c00044 	addi	r3,r3,1
   13fe0:	1085883a 	add	r2,r2,r2
   13fe4:	a085883a 	add	r2,r20,r2
   13fe8:	a0c00415 	stw	r3,16(r20)
   13fec:	01000044 	movi	r4,1
   13ff0:	11000015 	stw	r4,0(r2)
   13ff4:	00800084 	movi	r2,2
   13ff8:	8880da26 	beq	r17,r2,14364 <__gethex+0x79c>
   13ffc:	a8c0ae0e 	bge	r21,r3,142b8 <__gethex+0x6f0>
   14000:	01400044 	movi	r5,1
   14004:	a009883a 	mov	r4,r20
   14008:	0013ac80 	call	13ac8 <rshift>
   1400c:	d8c00117 	ldw	r3,4(sp)
   14010:	84000044 	addi	r16,r16,1
   14014:	18800217 	ldw	r2,8(r3)
   14018:	1400a90e 	bge	r2,r16,142c0 <__gethex+0x6f8>
   1401c:	d9000217 	ldw	r4,8(sp)
   14020:	a00b883a 	mov	r5,r20
   14024:	000a6900 	call	a690 <_Bfree>
   14028:	d9001617 	ldw	r4,88(sp)
   1402c:	008028c4 	movi	r2,163
   14030:	20000015 	stw	zero,0(r4)
   14034:	003fa306 	br	13ec4 <__alt_mem_epcs_flash_controller_0+0xff812ec4>
   14038:	00c00044 	movi	r3,1
   1403c:	d8c00515 	stw	r3,20(sp)
   14040:	88800083 	ldbu	r2,2(r17)
   14044:	8ac00084 	addi	r11,r17,2
   14048:	003fb506 	br	13f20 <__alt_mem_epcs_flash_controller_0+0xff812f20>
   1404c:	bce3883a 	add	r17,r23,r19
   14050:	89000003 	ldbu	r4,0(r17)
   14054:	21403fcc 	andi	r5,r4,255
   14058:	b145883a 	add	r2,r22,r5
   1405c:	10800003 	ldbu	r2,0(r2)
   14060:	11803fcc 	andi	r6,r2,255
   14064:	30005026 	beq	r6,zero,141a8 <__gethex+0x5e0>
   14068:	01000c04 	movi	r4,48
   1406c:	882f883a 	mov	r23,r17
   14070:	2900061e 	bne	r5,r4,1408c <__gethex+0x4c4>
   14074:	2809883a 	mov	r4,r5
   14078:	bdc00044 	addi	r23,r23,1
   1407c:	b8800003 	ldbu	r2,0(r23)
   14080:	113ffd26 	beq	r2,r4,14078 <__alt_mem_epcs_flash_controller_0+0xff813078>
   14084:	b085883a 	add	r2,r22,r2
   14088:	10800003 	ldbu	r2,0(r2)
   1408c:	10803fcc 	andi	r2,r2,255
   14090:	1007003a 	cmpeq	r3,r2,zero
   14094:	d8c00015 	stw	r3,0(sp)
   14098:	8821883a 	mov	r16,r17
   1409c:	07000044 	movi	fp,1
   140a0:	003ef706 	br	13c80 <__alt_mem_epcs_flash_controller_0+0xff812c80>
   140a4:	04400044 	movi	r17,1
   140a8:	98000926 	beq	r19,zero,140d0 <__gethex+0x508>
   140ac:	d8c00117 	ldw	r3,4(sp)
   140b0:	18800317 	ldw	r2,12(r3)
   140b4:	00c00084 	movi	r3,2
   140b8:	10c06826 	beq	r2,r3,1425c <__gethex+0x694>
   140bc:	00c000c4 	movi	r3,3
   140c0:	10c06a26 	beq	r2,r3,1426c <__gethex+0x6a4>
   140c4:	00c00044 	movi	r3,1
   140c8:	10c08d26 	beq	r2,r3,14300 <__gethex+0x738>
   140cc:	8c400414 	ori	r17,r17,16
   140d0:	d9001617 	ldw	r4,88(sp)
   140d4:	d8c00417 	ldw	r3,16(sp)
   140d8:	8805883a 	mov	r2,r17
   140dc:	25000015 	stw	r20,0(r4)
   140e0:	1c000015 	stw	r16,0(r3)
   140e4:	003f7706 	br	13ec4 <__alt_mem_epcs_flash_controller_0+0xff812ec4>
   140e8:	d8000515 	stw	zero,20(sp)
   140ec:	003fd406 	br	14040 <__alt_mem_epcs_flash_controller_0+0xff813040>
   140f0:	0005883a 	mov	r2,zero
   140f4:	003f7306 	br	13ec4 <__alt_mem_epcs_flash_controller_0+0xff812ec4>
   140f8:	14a3c83a 	sub	r17,r2,r18
   140fc:	880b883a 	mov	r5,r17
   14100:	a009883a 	mov	r4,r20
   14104:	000b6140 	call	b614 <__any_on>
   14108:	10002926 	beq	r2,zero,141b0 <__gethex+0x5e8>
   1410c:	897fffc4 	addi	r5,r17,-1
   14110:	2807d17a 	srai	r3,r5,5
   14114:	d8800017 	ldw	r2,0(sp)
   14118:	290007cc 	andi	r4,r5,31
   1411c:	18c7883a 	add	r3,r3,r3
   14120:	18c7883a 	add	r3,r3,r3
   14124:	04c00044 	movi	r19,1
   14128:	10c7883a 	add	r3,r2,r3
   1412c:	9908983a 	sll	r4,r19,r4
   14130:	18c00017 	ldw	r3,0(r3)
   14134:	20c6703a 	and	r3,r4,r3
   14138:	18000626 	beq	r3,zero,14154 <__gethex+0x58c>
   1413c:	99407b0e 	bge	r19,r5,1432c <__gethex+0x764>
   14140:	897fff84 	addi	r5,r17,-2
   14144:	a009883a 	mov	r4,r20
   14148:	000b6140 	call	b614 <__any_on>
   1414c:	10007726 	beq	r2,zero,1432c <__gethex+0x764>
   14150:	04c000c4 	movi	r19,3
   14154:	880b883a 	mov	r5,r17
   14158:	a009883a 	mov	r4,r20
   1415c:	0013ac80 	call	13ac8 <rshift>
   14160:	8461883a 	add	r16,r16,r17
   14164:	003f1606 	br	13dc0 <__alt_mem_epcs_flash_controller_0+0xff812dc0>
   14168:	0021883a 	mov	r16,zero
   1416c:	003ed906 	br	13cd4 <__alt_mem_epcs_flash_controller_0+0xff812cd4>
   14170:	d9000217 	ldw	r4,8(sp)
   14174:	90a3c83a 	sub	r17,r18,r2
   14178:	a00b883a 	mov	r5,r20
   1417c:	880d883a 	mov	r6,r17
   14180:	000ae240 	call	ae24 <__lshift>
   14184:	10c00504 	addi	r3,r2,20
   14188:	1029883a 	mov	r20,r2
   1418c:	8461c83a 	sub	r16,r16,r17
   14190:	d8c00015 	stw	r3,0(sp)
   14194:	0027883a 	mov	r19,zero
   14198:	003f0906 	br	13dc0 <__alt_mem_epcs_flash_controller_0+0xff812dc0>
   1419c:	3dc00084 	addi	r23,r7,2
   141a0:	0039883a 	mov	fp,zero
   141a4:	003eac06 	br	13c58 <__alt_mem_epcs_flash_controller_0+0xff812c58>
   141a8:	2005883a 	mov	r2,r4
   141ac:	003f3d06 	br	13ea4 <__alt_mem_epcs_flash_controller_0+0xff812ea4>
   141b0:	0027883a 	mov	r19,zero
   141b4:	003fe706 	br	14154 <__alt_mem_epcs_flash_controller_0+0xff813154>
   141b8:	847fffc4 	addi	r17,r16,-1
   141bc:	9800421e 	bne	r19,zero,142c8 <__gethex+0x700>
   141c0:	88000426 	beq	r17,zero,141d4 <__gethex+0x60c>
   141c4:	880b883a 	mov	r5,r17
   141c8:	a009883a 	mov	r4,r20
   141cc:	000b6140 	call	b614 <__any_on>
   141d0:	1027883a 	mov	r19,r2
   141d4:	8805d17a 	srai	r2,r17,5
   141d8:	d8c00017 	ldw	r3,0(sp)
   141dc:	8c4007cc 	andi	r17,r17,31
   141e0:	1085883a 	add	r2,r2,r2
   141e4:	1085883a 	add	r2,r2,r2
   141e8:	1885883a 	add	r2,r3,r2
   141ec:	00c00044 	movi	r3,1
   141f0:	1c62983a 	sll	r17,r3,r17
   141f4:	10800017 	ldw	r2,0(r2)
   141f8:	8884703a 	and	r2,r17,r2
   141fc:	10000126 	beq	r2,zero,14204 <__gethex+0x63c>
   14200:	9cc00094 	ori	r19,r19,2
   14204:	800b883a 	mov	r5,r16
   14208:	a009883a 	mov	r4,r20
   1420c:	0013ac80 	call	13ac8 <rshift>
   14210:	d8c00117 	ldw	r3,4(sp)
   14214:	9425c83a 	sub	r18,r18,r16
   14218:	04400084 	movi	r17,2
   1421c:	1c000117 	ldw	r16,4(r3)
   14220:	003fa106 	br	140a8 <__alt_mem_epcs_flash_controller_0+0xff8130a8>
   14224:	8ce1883a 	add	r16,r17,r19
   14228:	80800003 	ldbu	r2,0(r16)
   1422c:	8023883a 	mov	r17,r16
   14230:	10c03fcc 	andi	r3,r2,255
   14234:	b0c7883a 	add	r3,r22,r3
   14238:	18c00003 	ldbu	r3,0(r3)
   1423c:	183ea026 	beq	r3,zero,13cc0 <__alt_mem_epcs_flash_controller_0+0xff812cc0>
   14240:	8c400044 	addi	r17,r17,1
   14244:	88800003 	ldbu	r2,0(r17)
   14248:	11003fcc 	andi	r4,r2,255
   1424c:	b109883a 	add	r4,r22,r4
   14250:	21000003 	ldbu	r4,0(r4)
   14254:	203ffa1e 	bne	r4,zero,14240 <__alt_mem_epcs_flash_controller_0+0xff813240>
   14258:	003e9906 	br	13cc0 <__alt_mem_epcs_flash_controller_0+0xff812cc0>
   1425c:	d9001717 	ldw	r4,92(sp)
   14260:	00800044 	movi	r2,1
   14264:	1109c83a 	sub	r4,r2,r4
   14268:	d9001715 	stw	r4,92(sp)
   1426c:	d8801717 	ldw	r2,92(sp)
   14270:	103f9626 	beq	r2,zero,140cc <__alt_mem_epcs_flash_controller_0+0xff8130cc>
   14274:	a5400417 	ldw	r21,16(r20)
   14278:	d9800017 	ldw	r6,0(sp)
   1427c:	013fffc4 	movi	r4,-1
   14280:	ad67883a 	add	r19,r21,r21
   14284:	9ce7883a 	add	r19,r19,r19
   14288:	3005883a 	mov	r2,r6
   1428c:	34cb883a 	add	r5,r6,r19
   14290:	00000306 	br	142a0 <__gethex+0x6d8>
   14294:	10000015 	stw	zero,0(r2)
   14298:	10800104 	addi	r2,r2,4
   1429c:	117f4a2e 	bgeu	r2,r5,13fc8 <__alt_mem_epcs_flash_controller_0+0xff812fc8>
   142a0:	10c00017 	ldw	r3,0(r2)
   142a4:	193ffb26 	beq	r3,r4,14294 <__alt_mem_epcs_flash_controller_0+0xff813294>
   142a8:	18c00044 	addi	r3,r3,1
   142ac:	10c00015 	stw	r3,0(r2)
   142b0:	00800084 	movi	r2,2
   142b4:	88802b26 	beq	r17,r2,14364 <__gethex+0x79c>
   142b8:	948007cc 	andi	r18,r18,31
   142bc:	90002f1e 	bne	r18,zero,1437c <__gethex+0x7b4>
   142c0:	04400844 	movi	r17,33
   142c4:	003f8206 	br	140d0 <__alt_mem_epcs_flash_controller_0+0xff8130d0>
   142c8:	04c00044 	movi	r19,1
   142cc:	003fc106 	br	141d4 <__alt_mem_epcs_flash_controller_0+0xff8131d4>
   142d0:	d8c01717 	ldw	r3,92(sp)
   142d4:	183ec926 	beq	r3,zero,13dfc <__alt_mem_epcs_flash_controller_0+0xff812dfc>
   142d8:	d8c00417 	ldw	r3,16(sp)
   142dc:	d9001617 	ldw	r4,88(sp)
   142e0:	18800015 	stw	r2,0(r3)
   142e4:	d8c00017 	ldw	r3,0(sp)
   142e8:	00800044 	movi	r2,1
   142ec:	a0800415 	stw	r2,16(r20)
   142f0:	18800015 	stw	r2,0(r3)
   142f4:	25000015 	stw	r20,0(r4)
   142f8:	00801884 	movi	r2,98
   142fc:	003ef106 	br	13ec4 <__alt_mem_epcs_flash_controller_0+0xff812ec4>
   14300:	9880008c 	andi	r2,r19,2
   14304:	103f7126 	beq	r2,zero,140cc <__alt_mem_epcs_flash_controller_0+0xff8130cc>
   14308:	d8c00017 	ldw	r3,0(sp)
   1430c:	18800017 	ldw	r2,0(r3)
   14310:	9884b03a 	or	r2,r19,r2
   14314:	1080004c 	andi	r2,r2,1
   14318:	103fd61e 	bne	r2,zero,14274 <__alt_mem_epcs_flash_controller_0+0xff813274>
   1431c:	003f6b06 	br	140cc <__alt_mem_epcs_flash_controller_0+0xff8130cc>
   14320:	da400017 	ldw	r9,0(sp)
   14324:	0007883a 	mov	r3,zero
   14328:	003e9606 	br	13d84 <__alt_mem_epcs_flash_controller_0+0xff812d84>
   1432c:	04c00084 	movi	r19,2
   14330:	003f8806 	br	14154 <__alt_mem_epcs_flash_controller_0+0xff813154>
   14334:	d9001717 	ldw	r4,92(sp)
   14338:	203fe726 	beq	r4,zero,142d8 <__alt_mem_epcs_flash_controller_0+0xff8132d8>
   1433c:	003eaf06 	br	13dfc <__alt_mem_epcs_flash_controller_0+0xff812dfc>
   14340:	943eae1e 	bne	r18,r16,13dfc <__alt_mem_epcs_flash_controller_0+0xff812dfc>
   14344:	1cbfe40e 	bge	r3,r18,142d8 <__alt_mem_epcs_flash_controller_0+0xff8132d8>
   14348:	917fffc4 	addi	r5,r18,-1
   1434c:	a009883a 	mov	r4,r20
   14350:	000b6140 	call	b614 <__any_on>
   14354:	103ea926 	beq	r2,zero,13dfc <__alt_mem_epcs_flash_controller_0+0xff812dfc>
   14358:	d8c00117 	ldw	r3,4(sp)
   1435c:	18800117 	ldw	r2,4(r3)
   14360:	003fdd06 	br	142d8 <__alt_mem_epcs_flash_controller_0+0xff8132d8>
   14364:	d8c00117 	ldw	r3,4(sp)
   14368:	18800017 	ldw	r2,0(r3)
   1436c:	10bfffc4 	addi	r2,r2,-1
   14370:	90801c26 	beq	r18,r2,143e4 <__gethex+0x81c>
   14374:	04400884 	movi	r17,34
   14378:	003f5506 	br	140d0 <__alt_mem_epcs_flash_controller_0+0xff8130d0>
   1437c:	34c5883a 	add	r2,r6,r19
   14380:	113fff17 	ldw	r4,-4(r2)
   14384:	000a9040 	call	a904 <__hi0bits>
   14388:	00c00804 	movi	r3,32
   1438c:	1ca5c83a 	sub	r18,r3,r18
   14390:	14bfcb0e 	bge	r2,r18,142c0 <__alt_mem_epcs_flash_controller_0+0xff8132c0>
   14394:	003f1a06 	br	14000 <__alt_mem_epcs_flash_controller_0+0xff813000>
   14398:	a1400117 	ldw	r5,4(r20)
   1439c:	d9000217 	ldw	r4,8(sp)
   143a0:	29400044 	addi	r5,r5,1
   143a4:	000a5e80 	call	a5e8 <_Balloc>
   143a8:	a1800417 	ldw	r6,16(r20)
   143ac:	a1400304 	addi	r5,r20,12
   143b0:	11000304 	addi	r4,r2,12
   143b4:	31800084 	addi	r6,r6,2
   143b8:	318d883a 	add	r6,r6,r6
   143bc:	318d883a 	add	r6,r6,r6
   143c0:	102d883a 	mov	r22,r2
   143c4:	0002e140 	call	2e14 <memcpy>
   143c8:	d9000217 	ldw	r4,8(sp)
   143cc:	a00b883a 	mov	r5,r20
   143d0:	b029883a 	mov	r20,r22
   143d4:	000a6900 	call	a690 <_Bfree>
   143d8:	b0c00417 	ldw	r3,16(r22)
   143dc:	b1800504 	addi	r6,r22,20
   143e0:	003efc06 	br	13fd4 <__alt_mem_epcs_flash_controller_0+0xff812fd4>
   143e4:	9005d17a 	srai	r2,r18,5
   143e8:	944007cc 	andi	r17,r18,31
   143ec:	1085883a 	add	r2,r2,r2
   143f0:	1085883a 	add	r2,r2,r2
   143f4:	3087883a 	add	r3,r6,r2
   143f8:	00800044 	movi	r2,1
   143fc:	1462983a 	sll	r17,r2,r17
   14400:	18800017 	ldw	r2,0(r3)
   14404:	8884703a 	and	r2,r17,r2
   14408:	1022c03a 	cmpne	r17,r2,zero
   1440c:	00800884 	movi	r2,34
   14410:	1463c83a 	sub	r17,r2,r17
   14414:	003f2e06 	br	140d0 <__alt_mem_epcs_flash_controller_0+0xff8130d0>

00014418 <__hexnan>:
   14418:	defff904 	addi	sp,sp,-28
   1441c:	dc800215 	stw	r18,8(sp)
   14420:	2c800017 	ldw	r18,0(r5)
   14424:	dfc00615 	stw	ra,24(sp)
   14428:	dd400515 	stw	r21,20(sp)
   1442c:	901fd17a 	srai	r15,r18,5
   14430:	dd000415 	stw	r20,16(sp)
   14434:	dcc00315 	stw	r19,12(sp)
   14438:	7bdf883a 	add	r15,r15,r15
   1443c:	7bdf883a 	add	r15,r15,r15
   14440:	dc400115 	stw	r17,4(sp)
   14444:	dc000015 	stw	r16,0(sp)
   14448:	948007cc 	andi	r18,r18,31
   1444c:	33df883a 	add	r15,r6,r15
   14450:	90000126 	beq	r18,zero,14458 <__hexnan+0x40>
   14454:	7bc00104 	addi	r15,r15,4
   14458:	22000017 	ldw	r8,0(r4)
   1445c:	7affff04 	addi	r11,r15,-4
   14460:	038000b4 	movhi	r14,2
   14464:	783fff15 	stw	zero,-4(r15)
   14468:	581b883a 	mov	r13,r11
   1446c:	580b883a 	mov	r5,r11
   14470:	000f883a 	mov	r7,zero
   14474:	003f883a 	mov	ra,zero
   14478:	0019883a 	mov	r12,zero
   1447c:	73b89f84 	addi	r14,r14,-7554
   14480:	04400204 	movi	r17,8
   14484:	04000804 	movi	r16,32
   14488:	04c001c4 	movi	r19,7
   1448c:	42000044 	addi	r8,r8,1
   14490:	40c00003 	ldbu	r3,0(r8)
   14494:	18001d26 	beq	r3,zero,1450c <__hexnan+0xf4>
   14498:	70c5883a 	add	r2,r14,r3
   1449c:	10800003 	ldbu	r2,0(r2)
   144a0:	12403fcc 	andi	r9,r2,255
   144a4:	4800301e 	bne	r9,zero,14568 <__hexnan+0x150>
   144a8:	80c04236 	bltu	r16,r3,145b4 <__hexnan+0x19c>
   144ac:	fb3ff70e 	bge	ra,r12,1448c <__alt_mem_epcs_flash_controller_0+0xff81348c>
   144b0:	2b40112e 	bgeu	r5,r13,144f8 <__hexnan+0xe0>
   144b4:	99c01016 	blt	r19,r7,144f8 <__hexnan+0xe0>
   144b8:	89e9c83a 	sub	r20,r17,r7
   144bc:	a529883a 	add	r20,r20,r20
   144c0:	2a800017 	ldw	r10,0(r5)
   144c4:	a529883a 	add	r20,r20,r20
   144c8:	852bc83a 	sub	r21,r16,r20
   144cc:	28c00104 	addi	r3,r5,4
   144d0:	2805883a 	mov	r2,r5
   144d4:	19c00017 	ldw	r7,0(r3)
   144d8:	10800104 	addi	r2,r2,4
   144dc:	18c00104 	addi	r3,r3,4
   144e0:	3d52983a 	sll	r9,r7,r21
   144e4:	4a92b03a 	or	r9,r9,r10
   144e8:	3d14d83a 	srl	r10,r7,r20
   144ec:	127fff15 	stw	r9,-4(r2)
   144f0:	1abfff15 	stw	r10,-4(r3)
   144f4:	137ff736 	bltu	r2,r13,144d4 <__alt_mem_epcs_flash_controller_0+0xff8134d4>
   144f8:	31402836 	bltu	r6,r5,1459c <__hexnan+0x184>
   144fc:	42000044 	addi	r8,r8,1
   14500:	40c00003 	ldbu	r3,0(r8)
   14504:	01c00204 	movi	r7,8
   14508:	183fe31e 	bne	r3,zero,14498 <__alt_mem_epcs_flash_controller_0+0xff813498>
   1450c:	60002b26 	beq	r12,zero,145bc <__hexnan+0x1a4>
   14510:	2b40022e 	bgeu	r5,r13,1451c <__hexnan+0x104>
   14514:	008001c4 	movi	r2,7
   14518:	11c0430e 	bge	r2,r7,14628 <__hexnan+0x210>
   1451c:	3140312e 	bgeu	r6,r5,145e4 <__hexnan+0x1cc>
   14520:	3007883a 	mov	r3,r6
   14524:	29000017 	ldw	r4,0(r5)
   14528:	18800104 	addi	r2,r3,4
   1452c:	29400104 	addi	r5,r5,4
   14530:	19000015 	stw	r4,0(r3)
   14534:	1007883a 	mov	r3,r2
   14538:	597ffa2e 	bgeu	r11,r5,14524 <__alt_mem_epcs_flash_controller_0+0xff813524>
   1453c:	10000015 	stw	zero,0(r2)
   14540:	10800104 	addi	r2,r2,4
   14544:	58bffd2e 	bgeu	r11,r2,1453c <__alt_mem_epcs_flash_controller_0+0xff81353c>
   14548:	78bfff17 	ldw	r2,-4(r15)
   1454c:	1000041e 	bne	r2,zero,14560 <__hexnan+0x148>
   14550:	32c02d26 	beq	r6,r11,14608 <__hexnan+0x1f0>
   14554:	5affff04 	addi	r11,r11,-4
   14558:	58800017 	ldw	r2,0(r11)
   1455c:	103ffc26 	beq	r2,zero,14550 <__alt_mem_epcs_flash_controller_0+0xff813550>
   14560:	00800144 	movi	r2,5
   14564:	00001606 	br	145c0 <__hexnan+0x1a8>
   14568:	39c00044 	addi	r7,r7,1
   1456c:	63000044 	addi	r12,r12,1
   14570:	89c0040e 	bge	r17,r7,14584 <__hexnan+0x16c>
   14574:	317fc52e 	bgeu	r6,r5,1448c <__alt_mem_epcs_flash_controller_0+0xff81348c>
   14578:	283fff15 	stw	zero,-4(r5)
   1457c:	01c00044 	movi	r7,1
   14580:	297fff04 	addi	r5,r5,-4
   14584:	28c00017 	ldw	r3,0(r5)
   14588:	108003cc 	andi	r2,r2,15
   1458c:	1806913a 	slli	r3,r3,4
   14590:	1884b03a 	or	r2,r3,r2
   14594:	28800015 	stw	r2,0(r5)
   14598:	003fbc06 	br	1448c <__alt_mem_epcs_flash_controller_0+0xff81348c>
   1459c:	2b7fff04 	addi	r13,r5,-4
   145a0:	283fff15 	stw	zero,-4(r5)
   145a4:	603f883a 	mov	ra,r12
   145a8:	680b883a 	mov	r5,r13
   145ac:	000f883a 	mov	r7,zero
   145b0:	003fb606 	br	1448c <__alt_mem_epcs_flash_controller_0+0xff81348c>
   145b4:	00800a44 	movi	r2,41
   145b8:	18801726 	beq	r3,r2,14618 <__hexnan+0x200>
   145bc:	00800104 	movi	r2,4
   145c0:	dfc00617 	ldw	ra,24(sp)
   145c4:	dd400517 	ldw	r21,20(sp)
   145c8:	dd000417 	ldw	r20,16(sp)
   145cc:	dcc00317 	ldw	r19,12(sp)
   145d0:	dc800217 	ldw	r18,8(sp)
   145d4:	dc400117 	ldw	r17,4(sp)
   145d8:	dc000017 	ldw	r16,0(sp)
   145dc:	dec00704 	addi	sp,sp,28
   145e0:	f800283a 	ret
   145e4:	903fd826 	beq	r18,zero,14548 <__alt_mem_epcs_flash_controller_0+0xff813548>
   145e8:	00c00804 	movi	r3,32
   145ec:	1ca5c83a 	sub	r18,r3,r18
   145f0:	00ffffc4 	movi	r3,-1
   145f4:	78bfff17 	ldw	r2,-4(r15)
   145f8:	1c86d83a 	srl	r3,r3,r18
   145fc:	1884703a 	and	r2,r3,r2
   14600:	78bfff15 	stw	r2,-4(r15)
   14604:	003fd106 	br	1454c <__alt_mem_epcs_flash_controller_0+0xff81354c>
   14608:	00800044 	movi	r2,1
   1460c:	58800015 	stw	r2,0(r11)
   14610:	00800144 	movi	r2,5
   14614:	003fea06 	br	145c0 <__alt_mem_epcs_flash_controller_0+0xff8135c0>
   14618:	42000044 	addi	r8,r8,1
   1461c:	22000015 	stw	r8,0(r4)
   14620:	603fbb1e 	bne	r12,zero,14510 <__alt_mem_epcs_flash_controller_0+0xff813510>
   14624:	003fe506 	br	145bc <__alt_mem_epcs_flash_controller_0+0xff8135bc>
   14628:	02400204 	movi	r9,8
   1462c:	49d3c83a 	sub	r9,r9,r7
   14630:	4a53883a 	add	r9,r9,r9
   14634:	2a000017 	ldw	r8,0(r5)
   14638:	4a53883a 	add	r9,r9,r9
   1463c:	02800804 	movi	r10,32
   14640:	5255c83a 	sub	r10,r10,r9
   14644:	28c00104 	addi	r3,r5,4
   14648:	2805883a 	mov	r2,r5
   1464c:	19c00017 	ldw	r7,0(r3)
   14650:	10800104 	addi	r2,r2,4
   14654:	18c00104 	addi	r3,r3,4
   14658:	3a88983a 	sll	r4,r7,r10
   1465c:	2208b03a 	or	r4,r4,r8
   14660:	3a50d83a 	srl	r8,r7,r9
   14664:	113fff15 	stw	r4,-4(r2)
   14668:	1a3fff15 	stw	r8,-4(r3)
   1466c:	137ff736 	bltu	r2,r13,1464c <__alt_mem_epcs_flash_controller_0+0xff81364c>
   14670:	003faa06 	br	1451c <__alt_mem_epcs_flash_controller_0+0xff81351c>

00014674 <_isatty_r>:
   14674:	defffd04 	addi	sp,sp,-12
   14678:	dc000015 	stw	r16,0(sp)
   1467c:	040000b4 	movhi	r16,2
   14680:	dc400115 	stw	r17,4(sp)
   14684:	84072604 	addi	r16,r16,7320
   14688:	2023883a 	mov	r17,r4
   1468c:	2809883a 	mov	r4,r5
   14690:	dfc00215 	stw	ra,8(sp)
   14694:	80000015 	stw	zero,0(r16)
   14698:	0019ba40 	call	19ba4 <isatty>
   1469c:	00ffffc4 	movi	r3,-1
   146a0:	10c00526 	beq	r2,r3,146b8 <_isatty_r+0x44>
   146a4:	dfc00217 	ldw	ra,8(sp)
   146a8:	dc400117 	ldw	r17,4(sp)
   146ac:	dc000017 	ldw	r16,0(sp)
   146b0:	dec00304 	addi	sp,sp,12
   146b4:	f800283a 	ret
   146b8:	80c00017 	ldw	r3,0(r16)
   146bc:	183ff926 	beq	r3,zero,146a4 <__alt_mem_epcs_flash_controller_0+0xff8136a4>
   146c0:	88c00015 	stw	r3,0(r17)
   146c4:	003ff706 	br	146a4 <__alt_mem_epcs_flash_controller_0+0xff8136a4>

000146c8 <strncmp>:
   146c8:	30003126 	beq	r6,zero,14790 <strncmp+0xc8>
   146cc:	2144b03a 	or	r2,r4,r5
   146d0:	108000cc 	andi	r2,r2,3
   146d4:	10001e1e 	bne	r2,zero,14750 <strncmp+0x88>
   146d8:	024000c4 	movi	r9,3
   146dc:	49801c2e 	bgeu	r9,r6,14750 <strncmp+0x88>
   146e0:	20800017 	ldw	r2,0(r4)
   146e4:	28c00017 	ldw	r3,0(r5)
   146e8:	10c0191e 	bne	r2,r3,14750 <strncmp+0x88>
   146ec:	31bfff04 	addi	r6,r6,-4
   146f0:	30002726 	beq	r6,zero,14790 <strncmp+0xc8>
   146f4:	02ffbff4 	movhi	r11,65279
   146f8:	5affbfc4 	addi	r11,r11,-257
   146fc:	0086303a 	nor	r3,zero,r2
   14700:	02a02074 	movhi	r10,32897
   14704:	12c5883a 	add	r2,r2,r11
   14708:	52a02004 	addi	r10,r10,-32640
   1470c:	10c4703a 	and	r2,r2,r3
   14710:	1284703a 	and	r2,r2,r10
   14714:	10000b26 	beq	r2,zero,14744 <strncmp+0x7c>
   14718:	00001d06 	br	14790 <strncmp+0xc8>
   1471c:	20c00017 	ldw	r3,0(r4)
   14720:	29c00017 	ldw	r7,0(r5)
   14724:	1ad1883a 	add	r8,r3,r11
   14728:	00c4303a 	nor	r2,zero,r3
   1472c:	4084703a 	and	r2,r8,r2
   14730:	1284703a 	and	r2,r2,r10
   14734:	19c0061e 	bne	r3,r7,14750 <strncmp+0x88>
   14738:	31bfff04 	addi	r6,r6,-4
   1473c:	30001426 	beq	r6,zero,14790 <strncmp+0xc8>
   14740:	1000131e 	bne	r2,zero,14790 <strncmp+0xc8>
   14744:	21000104 	addi	r4,r4,4
   14748:	29400104 	addi	r5,r5,4
   1474c:	49bff336 	bltu	r9,r6,1471c <__alt_mem_epcs_flash_controller_0+0xff81371c>
   14750:	28800007 	ldb	r2,0(r5)
   14754:	20c00007 	ldb	r3,0(r4)
   14758:	31bfffc4 	addi	r6,r6,-1
   1475c:	10c0081e 	bne	r2,r3,14780 <strncmp+0xb8>
   14760:	30000b26 	beq	r6,zero,14790 <strncmp+0xc8>
   14764:	10000a26 	beq	r2,zero,14790 <strncmp+0xc8>
   14768:	21000044 	addi	r4,r4,1
   1476c:	29400044 	addi	r5,r5,1
   14770:	20800007 	ldb	r2,0(r4)
   14774:	28c00007 	ldb	r3,0(r5)
   14778:	31bfffc4 	addi	r6,r6,-1
   1477c:	10fff826 	beq	r2,r3,14760 <__alt_mem_epcs_flash_controller_0+0xff813760>
   14780:	20800003 	ldbu	r2,0(r4)
   14784:	28c00003 	ldbu	r3,0(r5)
   14788:	10c5c83a 	sub	r2,r2,r3
   1478c:	f800283a 	ret
   14790:	0005883a 	mov	r2,zero
   14794:	f800283a 	ret

00014798 <__ssprint_r>:
   14798:	30800217 	ldw	r2,8(r6)
   1479c:	defff604 	addi	sp,sp,-40
   147a0:	dc800215 	stw	r18,8(sp)
   147a4:	dfc00915 	stw	ra,36(sp)
   147a8:	df000815 	stw	fp,32(sp)
   147ac:	ddc00715 	stw	r23,28(sp)
   147b0:	dd800615 	stw	r22,24(sp)
   147b4:	dd400515 	stw	r21,20(sp)
   147b8:	dd000415 	stw	r20,16(sp)
   147bc:	dcc00315 	stw	r19,12(sp)
   147c0:	dc400115 	stw	r17,4(sp)
   147c4:	dc000015 	stw	r16,0(sp)
   147c8:	3025883a 	mov	r18,r6
   147cc:	10005826 	beq	r2,zero,14930 <__ssprint_r+0x198>
   147d0:	2027883a 	mov	r19,r4
   147d4:	35c00017 	ldw	r23,0(r6)
   147d8:	29000017 	ldw	r4,0(r5)
   147dc:	28800217 	ldw	r2,8(r5)
   147e0:	2823883a 	mov	r17,r5
   147e4:	0039883a 	mov	fp,zero
   147e8:	0021883a 	mov	r16,zero
   147ec:	80003926 	beq	r16,zero,148d4 <__ssprint_r+0x13c>
   147f0:	102b883a 	mov	r21,r2
   147f4:	102d883a 	mov	r22,r2
   147f8:	80803a36 	bltu	r16,r2,148e4 <__ssprint_r+0x14c>
   147fc:	88c0030b 	ldhu	r3,12(r17)
   14800:	1881200c 	andi	r2,r3,1152
   14804:	10002626 	beq	r2,zero,148a0 <__ssprint_r+0x108>
   14808:	88800517 	ldw	r2,20(r17)
   1480c:	89400417 	ldw	r5,16(r17)
   14810:	81800044 	addi	r6,r16,1
   14814:	108f883a 	add	r7,r2,r2
   14818:	3885883a 	add	r2,r7,r2
   1481c:	100ed7fa 	srli	r7,r2,31
   14820:	216dc83a 	sub	r22,r4,r5
   14824:	3589883a 	add	r4,r6,r22
   14828:	3885883a 	add	r2,r7,r2
   1482c:	102bd07a 	srai	r21,r2,1
   14830:	a80d883a 	mov	r6,r21
   14834:	a900022e 	bgeu	r21,r4,14840 <__ssprint_r+0xa8>
   14838:	202b883a 	mov	r21,r4
   1483c:	200d883a 	mov	r6,r4
   14840:	18c1000c 	andi	r3,r3,1024
   14844:	18002a26 	beq	r3,zero,148f0 <__ssprint_r+0x158>
   14848:	300b883a 	mov	r5,r6
   1484c:	9809883a 	mov	r4,r19
   14850:	000258c0 	call	258c <_malloc_r>
   14854:	1029883a 	mov	r20,r2
   14858:	10002c26 	beq	r2,zero,1490c <__ssprint_r+0x174>
   1485c:	89400417 	ldw	r5,16(r17)
   14860:	b00d883a 	mov	r6,r22
   14864:	1009883a 	mov	r4,r2
   14868:	0002e140 	call	2e14 <memcpy>
   1486c:	8880030b 	ldhu	r2,12(r17)
   14870:	00fedfc4 	movi	r3,-1153
   14874:	10c4703a 	and	r2,r2,r3
   14878:	10802014 	ori	r2,r2,128
   1487c:	8880030d 	sth	r2,12(r17)
   14880:	a589883a 	add	r4,r20,r22
   14884:	adadc83a 	sub	r22,r21,r22
   14888:	8d400515 	stw	r21,20(r17)
   1488c:	8d800215 	stw	r22,8(r17)
   14890:	8d000415 	stw	r20,16(r17)
   14894:	89000015 	stw	r4,0(r17)
   14898:	802b883a 	mov	r21,r16
   1489c:	802d883a 	mov	r22,r16
   148a0:	b00d883a 	mov	r6,r22
   148a4:	e00b883a 	mov	r5,fp
   148a8:	000a3640 	call	a364 <memmove>
   148ac:	88800217 	ldw	r2,8(r17)
   148b0:	89000017 	ldw	r4,0(r17)
   148b4:	90c00217 	ldw	r3,8(r18)
   148b8:	1545c83a 	sub	r2,r2,r21
   148bc:	2589883a 	add	r4,r4,r22
   148c0:	88800215 	stw	r2,8(r17)
   148c4:	89000015 	stw	r4,0(r17)
   148c8:	1c21c83a 	sub	r16,r3,r16
   148cc:	94000215 	stw	r16,8(r18)
   148d0:	80001726 	beq	r16,zero,14930 <__ssprint_r+0x198>
   148d4:	bf000017 	ldw	fp,0(r23)
   148d8:	bc000117 	ldw	r16,4(r23)
   148dc:	bdc00204 	addi	r23,r23,8
   148e0:	003fc206 	br	147ec <__alt_mem_epcs_flash_controller_0+0xff8137ec>
   148e4:	802b883a 	mov	r21,r16
   148e8:	802d883a 	mov	r22,r16
   148ec:	003fec06 	br	148a0 <__alt_mem_epcs_flash_controller_0+0xff8138a0>
   148f0:	9809883a 	mov	r4,r19
   148f4:	000b8680 	call	b868 <_realloc_r>
   148f8:	1029883a 	mov	r20,r2
   148fc:	103fe01e 	bne	r2,zero,14880 <__alt_mem_epcs_flash_controller_0+0xff813880>
   14900:	89400417 	ldw	r5,16(r17)
   14904:	9809883a 	mov	r4,r19
   14908:	00093d40 	call	93d4 <_free_r>
   1490c:	88c0030b 	ldhu	r3,12(r17)
   14910:	00800304 	movi	r2,12
   14914:	98800015 	stw	r2,0(r19)
   14918:	18c01014 	ori	r3,r3,64
   1491c:	88c0030d 	sth	r3,12(r17)
   14920:	00bfffc4 	movi	r2,-1
   14924:	90000215 	stw	zero,8(r18)
   14928:	90000115 	stw	zero,4(r18)
   1492c:	00000206 	br	14938 <__ssprint_r+0x1a0>
   14930:	90000115 	stw	zero,4(r18)
   14934:	0005883a 	mov	r2,zero
   14938:	dfc00917 	ldw	ra,36(sp)
   1493c:	df000817 	ldw	fp,32(sp)
   14940:	ddc00717 	ldw	r23,28(sp)
   14944:	dd800617 	ldw	r22,24(sp)
   14948:	dd400517 	ldw	r21,20(sp)
   1494c:	dd000417 	ldw	r20,16(sp)
   14950:	dcc00317 	ldw	r19,12(sp)
   14954:	dc800217 	ldw	r18,8(sp)
   14958:	dc400117 	ldw	r17,4(sp)
   1495c:	dc000017 	ldw	r16,0(sp)
   14960:	dec00a04 	addi	sp,sp,40
   14964:	f800283a 	ret

00014968 <___svfiprintf_internal_r>:
   14968:	2880030b 	ldhu	r2,12(r5)
   1496c:	deffc804 	addi	sp,sp,-224
   14970:	dcc03115 	stw	r19,196(sp)
   14974:	dfc03715 	stw	ra,220(sp)
   14978:	df003615 	stw	fp,216(sp)
   1497c:	ddc03515 	stw	r23,212(sp)
   14980:	dd803415 	stw	r22,208(sp)
   14984:	dd403315 	stw	r21,204(sp)
   14988:	dd003215 	stw	r20,200(sp)
   1498c:	dc803015 	stw	r18,192(sp)
   14990:	dc402f15 	stw	r17,188(sp)
   14994:	dc002e15 	stw	r16,184(sp)
   14998:	d9402315 	stw	r5,140(sp)
   1499c:	d9002715 	stw	r4,156(sp)
   149a0:	1080200c 	andi	r2,r2,128
   149a4:	d9c02415 	stw	r7,144(sp)
   149a8:	3027883a 	mov	r19,r6
   149ac:	10000226 	beq	r2,zero,149b8 <___svfiprintf_internal_r+0x50>
   149b0:	28800417 	ldw	r2,16(r5)
   149b4:	10046d26 	beq	r2,zero,15b6c <___svfiprintf_internal_r+0x1204>
   149b8:	d8801a04 	addi	r2,sp,104
   149bc:	d8c019c4 	addi	r3,sp,103
   149c0:	058000b4 	movhi	r22,2
   149c4:	10c9c83a 	sub	r4,r2,r3
   149c8:	b5b8df84 	addi	r22,r22,-7298
   149cc:	d8801e15 	stw	r2,120(sp)
   149d0:	d8c01f15 	stw	r3,124(sp)
   149d4:	dec01a15 	stw	sp,104(sp)
   149d8:	d8001c15 	stw	zero,112(sp)
   149dc:	d8001b15 	stw	zero,108(sp)
   149e0:	d811883a 	mov	r8,sp
   149e4:	d8002915 	stw	zero,164(sp)
   149e8:	d8002615 	stw	zero,152(sp)
   149ec:	d9002c15 	stw	r4,176(sp)
   149f0:	98800007 	ldb	r2,0(r19)
   149f4:	10031426 	beq	r2,zero,15648 <___svfiprintf_internal_r+0xce0>
   149f8:	00c00944 	movi	r3,37
   149fc:	9825883a 	mov	r18,r19
   14a00:	10c0021e 	bne	r2,r3,14a0c <___svfiprintf_internal_r+0xa4>
   14a04:	00001406 	br	14a58 <___svfiprintf_internal_r+0xf0>
   14a08:	10c00326 	beq	r2,r3,14a18 <___svfiprintf_internal_r+0xb0>
   14a0c:	94800044 	addi	r18,r18,1
   14a10:	90800007 	ldb	r2,0(r18)
   14a14:	103ffc1e 	bne	r2,zero,14a08 <__alt_mem_epcs_flash_controller_0+0xff813a08>
   14a18:	94e1c83a 	sub	r16,r18,r19
   14a1c:	80000e26 	beq	r16,zero,14a58 <___svfiprintf_internal_r+0xf0>
   14a20:	d8c01c17 	ldw	r3,112(sp)
   14a24:	d8801b17 	ldw	r2,108(sp)
   14a28:	44c00015 	stw	r19,0(r8)
   14a2c:	1c07883a 	add	r3,r3,r16
   14a30:	10800044 	addi	r2,r2,1
   14a34:	d8c01c15 	stw	r3,112(sp)
   14a38:	44000115 	stw	r16,4(r8)
   14a3c:	d8801b15 	stw	r2,108(sp)
   14a40:	00c001c4 	movi	r3,7
   14a44:	18835c16 	blt	r3,r2,157b8 <___svfiprintf_internal_r+0xe50>
   14a48:	42000204 	addi	r8,r8,8
   14a4c:	d9402617 	ldw	r5,152(sp)
   14a50:	2c0b883a 	add	r5,r5,r16
   14a54:	d9402615 	stw	r5,152(sp)
   14a58:	90800007 	ldb	r2,0(r18)
   14a5c:	1002fc26 	beq	r2,zero,15650 <___svfiprintf_internal_r+0xce8>
   14a60:	0023883a 	mov	r17,zero
   14a64:	00bfffc4 	movi	r2,-1
   14a68:	0021883a 	mov	r16,zero
   14a6c:	94c00044 	addi	r19,r18,1
   14a70:	90c00047 	ldb	r3,1(r18)
   14a74:	dc402105 	stb	r17,132(sp)
   14a78:	d8001d85 	stb	zero,118(sp)
   14a7c:	002b883a 	mov	r21,zero
   14a80:	d8802015 	stw	r2,128(sp)
   14a84:	d8002515 	stw	zero,148(sp)
   14a88:	04801604 	movi	r18,88
   14a8c:	05000244 	movi	r20,9
   14a90:	402f883a 	mov	r23,r8
   14a94:	8023883a 	mov	r17,r16
   14a98:	9cc00044 	addi	r19,r19,1
   14a9c:	18bff804 	addi	r2,r3,-32
   14aa0:	9081fb36 	bltu	r18,r2,15290 <___svfiprintf_internal_r+0x928>
   14aa4:	100490ba 	slli	r2,r2,2
   14aa8:	01000074 	movhi	r4,1
   14aac:	2112af04 	addi	r4,r4,19132
   14ab0:	1105883a 	add	r2,r2,r4
   14ab4:	10800017 	ldw	r2,0(r2)
   14ab8:	1000683a 	jmp	r2
   14abc:	00014cbc 	xorhi	zero,zero,1330
   14ac0:	00015290 	cmplti	zero,zero,1354
   14ac4:	00015290 	cmplti	zero,zero,1354
   14ac8:	00014cb0 	cmpltui	zero,zero,1330
   14acc:	00015290 	cmplti	zero,zero,1354
   14ad0:	00015290 	cmplti	zero,zero,1354
   14ad4:	00015290 	cmplti	zero,zero,1354
   14ad8:	00015290 	cmplti	zero,zero,1354
   14adc:	00015290 	cmplti	zero,zero,1354
   14ae0:	00015290 	cmplti	zero,zero,1354
   14ae4:	00014c20 	cmpeqi	zero,zero,1328
   14ae8:	00014e1c 	xori	zero,zero,1336
   14aec:	00015290 	cmplti	zero,zero,1354
   14af0:	00014c48 	cmpgei	zero,zero,1329
   14af4:	000152cc 	andi	zero,zero,1355
   14af8:	00015290 	cmplti	zero,zero,1354
   14afc:	000152c0 	call	152c <FlashTestReadWrite+0x2c4>
   14b00:	00015254 	movui	zero,1353
   14b04:	00015254 	movui	zero,1353
   14b08:	00015254 	movui	zero,1353
   14b0c:	00015254 	movui	zero,1353
   14b10:	00015254 	movui	zero,1353
   14b14:	00015254 	movui	zero,1353
   14b18:	00015254 	movui	zero,1353
   14b1c:	00015254 	movui	zero,1353
   14b20:	00015254 	movui	zero,1353
   14b24:	00015290 	cmplti	zero,zero,1354
   14b28:	00015290 	cmplti	zero,zero,1354
   14b2c:	00015290 	cmplti	zero,zero,1354
   14b30:	00015290 	cmplti	zero,zero,1354
   14b34:	00015290 	cmplti	zero,zero,1354
   14b38:	00015290 	cmplti	zero,zero,1354
   14b3c:	00015290 	cmplti	zero,zero,1354
   14b40:	00015290 	cmplti	zero,zero,1354
   14b44:	00015290 	cmplti	zero,zero,1354
   14b48:	00015290 	cmplti	zero,zero,1354
   14b4c:	000151d8 	cmpnei	zero,zero,1351
   14b50:	00015290 	cmplti	zero,zero,1354
   14b54:	00015290 	cmplti	zero,zero,1354
   14b58:	00015290 	cmplti	zero,zero,1354
   14b5c:	00015290 	cmplti	zero,zero,1354
   14b60:	00015290 	cmplti	zero,zero,1354
   14b64:	00015290 	cmplti	zero,zero,1354
   14b68:	00015290 	cmplti	zero,zero,1354
   14b6c:	00015290 	cmplti	zero,zero,1354
   14b70:	00015290 	cmplti	zero,zero,1354
   14b74:	00015290 	cmplti	zero,zero,1354
   14b78:	00015388 	cmpgei	zero,zero,1358
   14b7c:	00015290 	cmplti	zero,zero,1354
   14b80:	00015290 	cmplti	zero,zero,1354
   14b84:	00015290 	cmplti	zero,zero,1354
   14b88:	00015290 	cmplti	zero,zero,1354
   14b8c:	00015290 	cmplti	zero,zero,1354
   14b90:	00015314 	movui	zero,1356
   14b94:	00015290 	cmplti	zero,zero,1354
   14b98:	00015290 	cmplti	zero,zero,1354
   14b9c:	00015014 	movui	zero,1344
   14ba0:	00015290 	cmplti	zero,zero,1354
   14ba4:	00015290 	cmplti	zero,zero,1354
   14ba8:	00015290 	cmplti	zero,zero,1354
   14bac:	00015290 	cmplti	zero,zero,1354
   14bb0:	00015290 	cmplti	zero,zero,1354
   14bb4:	00015290 	cmplti	zero,zero,1354
   14bb8:	00015290 	cmplti	zero,zero,1354
   14bbc:	00015290 	cmplti	zero,zero,1354
   14bc0:	00015290 	cmplti	zero,zero,1354
   14bc4:	00015290 	cmplti	zero,zero,1354
   14bc8:	00014ee0 	cmpeqi	zero,zero,1339
   14bcc:	000150c4 	movi	zero,1347
   14bd0:	00015290 	cmplti	zero,zero,1354
   14bd4:	00015290 	cmplti	zero,zero,1354
   14bd8:	00015290 	cmplti	zero,zero,1354
   14bdc:	000150b8 	rdprs	zero,zero,1346
   14be0:	000150c4 	movi	zero,1347
   14be4:	00015290 	cmplti	zero,zero,1354
   14be8:	00015290 	cmplti	zero,zero,1354
   14bec:	000150a4 	muli	zero,zero,1346
   14bf0:	00015290 	cmplti	zero,zero,1354
   14bf4:	00015064 	muli	zero,zero,1345
   14bf8:	00014e30 	cmpltui	zero,zero,1336
   14bfc:	00014c54 	movui	zero,1329
   14c00:	000151cc 	andi	zero,zero,1351
   14c04:	00015290 	cmplti	zero,zero,1354
   14c08:	00015178 	rdprs	zero,zero,1349
   14c0c:	00015290 	cmplti	zero,zero,1354
   14c10:	00014d94 	movui	zero,1334
   14c14:	00015290 	cmplti	zero,zero,1354
   14c18:	00015290 	cmplti	zero,zero,1354
   14c1c:	00014ce0 	cmpeqi	zero,zero,1331
   14c20:	d9002417 	ldw	r4,144(sp)
   14c24:	d9402417 	ldw	r5,144(sp)
   14c28:	21000017 	ldw	r4,0(r4)
   14c2c:	28800104 	addi	r2,r5,4
   14c30:	d9002515 	stw	r4,148(sp)
   14c34:	20032b0e 	bge	r4,zero,158e4 <___svfiprintf_internal_r+0xf7c>
   14c38:	d8c02517 	ldw	r3,148(sp)
   14c3c:	d8802415 	stw	r2,144(sp)
   14c40:	00c7c83a 	sub	r3,zero,r3
   14c44:	d8c02515 	stw	r3,148(sp)
   14c48:	8c400114 	ori	r17,r17,4
   14c4c:	98c00007 	ldb	r3,0(r19)
   14c50:	003f9106 	br	14a98 <__alt_mem_epcs_flash_controller_0+0xff813a98>
   14c54:	00800c04 	movi	r2,48
   14c58:	d9402417 	ldw	r5,144(sp)
   14c5c:	d9002017 	ldw	r4,128(sp)
   14c60:	d8801d05 	stb	r2,116(sp)
   14c64:	00801e04 	movi	r2,120
   14c68:	d8801d45 	stb	r2,117(sp)
   14c6c:	d8001d85 	stb	zero,118(sp)
   14c70:	b811883a 	mov	r8,r23
   14c74:	28c00104 	addi	r3,r5,4
   14c78:	2c800017 	ldw	r18,0(r5)
   14c7c:	0029883a 	mov	r20,zero
   14c80:	88800094 	ori	r2,r17,2
   14c84:	20036316 	blt	r4,zero,15a14 <___svfiprintf_internal_r+0x10ac>
   14c88:	00bfdfc4 	movi	r2,-129
   14c8c:	88a0703a 	and	r16,r17,r2
   14c90:	d8c02415 	stw	r3,144(sp)
   14c94:	84000094 	ori	r16,r16,2
   14c98:	90031c26 	beq	r18,zero,1590c <___svfiprintf_internal_r+0xfa4>
   14c9c:	014000b4 	movhi	r5,2
   14ca0:	29776f04 	addi	r5,r5,-8772
   14ca4:	002b883a 	mov	r21,zero
   14ca8:	d9402915 	stw	r5,164(sp)
   14cac:	00002906 	br	14d54 <___svfiprintf_internal_r+0x3ec>
   14cb0:	8c400054 	ori	r17,r17,1
   14cb4:	98c00007 	ldb	r3,0(r19)
   14cb8:	003f7706 	br	14a98 <__alt_mem_epcs_flash_controller_0+0xff813a98>
   14cbc:	a8803fcc 	andi	r2,r21,255
   14cc0:	1080201c 	xori	r2,r2,128
   14cc4:	10bfe004 	addi	r2,r2,-128
   14cc8:	10032a1e 	bne	r2,zero,15974 <___svfiprintf_internal_r+0x100c>
   14ccc:	00c00044 	movi	r3,1
   14cd0:	d8c02105 	stb	r3,132(sp)
   14cd4:	05400804 	movi	r21,32
   14cd8:	98c00007 	ldb	r3,0(r19)
   14cdc:	003f6e06 	br	14a98 <__alt_mem_epcs_flash_controller_0+0xff813a98>
   14ce0:	8821883a 	mov	r16,r17
   14ce4:	dc402103 	ldbu	r17,132(sp)
   14ce8:	b811883a 	mov	r8,r23
   14cec:	8c403fcc 	andi	r17,r17,255
   14cf0:	8803f01e 	bne	r17,zero,15cb4 <___svfiprintf_internal_r+0x134c>
   14cf4:	008000b4 	movhi	r2,2
   14cf8:	10b76f04 	addi	r2,r2,-8772
   14cfc:	d8802915 	stw	r2,164(sp)
   14d00:	8080080c 	andi	r2,r16,32
   14d04:	1000cd26 	beq	r2,zero,1503c <___svfiprintf_internal_r+0x6d4>
   14d08:	d9002417 	ldw	r4,144(sp)
   14d0c:	24800017 	ldw	r18,0(r4)
   14d10:	25000117 	ldw	r20,4(r4)
   14d14:	21000204 	addi	r4,r4,8
   14d18:	d9002415 	stw	r4,144(sp)
   14d1c:	8080004c 	andi	r2,r16,1
   14d20:	1002c726 	beq	r2,zero,15840 <___svfiprintf_internal_r+0xed8>
   14d24:	9504b03a 	or	r2,r18,r20
   14d28:	1003061e 	bne	r2,zero,15944 <___svfiprintf_internal_r+0xfdc>
   14d2c:	d9002017 	ldw	r4,128(sp)
   14d30:	d8001d85 	stb	zero,118(sp)
   14d34:	20033e16 	blt	r4,zero,15a30 <___svfiprintf_internal_r+0x10c8>
   14d38:	00bfdfc4 	movi	r2,-129
   14d3c:	80a0703a 	and	r16,r16,r2
   14d40:	d9402017 	ldw	r5,128(sp)
   14d44:	002b883a 	mov	r21,zero
   14d48:	28002826 	beq	r5,zero,14dec <___svfiprintf_internal_r+0x484>
   14d4c:	0025883a 	mov	r18,zero
   14d50:	0029883a 	mov	r20,zero
   14d54:	d9002917 	ldw	r4,164(sp)
   14d58:	dc401a04 	addi	r17,sp,104
   14d5c:	908003cc 	andi	r2,r18,15
   14d60:	a006973a 	slli	r3,r20,28
   14d64:	2085883a 	add	r2,r4,r2
   14d68:	9024d13a 	srli	r18,r18,4
   14d6c:	10800003 	ldbu	r2,0(r2)
   14d70:	a028d13a 	srli	r20,r20,4
   14d74:	8c7fffc4 	addi	r17,r17,-1
   14d78:	1ca4b03a 	or	r18,r3,r18
   14d7c:	88800005 	stb	r2,0(r17)
   14d80:	9504b03a 	or	r2,r18,r20
   14d84:	103ff51e 	bne	r2,zero,14d5c <__alt_mem_epcs_flash_controller_0+0xff813d5c>
   14d88:	d8801e17 	ldw	r2,120(sp)
   14d8c:	1469c83a 	sub	r20,r2,r17
   14d90:	00001906 	br	14df8 <___svfiprintf_internal_r+0x490>
   14d94:	8821883a 	mov	r16,r17
   14d98:	dc402103 	ldbu	r17,132(sp)
   14d9c:	b811883a 	mov	r8,r23
   14da0:	8c403fcc 	andi	r17,r17,255
   14da4:	8803d01e 	bne	r17,zero,15ce8 <___svfiprintf_internal_r+0x1380>
   14da8:	8080080c 	andi	r2,r16,32
   14dac:	10016126 	beq	r2,zero,15334 <___svfiprintf_internal_r+0x9cc>
   14db0:	d9002417 	ldw	r4,144(sp)
   14db4:	d9402017 	ldw	r5,128(sp)
   14db8:	d8001d85 	stb	zero,118(sp)
   14dbc:	20c00204 	addi	r3,r4,8
   14dc0:	24800017 	ldw	r18,0(r4)
   14dc4:	25000117 	ldw	r20,4(r4)
   14dc8:	28030f16 	blt	r5,zero,15a08 <___svfiprintf_internal_r+0x10a0>
   14dcc:	013fdfc4 	movi	r4,-129
   14dd0:	9504b03a 	or	r2,r18,r20
   14dd4:	d8c02415 	stw	r3,144(sp)
   14dd8:	8120703a 	and	r16,r16,r4
   14ddc:	002b883a 	mov	r21,zero
   14de0:	1000cd1e 	bne	r2,zero,15118 <___svfiprintf_internal_r+0x7b0>
   14de4:	d8c02017 	ldw	r3,128(sp)
   14de8:	1803141e 	bne	r3,zero,15a3c <___svfiprintf_internal_r+0x10d4>
   14dec:	d8002015 	stw	zero,128(sp)
   14df0:	0029883a 	mov	r20,zero
   14df4:	dc401a04 	addi	r17,sp,104
   14df8:	dc802017 	ldw	r18,128(sp)
   14dfc:	9500010e 	bge	r18,r20,14e04 <___svfiprintf_internal_r+0x49c>
   14e00:	a025883a 	mov	r18,r20
   14e04:	ad403fcc 	andi	r21,r21,255
   14e08:	ad40201c 	xori	r21,r21,128
   14e0c:	ad7fe004 	addi	r21,r21,-128
   14e10:	a8003f26 	beq	r21,zero,14f10 <___svfiprintf_internal_r+0x5a8>
   14e14:	94800044 	addi	r18,r18,1
   14e18:	00003d06 	br	14f10 <___svfiprintf_internal_r+0x5a8>
   14e1c:	00c00044 	movi	r3,1
   14e20:	d8c02105 	stb	r3,132(sp)
   14e24:	05400ac4 	movi	r21,43
   14e28:	98c00007 	ldb	r3,0(r19)
   14e2c:	003f1a06 	br	14a98 <__alt_mem_epcs_flash_controller_0+0xff813a98>
   14e30:	8821883a 	mov	r16,r17
   14e34:	dc402103 	ldbu	r17,132(sp)
   14e38:	b811883a 	mov	r8,r23
   14e3c:	8c403fcc 	andi	r17,r17,255
   14e40:	8803a71e 	bne	r17,zero,15ce0 <___svfiprintf_internal_r+0x1378>
   14e44:	8080080c 	andi	r2,r16,32
   14e48:	10015726 	beq	r2,zero,153a8 <___svfiprintf_internal_r+0xa40>
   14e4c:	d8c02417 	ldw	r3,144(sp)
   14e50:	d9002017 	ldw	r4,128(sp)
   14e54:	d8001d85 	stb	zero,118(sp)
   14e58:	18800204 	addi	r2,r3,8
   14e5c:	1c800017 	ldw	r18,0(r3)
   14e60:	1d000117 	ldw	r20,4(r3)
   14e64:	2002db16 	blt	r4,zero,159d4 <___svfiprintf_internal_r+0x106c>
   14e68:	013fdfc4 	movi	r4,-129
   14e6c:	9506b03a 	or	r3,r18,r20
   14e70:	d8802415 	stw	r2,144(sp)
   14e74:	8120703a 	and	r16,r16,r4
   14e78:	18015826 	beq	r3,zero,153dc <___svfiprintf_internal_r+0xa74>
   14e7c:	002b883a 	mov	r21,zero
   14e80:	dc401a04 	addi	r17,sp,104
   14e84:	9006d0fa 	srli	r3,r18,3
   14e88:	a008977a 	slli	r4,r20,29
   14e8c:	a028d0fa 	srli	r20,r20,3
   14e90:	948001cc 	andi	r18,r18,7
   14e94:	90800c04 	addi	r2,r18,48
   14e98:	8c7fffc4 	addi	r17,r17,-1
   14e9c:	20e4b03a 	or	r18,r4,r3
   14ea0:	88800005 	stb	r2,0(r17)
   14ea4:	9506b03a 	or	r3,r18,r20
   14ea8:	183ff61e 	bne	r3,zero,14e84 <__alt_mem_epcs_flash_controller_0+0xff813e84>
   14eac:	80c0004c 	andi	r3,r16,1
   14eb0:	18028926 	beq	r3,zero,158d8 <___svfiprintf_internal_r+0xf70>
   14eb4:	10803fcc 	andi	r2,r2,255
   14eb8:	1080201c 	xori	r2,r2,128
   14ebc:	10bfe004 	addi	r2,r2,-128
   14ec0:	00c00c04 	movi	r3,48
   14ec4:	10ffb026 	beq	r2,r3,14d88 <__alt_mem_epcs_flash_controller_0+0xff813d88>
   14ec8:	88ffffc5 	stb	r3,-1(r17)
   14ecc:	d8c01e17 	ldw	r3,120(sp)
   14ed0:	88bfffc4 	addi	r2,r17,-1
   14ed4:	1023883a 	mov	r17,r2
   14ed8:	18a9c83a 	sub	r20,r3,r2
   14edc:	003fc606 	br	14df8 <__alt_mem_epcs_flash_controller_0+0xff813df8>
   14ee0:	d8c02417 	ldw	r3,144(sp)
   14ee4:	04800044 	movi	r18,1
   14ee8:	8821883a 	mov	r16,r17
   14eec:	18800017 	ldw	r2,0(r3)
   14ef0:	18c00104 	addi	r3,r3,4
   14ef4:	b811883a 	mov	r8,r23
   14ef8:	d8001d85 	stb	zero,118(sp)
   14efc:	d8801005 	stb	r2,64(sp)
   14f00:	d8c02415 	stw	r3,144(sp)
   14f04:	9029883a 	mov	r20,r18
   14f08:	dc401004 	addi	r17,sp,64
   14f0c:	d8002015 	stw	zero,128(sp)
   14f10:	80c0008c 	andi	r3,r16,2
   14f14:	d8c02115 	stw	r3,132(sp)
   14f18:	18000126 	beq	r3,zero,14f20 <___svfiprintf_internal_r+0x5b8>
   14f1c:	94800084 	addi	r18,r18,2
   14f20:	80c0210c 	andi	r3,r16,132
   14f24:	d8c02215 	stw	r3,136(sp)
   14f28:	1801321e 	bne	r3,zero,153f4 <___svfiprintf_internal_r+0xa8c>
   14f2c:	d9002517 	ldw	r4,148(sp)
   14f30:	24b9c83a 	sub	fp,r4,r18
   14f34:	07012f0e 	bge	zero,fp,153f4 <___svfiprintf_internal_r+0xa8c>
   14f38:	02400404 	movi	r9,16
   14f3c:	d8c01c17 	ldw	r3,112(sp)
   14f40:	d8801b17 	ldw	r2,108(sp)
   14f44:	4f03250e 	bge	r9,fp,15bdc <___svfiprintf_internal_r+0x1274>
   14f48:	010000b4 	movhi	r4,2
   14f4c:	2138e384 	addi	r4,r4,-7282
   14f50:	dc002a15 	stw	r16,168(sp)
   14f54:	dc402b15 	stw	r17,172(sp)
   14f58:	d9002815 	stw	r4,160(sp)
   14f5c:	e023883a 	mov	r17,fp
   14f60:	482f883a 	mov	r23,r9
   14f64:	9839883a 	mov	fp,r19
   14f68:	054001c4 	movi	r21,7
   14f6c:	9027883a 	mov	r19,r18
   14f70:	dc002717 	ldw	r16,156(sp)
   14f74:	dc802317 	ldw	r18,140(sp)
   14f78:	00000306 	br	14f88 <___svfiprintf_internal_r+0x620>
   14f7c:	8c7ffc04 	addi	r17,r17,-16
   14f80:	42000204 	addi	r8,r8,8
   14f84:	bc40130e 	bge	r23,r17,14fd4 <___svfiprintf_internal_r+0x66c>
   14f88:	014000b4 	movhi	r5,2
   14f8c:	18c00404 	addi	r3,r3,16
   14f90:	10800044 	addi	r2,r2,1
   14f94:	2978e384 	addi	r5,r5,-7282
   14f98:	41400015 	stw	r5,0(r8)
   14f9c:	45c00115 	stw	r23,4(r8)
   14fa0:	d8c01c15 	stw	r3,112(sp)
   14fa4:	d8801b15 	stw	r2,108(sp)
   14fa8:	a8bff40e 	bge	r21,r2,14f7c <__alt_mem_epcs_flash_controller_0+0xff813f7c>
   14fac:	d9801a04 	addi	r6,sp,104
   14fb0:	900b883a 	mov	r5,r18
   14fb4:	8009883a 	mov	r4,r16
   14fb8:	00147980 	call	14798 <__ssprint_r>
   14fbc:	1001aa1e 	bne	r2,zero,15668 <___svfiprintf_internal_r+0xd00>
   14fc0:	8c7ffc04 	addi	r17,r17,-16
   14fc4:	d8c01c17 	ldw	r3,112(sp)
   14fc8:	d8801b17 	ldw	r2,108(sp)
   14fcc:	d811883a 	mov	r8,sp
   14fd0:	bc7fed16 	blt	r23,r17,14f88 <__alt_mem_epcs_flash_controller_0+0xff813f88>
   14fd4:	9825883a 	mov	r18,r19
   14fd8:	dc002a17 	ldw	r16,168(sp)
   14fdc:	e027883a 	mov	r19,fp
   14fe0:	8839883a 	mov	fp,r17
   14fe4:	dc402b17 	ldw	r17,172(sp)
   14fe8:	d9002817 	ldw	r4,160(sp)
   14fec:	e0c7883a 	add	r3,fp,r3
   14ff0:	10800044 	addi	r2,r2,1
   14ff4:	41000015 	stw	r4,0(r8)
   14ff8:	47000115 	stw	fp,4(r8)
   14ffc:	d8c01c15 	stw	r3,112(sp)
   15000:	d8801b15 	stw	r2,108(sp)
   15004:	010001c4 	movi	r4,7
   15008:	20821616 	blt	r4,r2,15864 <___svfiprintf_internal_r+0xefc>
   1500c:	42000204 	addi	r8,r8,8
   15010:	0000fa06 	br	153fc <___svfiprintf_internal_r+0xa94>
   15014:	8821883a 	mov	r16,r17
   15018:	dc402103 	ldbu	r17,132(sp)
   1501c:	b811883a 	mov	r8,r23
   15020:	8c403fcc 	andi	r17,r17,255
   15024:	8803361e 	bne	r17,zero,15d00 <___svfiprintf_internal_r+0x1398>
   15028:	014000b4 	movhi	r5,2
   1502c:	29776a04 	addi	r5,r5,-8792
   15030:	d9402915 	stw	r5,164(sp)
   15034:	8080080c 	andi	r2,r16,32
   15038:	103f331e 	bne	r2,zero,14d08 <__alt_mem_epcs_flash_controller_0+0xff813d08>
   1503c:	8080040c 	andi	r2,r16,16
   15040:	1002551e 	bne	r2,zero,15998 <___svfiprintf_internal_r+0x1030>
   15044:	8080100c 	andi	r2,r16,64
   15048:	1002a626 	beq	r2,zero,15ae4 <___svfiprintf_internal_r+0x117c>
   1504c:	d8802417 	ldw	r2,144(sp)
   15050:	0029883a 	mov	r20,zero
   15054:	1480000b 	ldhu	r18,0(r2)
   15058:	10800104 	addi	r2,r2,4
   1505c:	d8802415 	stw	r2,144(sp)
   15060:	003f2e06 	br	14d1c <__alt_mem_epcs_flash_controller_0+0xff813d1c>
   15064:	8821883a 	mov	r16,r17
   15068:	dc402103 	ldbu	r17,132(sp)
   1506c:	b811883a 	mov	r8,r23
   15070:	8c403fcc 	andi	r17,r17,255
   15074:	88030b1e 	bne	r17,zero,15ca4 <___svfiprintf_internal_r+0x133c>
   15078:	8080080c 	andi	r2,r16,32
   1507c:	1002271e 	bne	r2,zero,1591c <___svfiprintf_internal_r+0xfb4>
   15080:	8080040c 	andi	r2,r16,16
   15084:	10028e26 	beq	r2,zero,15ac0 <___svfiprintf_internal_r+0x1158>
   15088:	d8c02417 	ldw	r3,144(sp)
   1508c:	d9002617 	ldw	r4,152(sp)
   15090:	18800017 	ldw	r2,0(r3)
   15094:	18c00104 	addi	r3,r3,4
   15098:	d8c02415 	stw	r3,144(sp)
   1509c:	11000015 	stw	r4,0(r2)
   150a0:	003e5306 	br	149f0 <__alt_mem_epcs_flash_controller_0+0xff8139f0>
   150a4:	98c00007 	ldb	r3,0(r19)
   150a8:	01401b04 	movi	r5,108
   150ac:	19424f26 	beq	r3,r5,159ec <___svfiprintf_internal_r+0x1084>
   150b0:	8c400414 	ori	r17,r17,16
   150b4:	003e7806 	br	14a98 <__alt_mem_epcs_flash_controller_0+0xff813a98>
   150b8:	8c401014 	ori	r17,r17,64
   150bc:	98c00007 	ldb	r3,0(r19)
   150c0:	003e7506 	br	14a98 <__alt_mem_epcs_flash_controller_0+0xff813a98>
   150c4:	8821883a 	mov	r16,r17
   150c8:	dc402103 	ldbu	r17,132(sp)
   150cc:	b811883a 	mov	r8,r23
   150d0:	8c403fcc 	andi	r17,r17,255
   150d4:	8802fe1e 	bne	r17,zero,15cd0 <___svfiprintf_internal_r+0x1368>
   150d8:	8080080c 	andi	r2,r16,32
   150dc:	10004626 	beq	r2,zero,151f8 <___svfiprintf_internal_r+0x890>
   150e0:	d9002417 	ldw	r4,144(sp)
   150e4:	20800117 	ldw	r2,4(r4)
   150e8:	24800017 	ldw	r18,0(r4)
   150ec:	21000204 	addi	r4,r4,8
   150f0:	d9002415 	stw	r4,144(sp)
   150f4:	1029883a 	mov	r20,r2
   150f8:	10004a16 	blt	r2,zero,15224 <___svfiprintf_internal_r+0x8bc>
   150fc:	d9002017 	ldw	r4,128(sp)
   15100:	dd401d83 	ldbu	r21,118(sp)
   15104:	2001eb16 	blt	r4,zero,158b4 <___svfiprintf_internal_r+0xf4c>
   15108:	00ffdfc4 	movi	r3,-129
   1510c:	9504b03a 	or	r2,r18,r20
   15110:	80e0703a 	and	r16,r16,r3
   15114:	103f3326 	beq	r2,zero,14de4 <__alt_mem_epcs_flash_controller_0+0xff813de4>
   15118:	a0009426 	beq	r20,zero,1536c <___svfiprintf_internal_r+0xa04>
   1511c:	dc401a04 	addi	r17,sp,104
   15120:	402f883a 	mov	r23,r8
   15124:	9009883a 	mov	r4,r18
   15128:	a00b883a 	mov	r5,r20
   1512c:	01800284 	movi	r6,10
   15130:	000f883a 	mov	r7,zero
   15134:	001666c0 	call	1666c <__umoddi3>
   15138:	10800c04 	addi	r2,r2,48
   1513c:	8c7fffc4 	addi	r17,r17,-1
   15140:	9009883a 	mov	r4,r18
   15144:	a00b883a 	mov	r5,r20
   15148:	88800005 	stb	r2,0(r17)
   1514c:	01800284 	movi	r6,10
   15150:	000f883a 	mov	r7,zero
   15154:	00160700 	call	16070 <__udivdi3>
   15158:	1025883a 	mov	r18,r2
   1515c:	10c4b03a 	or	r2,r2,r3
   15160:	1829883a 	mov	r20,r3
   15164:	103fef1e 	bne	r2,zero,15124 <__alt_mem_epcs_flash_controller_0+0xff814124>
   15168:	d9001e17 	ldw	r4,120(sp)
   1516c:	b811883a 	mov	r8,r23
   15170:	2469c83a 	sub	r20,r4,r17
   15174:	003f2006 	br	14df8 <__alt_mem_epcs_flash_controller_0+0xff813df8>
   15178:	d8802417 	ldw	r2,144(sp)
   1517c:	8821883a 	mov	r16,r17
   15180:	d8001d85 	stb	zero,118(sp)
   15184:	14400017 	ldw	r17,0(r2)
   15188:	b811883a 	mov	r8,r23
   1518c:	15c00104 	addi	r23,r2,4
   15190:	88026c26 	beq	r17,zero,15b44 <___svfiprintf_internal_r+0x11dc>
   15194:	d8c02017 	ldw	r3,128(sp)
   15198:	18025f16 	blt	r3,zero,15b18 <___svfiprintf_internal_r+0x11b0>
   1519c:	180d883a 	mov	r6,r3
   151a0:	000b883a 	mov	r5,zero
   151a4:	8809883a 	mov	r4,r17
   151a8:	da002d15 	stw	r8,180(sp)
   151ac:	000a2800 	call	a280 <memchr>
   151b0:	da002d17 	ldw	r8,180(sp)
   151b4:	1002a526 	beq	r2,zero,15c4c <___svfiprintf_internal_r+0x12e4>
   151b8:	1469c83a 	sub	r20,r2,r17
   151bc:	dd401d83 	ldbu	r21,118(sp)
   151c0:	ddc02415 	stw	r23,144(sp)
   151c4:	d8002015 	stw	zero,128(sp)
   151c8:	003f0b06 	br	14df8 <__alt_mem_epcs_flash_controller_0+0xff813df8>
   151cc:	8c400814 	ori	r17,r17,32
   151d0:	98c00007 	ldb	r3,0(r19)
   151d4:	003e3006 	br	14a98 <__alt_mem_epcs_flash_controller_0+0xff813a98>
   151d8:	8821883a 	mov	r16,r17
   151dc:	dc402103 	ldbu	r17,132(sp)
   151e0:	b811883a 	mov	r8,r23
   151e4:	8c403fcc 	andi	r17,r17,255
   151e8:	8802b01e 	bne	r17,zero,15cac <___svfiprintf_internal_r+0x1344>
   151ec:	84000414 	ori	r16,r16,16
   151f0:	8080080c 	andi	r2,r16,32
   151f4:	103fba1e 	bne	r2,zero,150e0 <__alt_mem_epcs_flash_controller_0+0xff8140e0>
   151f8:	8080040c 	andi	r2,r16,16
   151fc:	1001df1e 	bne	r2,zero,1597c <___svfiprintf_internal_r+0x1014>
   15200:	8080100c 	andi	r2,r16,64
   15204:	10023d26 	beq	r2,zero,15afc <___svfiprintf_internal_r+0x1194>
   15208:	d8802417 	ldw	r2,144(sp)
   1520c:	1480000f 	ldh	r18,0(r2)
   15210:	10800104 	addi	r2,r2,4
   15214:	d8802415 	stw	r2,144(sp)
   15218:	9029d7fa 	srai	r20,r18,31
   1521c:	a005883a 	mov	r2,r20
   15220:	103fb60e 	bge	r2,zero,150fc <__alt_mem_epcs_flash_controller_0+0xff8140fc>
   15224:	d9402017 	ldw	r5,128(sp)
   15228:	04a5c83a 	sub	r18,zero,r18
   1522c:	05400b44 	movi	r21,45
   15230:	9004c03a 	cmpne	r2,r18,zero
   15234:	0529c83a 	sub	r20,zero,r20
   15238:	dd401d85 	stb	r21,118(sp)
   1523c:	a0a9c83a 	sub	r20,r20,r2
   15240:	28026c16 	blt	r5,zero,15bf4 <___svfiprintf_internal_r+0x128c>
   15244:	00bfdfc4 	movi	r2,-129
   15248:	80a0703a 	and	r16,r16,r2
   1524c:	a03fb31e 	bne	r20,zero,1511c <__alt_mem_epcs_flash_controller_0+0xff81411c>
   15250:	00004606 	br	1536c <___svfiprintf_internal_r+0xa04>
   15254:	9839883a 	mov	fp,r19
   15258:	d8002515 	stw	zero,148(sp)
   1525c:	1c3ff404 	addi	r16,r3,-48
   15260:	0009883a 	mov	r4,zero
   15264:	01400284 	movi	r5,10
   15268:	00024440 	call	2444 <__mulsi3>
   1526c:	e0c00007 	ldb	r3,0(fp)
   15270:	8089883a 	add	r4,r16,r2
   15274:	9cc00044 	addi	r19,r19,1
   15278:	1c3ff404 	addi	r16,r3,-48
   1527c:	9839883a 	mov	fp,r19
   15280:	a43ff82e 	bgeu	r20,r16,15264 <__alt_mem_epcs_flash_controller_0+0xff814264>
   15284:	d9002515 	stw	r4,148(sp)
   15288:	18bff804 	addi	r2,r3,-32
   1528c:	90be052e 	bgeu	r18,r2,14aa4 <__alt_mem_epcs_flash_controller_0+0xff813aa4>
   15290:	8821883a 	mov	r16,r17
   15294:	dc402103 	ldbu	r17,132(sp)
   15298:	b811883a 	mov	r8,r23
   1529c:	8c403fcc 	andi	r17,r17,255
   152a0:	88028d1e 	bne	r17,zero,15cd8 <___svfiprintf_internal_r+0x1370>
   152a4:	1800ea26 	beq	r3,zero,15650 <___svfiprintf_internal_r+0xce8>
   152a8:	04800044 	movi	r18,1
   152ac:	d8c01005 	stb	r3,64(sp)
   152b0:	d8001d85 	stb	zero,118(sp)
   152b4:	9029883a 	mov	r20,r18
   152b8:	dc401004 	addi	r17,sp,64
   152bc:	003f1306 	br	14f0c <__alt_mem_epcs_flash_controller_0+0xff813f0c>
   152c0:	8c402014 	ori	r17,r17,128
   152c4:	98c00007 	ldb	r3,0(r19)
   152c8:	003df306 	br	14a98 <__alt_mem_epcs_flash_controller_0+0xff813a98>
   152cc:	98c00007 	ldb	r3,0(r19)
   152d0:	01000a84 	movi	r4,42
   152d4:	9f000044 	addi	fp,r19,1
   152d8:	19026326 	beq	r3,r4,15c68 <___svfiprintf_internal_r+0x1300>
   152dc:	1c3ff404 	addi	r16,r3,-48
   152e0:	0009883a 	mov	r4,zero
   152e4:	a4025636 	bltu	r20,r16,15c40 <___svfiprintf_internal_r+0x12d8>
   152e8:	01400284 	movi	r5,10
   152ec:	00024440 	call	2444 <__mulsi3>
   152f0:	e0c00007 	ldb	r3,0(fp)
   152f4:	1409883a 	add	r4,r2,r16
   152f8:	e4c00044 	addi	r19,fp,1
   152fc:	1c3ff404 	addi	r16,r3,-48
   15300:	9839883a 	mov	fp,r19
   15304:	a43ff82e 	bgeu	r20,r16,152e8 <__alt_mem_epcs_flash_controller_0+0xff8142e8>
   15308:	20020c16 	blt	r4,zero,15b3c <___svfiprintf_internal_r+0x11d4>
   1530c:	d9002015 	stw	r4,128(sp)
   15310:	003de206 	br	14a9c <__alt_mem_epcs_flash_controller_0+0xff813a9c>
   15314:	8821883a 	mov	r16,r17
   15318:	dc402103 	ldbu	r17,132(sp)
   1531c:	b811883a 	mov	r8,r23
   15320:	8c403fcc 	andi	r17,r17,255
   15324:	8802721e 	bne	r17,zero,15cf0 <___svfiprintf_internal_r+0x1388>
   15328:	84000414 	ori	r16,r16,16
   1532c:	8080080c 	andi	r2,r16,32
   15330:	103e9f1e 	bne	r2,zero,14db0 <__alt_mem_epcs_flash_controller_0+0xff813db0>
   15334:	8080040c 	andi	r2,r16,16
   15338:	10015326 	beq	r2,zero,15888 <___svfiprintf_internal_r+0xf20>
   1533c:	d8c02417 	ldw	r3,144(sp)
   15340:	d9002017 	ldw	r4,128(sp)
   15344:	d8001d85 	stb	zero,118(sp)
   15348:	18800104 	addi	r2,r3,4
   1534c:	1c800017 	ldw	r18,0(r3)
   15350:	0029883a 	mov	r20,zero
   15354:	20015516 	blt	r4,zero,158ac <___svfiprintf_internal_r+0xf44>
   15358:	00ffdfc4 	movi	r3,-129
   1535c:	d8802415 	stw	r2,144(sp)
   15360:	80e0703a 	and	r16,r16,r3
   15364:	002b883a 	mov	r21,zero
   15368:	903e9e26 	beq	r18,zero,14de4 <__alt_mem_epcs_flash_controller_0+0xff813de4>
   1536c:	00800244 	movi	r2,9
   15370:	14bf6a36 	bltu	r2,r18,1511c <__alt_mem_epcs_flash_controller_0+0xff81411c>
   15374:	94800c04 	addi	r18,r18,48
   15378:	dc8019c5 	stb	r18,103(sp)
   1537c:	dd002c17 	ldw	r20,176(sp)
   15380:	dc4019c4 	addi	r17,sp,103
   15384:	003e9c06 	br	14df8 <__alt_mem_epcs_flash_controller_0+0xff813df8>
   15388:	8821883a 	mov	r16,r17
   1538c:	dc402103 	ldbu	r17,132(sp)
   15390:	b811883a 	mov	r8,r23
   15394:	8c403fcc 	andi	r17,r17,255
   15398:	8802571e 	bne	r17,zero,15cf8 <___svfiprintf_internal_r+0x1390>
   1539c:	84000414 	ori	r16,r16,16
   153a0:	8080080c 	andi	r2,r16,32
   153a4:	103ea91e 	bne	r2,zero,14e4c <__alt_mem_epcs_flash_controller_0+0xff813e4c>
   153a8:	8080040c 	andi	r2,r16,16
   153ac:	10018026 	beq	r2,zero,159b0 <___svfiprintf_internal_r+0x1048>
   153b0:	d9402417 	ldw	r5,144(sp)
   153b4:	d8c02017 	ldw	r3,128(sp)
   153b8:	d8001d85 	stb	zero,118(sp)
   153bc:	28800104 	addi	r2,r5,4
   153c0:	2c800017 	ldw	r18,0(r5)
   153c4:	0029883a 	mov	r20,zero
   153c8:	18018216 	blt	r3,zero,159d4 <___svfiprintf_internal_r+0x106c>
   153cc:	00ffdfc4 	movi	r3,-129
   153d0:	d8802415 	stw	r2,144(sp)
   153d4:	80e0703a 	and	r16,r16,r3
   153d8:	903ea81e 	bne	r18,zero,14e7c <__alt_mem_epcs_flash_controller_0+0xff813e7c>
   153dc:	d8802017 	ldw	r2,128(sp)
   153e0:	002b883a 	mov	r21,zero
   153e4:	1001f226 	beq	r2,zero,15bb0 <___svfiprintf_internal_r+0x1248>
   153e8:	0025883a 	mov	r18,zero
   153ec:	0029883a 	mov	r20,zero
   153f0:	003ea306 	br	14e80 <__alt_mem_epcs_flash_controller_0+0xff813e80>
   153f4:	d8c01c17 	ldw	r3,112(sp)
   153f8:	d8801b17 	ldw	r2,108(sp)
   153fc:	d9001d87 	ldb	r4,118(sp)
   15400:	20000b26 	beq	r4,zero,15430 <___svfiprintf_internal_r+0xac8>
   15404:	d9001d84 	addi	r4,sp,118
   15408:	18c00044 	addi	r3,r3,1
   1540c:	10800044 	addi	r2,r2,1
   15410:	41000015 	stw	r4,0(r8)
   15414:	01000044 	movi	r4,1
   15418:	41000115 	stw	r4,4(r8)
   1541c:	d8c01c15 	stw	r3,112(sp)
   15420:	d8801b15 	stw	r2,108(sp)
   15424:	010001c4 	movi	r4,7
   15428:	2080f316 	blt	r4,r2,157f8 <___svfiprintf_internal_r+0xe90>
   1542c:	42000204 	addi	r8,r8,8
   15430:	d9402117 	ldw	r5,132(sp)
   15434:	28000b26 	beq	r5,zero,15464 <___svfiprintf_internal_r+0xafc>
   15438:	d9001d04 	addi	r4,sp,116
   1543c:	18c00084 	addi	r3,r3,2
   15440:	10800044 	addi	r2,r2,1
   15444:	41000015 	stw	r4,0(r8)
   15448:	01000084 	movi	r4,2
   1544c:	41000115 	stw	r4,4(r8)
   15450:	d8c01c15 	stw	r3,112(sp)
   15454:	d8801b15 	stw	r2,108(sp)
   15458:	010001c4 	movi	r4,7
   1545c:	2080ef16 	blt	r4,r2,1581c <___svfiprintf_internal_r+0xeb4>
   15460:	42000204 	addi	r8,r8,8
   15464:	d9402217 	ldw	r5,136(sp)
   15468:	01002004 	movi	r4,128
   1546c:	29008f26 	beq	r5,r4,156ac <___svfiprintf_internal_r+0xd44>
   15470:	d9002017 	ldw	r4,128(sp)
   15474:	252fc83a 	sub	r23,r4,r20
   15478:	05c0310e 	bge	zero,r23,15540 <___svfiprintf_internal_r+0xbd8>
   1547c:	07000404 	movi	fp,16
   15480:	e5c17d0e 	bge	fp,r23,15a78 <___svfiprintf_internal_r+0x1110>
   15484:	010000b4 	movhi	r4,2
   15488:	2138df84 	addi	r4,r4,-7298
   1548c:	dc002015 	stw	r16,128(sp)
   15490:	dc402215 	stw	r17,136(sp)
   15494:	d9002115 	stw	r4,132(sp)
   15498:	b823883a 	mov	r17,r23
   1549c:	054001c4 	movi	r21,7
   154a0:	982f883a 	mov	r23,r19
   154a4:	dc002717 	ldw	r16,156(sp)
   154a8:	9027883a 	mov	r19,r18
   154ac:	dc802317 	ldw	r18,140(sp)
   154b0:	00000306 	br	154c0 <___svfiprintf_internal_r+0xb58>
   154b4:	8c7ffc04 	addi	r17,r17,-16
   154b8:	42000204 	addi	r8,r8,8
   154bc:	e440110e 	bge	fp,r17,15504 <___svfiprintf_internal_r+0xb9c>
   154c0:	18c00404 	addi	r3,r3,16
   154c4:	10800044 	addi	r2,r2,1
   154c8:	45800015 	stw	r22,0(r8)
   154cc:	47000115 	stw	fp,4(r8)
   154d0:	d8c01c15 	stw	r3,112(sp)
   154d4:	d8801b15 	stw	r2,108(sp)
   154d8:	a8bff60e 	bge	r21,r2,154b4 <__alt_mem_epcs_flash_controller_0+0xff8144b4>
   154dc:	d9801a04 	addi	r6,sp,104
   154e0:	900b883a 	mov	r5,r18
   154e4:	8009883a 	mov	r4,r16
   154e8:	00147980 	call	14798 <__ssprint_r>
   154ec:	10005e1e 	bne	r2,zero,15668 <___svfiprintf_internal_r+0xd00>
   154f0:	8c7ffc04 	addi	r17,r17,-16
   154f4:	d8c01c17 	ldw	r3,112(sp)
   154f8:	d8801b17 	ldw	r2,108(sp)
   154fc:	d811883a 	mov	r8,sp
   15500:	e47fef16 	blt	fp,r17,154c0 <__alt_mem_epcs_flash_controller_0+0xff8144c0>
   15504:	9825883a 	mov	r18,r19
   15508:	dc002017 	ldw	r16,128(sp)
   1550c:	b827883a 	mov	r19,r23
   15510:	882f883a 	mov	r23,r17
   15514:	dc402217 	ldw	r17,136(sp)
   15518:	d9402117 	ldw	r5,132(sp)
   1551c:	1dc7883a 	add	r3,r3,r23
   15520:	10800044 	addi	r2,r2,1
   15524:	41400015 	stw	r5,0(r8)
   15528:	45c00115 	stw	r23,4(r8)
   1552c:	d8c01c15 	stw	r3,112(sp)
   15530:	d8801b15 	stw	r2,108(sp)
   15534:	010001c4 	movi	r4,7
   15538:	2080a616 	blt	r4,r2,157d4 <___svfiprintf_internal_r+0xe6c>
   1553c:	42000204 	addi	r8,r8,8
   15540:	a0c7883a 	add	r3,r20,r3
   15544:	10800044 	addi	r2,r2,1
   15548:	44400015 	stw	r17,0(r8)
   1554c:	45000115 	stw	r20,4(r8)
   15550:	d8c01c15 	stw	r3,112(sp)
   15554:	d8801b15 	stw	r2,108(sp)
   15558:	010001c4 	movi	r4,7
   1555c:	20808816 	blt	r4,r2,15780 <___svfiprintf_internal_r+0xe18>
   15560:	42000204 	addi	r8,r8,8
   15564:	8400010c 	andi	r16,r16,4
   15568:	80002c26 	beq	r16,zero,1561c <___svfiprintf_internal_r+0xcb4>
   1556c:	d8802517 	ldw	r2,148(sp)
   15570:	14a1c83a 	sub	r16,r2,r18
   15574:	0400290e 	bge	zero,r16,1561c <___svfiprintf_internal_r+0xcb4>
   15578:	04400404 	movi	r17,16
   1557c:	d8801b17 	ldw	r2,108(sp)
   15580:	8c01a70e 	bge	r17,r16,15c20 <___svfiprintf_internal_r+0x12b8>
   15584:	014000b4 	movhi	r5,2
   15588:	2978e384 	addi	r5,r5,-7282
   1558c:	d9402815 	stw	r5,160(sp)
   15590:	050001c4 	movi	r20,7
   15594:	dd402717 	ldw	r21,156(sp)
   15598:	ddc02317 	ldw	r23,140(sp)
   1559c:	00000306 	br	155ac <___svfiprintf_internal_r+0xc44>
   155a0:	843ffc04 	addi	r16,r16,-16
   155a4:	42000204 	addi	r8,r8,8
   155a8:	8c00130e 	bge	r17,r16,155f8 <___svfiprintf_internal_r+0xc90>
   155ac:	010000b4 	movhi	r4,2
   155b0:	18c00404 	addi	r3,r3,16
   155b4:	10800044 	addi	r2,r2,1
   155b8:	2138e384 	addi	r4,r4,-7282
   155bc:	41000015 	stw	r4,0(r8)
   155c0:	44400115 	stw	r17,4(r8)
   155c4:	d8c01c15 	stw	r3,112(sp)
   155c8:	d8801b15 	stw	r2,108(sp)
   155cc:	a0bff40e 	bge	r20,r2,155a0 <__alt_mem_epcs_flash_controller_0+0xff8145a0>
   155d0:	d9801a04 	addi	r6,sp,104
   155d4:	b80b883a 	mov	r5,r23
   155d8:	a809883a 	mov	r4,r21
   155dc:	00147980 	call	14798 <__ssprint_r>
   155e0:	1000211e 	bne	r2,zero,15668 <___svfiprintf_internal_r+0xd00>
   155e4:	843ffc04 	addi	r16,r16,-16
   155e8:	d8c01c17 	ldw	r3,112(sp)
   155ec:	d8801b17 	ldw	r2,108(sp)
   155f0:	d811883a 	mov	r8,sp
   155f4:	8c3fed16 	blt	r17,r16,155ac <__alt_mem_epcs_flash_controller_0+0xff8145ac>
   155f8:	d9402817 	ldw	r5,160(sp)
   155fc:	1c07883a 	add	r3,r3,r16
   15600:	10800044 	addi	r2,r2,1
   15604:	41400015 	stw	r5,0(r8)
   15608:	44000115 	stw	r16,4(r8)
   1560c:	d8c01c15 	stw	r3,112(sp)
   15610:	d8801b15 	stw	r2,108(sp)
   15614:	010001c4 	movi	r4,7
   15618:	2080b516 	blt	r4,r2,158f0 <___svfiprintf_internal_r+0xf88>
   1561c:	d8802517 	ldw	r2,148(sp)
   15620:	1480010e 	bge	r2,r18,15628 <___svfiprintf_internal_r+0xcc0>
   15624:	9005883a 	mov	r2,r18
   15628:	d9002617 	ldw	r4,152(sp)
   1562c:	2089883a 	add	r4,r4,r2
   15630:	d9002615 	stw	r4,152(sp)
   15634:	18005a1e 	bne	r3,zero,157a0 <___svfiprintf_internal_r+0xe38>
   15638:	98800007 	ldb	r2,0(r19)
   1563c:	d8001b15 	stw	zero,108(sp)
   15640:	d811883a 	mov	r8,sp
   15644:	103cec1e 	bne	r2,zero,149f8 <__alt_mem_epcs_flash_controller_0+0xff8139f8>
   15648:	9825883a 	mov	r18,r19
   1564c:	003d0206 	br	14a58 <__alt_mem_epcs_flash_controller_0+0xff813a58>
   15650:	d8801c17 	ldw	r2,112(sp)
   15654:	10000426 	beq	r2,zero,15668 <___svfiprintf_internal_r+0xd00>
   15658:	d9402317 	ldw	r5,140(sp)
   1565c:	d9002717 	ldw	r4,156(sp)
   15660:	d9801a04 	addi	r6,sp,104
   15664:	00147980 	call	14798 <__ssprint_r>
   15668:	d9402317 	ldw	r5,140(sp)
   1566c:	d8802617 	ldw	r2,152(sp)
   15670:	28c0030b 	ldhu	r3,12(r5)
   15674:	18c0100c 	andi	r3,r3,64
   15678:	18015c1e 	bne	r3,zero,15bec <___svfiprintf_internal_r+0x1284>
   1567c:	dfc03717 	ldw	ra,220(sp)
   15680:	df003617 	ldw	fp,216(sp)
   15684:	ddc03517 	ldw	r23,212(sp)
   15688:	dd803417 	ldw	r22,208(sp)
   1568c:	dd403317 	ldw	r21,204(sp)
   15690:	dd003217 	ldw	r20,200(sp)
   15694:	dcc03117 	ldw	r19,196(sp)
   15698:	dc803017 	ldw	r18,192(sp)
   1569c:	dc402f17 	ldw	r17,188(sp)
   156a0:	dc002e17 	ldw	r16,184(sp)
   156a4:	dec03804 	addi	sp,sp,224
   156a8:	f800283a 	ret
   156ac:	d9002517 	ldw	r4,148(sp)
   156b0:	24afc83a 	sub	r23,r4,r18
   156b4:	05ff6e0e 	bge	zero,r23,15470 <__alt_mem_epcs_flash_controller_0+0xff814470>
   156b8:	07000404 	movi	fp,16
   156bc:	e5c15c0e 	bge	fp,r23,15c30 <___svfiprintf_internal_r+0x12c8>
   156c0:	010000b4 	movhi	r4,2
   156c4:	2138df84 	addi	r4,r4,-7298
   156c8:	dc002215 	stw	r16,136(sp)
   156cc:	dc402815 	stw	r17,160(sp)
   156d0:	d9002115 	stw	r4,132(sp)
   156d4:	b823883a 	mov	r17,r23
   156d8:	054001c4 	movi	r21,7
   156dc:	982f883a 	mov	r23,r19
   156e0:	dc002717 	ldw	r16,156(sp)
   156e4:	9027883a 	mov	r19,r18
   156e8:	dc802317 	ldw	r18,140(sp)
   156ec:	00000306 	br	156fc <___svfiprintf_internal_r+0xd94>
   156f0:	8c7ffc04 	addi	r17,r17,-16
   156f4:	42000204 	addi	r8,r8,8
   156f8:	e440110e 	bge	fp,r17,15740 <___svfiprintf_internal_r+0xdd8>
   156fc:	18c00404 	addi	r3,r3,16
   15700:	10800044 	addi	r2,r2,1
   15704:	45800015 	stw	r22,0(r8)
   15708:	47000115 	stw	fp,4(r8)
   1570c:	d8c01c15 	stw	r3,112(sp)
   15710:	d8801b15 	stw	r2,108(sp)
   15714:	a8bff60e 	bge	r21,r2,156f0 <__alt_mem_epcs_flash_controller_0+0xff8146f0>
   15718:	d9801a04 	addi	r6,sp,104
   1571c:	900b883a 	mov	r5,r18
   15720:	8009883a 	mov	r4,r16
   15724:	00147980 	call	14798 <__ssprint_r>
   15728:	103fcf1e 	bne	r2,zero,15668 <__alt_mem_epcs_flash_controller_0+0xff814668>
   1572c:	8c7ffc04 	addi	r17,r17,-16
   15730:	d8c01c17 	ldw	r3,112(sp)
   15734:	d8801b17 	ldw	r2,108(sp)
   15738:	d811883a 	mov	r8,sp
   1573c:	e47fef16 	blt	fp,r17,156fc <__alt_mem_epcs_flash_controller_0+0xff8146fc>
   15740:	9825883a 	mov	r18,r19
   15744:	dc002217 	ldw	r16,136(sp)
   15748:	b827883a 	mov	r19,r23
   1574c:	882f883a 	mov	r23,r17
   15750:	dc402817 	ldw	r17,160(sp)
   15754:	d9402117 	ldw	r5,132(sp)
   15758:	1dc7883a 	add	r3,r3,r23
   1575c:	10800044 	addi	r2,r2,1
   15760:	41400015 	stw	r5,0(r8)
   15764:	45c00115 	stw	r23,4(r8)
   15768:	d8c01c15 	stw	r3,112(sp)
   1576c:	d8801b15 	stw	r2,108(sp)
   15770:	010001c4 	movi	r4,7
   15774:	2080b716 	blt	r4,r2,15a54 <___svfiprintf_internal_r+0x10ec>
   15778:	42000204 	addi	r8,r8,8
   1577c:	003f3c06 	br	15470 <__alt_mem_epcs_flash_controller_0+0xff814470>
   15780:	d9402317 	ldw	r5,140(sp)
   15784:	d9002717 	ldw	r4,156(sp)
   15788:	d9801a04 	addi	r6,sp,104
   1578c:	00147980 	call	14798 <__ssprint_r>
   15790:	103fb51e 	bne	r2,zero,15668 <__alt_mem_epcs_flash_controller_0+0xff814668>
   15794:	d8c01c17 	ldw	r3,112(sp)
   15798:	d811883a 	mov	r8,sp
   1579c:	003f7106 	br	15564 <__alt_mem_epcs_flash_controller_0+0xff814564>
   157a0:	d9402317 	ldw	r5,140(sp)
   157a4:	d9002717 	ldw	r4,156(sp)
   157a8:	d9801a04 	addi	r6,sp,104
   157ac:	00147980 	call	14798 <__ssprint_r>
   157b0:	103fa126 	beq	r2,zero,15638 <__alt_mem_epcs_flash_controller_0+0xff814638>
   157b4:	003fac06 	br	15668 <__alt_mem_epcs_flash_controller_0+0xff814668>
   157b8:	d9402317 	ldw	r5,140(sp)
   157bc:	d9002717 	ldw	r4,156(sp)
   157c0:	d9801a04 	addi	r6,sp,104
   157c4:	00147980 	call	14798 <__ssprint_r>
   157c8:	103fa71e 	bne	r2,zero,15668 <__alt_mem_epcs_flash_controller_0+0xff814668>
   157cc:	d811883a 	mov	r8,sp
   157d0:	003c9e06 	br	14a4c <__alt_mem_epcs_flash_controller_0+0xff813a4c>
   157d4:	d9402317 	ldw	r5,140(sp)
   157d8:	d9002717 	ldw	r4,156(sp)
   157dc:	d9801a04 	addi	r6,sp,104
   157e0:	00147980 	call	14798 <__ssprint_r>
   157e4:	103fa01e 	bne	r2,zero,15668 <__alt_mem_epcs_flash_controller_0+0xff814668>
   157e8:	d8c01c17 	ldw	r3,112(sp)
   157ec:	d8801b17 	ldw	r2,108(sp)
   157f0:	d811883a 	mov	r8,sp
   157f4:	003f5206 	br	15540 <__alt_mem_epcs_flash_controller_0+0xff814540>
   157f8:	d9402317 	ldw	r5,140(sp)
   157fc:	d9002717 	ldw	r4,156(sp)
   15800:	d9801a04 	addi	r6,sp,104
   15804:	00147980 	call	14798 <__ssprint_r>
   15808:	103f971e 	bne	r2,zero,15668 <__alt_mem_epcs_flash_controller_0+0xff814668>
   1580c:	d8c01c17 	ldw	r3,112(sp)
   15810:	d8801b17 	ldw	r2,108(sp)
   15814:	d811883a 	mov	r8,sp
   15818:	003f0506 	br	15430 <__alt_mem_epcs_flash_controller_0+0xff814430>
   1581c:	d9402317 	ldw	r5,140(sp)
   15820:	d9002717 	ldw	r4,156(sp)
   15824:	d9801a04 	addi	r6,sp,104
   15828:	00147980 	call	14798 <__ssprint_r>
   1582c:	103f8e1e 	bne	r2,zero,15668 <__alt_mem_epcs_flash_controller_0+0xff814668>
   15830:	d8c01c17 	ldw	r3,112(sp)
   15834:	d8801b17 	ldw	r2,108(sp)
   15838:	d811883a 	mov	r8,sp
   1583c:	003f0906 	br	15464 <__alt_mem_epcs_flash_controller_0+0xff814464>
   15840:	d9402017 	ldw	r5,128(sp)
   15844:	d8001d85 	stb	zero,118(sp)
   15848:	28007716 	blt	r5,zero,15a28 <___svfiprintf_internal_r+0x10c0>
   1584c:	00ffdfc4 	movi	r3,-129
   15850:	9504b03a 	or	r2,r18,r20
   15854:	80e0703a 	and	r16,r16,r3
   15858:	103d3926 	beq	r2,zero,14d40 <__alt_mem_epcs_flash_controller_0+0xff813d40>
   1585c:	002b883a 	mov	r21,zero
   15860:	003d3c06 	br	14d54 <__alt_mem_epcs_flash_controller_0+0xff813d54>
   15864:	d9402317 	ldw	r5,140(sp)
   15868:	d9002717 	ldw	r4,156(sp)
   1586c:	d9801a04 	addi	r6,sp,104
   15870:	00147980 	call	14798 <__ssprint_r>
   15874:	103f7c1e 	bne	r2,zero,15668 <__alt_mem_epcs_flash_controller_0+0xff814668>
   15878:	d8c01c17 	ldw	r3,112(sp)
   1587c:	d8801b17 	ldw	r2,108(sp)
   15880:	d811883a 	mov	r8,sp
   15884:	003edd06 	br	153fc <__alt_mem_epcs_flash_controller_0+0xff8143fc>
   15888:	8080100c 	andi	r2,r16,64
   1588c:	d8001d85 	stb	zero,118(sp)
   15890:	10008426 	beq	r2,zero,15aa4 <___svfiprintf_internal_r+0x113c>
   15894:	d9402417 	ldw	r5,144(sp)
   15898:	d8c02017 	ldw	r3,128(sp)
   1589c:	0029883a 	mov	r20,zero
   158a0:	28800104 	addi	r2,r5,4
   158a4:	2c80000b 	ldhu	r18,0(r5)
   158a8:	183eab0e 	bge	r3,zero,15358 <__alt_mem_epcs_flash_controller_0+0xff814358>
   158ac:	d8802415 	stw	r2,144(sp)
   158b0:	002b883a 	mov	r21,zero
   158b4:	9504b03a 	or	r2,r18,r20
   158b8:	103e171e 	bne	r2,zero,15118 <__alt_mem_epcs_flash_controller_0+0xff814118>
   158bc:	00800044 	movi	r2,1
   158c0:	10803fcc 	andi	r2,r2,255
   158c4:	00c00044 	movi	r3,1
   158c8:	10c05c26 	beq	r2,r3,15a3c <___svfiprintf_internal_r+0x10d4>
   158cc:	00c00084 	movi	r3,2
   158d0:	10fd1e26 	beq	r2,r3,14d4c <__alt_mem_epcs_flash_controller_0+0xff813d4c>
   158d4:	003ec406 	br	153e8 <__alt_mem_epcs_flash_controller_0+0xff8143e8>
   158d8:	d9401e17 	ldw	r5,120(sp)
   158dc:	2c69c83a 	sub	r20,r5,r17
   158e0:	003d4506 	br	14df8 <__alt_mem_epcs_flash_controller_0+0xff813df8>
   158e4:	d8802415 	stw	r2,144(sp)
   158e8:	98c00007 	ldb	r3,0(r19)
   158ec:	003c6a06 	br	14a98 <__alt_mem_epcs_flash_controller_0+0xff813a98>
   158f0:	d9402317 	ldw	r5,140(sp)
   158f4:	d9002717 	ldw	r4,156(sp)
   158f8:	d9801a04 	addi	r6,sp,104
   158fc:	00147980 	call	14798 <__ssprint_r>
   15900:	103f591e 	bne	r2,zero,15668 <__alt_mem_epcs_flash_controller_0+0xff814668>
   15904:	d8c01c17 	ldw	r3,112(sp)
   15908:	003f4406 	br	1561c <__alt_mem_epcs_flash_controller_0+0xff81461c>
   1590c:	014000b4 	movhi	r5,2
   15910:	29776f04 	addi	r5,r5,-8772
   15914:	d9402915 	stw	r5,164(sp)
   15918:	003d0906 	br	14d40 <__alt_mem_epcs_flash_controller_0+0xff813d40>
   1591c:	d8c02417 	ldw	r3,144(sp)
   15920:	d9002617 	ldw	r4,152(sp)
   15924:	d9402417 	ldw	r5,144(sp)
   15928:	18800017 	ldw	r2,0(r3)
   1592c:	2007d7fa 	srai	r3,r4,31
   15930:	29400104 	addi	r5,r5,4
   15934:	d9402415 	stw	r5,144(sp)
   15938:	11000015 	stw	r4,0(r2)
   1593c:	10c00115 	stw	r3,4(r2)
   15940:	003c2b06 	br	149f0 <__alt_mem_epcs_flash_controller_0+0xff8139f0>
   15944:	d8c01d45 	stb	r3,117(sp)
   15948:	d8c02017 	ldw	r3,128(sp)
   1594c:	00800c04 	movi	r2,48
   15950:	d8801d05 	stb	r2,116(sp)
   15954:	d8001d85 	stb	zero,118(sp)
   15958:	80800094 	ori	r2,r16,2
   1595c:	1800ac16 	blt	r3,zero,15c10 <___svfiprintf_internal_r+0x12a8>
   15960:	00bfdfc4 	movi	r2,-129
   15964:	80a0703a 	and	r16,r16,r2
   15968:	84000094 	ori	r16,r16,2
   1596c:	002b883a 	mov	r21,zero
   15970:	003cf806 	br	14d54 <__alt_mem_epcs_flash_controller_0+0xff813d54>
   15974:	98c00007 	ldb	r3,0(r19)
   15978:	003c4706 	br	14a98 <__alt_mem_epcs_flash_controller_0+0xff813a98>
   1597c:	d9402417 	ldw	r5,144(sp)
   15980:	2c800017 	ldw	r18,0(r5)
   15984:	29400104 	addi	r5,r5,4
   15988:	d9402415 	stw	r5,144(sp)
   1598c:	9029d7fa 	srai	r20,r18,31
   15990:	a005883a 	mov	r2,r20
   15994:	003dd806 	br	150f8 <__alt_mem_epcs_flash_controller_0+0xff8140f8>
   15998:	d9402417 	ldw	r5,144(sp)
   1599c:	0029883a 	mov	r20,zero
   159a0:	2c800017 	ldw	r18,0(r5)
   159a4:	29400104 	addi	r5,r5,4
   159a8:	d9402415 	stw	r5,144(sp)
   159ac:	003cdb06 	br	14d1c <__alt_mem_epcs_flash_controller_0+0xff813d1c>
   159b0:	8080100c 	andi	r2,r16,64
   159b4:	d8001d85 	stb	zero,118(sp)
   159b8:	10003326 	beq	r2,zero,15a88 <___svfiprintf_internal_r+0x1120>
   159bc:	d9002417 	ldw	r4,144(sp)
   159c0:	d9402017 	ldw	r5,128(sp)
   159c4:	0029883a 	mov	r20,zero
   159c8:	20800104 	addi	r2,r4,4
   159cc:	2480000b 	ldhu	r18,0(r4)
   159d0:	283e7e0e 	bge	r5,zero,153cc <__alt_mem_epcs_flash_controller_0+0xff8143cc>
   159d4:	9506b03a 	or	r3,r18,r20
   159d8:	d8802415 	stw	r2,144(sp)
   159dc:	183d271e 	bne	r3,zero,14e7c <__alt_mem_epcs_flash_controller_0+0xff813e7c>
   159e0:	002b883a 	mov	r21,zero
   159e4:	0005883a 	mov	r2,zero
   159e8:	003fb506 	br	158c0 <__alt_mem_epcs_flash_controller_0+0xff8148c0>
   159ec:	98c00043 	ldbu	r3,1(r19)
   159f0:	8c400814 	ori	r17,r17,32
   159f4:	9cc00044 	addi	r19,r19,1
   159f8:	18c03fcc 	andi	r3,r3,255
   159fc:	18c0201c 	xori	r3,r3,128
   15a00:	18ffe004 	addi	r3,r3,-128
   15a04:	003c2406 	br	14a98 <__alt_mem_epcs_flash_controller_0+0xff813a98>
   15a08:	d8c02415 	stw	r3,144(sp)
   15a0c:	002b883a 	mov	r21,zero
   15a10:	003fa806 	br	158b4 <__alt_mem_epcs_flash_controller_0+0xff8148b4>
   15a14:	010000b4 	movhi	r4,2
   15a18:	21376f04 	addi	r4,r4,-8772
   15a1c:	d9002915 	stw	r4,164(sp)
   15a20:	d8c02415 	stw	r3,144(sp)
   15a24:	1021883a 	mov	r16,r2
   15a28:	9504b03a 	or	r2,r18,r20
   15a2c:	103f8b1e 	bne	r2,zero,1585c <__alt_mem_epcs_flash_controller_0+0xff81485c>
   15a30:	002b883a 	mov	r21,zero
   15a34:	00800084 	movi	r2,2
   15a38:	003fa106 	br	158c0 <__alt_mem_epcs_flash_controller_0+0xff8148c0>
   15a3c:	0025883a 	mov	r18,zero
   15a40:	94800c04 	addi	r18,r18,48
   15a44:	dc8019c5 	stb	r18,103(sp)
   15a48:	dd002c17 	ldw	r20,176(sp)
   15a4c:	dc4019c4 	addi	r17,sp,103
   15a50:	003ce906 	br	14df8 <__alt_mem_epcs_flash_controller_0+0xff813df8>
   15a54:	d9402317 	ldw	r5,140(sp)
   15a58:	d9002717 	ldw	r4,156(sp)
   15a5c:	d9801a04 	addi	r6,sp,104
   15a60:	00147980 	call	14798 <__ssprint_r>
   15a64:	103f001e 	bne	r2,zero,15668 <__alt_mem_epcs_flash_controller_0+0xff814668>
   15a68:	d8c01c17 	ldw	r3,112(sp)
   15a6c:	d8801b17 	ldw	r2,108(sp)
   15a70:	d811883a 	mov	r8,sp
   15a74:	003e7e06 	br	15470 <__alt_mem_epcs_flash_controller_0+0xff814470>
   15a78:	014000b4 	movhi	r5,2
   15a7c:	2978df84 	addi	r5,r5,-7298
   15a80:	d9402115 	stw	r5,132(sp)
   15a84:	003ea406 	br	15518 <__alt_mem_epcs_flash_controller_0+0xff814518>
   15a88:	d8c02417 	ldw	r3,144(sp)
   15a8c:	d9002017 	ldw	r4,128(sp)
   15a90:	0029883a 	mov	r20,zero
   15a94:	18800104 	addi	r2,r3,4
   15a98:	1c800017 	ldw	r18,0(r3)
   15a9c:	203e4b0e 	bge	r4,zero,153cc <__alt_mem_epcs_flash_controller_0+0xff8143cc>
   15aa0:	003fcc06 	br	159d4 <__alt_mem_epcs_flash_controller_0+0xff8149d4>
   15aa4:	d9002417 	ldw	r4,144(sp)
   15aa8:	d9402017 	ldw	r5,128(sp)
   15aac:	0029883a 	mov	r20,zero
   15ab0:	20800104 	addi	r2,r4,4
   15ab4:	24800017 	ldw	r18,0(r4)
   15ab8:	283e270e 	bge	r5,zero,15358 <__alt_mem_epcs_flash_controller_0+0xff814358>
   15abc:	003f7b06 	br	158ac <__alt_mem_epcs_flash_controller_0+0xff8148ac>
   15ac0:	8400100c 	andi	r16,r16,64
   15ac4:	80003326 	beq	r16,zero,15b94 <___svfiprintf_internal_r+0x122c>
   15ac8:	d9402417 	ldw	r5,144(sp)
   15acc:	d8c02617 	ldw	r3,152(sp)
   15ad0:	28800017 	ldw	r2,0(r5)
   15ad4:	29400104 	addi	r5,r5,4
   15ad8:	d9402415 	stw	r5,144(sp)
   15adc:	10c0000d 	sth	r3,0(r2)
   15ae0:	003bc306 	br	149f0 <__alt_mem_epcs_flash_controller_0+0xff8139f0>
   15ae4:	d9002417 	ldw	r4,144(sp)
   15ae8:	0029883a 	mov	r20,zero
   15aec:	24800017 	ldw	r18,0(r4)
   15af0:	21000104 	addi	r4,r4,4
   15af4:	d9002415 	stw	r4,144(sp)
   15af8:	003c8806 	br	14d1c <__alt_mem_epcs_flash_controller_0+0xff813d1c>
   15afc:	d8c02417 	ldw	r3,144(sp)
   15b00:	1c800017 	ldw	r18,0(r3)
   15b04:	18c00104 	addi	r3,r3,4
   15b08:	d8c02415 	stw	r3,144(sp)
   15b0c:	9029d7fa 	srai	r20,r18,31
   15b10:	a005883a 	mov	r2,r20
   15b14:	003d7806 	br	150f8 <__alt_mem_epcs_flash_controller_0+0xff8140f8>
   15b18:	8809883a 	mov	r4,r17
   15b1c:	da002d15 	stw	r8,180(sp)
   15b20:	00033c80 	call	33c8 <strlen>
   15b24:	1029883a 	mov	r20,r2
   15b28:	dd401d83 	ldbu	r21,118(sp)
   15b2c:	ddc02415 	stw	r23,144(sp)
   15b30:	d8002015 	stw	zero,128(sp)
   15b34:	da002d17 	ldw	r8,180(sp)
   15b38:	003caf06 	br	14df8 <__alt_mem_epcs_flash_controller_0+0xff813df8>
   15b3c:	013fffc4 	movi	r4,-1
   15b40:	003df206 	br	1530c <__alt_mem_epcs_flash_controller_0+0xff81430c>
   15b44:	dd002017 	ldw	r20,128(sp)
   15b48:	00800184 	movi	r2,6
   15b4c:	1500012e 	bgeu	r2,r20,15b54 <___svfiprintf_internal_r+0x11ec>
   15b50:	1029883a 	mov	r20,r2
   15b54:	a025883a 	mov	r18,r20
   15b58:	a0004116 	blt	r20,zero,15c60 <___svfiprintf_internal_r+0x12f8>
   15b5c:	044000b4 	movhi	r17,2
   15b60:	ddc02415 	stw	r23,144(sp)
   15b64:	8c777404 	addi	r17,r17,-8752
   15b68:	003ce806 	br	14f0c <__alt_mem_epcs_flash_controller_0+0xff813f0c>
   15b6c:	04001004 	movi	r16,64
   15b70:	800b883a 	mov	r5,r16
   15b74:	000258c0 	call	258c <_malloc_r>
   15b78:	d8c02317 	ldw	r3,140(sp)
   15b7c:	18800015 	stw	r2,0(r3)
   15b80:	18800415 	stw	r2,16(r3)
   15b84:	10004d26 	beq	r2,zero,15cbc <___svfiprintf_internal_r+0x1354>
   15b88:	d9402317 	ldw	r5,140(sp)
   15b8c:	2c000515 	stw	r16,20(r5)
   15b90:	003b8906 	br	149b8 <__alt_mem_epcs_flash_controller_0+0xff8139b8>
   15b94:	d9002417 	ldw	r4,144(sp)
   15b98:	d9402617 	ldw	r5,152(sp)
   15b9c:	20800017 	ldw	r2,0(r4)
   15ba0:	21000104 	addi	r4,r4,4
   15ba4:	d9002415 	stw	r4,144(sp)
   15ba8:	11400015 	stw	r5,0(r2)
   15bac:	003b9006 	br	149f0 <__alt_mem_epcs_flash_controller_0+0xff8139f0>
   15bb0:	8080004c 	andi	r2,r16,1
   15bb4:	002b883a 	mov	r21,zero
   15bb8:	10000526 	beq	r2,zero,15bd0 <___svfiprintf_internal_r+0x1268>
   15bbc:	00800c04 	movi	r2,48
   15bc0:	d88019c5 	stb	r2,103(sp)
   15bc4:	dd002c17 	ldw	r20,176(sp)
   15bc8:	dc4019c4 	addi	r17,sp,103
   15bcc:	003c8a06 	br	14df8 <__alt_mem_epcs_flash_controller_0+0xff813df8>
   15bd0:	0029883a 	mov	r20,zero
   15bd4:	dc401a04 	addi	r17,sp,104
   15bd8:	003c8706 	br	14df8 <__alt_mem_epcs_flash_controller_0+0xff813df8>
   15bdc:	014000b4 	movhi	r5,2
   15be0:	2978e384 	addi	r5,r5,-7282
   15be4:	d9402815 	stw	r5,160(sp)
   15be8:	003cff06 	br	14fe8 <__alt_mem_epcs_flash_controller_0+0xff813fe8>
   15bec:	00bfffc4 	movi	r2,-1
   15bf0:	003ea206 	br	1567c <__alt_mem_epcs_flash_controller_0+0xff81467c>
   15bf4:	00800044 	movi	r2,1
   15bf8:	10803fcc 	andi	r2,r2,255
   15bfc:	00c00044 	movi	r3,1
   15c00:	10fd4526 	beq	r2,r3,15118 <__alt_mem_epcs_flash_controller_0+0xff814118>
   15c04:	00c00084 	movi	r3,2
   15c08:	10fc5226 	beq	r2,r3,14d54 <__alt_mem_epcs_flash_controller_0+0xff813d54>
   15c0c:	003c9c06 	br	14e80 <__alt_mem_epcs_flash_controller_0+0xff813e80>
   15c10:	1021883a 	mov	r16,r2
   15c14:	002b883a 	mov	r21,zero
   15c18:	00800084 	movi	r2,2
   15c1c:	003ff606 	br	15bf8 <__alt_mem_epcs_flash_controller_0+0xff814bf8>
   15c20:	010000b4 	movhi	r4,2
   15c24:	2138e384 	addi	r4,r4,-7282
   15c28:	d9002815 	stw	r4,160(sp)
   15c2c:	003e7206 	br	155f8 <__alt_mem_epcs_flash_controller_0+0xff8145f8>
   15c30:	014000b4 	movhi	r5,2
   15c34:	2978df84 	addi	r5,r5,-7298
   15c38:	d9402115 	stw	r5,132(sp)
   15c3c:	003ec506 	br	15754 <__alt_mem_epcs_flash_controller_0+0xff814754>
   15c40:	e027883a 	mov	r19,fp
   15c44:	d8002015 	stw	zero,128(sp)
   15c48:	003b9406 	br	14a9c <__alt_mem_epcs_flash_controller_0+0xff813a9c>
   15c4c:	dd002017 	ldw	r20,128(sp)
   15c50:	dd401d83 	ldbu	r21,118(sp)
   15c54:	ddc02415 	stw	r23,144(sp)
   15c58:	d8002015 	stw	zero,128(sp)
   15c5c:	003c6606 	br	14df8 <__alt_mem_epcs_flash_controller_0+0xff813df8>
   15c60:	0025883a 	mov	r18,zero
   15c64:	003fbd06 	br	15b5c <__alt_mem_epcs_flash_controller_0+0xff814b5c>
   15c68:	d9402417 	ldw	r5,144(sp)
   15c6c:	d8c02417 	ldw	r3,144(sp)
   15c70:	29400017 	ldw	r5,0(r5)
   15c74:	19000104 	addi	r4,r3,4
   15c78:	d9002415 	stw	r4,144(sp)
   15c7c:	d9402015 	stw	r5,128(sp)
   15c80:	98c00043 	ldbu	r3,1(r19)
   15c84:	e027883a 	mov	r19,fp
   15c88:	283f5b0e 	bge	r5,zero,159f8 <__alt_mem_epcs_flash_controller_0+0xff8149f8>
   15c8c:	18c03fcc 	andi	r3,r3,255
   15c90:	013fffc4 	movi	r4,-1
   15c94:	18c0201c 	xori	r3,r3,128
   15c98:	d9002015 	stw	r4,128(sp)
   15c9c:	18ffe004 	addi	r3,r3,-128
   15ca0:	003b7d06 	br	14a98 <__alt_mem_epcs_flash_controller_0+0xff813a98>
   15ca4:	dd401d85 	stb	r21,118(sp)
   15ca8:	003cf306 	br	15078 <__alt_mem_epcs_flash_controller_0+0xff814078>
   15cac:	dd401d85 	stb	r21,118(sp)
   15cb0:	003d4e06 	br	151ec <__alt_mem_epcs_flash_controller_0+0xff8141ec>
   15cb4:	dd401d85 	stb	r21,118(sp)
   15cb8:	003c0e06 	br	14cf4 <__alt_mem_epcs_flash_controller_0+0xff813cf4>
   15cbc:	d9002717 	ldw	r4,156(sp)
   15cc0:	00800304 	movi	r2,12
   15cc4:	20800015 	stw	r2,0(r4)
   15cc8:	00bfffc4 	movi	r2,-1
   15ccc:	003e6b06 	br	1567c <__alt_mem_epcs_flash_controller_0+0xff81467c>
   15cd0:	dd401d85 	stb	r21,118(sp)
   15cd4:	003d0006 	br	150d8 <__alt_mem_epcs_flash_controller_0+0xff8140d8>
   15cd8:	dd401d85 	stb	r21,118(sp)
   15cdc:	003d7106 	br	152a4 <__alt_mem_epcs_flash_controller_0+0xff8142a4>
   15ce0:	dd401d85 	stb	r21,118(sp)
   15ce4:	003c5706 	br	14e44 <__alt_mem_epcs_flash_controller_0+0xff813e44>
   15ce8:	dd401d85 	stb	r21,118(sp)
   15cec:	003c2e06 	br	14da8 <__alt_mem_epcs_flash_controller_0+0xff813da8>
   15cf0:	dd401d85 	stb	r21,118(sp)
   15cf4:	003d8c06 	br	15328 <__alt_mem_epcs_flash_controller_0+0xff814328>
   15cf8:	dd401d85 	stb	r21,118(sp)
   15cfc:	003da706 	br	1539c <__alt_mem_epcs_flash_controller_0+0xff81439c>
   15d00:	dd401d85 	stb	r21,118(sp)
   15d04:	003cc806 	br	15028 <__alt_mem_epcs_flash_controller_0+0xff814028>

00015d08 <_wcrtomb_r>:
   15d08:	defff604 	addi	sp,sp,-40
   15d0c:	008000b4 	movhi	r2,2
   15d10:	dc800815 	stw	r18,32(sp)
   15d14:	dc400715 	stw	r17,28(sp)
   15d18:	dc000615 	stw	r16,24(sp)
   15d1c:	10802204 	addi	r2,r2,136
   15d20:	dfc00915 	stw	ra,36(sp)
   15d24:	2021883a 	mov	r16,r4
   15d28:	3823883a 	mov	r17,r7
   15d2c:	14800017 	ldw	r18,0(r2)
   15d30:	28001426 	beq	r5,zero,15d84 <_wcrtomb_r+0x7c>
   15d34:	d9400415 	stw	r5,16(sp)
   15d38:	d9800515 	stw	r6,20(sp)
   15d3c:	0009de00 	call	9de0 <__locale_charset>
   15d40:	d9800517 	ldw	r6,20(sp)
   15d44:	d9400417 	ldw	r5,16(sp)
   15d48:	100f883a 	mov	r7,r2
   15d4c:	dc400015 	stw	r17,0(sp)
   15d50:	8009883a 	mov	r4,r16
   15d54:	903ee83a 	callr	r18
   15d58:	00ffffc4 	movi	r3,-1
   15d5c:	10c0031e 	bne	r2,r3,15d6c <_wcrtomb_r+0x64>
   15d60:	88000015 	stw	zero,0(r17)
   15d64:	00c02284 	movi	r3,138
   15d68:	80c00015 	stw	r3,0(r16)
   15d6c:	dfc00917 	ldw	ra,36(sp)
   15d70:	dc800817 	ldw	r18,32(sp)
   15d74:	dc400717 	ldw	r17,28(sp)
   15d78:	dc000617 	ldw	r16,24(sp)
   15d7c:	dec00a04 	addi	sp,sp,40
   15d80:	f800283a 	ret
   15d84:	0009de00 	call	9de0 <__locale_charset>
   15d88:	100f883a 	mov	r7,r2
   15d8c:	dc400015 	stw	r17,0(sp)
   15d90:	000d883a 	mov	r6,zero
   15d94:	d9400104 	addi	r5,sp,4
   15d98:	8009883a 	mov	r4,r16
   15d9c:	903ee83a 	callr	r18
   15da0:	003fed06 	br	15d58 <__alt_mem_epcs_flash_controller_0+0xff814d58>

00015da4 <wcrtomb>:
   15da4:	defff604 	addi	sp,sp,-40
   15da8:	008000b4 	movhi	r2,2
   15dac:	dc800615 	stw	r18,24(sp)
   15db0:	dc400515 	stw	r17,20(sp)
   15db4:	10801c04 	addi	r2,r2,112
   15db8:	dfc00915 	stw	ra,36(sp)
   15dbc:	dd000815 	stw	r20,32(sp)
   15dc0:	dcc00715 	stw	r19,28(sp)
   15dc4:	dc000415 	stw	r16,16(sp)
   15dc8:	3025883a 	mov	r18,r6
   15dcc:	14400017 	ldw	r17,0(r2)
   15dd0:	20001926 	beq	r4,zero,15e38 <wcrtomb+0x94>
   15dd4:	008000b4 	movhi	r2,2
   15dd8:	10802204 	addi	r2,r2,136
   15ddc:	15000017 	ldw	r20,0(r2)
   15de0:	2021883a 	mov	r16,r4
   15de4:	2827883a 	mov	r19,r5
   15de8:	0009de00 	call	9de0 <__locale_charset>
   15dec:	100f883a 	mov	r7,r2
   15df0:	dc800015 	stw	r18,0(sp)
   15df4:	980d883a 	mov	r6,r19
   15df8:	800b883a 	mov	r5,r16
   15dfc:	8809883a 	mov	r4,r17
   15e00:	a03ee83a 	callr	r20
   15e04:	00ffffc4 	movi	r3,-1
   15e08:	10c0031e 	bne	r2,r3,15e18 <wcrtomb+0x74>
   15e0c:	90000015 	stw	zero,0(r18)
   15e10:	00c02284 	movi	r3,138
   15e14:	88c00015 	stw	r3,0(r17)
   15e18:	dfc00917 	ldw	ra,36(sp)
   15e1c:	dd000817 	ldw	r20,32(sp)
   15e20:	dcc00717 	ldw	r19,28(sp)
   15e24:	dc800617 	ldw	r18,24(sp)
   15e28:	dc400517 	ldw	r17,20(sp)
   15e2c:	dc000417 	ldw	r16,16(sp)
   15e30:	dec00a04 	addi	sp,sp,40
   15e34:	f800283a 	ret
   15e38:	008000b4 	movhi	r2,2
   15e3c:	10802204 	addi	r2,r2,136
   15e40:	14000017 	ldw	r16,0(r2)
   15e44:	0009de00 	call	9de0 <__locale_charset>
   15e48:	100f883a 	mov	r7,r2
   15e4c:	dc800015 	stw	r18,0(sp)
   15e50:	000d883a 	mov	r6,zero
   15e54:	d9400104 	addi	r5,sp,4
   15e58:	8809883a 	mov	r4,r17
   15e5c:	803ee83a 	callr	r16
   15e60:	003fe806 	br	15e04 <__alt_mem_epcs_flash_controller_0+0xff814e04>

00015e64 <__ascii_wctomb>:
   15e64:	28000526 	beq	r5,zero,15e7c <__ascii_wctomb+0x18>
   15e68:	00803fc4 	movi	r2,255
   15e6c:	11800536 	bltu	r2,r6,15e84 <__ascii_wctomb+0x20>
   15e70:	29800005 	stb	r6,0(r5)
   15e74:	00800044 	movi	r2,1
   15e78:	f800283a 	ret
   15e7c:	0005883a 	mov	r2,zero
   15e80:	f800283a 	ret
   15e84:	00802284 	movi	r2,138
   15e88:	20800015 	stw	r2,0(r4)
   15e8c:	00bfffc4 	movi	r2,-1
   15e90:	f800283a 	ret

00015e94 <_wctomb_r>:
   15e94:	008000b4 	movhi	r2,2
   15e98:	defff904 	addi	sp,sp,-28
   15e9c:	10802204 	addi	r2,r2,136
   15ea0:	dfc00615 	stw	ra,24(sp)
   15ea4:	dc400515 	stw	r17,20(sp)
   15ea8:	dc000415 	stw	r16,16(sp)
   15eac:	3823883a 	mov	r17,r7
   15eb0:	14000017 	ldw	r16,0(r2)
   15eb4:	d9000115 	stw	r4,4(sp)
   15eb8:	d9400215 	stw	r5,8(sp)
   15ebc:	d9800315 	stw	r6,12(sp)
   15ec0:	0009de00 	call	9de0 <__locale_charset>
   15ec4:	d9800317 	ldw	r6,12(sp)
   15ec8:	d9400217 	ldw	r5,8(sp)
   15ecc:	d9000117 	ldw	r4,4(sp)
   15ed0:	100f883a 	mov	r7,r2
   15ed4:	dc400015 	stw	r17,0(sp)
   15ed8:	803ee83a 	callr	r16
   15edc:	dfc00617 	ldw	ra,24(sp)
   15ee0:	dc400517 	ldw	r17,20(sp)
   15ee4:	dc000417 	ldw	r16,16(sp)
   15ee8:	dec00704 	addi	sp,sp,28
   15eec:	f800283a 	ret

00015ef0 <__muldi3>:
   15ef0:	defff604 	addi	sp,sp,-40
   15ef4:	dd800615 	stw	r22,24(sp)
   15ef8:	dd400515 	stw	r21,20(sp)
   15efc:	dc400115 	stw	r17,4(sp)
   15f00:	357fffcc 	andi	r21,r6,65535
   15f04:	2022d43a 	srli	r17,r4,16
   15f08:	25bfffcc 	andi	r22,r4,65535
   15f0c:	dcc00315 	stw	r19,12(sp)
   15f10:	dc800215 	stw	r18,8(sp)
   15f14:	2027883a 	mov	r19,r4
   15f18:	2825883a 	mov	r18,r5
   15f1c:	b009883a 	mov	r4,r22
   15f20:	a80b883a 	mov	r5,r21
   15f24:	dfc00915 	stw	ra,36(sp)
   15f28:	df000815 	stw	fp,32(sp)
   15f2c:	ddc00715 	stw	r23,28(sp)
   15f30:	3839883a 	mov	fp,r7
   15f34:	302ed43a 	srli	r23,r6,16
   15f38:	dd000415 	stw	r20,16(sp)
   15f3c:	dc000015 	stw	r16,0(sp)
   15f40:	3029883a 	mov	r20,r6
   15f44:	00024440 	call	2444 <__mulsi3>
   15f48:	a80b883a 	mov	r5,r21
   15f4c:	8809883a 	mov	r4,r17
   15f50:	1021883a 	mov	r16,r2
   15f54:	00024440 	call	2444 <__mulsi3>
   15f58:	8809883a 	mov	r4,r17
   15f5c:	b80b883a 	mov	r5,r23
   15f60:	102b883a 	mov	r21,r2
   15f64:	00024440 	call	2444 <__mulsi3>
   15f68:	b80b883a 	mov	r5,r23
   15f6c:	b009883a 	mov	r4,r22
   15f70:	1023883a 	mov	r17,r2
   15f74:	00024440 	call	2444 <__mulsi3>
   15f78:	8006d43a 	srli	r3,r16,16
   15f7c:	1545883a 	add	r2,r2,r21
   15f80:	1885883a 	add	r2,r3,r2
   15f84:	1540022e 	bgeu	r2,r21,15f90 <__muldi3+0xa0>
   15f88:	00c00074 	movhi	r3,1
   15f8c:	88e3883a 	add	r17,r17,r3
   15f90:	1006d43a 	srli	r3,r2,16
   15f94:	1004943a 	slli	r2,r2,16
   15f98:	e00b883a 	mov	r5,fp
   15f9c:	9809883a 	mov	r4,r19
   15fa0:	843fffcc 	andi	r16,r16,65535
   15fa4:	1c63883a 	add	r17,r3,r17
   15fa8:	1421883a 	add	r16,r2,r16
   15fac:	00024440 	call	2444 <__mulsi3>
   15fb0:	900b883a 	mov	r5,r18
   15fb4:	a009883a 	mov	r4,r20
   15fb8:	1027883a 	mov	r19,r2
   15fbc:	00024440 	call	2444 <__mulsi3>
   15fc0:	9885883a 	add	r2,r19,r2
   15fc4:	1447883a 	add	r3,r2,r17
   15fc8:	8005883a 	mov	r2,r16
   15fcc:	dfc00917 	ldw	ra,36(sp)
   15fd0:	df000817 	ldw	fp,32(sp)
   15fd4:	ddc00717 	ldw	r23,28(sp)
   15fd8:	dd800617 	ldw	r22,24(sp)
   15fdc:	dd400517 	ldw	r21,20(sp)
   15fe0:	dd000417 	ldw	r20,16(sp)
   15fe4:	dcc00317 	ldw	r19,12(sp)
   15fe8:	dc800217 	ldw	r18,8(sp)
   15fec:	dc400117 	ldw	r17,4(sp)
   15ff0:	dc000017 	ldw	r16,0(sp)
   15ff4:	dec00a04 	addi	sp,sp,40
   15ff8:	f800283a 	ret

00015ffc <__fixunsdfsi>:
   15ffc:	defffd04 	addi	sp,sp,-12
   16000:	000d883a 	mov	r6,zero
   16004:	01d07834 	movhi	r7,16864
   16008:	dc400115 	stw	r17,4(sp)
   1600c:	dc000015 	stw	r16,0(sp)
   16010:	dfc00215 	stw	ra,8(sp)
   16014:	2023883a 	mov	r17,r4
   16018:	2821883a 	mov	r16,r5
   1601c:	00181300 	call	18130 <__gedf2>
   16020:	1000080e 	bge	r2,zero,16044 <__fixunsdfsi+0x48>
   16024:	8809883a 	mov	r4,r17
   16028:	800b883a 	mov	r5,r16
   1602c:	00194680 	call	19468 <__fixdfsi>
   16030:	dfc00217 	ldw	ra,8(sp)
   16034:	dc400117 	ldw	r17,4(sp)
   16038:	dc000017 	ldw	r16,0(sp)
   1603c:	dec00304 	addi	sp,sp,12
   16040:	f800283a 	ret
   16044:	000d883a 	mov	r6,zero
   16048:	01d07834 	movhi	r7,16864
   1604c:	8809883a 	mov	r4,r17
   16050:	800b883a 	mov	r5,r16
   16054:	0018b6c0 	call	18b6c <__subdf3>
   16058:	180b883a 	mov	r5,r3
   1605c:	1009883a 	mov	r4,r2
   16060:	00194680 	call	19468 <__fixdfsi>
   16064:	00e00034 	movhi	r3,32768
   16068:	10c5883a 	add	r2,r2,r3
   1606c:	003ff006 	br	16030 <__alt_mem_epcs_flash_controller_0+0xff815030>

00016070 <__udivdi3>:
   16070:	defff404 	addi	sp,sp,-48
   16074:	dcc00515 	stw	r19,20(sp)
   16078:	dc000215 	stw	r16,8(sp)
   1607c:	dfc00b15 	stw	ra,44(sp)
   16080:	df000a15 	stw	fp,40(sp)
   16084:	ddc00915 	stw	r23,36(sp)
   16088:	dd800815 	stw	r22,32(sp)
   1608c:	dd400715 	stw	r21,28(sp)
   16090:	dd000615 	stw	r20,24(sp)
   16094:	dc800415 	stw	r18,16(sp)
   16098:	dc400315 	stw	r17,12(sp)
   1609c:	2027883a 	mov	r19,r4
   160a0:	2821883a 	mov	r16,r5
   160a4:	3800461e 	bne	r7,zero,161c0 <__udivdi3+0x150>
   160a8:	3023883a 	mov	r17,r6
   160ac:	2025883a 	mov	r18,r4
   160b0:	2980572e 	bgeu	r5,r6,16210 <__udivdi3+0x1a0>
   160b4:	00bfffd4 	movui	r2,65535
   160b8:	282d883a 	mov	r22,r5
   160bc:	1180b236 	bltu	r2,r6,16388 <__udivdi3+0x318>
   160c0:	00803fc4 	movi	r2,255
   160c4:	1185803a 	cmpltu	r2,r2,r6
   160c8:	100490fa 	slli	r2,r2,3
   160cc:	3086d83a 	srl	r3,r6,r2
   160d0:	010000b4 	movhi	r4,2
   160d4:	2138e784 	addi	r4,r4,-7266
   160d8:	20c7883a 	add	r3,r4,r3
   160dc:	18c00003 	ldbu	r3,0(r3)
   160e0:	1885883a 	add	r2,r3,r2
   160e4:	00c00804 	movi	r3,32
   160e8:	1887c83a 	sub	r3,r3,r2
   160ec:	18000526 	beq	r3,zero,16104 <__udivdi3+0x94>
   160f0:	80e0983a 	sll	r16,r16,r3
   160f4:	9884d83a 	srl	r2,r19,r2
   160f8:	30e2983a 	sll	r17,r6,r3
   160fc:	98e4983a 	sll	r18,r19,r3
   16100:	142cb03a 	or	r22,r2,r16
   16104:	882ad43a 	srli	r21,r17,16
   16108:	b009883a 	mov	r4,r22
   1610c:	8d3fffcc 	andi	r20,r17,65535
   16110:	a80b883a 	mov	r5,r21
   16114:	00023ec0 	call	23ec <__umodsi3>
   16118:	b009883a 	mov	r4,r22
   1611c:	a80b883a 	mov	r5,r21
   16120:	1027883a 	mov	r19,r2
   16124:	00023880 	call	2388 <__udivsi3>
   16128:	100b883a 	mov	r5,r2
   1612c:	a009883a 	mov	r4,r20
   16130:	102d883a 	mov	r22,r2
   16134:	00024440 	call	2444 <__mulsi3>
   16138:	9826943a 	slli	r19,r19,16
   1613c:	9006d43a 	srli	r3,r18,16
   16140:	1cc6b03a 	or	r3,r3,r19
   16144:	1880052e 	bgeu	r3,r2,1615c <__udivdi3+0xec>
   16148:	1c47883a 	add	r3,r3,r17
   1614c:	b13fffc4 	addi	r4,r22,-1
   16150:	1c400136 	bltu	r3,r17,16158 <__udivdi3+0xe8>
   16154:	18814236 	bltu	r3,r2,16660 <__udivdi3+0x5f0>
   16158:	202d883a 	mov	r22,r4
   1615c:	18a1c83a 	sub	r16,r3,r2
   16160:	8009883a 	mov	r4,r16
   16164:	a80b883a 	mov	r5,r21
   16168:	00023ec0 	call	23ec <__umodsi3>
   1616c:	1027883a 	mov	r19,r2
   16170:	8009883a 	mov	r4,r16
   16174:	a80b883a 	mov	r5,r21
   16178:	9826943a 	slli	r19,r19,16
   1617c:	00023880 	call	2388 <__udivsi3>
   16180:	100b883a 	mov	r5,r2
   16184:	a009883a 	mov	r4,r20
   16188:	94bfffcc 	andi	r18,r18,65535
   1618c:	1021883a 	mov	r16,r2
   16190:	94e4b03a 	or	r18,r18,r19
   16194:	00024440 	call	2444 <__mulsi3>
   16198:	9080052e 	bgeu	r18,r2,161b0 <__udivdi3+0x140>
   1619c:	8ca5883a 	add	r18,r17,r18
   161a0:	80ffffc4 	addi	r3,r16,-1
   161a4:	94410c36 	bltu	r18,r17,165d8 <__udivdi3+0x568>
   161a8:	90810b2e 	bgeu	r18,r2,165d8 <__udivdi3+0x568>
   161ac:	843fff84 	addi	r16,r16,-2
   161b0:	b004943a 	slli	r2,r22,16
   161b4:	0007883a 	mov	r3,zero
   161b8:	1404b03a 	or	r2,r2,r16
   161bc:	00005e06 	br	16338 <__udivdi3+0x2c8>
   161c0:	29c05b36 	bltu	r5,r7,16330 <__udivdi3+0x2c0>
   161c4:	00bfffd4 	movui	r2,65535
   161c8:	11c0672e 	bgeu	r2,r7,16368 <__udivdi3+0x2f8>
   161cc:	00804034 	movhi	r2,256
   161d0:	10bfffc4 	addi	r2,r2,-1
   161d4:	11c10a36 	bltu	r2,r7,16600 <__udivdi3+0x590>
   161d8:	00800404 	movi	r2,16
   161dc:	3886d83a 	srl	r3,r7,r2
   161e0:	010000b4 	movhi	r4,2
   161e4:	2138e784 	addi	r4,r4,-7266
   161e8:	20c7883a 	add	r3,r4,r3
   161ec:	18c00003 	ldbu	r3,0(r3)
   161f0:	05c00804 	movi	r23,32
   161f4:	1885883a 	add	r2,r3,r2
   161f8:	b8afc83a 	sub	r23,r23,r2
   161fc:	b800671e 	bne	r23,zero,1639c <__udivdi3+0x32c>
   16200:	3c010536 	bltu	r7,r16,16618 <__udivdi3+0x5a8>
   16204:	9985403a 	cmpgeu	r2,r19,r6
   16208:	0007883a 	mov	r3,zero
   1620c:	00004a06 	br	16338 <__udivdi3+0x2c8>
   16210:	3000041e 	bne	r6,zero,16224 <__udivdi3+0x1b4>
   16214:	000b883a 	mov	r5,zero
   16218:	01000044 	movi	r4,1
   1621c:	00023880 	call	2388 <__udivsi3>
   16220:	1023883a 	mov	r17,r2
   16224:	00bfffd4 	movui	r2,65535
   16228:	1440532e 	bgeu	r2,r17,16378 <__udivdi3+0x308>
   1622c:	00804034 	movhi	r2,256
   16230:	10bfffc4 	addi	r2,r2,-1
   16234:	1440f436 	bltu	r2,r17,16608 <__udivdi3+0x598>
   16238:	00800404 	movi	r2,16
   1623c:	8886d83a 	srl	r3,r17,r2
   16240:	010000b4 	movhi	r4,2
   16244:	2138e784 	addi	r4,r4,-7266
   16248:	20c7883a 	add	r3,r4,r3
   1624c:	18c00003 	ldbu	r3,0(r3)
   16250:	1885883a 	add	r2,r3,r2
   16254:	00c00804 	movi	r3,32
   16258:	1887c83a 	sub	r3,r3,r2
   1625c:	1800a51e 	bne	r3,zero,164f4 <__udivdi3+0x484>
   16260:	882ad43a 	srli	r21,r17,16
   16264:	8461c83a 	sub	r16,r16,r17
   16268:	8d3fffcc 	andi	r20,r17,65535
   1626c:	00c00044 	movi	r3,1
   16270:	a80b883a 	mov	r5,r21
   16274:	8009883a 	mov	r4,r16
   16278:	d8c00115 	stw	r3,4(sp)
   1627c:	00023ec0 	call	23ec <__umodsi3>
   16280:	a80b883a 	mov	r5,r21
   16284:	8009883a 	mov	r4,r16
   16288:	1027883a 	mov	r19,r2
   1628c:	00023880 	call	2388 <__udivsi3>
   16290:	a00b883a 	mov	r5,r20
   16294:	1009883a 	mov	r4,r2
   16298:	102d883a 	mov	r22,r2
   1629c:	00024440 	call	2444 <__mulsi3>
   162a0:	9826943a 	slli	r19,r19,16
   162a4:	900ed43a 	srli	r7,r18,16
   162a8:	d8c00117 	ldw	r3,4(sp)
   162ac:	3cceb03a 	or	r7,r7,r19
   162b0:	3880052e 	bgeu	r7,r2,162c8 <__udivdi3+0x258>
   162b4:	3c4f883a 	add	r7,r7,r17
   162b8:	b13fffc4 	addi	r4,r22,-1
   162bc:	3c400136 	bltu	r7,r17,162c4 <__udivdi3+0x254>
   162c0:	3880e436 	bltu	r7,r2,16654 <__udivdi3+0x5e4>
   162c4:	202d883a 	mov	r22,r4
   162c8:	38a1c83a 	sub	r16,r7,r2
   162cc:	8009883a 	mov	r4,r16
   162d0:	a80b883a 	mov	r5,r21
   162d4:	d8c00115 	stw	r3,4(sp)
   162d8:	00023ec0 	call	23ec <__umodsi3>
   162dc:	1027883a 	mov	r19,r2
   162e0:	8009883a 	mov	r4,r16
   162e4:	a80b883a 	mov	r5,r21
   162e8:	9826943a 	slli	r19,r19,16
   162ec:	00023880 	call	2388 <__udivsi3>
   162f0:	a00b883a 	mov	r5,r20
   162f4:	1009883a 	mov	r4,r2
   162f8:	94bfffcc 	andi	r18,r18,65535
   162fc:	1021883a 	mov	r16,r2
   16300:	94e4b03a 	or	r18,r18,r19
   16304:	00024440 	call	2444 <__mulsi3>
   16308:	d8c00117 	ldw	r3,4(sp)
   1630c:	9080052e 	bgeu	r18,r2,16324 <__udivdi3+0x2b4>
   16310:	8ca5883a 	add	r18,r17,r18
   16314:	813fffc4 	addi	r4,r16,-1
   16318:	9440ad36 	bltu	r18,r17,165d0 <__udivdi3+0x560>
   1631c:	9080ac2e 	bgeu	r18,r2,165d0 <__udivdi3+0x560>
   16320:	843fff84 	addi	r16,r16,-2
   16324:	b004943a 	slli	r2,r22,16
   16328:	1404b03a 	or	r2,r2,r16
   1632c:	00000206 	br	16338 <__udivdi3+0x2c8>
   16330:	0007883a 	mov	r3,zero
   16334:	0005883a 	mov	r2,zero
   16338:	dfc00b17 	ldw	ra,44(sp)
   1633c:	df000a17 	ldw	fp,40(sp)
   16340:	ddc00917 	ldw	r23,36(sp)
   16344:	dd800817 	ldw	r22,32(sp)
   16348:	dd400717 	ldw	r21,28(sp)
   1634c:	dd000617 	ldw	r20,24(sp)
   16350:	dcc00517 	ldw	r19,20(sp)
   16354:	dc800417 	ldw	r18,16(sp)
   16358:	dc400317 	ldw	r17,12(sp)
   1635c:	dc000217 	ldw	r16,8(sp)
   16360:	dec00c04 	addi	sp,sp,48
   16364:	f800283a 	ret
   16368:	00803fc4 	movi	r2,255
   1636c:	11c5803a 	cmpltu	r2,r2,r7
   16370:	100490fa 	slli	r2,r2,3
   16374:	003f9906 	br	161dc <__alt_mem_epcs_flash_controller_0+0xff8151dc>
   16378:	00803fc4 	movi	r2,255
   1637c:	1445803a 	cmpltu	r2,r2,r17
   16380:	100490fa 	slli	r2,r2,3
   16384:	003fad06 	br	1623c <__alt_mem_epcs_flash_controller_0+0xff81523c>
   16388:	00804034 	movhi	r2,256
   1638c:	10bfffc4 	addi	r2,r2,-1
   16390:	11809f36 	bltu	r2,r6,16610 <__udivdi3+0x5a0>
   16394:	00800404 	movi	r2,16
   16398:	003f4c06 	br	160cc <__alt_mem_epcs_flash_controller_0+0xff8150cc>
   1639c:	3dce983a 	sll	r7,r7,r23
   163a0:	30b8d83a 	srl	fp,r6,r2
   163a4:	80a2d83a 	srl	r17,r16,r2
   163a8:	35cc983a 	sll	r6,r6,r23
   163ac:	3f38b03a 	or	fp,r7,fp
   163b0:	e024d43a 	srli	r18,fp,16
   163b4:	9884d83a 	srl	r2,r19,r2
   163b8:	85e0983a 	sll	r16,r16,r23
   163bc:	8809883a 	mov	r4,r17
   163c0:	900b883a 	mov	r5,r18
   163c4:	d9800015 	stw	r6,0(sp)
   163c8:	1420b03a 	or	r16,r2,r16
   163cc:	00023ec0 	call	23ec <__umodsi3>
   163d0:	900b883a 	mov	r5,r18
   163d4:	8809883a 	mov	r4,r17
   163d8:	1029883a 	mov	r20,r2
   163dc:	e5bfffcc 	andi	r22,fp,65535
   163e0:	00023880 	call	2388 <__udivsi3>
   163e4:	100b883a 	mov	r5,r2
   163e8:	b009883a 	mov	r4,r22
   163ec:	102b883a 	mov	r21,r2
   163f0:	00024440 	call	2444 <__mulsi3>
   163f4:	a028943a 	slli	r20,r20,16
   163f8:	8006d43a 	srli	r3,r16,16
   163fc:	1d06b03a 	or	r3,r3,r20
   16400:	1880042e 	bgeu	r3,r2,16414 <__udivdi3+0x3a4>
   16404:	1f07883a 	add	r3,r3,fp
   16408:	a93fffc4 	addi	r4,r21,-1
   1640c:	1f00892e 	bgeu	r3,fp,16634 <__udivdi3+0x5c4>
   16410:	202b883a 	mov	r21,r4
   16414:	18a3c83a 	sub	r17,r3,r2
   16418:	8809883a 	mov	r4,r17
   1641c:	900b883a 	mov	r5,r18
   16420:	00023ec0 	call	23ec <__umodsi3>
   16424:	1029883a 	mov	r20,r2
   16428:	8809883a 	mov	r4,r17
   1642c:	900b883a 	mov	r5,r18
   16430:	a028943a 	slli	r20,r20,16
   16434:	00023880 	call	2388 <__udivsi3>
   16438:	100b883a 	mov	r5,r2
   1643c:	b009883a 	mov	r4,r22
   16440:	843fffcc 	andi	r16,r16,65535
   16444:	1023883a 	mov	r17,r2
   16448:	8520b03a 	or	r16,r16,r20
   1644c:	00024440 	call	2444 <__mulsi3>
   16450:	8080042e 	bgeu	r16,r2,16464 <__udivdi3+0x3f4>
   16454:	8721883a 	add	r16,r16,fp
   16458:	88ffffc4 	addi	r3,r17,-1
   1645c:	8700712e 	bgeu	r16,fp,16624 <__udivdi3+0x5b4>
   16460:	1823883a 	mov	r17,r3
   16464:	a80e943a 	slli	r7,r21,16
   16468:	d8c00017 	ldw	r3,0(sp)
   1646c:	80a1c83a 	sub	r16,r16,r2
   16470:	3c64b03a 	or	r18,r7,r17
   16474:	1d3fffcc 	andi	r20,r3,65535
   16478:	9022d43a 	srli	r17,r18,16
   1647c:	95bfffcc 	andi	r22,r18,65535
   16480:	a00b883a 	mov	r5,r20
   16484:	b009883a 	mov	r4,r22
   16488:	182ad43a 	srli	r21,r3,16
   1648c:	00024440 	call	2444 <__mulsi3>
   16490:	a00b883a 	mov	r5,r20
   16494:	8809883a 	mov	r4,r17
   16498:	1039883a 	mov	fp,r2
   1649c:	00024440 	call	2444 <__mulsi3>
   164a0:	8809883a 	mov	r4,r17
   164a4:	a80b883a 	mov	r5,r21
   164a8:	1029883a 	mov	r20,r2
   164ac:	00024440 	call	2444 <__mulsi3>
   164b0:	a80b883a 	mov	r5,r21
   164b4:	b009883a 	mov	r4,r22
   164b8:	1023883a 	mov	r17,r2
   164bc:	00024440 	call	2444 <__mulsi3>
   164c0:	e006d43a 	srli	r3,fp,16
   164c4:	1505883a 	add	r2,r2,r20
   164c8:	1887883a 	add	r3,r3,r2
   164cc:	1d00022e 	bgeu	r3,r20,164d8 <__udivdi3+0x468>
   164d0:	00800074 	movhi	r2,1
   164d4:	88a3883a 	add	r17,r17,r2
   164d8:	1804d43a 	srli	r2,r3,16
   164dc:	1463883a 	add	r17,r2,r17
   164e0:	84404436 	bltu	r16,r17,165f4 <__udivdi3+0x584>
   164e4:	84403e26 	beq	r16,r17,165e0 <__udivdi3+0x570>
   164e8:	9005883a 	mov	r2,r18
   164ec:	0007883a 	mov	r3,zero
   164f0:	003f9106 	br	16338 <__alt_mem_epcs_flash_controller_0+0xff815338>
   164f4:	88e2983a 	sll	r17,r17,r3
   164f8:	80aed83a 	srl	r23,r16,r2
   164fc:	80e0983a 	sll	r16,r16,r3
   16500:	882ad43a 	srli	r21,r17,16
   16504:	9884d83a 	srl	r2,r19,r2
   16508:	b809883a 	mov	r4,r23
   1650c:	a80b883a 	mov	r5,r21
   16510:	98e4983a 	sll	r18,r19,r3
   16514:	142cb03a 	or	r22,r2,r16
   16518:	00023ec0 	call	23ec <__umodsi3>
   1651c:	b809883a 	mov	r4,r23
   16520:	a80b883a 	mov	r5,r21
   16524:	1027883a 	mov	r19,r2
   16528:	8d3fffcc 	andi	r20,r17,65535
   1652c:	00023880 	call	2388 <__udivsi3>
   16530:	a009883a 	mov	r4,r20
   16534:	100b883a 	mov	r5,r2
   16538:	102f883a 	mov	r23,r2
   1653c:	00024440 	call	2444 <__mulsi3>
   16540:	9826943a 	slli	r19,r19,16
   16544:	b008d43a 	srli	r4,r22,16
   16548:	24c8b03a 	or	r4,r4,r19
   1654c:	2080062e 	bgeu	r4,r2,16568 <__udivdi3+0x4f8>
   16550:	2449883a 	add	r4,r4,r17
   16554:	b8ffffc4 	addi	r3,r23,-1
   16558:	24403c36 	bltu	r4,r17,1664c <__udivdi3+0x5dc>
   1655c:	20803b2e 	bgeu	r4,r2,1664c <__udivdi3+0x5dc>
   16560:	bdffff84 	addi	r23,r23,-2
   16564:	2449883a 	add	r4,r4,r17
   16568:	20a1c83a 	sub	r16,r4,r2
   1656c:	a80b883a 	mov	r5,r21
   16570:	8009883a 	mov	r4,r16
   16574:	00023ec0 	call	23ec <__umodsi3>
   16578:	a80b883a 	mov	r5,r21
   1657c:	8009883a 	mov	r4,r16
   16580:	1027883a 	mov	r19,r2
   16584:	00023880 	call	2388 <__udivsi3>
   16588:	a009883a 	mov	r4,r20
   1658c:	100b883a 	mov	r5,r2
   16590:	9826943a 	slli	r19,r19,16
   16594:	1039883a 	mov	fp,r2
   16598:	00024440 	call	2444 <__mulsi3>
   1659c:	b13fffcc 	andi	r4,r22,65535
   165a0:	24c8b03a 	or	r4,r4,r19
   165a4:	2080062e 	bgeu	r4,r2,165c0 <__udivdi3+0x550>
   165a8:	2449883a 	add	r4,r4,r17
   165ac:	e0ffffc4 	addi	r3,fp,-1
   165b0:	24402436 	bltu	r4,r17,16644 <__udivdi3+0x5d4>
   165b4:	2080232e 	bgeu	r4,r2,16644 <__udivdi3+0x5d4>
   165b8:	e73fff84 	addi	fp,fp,-2
   165bc:	2449883a 	add	r4,r4,r17
   165c0:	b82e943a 	slli	r23,r23,16
   165c4:	20a1c83a 	sub	r16,r4,r2
   165c8:	bf06b03a 	or	r3,r23,fp
   165cc:	003f2806 	br	16270 <__alt_mem_epcs_flash_controller_0+0xff815270>
   165d0:	2021883a 	mov	r16,r4
   165d4:	003f5306 	br	16324 <__alt_mem_epcs_flash_controller_0+0xff815324>
   165d8:	1821883a 	mov	r16,r3
   165dc:	003ef406 	br	161b0 <__alt_mem_epcs_flash_controller_0+0xff8151b0>
   165e0:	1806943a 	slli	r3,r3,16
   165e4:	9de6983a 	sll	r19,r19,r23
   165e8:	e73fffcc 	andi	fp,fp,65535
   165ec:	1f07883a 	add	r3,r3,fp
   165f0:	98ffbd2e 	bgeu	r19,r3,164e8 <__alt_mem_epcs_flash_controller_0+0xff8154e8>
   165f4:	90bfffc4 	addi	r2,r18,-1
   165f8:	0007883a 	mov	r3,zero
   165fc:	003f4e06 	br	16338 <__alt_mem_epcs_flash_controller_0+0xff815338>
   16600:	00800604 	movi	r2,24
   16604:	003ef506 	br	161dc <__alt_mem_epcs_flash_controller_0+0xff8151dc>
   16608:	00800604 	movi	r2,24
   1660c:	003f0b06 	br	1623c <__alt_mem_epcs_flash_controller_0+0xff81523c>
   16610:	00800604 	movi	r2,24
   16614:	003ead06 	br	160cc <__alt_mem_epcs_flash_controller_0+0xff8150cc>
   16618:	0007883a 	mov	r3,zero
   1661c:	00800044 	movi	r2,1
   16620:	003f4506 	br	16338 <__alt_mem_epcs_flash_controller_0+0xff815338>
   16624:	80bf8e2e 	bgeu	r16,r2,16460 <__alt_mem_epcs_flash_controller_0+0xff815460>
   16628:	8c7fff84 	addi	r17,r17,-2
   1662c:	8721883a 	add	r16,r16,fp
   16630:	003f8c06 	br	16464 <__alt_mem_epcs_flash_controller_0+0xff815464>
   16634:	18bf762e 	bgeu	r3,r2,16410 <__alt_mem_epcs_flash_controller_0+0xff815410>
   16638:	ad7fff84 	addi	r21,r21,-2
   1663c:	1f07883a 	add	r3,r3,fp
   16640:	003f7406 	br	16414 <__alt_mem_epcs_flash_controller_0+0xff815414>
   16644:	1839883a 	mov	fp,r3
   16648:	003fdd06 	br	165c0 <__alt_mem_epcs_flash_controller_0+0xff8155c0>
   1664c:	182f883a 	mov	r23,r3
   16650:	003fc506 	br	16568 <__alt_mem_epcs_flash_controller_0+0xff815568>
   16654:	b5bfff84 	addi	r22,r22,-2
   16658:	3c4f883a 	add	r7,r7,r17
   1665c:	003f1a06 	br	162c8 <__alt_mem_epcs_flash_controller_0+0xff8152c8>
   16660:	b5bfff84 	addi	r22,r22,-2
   16664:	1c47883a 	add	r3,r3,r17
   16668:	003ebc06 	br	1615c <__alt_mem_epcs_flash_controller_0+0xff81515c>

0001666c <__umoddi3>:
   1666c:	defff304 	addi	sp,sp,-52
   16670:	df000b15 	stw	fp,44(sp)
   16674:	dc400415 	stw	r17,16(sp)
   16678:	dc000315 	stw	r16,12(sp)
   1667c:	dfc00c15 	stw	ra,48(sp)
   16680:	ddc00a15 	stw	r23,40(sp)
   16684:	dd800915 	stw	r22,36(sp)
   16688:	dd400815 	stw	r21,32(sp)
   1668c:	dd000715 	stw	r20,28(sp)
   16690:	dcc00615 	stw	r19,24(sp)
   16694:	dc800515 	stw	r18,20(sp)
   16698:	2021883a 	mov	r16,r4
   1669c:	2823883a 	mov	r17,r5
   166a0:	2839883a 	mov	fp,r5
   166a4:	3800401e 	bne	r7,zero,167a8 <__umoddi3+0x13c>
   166a8:	3027883a 	mov	r19,r6
   166ac:	2029883a 	mov	r20,r4
   166b0:	2980552e 	bgeu	r5,r6,16808 <__umoddi3+0x19c>
   166b4:	00bfffd4 	movui	r2,65535
   166b8:	1180a236 	bltu	r2,r6,16944 <__umoddi3+0x2d8>
   166bc:	01003fc4 	movi	r4,255
   166c0:	2189803a 	cmpltu	r4,r4,r6
   166c4:	200890fa 	slli	r4,r4,3
   166c8:	3104d83a 	srl	r2,r6,r4
   166cc:	00c000b4 	movhi	r3,2
   166d0:	18f8e784 	addi	r3,r3,-7266
   166d4:	1885883a 	add	r2,r3,r2
   166d8:	10c00003 	ldbu	r3,0(r2)
   166dc:	00800804 	movi	r2,32
   166e0:	1909883a 	add	r4,r3,r4
   166e4:	1125c83a 	sub	r18,r2,r4
   166e8:	90000526 	beq	r18,zero,16700 <__umoddi3+0x94>
   166ec:	8ca2983a 	sll	r17,r17,r18
   166f0:	8108d83a 	srl	r4,r16,r4
   166f4:	34a6983a 	sll	r19,r6,r18
   166f8:	84a8983a 	sll	r20,r16,r18
   166fc:	2478b03a 	or	fp,r4,r17
   16700:	982cd43a 	srli	r22,r19,16
   16704:	e009883a 	mov	r4,fp
   16708:	9dffffcc 	andi	r23,r19,65535
   1670c:	b00b883a 	mov	r5,r22
   16710:	00023ec0 	call	23ec <__umodsi3>
   16714:	b00b883a 	mov	r5,r22
   16718:	e009883a 	mov	r4,fp
   1671c:	102b883a 	mov	r21,r2
   16720:	00023880 	call	2388 <__udivsi3>
   16724:	100b883a 	mov	r5,r2
   16728:	b809883a 	mov	r4,r23
   1672c:	00024440 	call	2444 <__mulsi3>
   16730:	a82a943a 	slli	r21,r21,16
   16734:	a006d43a 	srli	r3,r20,16
   16738:	1d46b03a 	or	r3,r3,r21
   1673c:	1880032e 	bgeu	r3,r2,1674c <__umoddi3+0xe0>
   16740:	1cc7883a 	add	r3,r3,r19
   16744:	1cc00136 	bltu	r3,r19,1674c <__umoddi3+0xe0>
   16748:	18813136 	bltu	r3,r2,16c10 <__umoddi3+0x5a4>
   1674c:	18a1c83a 	sub	r16,r3,r2
   16750:	b00b883a 	mov	r5,r22
   16754:	8009883a 	mov	r4,r16
   16758:	00023ec0 	call	23ec <__umodsi3>
   1675c:	b00b883a 	mov	r5,r22
   16760:	8009883a 	mov	r4,r16
   16764:	1023883a 	mov	r17,r2
   16768:	00023880 	call	2388 <__udivsi3>
   1676c:	100b883a 	mov	r5,r2
   16770:	b809883a 	mov	r4,r23
   16774:	8822943a 	slli	r17,r17,16
   16778:	00024440 	call	2444 <__mulsi3>
   1677c:	a0ffffcc 	andi	r3,r20,65535
   16780:	1c46b03a 	or	r3,r3,r17
   16784:	1880042e 	bgeu	r3,r2,16798 <__umoddi3+0x12c>
   16788:	1cc7883a 	add	r3,r3,r19
   1678c:	1cc00236 	bltu	r3,r19,16798 <__umoddi3+0x12c>
   16790:	1880012e 	bgeu	r3,r2,16798 <__umoddi3+0x12c>
   16794:	1cc7883a 	add	r3,r3,r19
   16798:	1885c83a 	sub	r2,r3,r2
   1679c:	1484d83a 	srl	r2,r2,r18
   167a0:	0007883a 	mov	r3,zero
   167a4:	00005306 	br	168f4 <__umoddi3+0x288>
   167a8:	29c05036 	bltu	r5,r7,168ec <__umoddi3+0x280>
   167ac:	00bfffd4 	movui	r2,65535
   167b0:	11c05c2e 	bgeu	r2,r7,16924 <__umoddi3+0x2b8>
   167b4:	00804034 	movhi	r2,256
   167b8:	10bfffc4 	addi	r2,r2,-1
   167bc:	11c10636 	bltu	r2,r7,16bd8 <__umoddi3+0x56c>
   167c0:	01000404 	movi	r4,16
   167c4:	3904d83a 	srl	r2,r7,r4
   167c8:	00c000b4 	movhi	r3,2
   167cc:	18f8e784 	addi	r3,r3,-7266
   167d0:	1885883a 	add	r2,r3,r2
   167d4:	14c00003 	ldbu	r19,0(r2)
   167d8:	00c00804 	movi	r3,32
   167dc:	9927883a 	add	r19,r19,r4
   167e0:	1ce9c83a 	sub	r20,r3,r19
   167e4:	a0005c1e 	bne	r20,zero,16958 <__umoddi3+0x2ec>
   167e8:	3c400136 	bltu	r7,r17,167f0 <__umoddi3+0x184>
   167ec:	81810a36 	bltu	r16,r6,16c18 <__umoddi3+0x5ac>
   167f0:	8185c83a 	sub	r2,r16,r6
   167f4:	89e3c83a 	sub	r17,r17,r7
   167f8:	8089803a 	cmpltu	r4,r16,r2
   167fc:	8939c83a 	sub	fp,r17,r4
   16800:	e007883a 	mov	r3,fp
   16804:	00003b06 	br	168f4 <__umoddi3+0x288>
   16808:	3000041e 	bne	r6,zero,1681c <__umoddi3+0x1b0>
   1680c:	000b883a 	mov	r5,zero
   16810:	01000044 	movi	r4,1
   16814:	00023880 	call	2388 <__udivsi3>
   16818:	1027883a 	mov	r19,r2
   1681c:	00bfffd4 	movui	r2,65535
   16820:	14c0442e 	bgeu	r2,r19,16934 <__umoddi3+0x2c8>
   16824:	00804034 	movhi	r2,256
   16828:	10bfffc4 	addi	r2,r2,-1
   1682c:	14c0ec36 	bltu	r2,r19,16be0 <__umoddi3+0x574>
   16830:	00800404 	movi	r2,16
   16834:	9886d83a 	srl	r3,r19,r2
   16838:	010000b4 	movhi	r4,2
   1683c:	2138e784 	addi	r4,r4,-7266
   16840:	20c7883a 	add	r3,r4,r3
   16844:	18c00003 	ldbu	r3,0(r3)
   16848:	1887883a 	add	r3,r3,r2
   1684c:	00800804 	movi	r2,32
   16850:	10e5c83a 	sub	r18,r2,r3
   16854:	9000ab1e 	bne	r18,zero,16b04 <__umoddi3+0x498>
   16858:	982cd43a 	srli	r22,r19,16
   1685c:	8ce3c83a 	sub	r17,r17,r19
   16860:	9dffffcc 	andi	r23,r19,65535
   16864:	b00b883a 	mov	r5,r22
   16868:	8809883a 	mov	r4,r17
   1686c:	00023ec0 	call	23ec <__umodsi3>
   16870:	b00b883a 	mov	r5,r22
   16874:	8809883a 	mov	r4,r17
   16878:	102b883a 	mov	r21,r2
   1687c:	00023880 	call	2388 <__udivsi3>
   16880:	b80b883a 	mov	r5,r23
   16884:	1009883a 	mov	r4,r2
   16888:	00024440 	call	2444 <__mulsi3>
   1688c:	a82a943a 	slli	r21,r21,16
   16890:	a006d43a 	srli	r3,r20,16
   16894:	1d46b03a 	or	r3,r3,r21
   16898:	1880042e 	bgeu	r3,r2,168ac <__umoddi3+0x240>
   1689c:	1cc7883a 	add	r3,r3,r19
   168a0:	1cc00236 	bltu	r3,r19,168ac <__umoddi3+0x240>
   168a4:	1880012e 	bgeu	r3,r2,168ac <__umoddi3+0x240>
   168a8:	1cc7883a 	add	r3,r3,r19
   168ac:	18a1c83a 	sub	r16,r3,r2
   168b0:	b00b883a 	mov	r5,r22
   168b4:	8009883a 	mov	r4,r16
   168b8:	00023ec0 	call	23ec <__umodsi3>
   168bc:	1023883a 	mov	r17,r2
   168c0:	b00b883a 	mov	r5,r22
   168c4:	8009883a 	mov	r4,r16
   168c8:	00023880 	call	2388 <__udivsi3>
   168cc:	8822943a 	slli	r17,r17,16
   168d0:	b80b883a 	mov	r5,r23
   168d4:	1009883a 	mov	r4,r2
   168d8:	00024440 	call	2444 <__mulsi3>
   168dc:	a53fffcc 	andi	r20,r20,65535
   168e0:	a446b03a 	or	r3,r20,r17
   168e4:	18bfac2e 	bgeu	r3,r2,16798 <__alt_mem_epcs_flash_controller_0+0xff815798>
   168e8:	003fa706 	br	16788 <__alt_mem_epcs_flash_controller_0+0xff815788>
   168ec:	2005883a 	mov	r2,r4
   168f0:	2807883a 	mov	r3,r5
   168f4:	dfc00c17 	ldw	ra,48(sp)
   168f8:	df000b17 	ldw	fp,44(sp)
   168fc:	ddc00a17 	ldw	r23,40(sp)
   16900:	dd800917 	ldw	r22,36(sp)
   16904:	dd400817 	ldw	r21,32(sp)
   16908:	dd000717 	ldw	r20,28(sp)
   1690c:	dcc00617 	ldw	r19,24(sp)
   16910:	dc800517 	ldw	r18,20(sp)
   16914:	dc400417 	ldw	r17,16(sp)
   16918:	dc000317 	ldw	r16,12(sp)
   1691c:	dec00d04 	addi	sp,sp,52
   16920:	f800283a 	ret
   16924:	04c03fc4 	movi	r19,255
   16928:	99c9803a 	cmpltu	r4,r19,r7
   1692c:	200890fa 	slli	r4,r4,3
   16930:	003fa406 	br	167c4 <__alt_mem_epcs_flash_controller_0+0xff8157c4>
   16934:	00803fc4 	movi	r2,255
   16938:	14c5803a 	cmpltu	r2,r2,r19
   1693c:	100490fa 	slli	r2,r2,3
   16940:	003fbc06 	br	16834 <__alt_mem_epcs_flash_controller_0+0xff815834>
   16944:	00804034 	movhi	r2,256
   16948:	10bfffc4 	addi	r2,r2,-1
   1694c:	1180a636 	bltu	r2,r6,16be8 <__umoddi3+0x57c>
   16950:	01000404 	movi	r4,16
   16954:	003f5c06 	br	166c8 <__alt_mem_epcs_flash_controller_0+0xff8156c8>
   16958:	3d0e983a 	sll	r7,r7,r20
   1695c:	34ead83a 	srl	r21,r6,r19
   16960:	8cc6d83a 	srl	r3,r17,r19
   16964:	8d10983a 	sll	r8,r17,r20
   16968:	3d6ab03a 	or	r21,r7,r21
   1696c:	a82cd43a 	srli	r22,r21,16
   16970:	84e2d83a 	srl	r17,r16,r19
   16974:	1809883a 	mov	r4,r3
   16978:	b00b883a 	mov	r5,r22
   1697c:	8a22b03a 	or	r17,r17,r8
   16980:	3524983a 	sll	r18,r6,r20
   16984:	dc400015 	stw	r17,0(sp)
   16988:	d8c00115 	stw	r3,4(sp)
   1698c:	00023ec0 	call	23ec <__umodsi3>
   16990:	d8c00117 	ldw	r3,4(sp)
   16994:	b00b883a 	mov	r5,r22
   16998:	1039883a 	mov	fp,r2
   1699c:	1809883a 	mov	r4,r3
   169a0:	00023880 	call	2388 <__udivsi3>
   169a4:	adffffcc 	andi	r23,r21,65535
   169a8:	100b883a 	mov	r5,r2
   169ac:	b809883a 	mov	r4,r23
   169b0:	1023883a 	mov	r17,r2
   169b4:	00024440 	call	2444 <__mulsi3>
   169b8:	d9400017 	ldw	r5,0(sp)
   169bc:	e008943a 	slli	r4,fp,16
   169c0:	8520983a 	sll	r16,r16,r20
   169c4:	2806d43a 	srli	r3,r5,16
   169c8:	1906b03a 	or	r3,r3,r4
   169cc:	1880042e 	bgeu	r3,r2,169e0 <__umoddi3+0x374>
   169d0:	1d47883a 	add	r3,r3,r21
   169d4:	893fffc4 	addi	r4,r17,-1
   169d8:	1d40892e 	bgeu	r3,r21,16c00 <__umoddi3+0x594>
   169dc:	2023883a 	mov	r17,r4
   169e0:	18b9c83a 	sub	fp,r3,r2
   169e4:	b00b883a 	mov	r5,r22
   169e8:	e009883a 	mov	r4,fp
   169ec:	00023ec0 	call	23ec <__umodsi3>
   169f0:	b00b883a 	mov	r5,r22
   169f4:	e009883a 	mov	r4,fp
   169f8:	d8800215 	stw	r2,8(sp)
   169fc:	00023880 	call	2388 <__udivsi3>
   16a00:	100b883a 	mov	r5,r2
   16a04:	b809883a 	mov	r4,r23
   16a08:	102d883a 	mov	r22,r2
   16a0c:	00024440 	call	2444 <__mulsi3>
   16a10:	d9800217 	ldw	r6,8(sp)
   16a14:	d8c00017 	ldw	r3,0(sp)
   16a18:	300c943a 	slli	r6,r6,16
   16a1c:	1a3fffcc 	andi	r8,r3,65535
   16a20:	4190b03a 	or	r8,r8,r6
   16a24:	4080042e 	bgeu	r8,r2,16a38 <__umoddi3+0x3cc>
   16a28:	4551883a 	add	r8,r8,r21
   16a2c:	b0ffffc4 	addi	r3,r22,-1
   16a30:	45406f2e 	bgeu	r8,r21,16bf0 <__umoddi3+0x584>
   16a34:	182d883a 	mov	r22,r3
   16a38:	880e943a 	slli	r7,r17,16
   16a3c:	9006d43a 	srli	r3,r18,16
   16a40:	91bfffcc 	andi	r6,r18,65535
   16a44:	3dacb03a 	or	r22,r7,r22
   16a48:	b02ed43a 	srli	r23,r22,16
   16a4c:	b5bfffcc 	andi	r22,r22,65535
   16a50:	300b883a 	mov	r5,r6
   16a54:	b009883a 	mov	r4,r22
   16a58:	40a3c83a 	sub	r17,r8,r2
   16a5c:	d8c00115 	stw	r3,4(sp)
   16a60:	d9800215 	stw	r6,8(sp)
   16a64:	00024440 	call	2444 <__mulsi3>
   16a68:	d9800217 	ldw	r6,8(sp)
   16a6c:	b809883a 	mov	r4,r23
   16a70:	1039883a 	mov	fp,r2
   16a74:	300b883a 	mov	r5,r6
   16a78:	00024440 	call	2444 <__mulsi3>
   16a7c:	d8c00117 	ldw	r3,4(sp)
   16a80:	b809883a 	mov	r4,r23
   16a84:	d8800215 	stw	r2,8(sp)
   16a88:	180b883a 	mov	r5,r3
   16a8c:	00024440 	call	2444 <__mulsi3>
   16a90:	d8c00117 	ldw	r3,4(sp)
   16a94:	b009883a 	mov	r4,r22
   16a98:	102f883a 	mov	r23,r2
   16a9c:	180b883a 	mov	r5,r3
   16aa0:	00024440 	call	2444 <__mulsi3>
   16aa4:	d9800217 	ldw	r6,8(sp)
   16aa8:	e006d43a 	srli	r3,fp,16
   16aac:	1185883a 	add	r2,r2,r6
   16ab0:	1885883a 	add	r2,r3,r2
   16ab4:	1180022e 	bgeu	r2,r6,16ac0 <__umoddi3+0x454>
   16ab8:	00c00074 	movhi	r3,1
   16abc:	b8ef883a 	add	r23,r23,r3
   16ac0:	1006d43a 	srli	r3,r2,16
   16ac4:	1004943a 	slli	r2,r2,16
   16ac8:	e73fffcc 	andi	fp,fp,65535
   16acc:	1dc7883a 	add	r3,r3,r23
   16ad0:	1739883a 	add	fp,r2,fp
   16ad4:	88c03a36 	bltu	r17,r3,16bc0 <__umoddi3+0x554>
   16ad8:	88c05126 	beq	r17,r3,16c20 <__umoddi3+0x5b4>
   16adc:	88c9c83a 	sub	r4,r17,r3
   16ae0:	e00f883a 	mov	r7,fp
   16ae4:	81cfc83a 	sub	r7,r16,r7
   16ae8:	81c7803a 	cmpltu	r3,r16,r7
   16aec:	20c7c83a 	sub	r3,r4,r3
   16af0:	1cc4983a 	sll	r2,r3,r19
   16af4:	3d0ed83a 	srl	r7,r7,r20
   16af8:	1d06d83a 	srl	r3,r3,r20
   16afc:	11c4b03a 	or	r2,r2,r7
   16b00:	003f7c06 	br	168f4 <__alt_mem_epcs_flash_controller_0+0xff8158f4>
   16b04:	9ca6983a 	sll	r19,r19,r18
   16b08:	88f8d83a 	srl	fp,r17,r3
   16b0c:	80c4d83a 	srl	r2,r16,r3
   16b10:	982cd43a 	srli	r22,r19,16
   16b14:	8ca2983a 	sll	r17,r17,r18
   16b18:	e009883a 	mov	r4,fp
   16b1c:	b00b883a 	mov	r5,r22
   16b20:	146ab03a 	or	r21,r2,r17
   16b24:	00023ec0 	call	23ec <__umodsi3>
   16b28:	b00b883a 	mov	r5,r22
   16b2c:	e009883a 	mov	r4,fp
   16b30:	1029883a 	mov	r20,r2
   16b34:	9dffffcc 	andi	r23,r19,65535
   16b38:	00023880 	call	2388 <__udivsi3>
   16b3c:	b809883a 	mov	r4,r23
   16b40:	100b883a 	mov	r5,r2
   16b44:	00024440 	call	2444 <__mulsi3>
   16b48:	a008943a 	slli	r4,r20,16
   16b4c:	a806d43a 	srli	r3,r21,16
   16b50:	84a8983a 	sll	r20,r16,r18
   16b54:	1906b03a 	or	r3,r3,r4
   16b58:	1880042e 	bgeu	r3,r2,16b6c <__umoddi3+0x500>
   16b5c:	1cc7883a 	add	r3,r3,r19
   16b60:	1cc00236 	bltu	r3,r19,16b6c <__umoddi3+0x500>
   16b64:	1880012e 	bgeu	r3,r2,16b6c <__umoddi3+0x500>
   16b68:	1cc7883a 	add	r3,r3,r19
   16b6c:	18a3c83a 	sub	r17,r3,r2
   16b70:	b00b883a 	mov	r5,r22
   16b74:	8809883a 	mov	r4,r17
   16b78:	00023ec0 	call	23ec <__umodsi3>
   16b7c:	b00b883a 	mov	r5,r22
   16b80:	8809883a 	mov	r4,r17
   16b84:	1021883a 	mov	r16,r2
   16b88:	00023880 	call	2388 <__udivsi3>
   16b8c:	100b883a 	mov	r5,r2
   16b90:	b809883a 	mov	r4,r23
   16b94:	8020943a 	slli	r16,r16,16
   16b98:	00024440 	call	2444 <__mulsi3>
   16b9c:	a8ffffcc 	andi	r3,r21,65535
   16ba0:	1c06b03a 	or	r3,r3,r16
   16ba4:	1880042e 	bgeu	r3,r2,16bb8 <__umoddi3+0x54c>
   16ba8:	1cc7883a 	add	r3,r3,r19
   16bac:	1cc00236 	bltu	r3,r19,16bb8 <__umoddi3+0x54c>
   16bb0:	1880012e 	bgeu	r3,r2,16bb8 <__umoddi3+0x54c>
   16bb4:	1cc7883a 	add	r3,r3,r19
   16bb8:	18a3c83a 	sub	r17,r3,r2
   16bbc:	003f2906 	br	16864 <__alt_mem_epcs_flash_controller_0+0xff815864>
   16bc0:	e48fc83a 	sub	r7,fp,r18
   16bc4:	1d49c83a 	sub	r4,r3,r21
   16bc8:	e1f9803a 	cmpltu	fp,fp,r7
   16bcc:	2739c83a 	sub	fp,r4,fp
   16bd0:	8f09c83a 	sub	r4,r17,fp
   16bd4:	003fc306 	br	16ae4 <__alt_mem_epcs_flash_controller_0+0xff815ae4>
   16bd8:	01000604 	movi	r4,24
   16bdc:	003ef906 	br	167c4 <__alt_mem_epcs_flash_controller_0+0xff8157c4>
   16be0:	00800604 	movi	r2,24
   16be4:	003f1306 	br	16834 <__alt_mem_epcs_flash_controller_0+0xff815834>
   16be8:	01000604 	movi	r4,24
   16bec:	003eb606 	br	166c8 <__alt_mem_epcs_flash_controller_0+0xff8156c8>
   16bf0:	40bf902e 	bgeu	r8,r2,16a34 <__alt_mem_epcs_flash_controller_0+0xff815a34>
   16bf4:	b5bfff84 	addi	r22,r22,-2
   16bf8:	4551883a 	add	r8,r8,r21
   16bfc:	003f8e06 	br	16a38 <__alt_mem_epcs_flash_controller_0+0xff815a38>
   16c00:	18bf762e 	bgeu	r3,r2,169dc <__alt_mem_epcs_flash_controller_0+0xff8159dc>
   16c04:	8c7fff84 	addi	r17,r17,-2
   16c08:	1d47883a 	add	r3,r3,r21
   16c0c:	003f7406 	br	169e0 <__alt_mem_epcs_flash_controller_0+0xff8159e0>
   16c10:	1cc7883a 	add	r3,r3,r19
   16c14:	003ecd06 	br	1674c <__alt_mem_epcs_flash_controller_0+0xff81574c>
   16c18:	8005883a 	mov	r2,r16
   16c1c:	003ef806 	br	16800 <__alt_mem_epcs_flash_controller_0+0xff815800>
   16c20:	873fe736 	bltu	r16,fp,16bc0 <__alt_mem_epcs_flash_controller_0+0xff815bc0>
   16c24:	e00f883a 	mov	r7,fp
   16c28:	0009883a 	mov	r4,zero
   16c2c:	003fad06 	br	16ae4 <__alt_mem_epcs_flash_controller_0+0xff815ae4>

00016c30 <__eqsf2>:
   16c30:	2006d5fa 	srli	r3,r4,23
   16c34:	280cd5fa 	srli	r6,r5,23
   16c38:	01c02034 	movhi	r7,128
   16c3c:	39ffffc4 	addi	r7,r7,-1
   16c40:	18c03fcc 	andi	r3,r3,255
   16c44:	02003fc4 	movi	r8,255
   16c48:	3904703a 	and	r2,r7,r4
   16c4c:	31803fcc 	andi	r6,r6,255
   16c50:	394e703a 	and	r7,r7,r5
   16c54:	2008d7fa 	srli	r4,r4,31
   16c58:	280ad7fa 	srli	r5,r5,31
   16c5c:	1a000d26 	beq	r3,r8,16c94 <__eqsf2+0x64>
   16c60:	02003fc4 	movi	r8,255
   16c64:	32000826 	beq	r6,r8,16c88 <__eqsf2+0x58>
   16c68:	19800226 	beq	r3,r6,16c74 <__eqsf2+0x44>
   16c6c:	00800044 	movi	r2,1
   16c70:	f800283a 	ret
   16c74:	11fffd1e 	bne	r2,r7,16c6c <__alt_mem_epcs_flash_controller_0+0xff815c6c>
   16c78:	21400926 	beq	r4,r5,16ca0 <__eqsf2+0x70>
   16c7c:	183ffb1e 	bne	r3,zero,16c6c <__alt_mem_epcs_flash_controller_0+0xff815c6c>
   16c80:	1004c03a 	cmpne	r2,r2,zero
   16c84:	f800283a 	ret
   16c88:	383ff726 	beq	r7,zero,16c68 <__alt_mem_epcs_flash_controller_0+0xff815c68>
   16c8c:	00800044 	movi	r2,1
   16c90:	f800283a 	ret
   16c94:	103ff226 	beq	r2,zero,16c60 <__alt_mem_epcs_flash_controller_0+0xff815c60>
   16c98:	00800044 	movi	r2,1
   16c9c:	f800283a 	ret
   16ca0:	0005883a 	mov	r2,zero
   16ca4:	f800283a 	ret

00016ca8 <__gesf2>:
   16ca8:	2004d5fa 	srli	r2,r4,23
   16cac:	2806d5fa 	srli	r3,r5,23
   16cb0:	01802034 	movhi	r6,128
   16cb4:	31bfffc4 	addi	r6,r6,-1
   16cb8:	10803fcc 	andi	r2,r2,255
   16cbc:	01c03fc4 	movi	r7,255
   16cc0:	3110703a 	and	r8,r6,r4
   16cc4:	18c03fcc 	andi	r3,r3,255
   16cc8:	314c703a 	and	r6,r6,r5
   16ccc:	2008d7fa 	srli	r4,r4,31
   16cd0:	280ad7fa 	srli	r5,r5,31
   16cd4:	11c01926 	beq	r2,r7,16d3c <__gesf2+0x94>
   16cd8:	01c03fc4 	movi	r7,255
   16cdc:	19c00f26 	beq	r3,r7,16d1c <__gesf2+0x74>
   16ce0:	1000061e 	bne	r2,zero,16cfc <__gesf2+0x54>
   16ce4:	400f003a 	cmpeq	r7,r8,zero
   16ce8:	1800071e 	bne	r3,zero,16d08 <__gesf2+0x60>
   16cec:	3000061e 	bne	r6,zero,16d08 <__gesf2+0x60>
   16cf0:	0005883a 	mov	r2,zero
   16cf4:	40000e1e 	bne	r8,zero,16d30 <__gesf2+0x88>
   16cf8:	f800283a 	ret
   16cfc:	18000a1e 	bne	r3,zero,16d28 <__gesf2+0x80>
   16d00:	30000b26 	beq	r6,zero,16d30 <__gesf2+0x88>
   16d04:	000f883a 	mov	r7,zero
   16d08:	29403fcc 	andi	r5,r5,255
   16d0c:	38000726 	beq	r7,zero,16d2c <__gesf2+0x84>
   16d10:	28000826 	beq	r5,zero,16d34 <__gesf2+0x8c>
   16d14:	00800044 	movi	r2,1
   16d18:	f800283a 	ret
   16d1c:	303ff026 	beq	r6,zero,16ce0 <__alt_mem_epcs_flash_controller_0+0xff815ce0>
   16d20:	00bfff84 	movi	r2,-2
   16d24:	f800283a 	ret
   16d28:	29403fcc 	andi	r5,r5,255
   16d2c:	21400526 	beq	r4,r5,16d44 <__gesf2+0x9c>
   16d30:	203ff826 	beq	r4,zero,16d14 <__alt_mem_epcs_flash_controller_0+0xff815d14>
   16d34:	00bfffc4 	movi	r2,-1
   16d38:	f800283a 	ret
   16d3c:	403fe626 	beq	r8,zero,16cd8 <__alt_mem_epcs_flash_controller_0+0xff815cd8>
   16d40:	003ff706 	br	16d20 <__alt_mem_epcs_flash_controller_0+0xff815d20>
   16d44:	18bffa16 	blt	r3,r2,16d30 <__alt_mem_epcs_flash_controller_0+0xff815d30>
   16d48:	10c00216 	blt	r2,r3,16d54 <__gesf2+0xac>
   16d4c:	323ff836 	bltu	r6,r8,16d30 <__alt_mem_epcs_flash_controller_0+0xff815d30>
   16d50:	4180022e 	bgeu	r8,r6,16d5c <__gesf2+0xb4>
   16d54:	203fef1e 	bne	r4,zero,16d14 <__alt_mem_epcs_flash_controller_0+0xff815d14>
   16d58:	003ff606 	br	16d34 <__alt_mem_epcs_flash_controller_0+0xff815d34>
   16d5c:	0005883a 	mov	r2,zero
   16d60:	f800283a 	ret

00016d64 <__lesf2>:
   16d64:	2004d5fa 	srli	r2,r4,23
   16d68:	280cd5fa 	srli	r6,r5,23
   16d6c:	00c02034 	movhi	r3,128
   16d70:	18ffffc4 	addi	r3,r3,-1
   16d74:	10803fcc 	andi	r2,r2,255
   16d78:	01c03fc4 	movi	r7,255
   16d7c:	1910703a 	and	r8,r3,r4
   16d80:	31803fcc 	andi	r6,r6,255
   16d84:	1946703a 	and	r3,r3,r5
   16d88:	2008d7fa 	srli	r4,r4,31
   16d8c:	280ad7fa 	srli	r5,r5,31
   16d90:	11c01b26 	beq	r2,r7,16e00 <__lesf2+0x9c>
   16d94:	01c03fc4 	movi	r7,255
   16d98:	31c01126 	beq	r6,r7,16de0 <__lesf2+0x7c>
   16d9c:	1000071e 	bne	r2,zero,16dbc <__lesf2+0x58>
   16da0:	400f003a 	cmpeq	r7,r8,zero
   16da4:	21003fcc 	andi	r4,r4,255
   16da8:	3000081e 	bne	r6,zero,16dcc <__lesf2+0x68>
   16dac:	1800071e 	bne	r3,zero,16dcc <__lesf2+0x68>
   16db0:	0005883a 	mov	r2,zero
   16db4:	40000f1e 	bne	r8,zero,16df4 <__lesf2+0x90>
   16db8:	f800283a 	ret
   16dbc:	21003fcc 	andi	r4,r4,255
   16dc0:	30000a1e 	bne	r6,zero,16dec <__lesf2+0x88>
   16dc4:	18000b26 	beq	r3,zero,16df4 <__lesf2+0x90>
   16dc8:	000f883a 	mov	r7,zero
   16dcc:	29403fcc 	andi	r5,r5,255
   16dd0:	38000726 	beq	r7,zero,16df0 <__lesf2+0x8c>
   16dd4:	28000826 	beq	r5,zero,16df8 <__lesf2+0x94>
   16dd8:	00800044 	movi	r2,1
   16ddc:	f800283a 	ret
   16de0:	183fee26 	beq	r3,zero,16d9c <__alt_mem_epcs_flash_controller_0+0xff815d9c>
   16de4:	00800084 	movi	r2,2
   16de8:	f800283a 	ret
   16dec:	29403fcc 	andi	r5,r5,255
   16df0:	21400626 	beq	r4,r5,16e0c <__lesf2+0xa8>
   16df4:	203ff826 	beq	r4,zero,16dd8 <__alt_mem_epcs_flash_controller_0+0xff815dd8>
   16df8:	00bfffc4 	movi	r2,-1
   16dfc:	f800283a 	ret
   16e00:	403fe426 	beq	r8,zero,16d94 <__alt_mem_epcs_flash_controller_0+0xff815d94>
   16e04:	00800084 	movi	r2,2
   16e08:	f800283a 	ret
   16e0c:	30bff916 	blt	r6,r2,16df4 <__alt_mem_epcs_flash_controller_0+0xff815df4>
   16e10:	11800216 	blt	r2,r6,16e1c <__lesf2+0xb8>
   16e14:	1a3ff736 	bltu	r3,r8,16df4 <__alt_mem_epcs_flash_controller_0+0xff815df4>
   16e18:	40c0022e 	bgeu	r8,r3,16e24 <__lesf2+0xc0>
   16e1c:	203fee1e 	bne	r4,zero,16dd8 <__alt_mem_epcs_flash_controller_0+0xff815dd8>
   16e20:	003ff506 	br	16df8 <__alt_mem_epcs_flash_controller_0+0xff815df8>
   16e24:	0005883a 	mov	r2,zero
   16e28:	f800283a 	ret

00016e2c <__adddf3>:
   16e2c:	02c00434 	movhi	r11,16
   16e30:	5affffc4 	addi	r11,r11,-1
   16e34:	2806d7fa 	srli	r3,r5,31
   16e38:	2ad4703a 	and	r10,r5,r11
   16e3c:	3ad2703a 	and	r9,r7,r11
   16e40:	3804d53a 	srli	r2,r7,20
   16e44:	3018d77a 	srli	r12,r6,29
   16e48:	280ad53a 	srli	r5,r5,20
   16e4c:	501490fa 	slli	r10,r10,3
   16e50:	2010d77a 	srli	r8,r4,29
   16e54:	481290fa 	slli	r9,r9,3
   16e58:	380ed7fa 	srli	r7,r7,31
   16e5c:	defffb04 	addi	sp,sp,-20
   16e60:	dc800215 	stw	r18,8(sp)
   16e64:	dc400115 	stw	r17,4(sp)
   16e68:	dc000015 	stw	r16,0(sp)
   16e6c:	dfc00415 	stw	ra,16(sp)
   16e70:	dcc00315 	stw	r19,12(sp)
   16e74:	1c803fcc 	andi	r18,r3,255
   16e78:	2c01ffcc 	andi	r16,r5,2047
   16e7c:	5210b03a 	or	r8,r10,r8
   16e80:	202290fa 	slli	r17,r4,3
   16e84:	1081ffcc 	andi	r2,r2,2047
   16e88:	4b12b03a 	or	r9,r9,r12
   16e8c:	300c90fa 	slli	r6,r6,3
   16e90:	91c07526 	beq	r18,r7,17068 <__adddf3+0x23c>
   16e94:	8087c83a 	sub	r3,r16,r2
   16e98:	00c0ab0e 	bge	zero,r3,17148 <__adddf3+0x31c>
   16e9c:	10002a1e 	bne	r2,zero,16f48 <__adddf3+0x11c>
   16ea0:	4984b03a 	or	r2,r9,r6
   16ea4:	1000961e 	bne	r2,zero,17100 <__adddf3+0x2d4>
   16ea8:	888001cc 	andi	r2,r17,7
   16eac:	10000726 	beq	r2,zero,16ecc <__adddf3+0xa0>
   16eb0:	888003cc 	andi	r2,r17,15
   16eb4:	00c00104 	movi	r3,4
   16eb8:	10c00426 	beq	r2,r3,16ecc <__adddf3+0xa0>
   16ebc:	88c7883a 	add	r3,r17,r3
   16ec0:	1c63803a 	cmpltu	r17,r3,r17
   16ec4:	4451883a 	add	r8,r8,r17
   16ec8:	1823883a 	mov	r17,r3
   16ecc:	4080202c 	andhi	r2,r8,128
   16ed0:	10005926 	beq	r2,zero,17038 <__adddf3+0x20c>
   16ed4:	84000044 	addi	r16,r16,1
   16ed8:	0081ffc4 	movi	r2,2047
   16edc:	8080ba26 	beq	r16,r2,171c8 <__adddf3+0x39c>
   16ee0:	00bfe034 	movhi	r2,65408
   16ee4:	10bfffc4 	addi	r2,r2,-1
   16ee8:	4090703a 	and	r8,r8,r2
   16eec:	4004977a 	slli	r2,r8,29
   16ef0:	4010927a 	slli	r8,r8,9
   16ef4:	8822d0fa 	srli	r17,r17,3
   16ef8:	8401ffcc 	andi	r16,r16,2047
   16efc:	4010d33a 	srli	r8,r8,12
   16f00:	9007883a 	mov	r3,r18
   16f04:	1444b03a 	or	r2,r2,r17
   16f08:	8401ffcc 	andi	r16,r16,2047
   16f0c:	8020953a 	slli	r16,r16,20
   16f10:	18c03fcc 	andi	r3,r3,255
   16f14:	01000434 	movhi	r4,16
   16f18:	213fffc4 	addi	r4,r4,-1
   16f1c:	180697fa 	slli	r3,r3,31
   16f20:	4110703a 	and	r8,r8,r4
   16f24:	4410b03a 	or	r8,r8,r16
   16f28:	40c6b03a 	or	r3,r8,r3
   16f2c:	dfc00417 	ldw	ra,16(sp)
   16f30:	dcc00317 	ldw	r19,12(sp)
   16f34:	dc800217 	ldw	r18,8(sp)
   16f38:	dc400117 	ldw	r17,4(sp)
   16f3c:	dc000017 	ldw	r16,0(sp)
   16f40:	dec00504 	addi	sp,sp,20
   16f44:	f800283a 	ret
   16f48:	0081ffc4 	movi	r2,2047
   16f4c:	80bfd626 	beq	r16,r2,16ea8 <__alt_mem_epcs_flash_controller_0+0xff815ea8>
   16f50:	4a402034 	orhi	r9,r9,128
   16f54:	00800e04 	movi	r2,56
   16f58:	10c09f16 	blt	r2,r3,171d8 <__adddf3+0x3ac>
   16f5c:	008007c4 	movi	r2,31
   16f60:	10c0c216 	blt	r2,r3,1726c <__adddf3+0x440>
   16f64:	00800804 	movi	r2,32
   16f68:	10c5c83a 	sub	r2,r2,r3
   16f6c:	488a983a 	sll	r5,r9,r2
   16f70:	30c8d83a 	srl	r4,r6,r3
   16f74:	3084983a 	sll	r2,r6,r2
   16f78:	48c6d83a 	srl	r3,r9,r3
   16f7c:	290cb03a 	or	r6,r5,r4
   16f80:	1004c03a 	cmpne	r2,r2,zero
   16f84:	308cb03a 	or	r6,r6,r2
   16f88:	898dc83a 	sub	r6,r17,r6
   16f8c:	89a3803a 	cmpltu	r17,r17,r6
   16f90:	40d1c83a 	sub	r8,r8,r3
   16f94:	4451c83a 	sub	r8,r8,r17
   16f98:	3023883a 	mov	r17,r6
   16f9c:	4080202c 	andhi	r2,r8,128
   16fa0:	10002326 	beq	r2,zero,17030 <__adddf3+0x204>
   16fa4:	04c02034 	movhi	r19,128
   16fa8:	9cffffc4 	addi	r19,r19,-1
   16fac:	44e6703a 	and	r19,r8,r19
   16fb0:	98007626 	beq	r19,zero,1718c <__adddf3+0x360>
   16fb4:	9809883a 	mov	r4,r19
   16fb8:	00198140 	call	19814 <__clzsi2>
   16fbc:	10fffe04 	addi	r3,r2,-8
   16fc0:	010007c4 	movi	r4,31
   16fc4:	20c07716 	blt	r4,r3,171a4 <__adddf3+0x378>
   16fc8:	00800804 	movi	r2,32
   16fcc:	10c5c83a 	sub	r2,r2,r3
   16fd0:	8884d83a 	srl	r2,r17,r2
   16fd4:	98d0983a 	sll	r8,r19,r3
   16fd8:	88e2983a 	sll	r17,r17,r3
   16fdc:	1204b03a 	or	r2,r2,r8
   16fe0:	1c007416 	blt	r3,r16,171b4 <__adddf3+0x388>
   16fe4:	1c21c83a 	sub	r16,r3,r16
   16fe8:	82000044 	addi	r8,r16,1
   16fec:	00c007c4 	movi	r3,31
   16ff0:	1a009116 	blt	r3,r8,17238 <__adddf3+0x40c>
   16ff4:	00c00804 	movi	r3,32
   16ff8:	1a07c83a 	sub	r3,r3,r8
   16ffc:	8a08d83a 	srl	r4,r17,r8
   17000:	88e2983a 	sll	r17,r17,r3
   17004:	10c6983a 	sll	r3,r2,r3
   17008:	1210d83a 	srl	r8,r2,r8
   1700c:	8804c03a 	cmpne	r2,r17,zero
   17010:	1906b03a 	or	r3,r3,r4
   17014:	18a2b03a 	or	r17,r3,r2
   17018:	0021883a 	mov	r16,zero
   1701c:	003fa206 	br	16ea8 <__alt_mem_epcs_flash_controller_0+0xff815ea8>
   17020:	1890b03a 	or	r8,r3,r2
   17024:	40017d26 	beq	r8,zero,1761c <__adddf3+0x7f0>
   17028:	1011883a 	mov	r8,r2
   1702c:	1823883a 	mov	r17,r3
   17030:	888001cc 	andi	r2,r17,7
   17034:	103f9e1e 	bne	r2,zero,16eb0 <__alt_mem_epcs_flash_controller_0+0xff815eb0>
   17038:	4004977a 	slli	r2,r8,29
   1703c:	8822d0fa 	srli	r17,r17,3
   17040:	4010d0fa 	srli	r8,r8,3
   17044:	9007883a 	mov	r3,r18
   17048:	1444b03a 	or	r2,r2,r17
   1704c:	0101ffc4 	movi	r4,2047
   17050:	81002426 	beq	r16,r4,170e4 <__adddf3+0x2b8>
   17054:	8120703a 	and	r16,r16,r4
   17058:	01000434 	movhi	r4,16
   1705c:	213fffc4 	addi	r4,r4,-1
   17060:	4110703a 	and	r8,r8,r4
   17064:	003fa806 	br	16f08 <__alt_mem_epcs_flash_controller_0+0xff815f08>
   17068:	8089c83a 	sub	r4,r16,r2
   1706c:	01005e0e 	bge	zero,r4,171e8 <__adddf3+0x3bc>
   17070:	10002b26 	beq	r2,zero,17120 <__adddf3+0x2f4>
   17074:	0081ffc4 	movi	r2,2047
   17078:	80bf8b26 	beq	r16,r2,16ea8 <__alt_mem_epcs_flash_controller_0+0xff815ea8>
   1707c:	4a402034 	orhi	r9,r9,128
   17080:	00800e04 	movi	r2,56
   17084:	1100a40e 	bge	r2,r4,17318 <__adddf3+0x4ec>
   17088:	498cb03a 	or	r6,r9,r6
   1708c:	300ac03a 	cmpne	r5,r6,zero
   17090:	0013883a 	mov	r9,zero
   17094:	2c4b883a 	add	r5,r5,r17
   17098:	2c63803a 	cmpltu	r17,r5,r17
   1709c:	4a11883a 	add	r8,r9,r8
   170a0:	8a11883a 	add	r8,r17,r8
   170a4:	2823883a 	mov	r17,r5
   170a8:	4080202c 	andhi	r2,r8,128
   170ac:	103fe026 	beq	r2,zero,17030 <__alt_mem_epcs_flash_controller_0+0xff816030>
   170b0:	84000044 	addi	r16,r16,1
   170b4:	0081ffc4 	movi	r2,2047
   170b8:	8080d226 	beq	r16,r2,17404 <__adddf3+0x5d8>
   170bc:	00bfe034 	movhi	r2,65408
   170c0:	10bfffc4 	addi	r2,r2,-1
   170c4:	4090703a 	and	r8,r8,r2
   170c8:	880ad07a 	srli	r5,r17,1
   170cc:	400897fa 	slli	r4,r8,31
   170d0:	88c0004c 	andi	r3,r17,1
   170d4:	28e2b03a 	or	r17,r5,r3
   170d8:	4010d07a 	srli	r8,r8,1
   170dc:	2462b03a 	or	r17,r4,r17
   170e0:	003f7106 	br	16ea8 <__alt_mem_epcs_flash_controller_0+0xff815ea8>
   170e4:	4088b03a 	or	r4,r8,r2
   170e8:	20014526 	beq	r4,zero,17600 <__adddf3+0x7d4>
   170ec:	01000434 	movhi	r4,16
   170f0:	42000234 	orhi	r8,r8,8
   170f4:	213fffc4 	addi	r4,r4,-1
   170f8:	4110703a 	and	r8,r8,r4
   170fc:	003f8206 	br	16f08 <__alt_mem_epcs_flash_controller_0+0xff815f08>
   17100:	18ffffc4 	addi	r3,r3,-1
   17104:	1800491e 	bne	r3,zero,1722c <__adddf3+0x400>
   17108:	898bc83a 	sub	r5,r17,r6
   1710c:	8963803a 	cmpltu	r17,r17,r5
   17110:	4251c83a 	sub	r8,r8,r9
   17114:	4451c83a 	sub	r8,r8,r17
   17118:	2823883a 	mov	r17,r5
   1711c:	003f9f06 	br	16f9c <__alt_mem_epcs_flash_controller_0+0xff815f9c>
   17120:	4984b03a 	or	r2,r9,r6
   17124:	103f6026 	beq	r2,zero,16ea8 <__alt_mem_epcs_flash_controller_0+0xff815ea8>
   17128:	213fffc4 	addi	r4,r4,-1
   1712c:	2000931e 	bne	r4,zero,1737c <__adddf3+0x550>
   17130:	898d883a 	add	r6,r17,r6
   17134:	3463803a 	cmpltu	r17,r6,r17
   17138:	4251883a 	add	r8,r8,r9
   1713c:	8a11883a 	add	r8,r17,r8
   17140:	3023883a 	mov	r17,r6
   17144:	003fd806 	br	170a8 <__alt_mem_epcs_flash_controller_0+0xff8160a8>
   17148:	1800541e 	bne	r3,zero,1729c <__adddf3+0x470>
   1714c:	80800044 	addi	r2,r16,1
   17150:	1081ffcc 	andi	r2,r2,2047
   17154:	00c00044 	movi	r3,1
   17158:	1880a00e 	bge	r3,r2,173dc <__adddf3+0x5b0>
   1715c:	8989c83a 	sub	r4,r17,r6
   17160:	8905803a 	cmpltu	r2,r17,r4
   17164:	4267c83a 	sub	r19,r8,r9
   17168:	98a7c83a 	sub	r19,r19,r2
   1716c:	9880202c 	andhi	r2,r19,128
   17170:	10006326 	beq	r2,zero,17300 <__adddf3+0x4d4>
   17174:	3463c83a 	sub	r17,r6,r17
   17178:	4a07c83a 	sub	r3,r9,r8
   1717c:	344d803a 	cmpltu	r6,r6,r17
   17180:	19a7c83a 	sub	r19,r3,r6
   17184:	3825883a 	mov	r18,r7
   17188:	983f8a1e 	bne	r19,zero,16fb4 <__alt_mem_epcs_flash_controller_0+0xff815fb4>
   1718c:	8809883a 	mov	r4,r17
   17190:	00198140 	call	19814 <__clzsi2>
   17194:	10800804 	addi	r2,r2,32
   17198:	10fffe04 	addi	r3,r2,-8
   1719c:	010007c4 	movi	r4,31
   171a0:	20ff890e 	bge	r4,r3,16fc8 <__alt_mem_epcs_flash_controller_0+0xff815fc8>
   171a4:	10bff604 	addi	r2,r2,-40
   171a8:	8884983a 	sll	r2,r17,r2
   171ac:	0023883a 	mov	r17,zero
   171b0:	1c3f8c0e 	bge	r3,r16,16fe4 <__alt_mem_epcs_flash_controller_0+0xff815fe4>
   171b4:	023fe034 	movhi	r8,65408
   171b8:	423fffc4 	addi	r8,r8,-1
   171bc:	80e1c83a 	sub	r16,r16,r3
   171c0:	1210703a 	and	r8,r2,r8
   171c4:	003f3806 	br	16ea8 <__alt_mem_epcs_flash_controller_0+0xff815ea8>
   171c8:	9007883a 	mov	r3,r18
   171cc:	0011883a 	mov	r8,zero
   171d0:	0005883a 	mov	r2,zero
   171d4:	003f4c06 	br	16f08 <__alt_mem_epcs_flash_controller_0+0xff815f08>
   171d8:	498cb03a 	or	r6,r9,r6
   171dc:	300cc03a 	cmpne	r6,r6,zero
   171e0:	0007883a 	mov	r3,zero
   171e4:	003f6806 	br	16f88 <__alt_mem_epcs_flash_controller_0+0xff815f88>
   171e8:	20009c1e 	bne	r4,zero,1745c <__adddf3+0x630>
   171ec:	80800044 	addi	r2,r16,1
   171f0:	1141ffcc 	andi	r5,r2,2047
   171f4:	01000044 	movi	r4,1
   171f8:	2140670e 	bge	r4,r5,17398 <__adddf3+0x56c>
   171fc:	0101ffc4 	movi	r4,2047
   17200:	11007f26 	beq	r2,r4,17400 <__adddf3+0x5d4>
   17204:	898d883a 	add	r6,r17,r6
   17208:	4247883a 	add	r3,r8,r9
   1720c:	3451803a 	cmpltu	r8,r6,r17
   17210:	40d1883a 	add	r8,r8,r3
   17214:	402297fa 	slli	r17,r8,31
   17218:	300cd07a 	srli	r6,r6,1
   1721c:	4010d07a 	srli	r8,r8,1
   17220:	1021883a 	mov	r16,r2
   17224:	89a2b03a 	or	r17,r17,r6
   17228:	003f1f06 	br	16ea8 <__alt_mem_epcs_flash_controller_0+0xff815ea8>
   1722c:	0081ffc4 	movi	r2,2047
   17230:	80bf481e 	bne	r16,r2,16f54 <__alt_mem_epcs_flash_controller_0+0xff815f54>
   17234:	003f1c06 	br	16ea8 <__alt_mem_epcs_flash_controller_0+0xff815ea8>
   17238:	843ff844 	addi	r16,r16,-31
   1723c:	01000804 	movi	r4,32
   17240:	1406d83a 	srl	r3,r2,r16
   17244:	41005026 	beq	r8,r4,17388 <__adddf3+0x55c>
   17248:	01001004 	movi	r4,64
   1724c:	2211c83a 	sub	r8,r4,r8
   17250:	1204983a 	sll	r2,r2,r8
   17254:	88a2b03a 	or	r17,r17,r2
   17258:	8822c03a 	cmpne	r17,r17,zero
   1725c:	1c62b03a 	or	r17,r3,r17
   17260:	0011883a 	mov	r8,zero
   17264:	0021883a 	mov	r16,zero
   17268:	003f7106 	br	17030 <__alt_mem_epcs_flash_controller_0+0xff816030>
   1726c:	193ff804 	addi	r4,r3,-32
   17270:	00800804 	movi	r2,32
   17274:	4908d83a 	srl	r4,r9,r4
   17278:	18804526 	beq	r3,r2,17390 <__adddf3+0x564>
   1727c:	00801004 	movi	r2,64
   17280:	10c5c83a 	sub	r2,r2,r3
   17284:	4886983a 	sll	r3,r9,r2
   17288:	198cb03a 	or	r6,r3,r6
   1728c:	300cc03a 	cmpne	r6,r6,zero
   17290:	218cb03a 	or	r6,r4,r6
   17294:	0007883a 	mov	r3,zero
   17298:	003f3b06 	br	16f88 <__alt_mem_epcs_flash_controller_0+0xff815f88>
   1729c:	80002a26 	beq	r16,zero,17348 <__adddf3+0x51c>
   172a0:	0101ffc4 	movi	r4,2047
   172a4:	11006826 	beq	r2,r4,17448 <__adddf3+0x61c>
   172a8:	00c7c83a 	sub	r3,zero,r3
   172ac:	42002034 	orhi	r8,r8,128
   172b0:	01000e04 	movi	r4,56
   172b4:	20c07c16 	blt	r4,r3,174a8 <__adddf3+0x67c>
   172b8:	010007c4 	movi	r4,31
   172bc:	20c0da16 	blt	r4,r3,17628 <__adddf3+0x7fc>
   172c0:	01000804 	movi	r4,32
   172c4:	20c9c83a 	sub	r4,r4,r3
   172c8:	4114983a 	sll	r10,r8,r4
   172cc:	88cad83a 	srl	r5,r17,r3
   172d0:	8908983a 	sll	r4,r17,r4
   172d4:	40c6d83a 	srl	r3,r8,r3
   172d8:	5162b03a 	or	r17,r10,r5
   172dc:	2008c03a 	cmpne	r4,r4,zero
   172e0:	8922b03a 	or	r17,r17,r4
   172e4:	3463c83a 	sub	r17,r6,r17
   172e8:	48c7c83a 	sub	r3,r9,r3
   172ec:	344d803a 	cmpltu	r6,r6,r17
   172f0:	1991c83a 	sub	r8,r3,r6
   172f4:	1021883a 	mov	r16,r2
   172f8:	3825883a 	mov	r18,r7
   172fc:	003f2706 	br	16f9c <__alt_mem_epcs_flash_controller_0+0xff815f9c>
   17300:	24d0b03a 	or	r8,r4,r19
   17304:	40001b1e 	bne	r8,zero,17374 <__adddf3+0x548>
   17308:	0005883a 	mov	r2,zero
   1730c:	0007883a 	mov	r3,zero
   17310:	0021883a 	mov	r16,zero
   17314:	003f4d06 	br	1704c <__alt_mem_epcs_flash_controller_0+0xff81604c>
   17318:	008007c4 	movi	r2,31
   1731c:	11003c16 	blt	r2,r4,17410 <__adddf3+0x5e4>
   17320:	00800804 	movi	r2,32
   17324:	1105c83a 	sub	r2,r2,r4
   17328:	488e983a 	sll	r7,r9,r2
   1732c:	310ad83a 	srl	r5,r6,r4
   17330:	3084983a 	sll	r2,r6,r2
   17334:	4912d83a 	srl	r9,r9,r4
   17338:	394ab03a 	or	r5,r7,r5
   1733c:	1004c03a 	cmpne	r2,r2,zero
   17340:	288ab03a 	or	r5,r5,r2
   17344:	003f5306 	br	17094 <__alt_mem_epcs_flash_controller_0+0xff816094>
   17348:	4448b03a 	or	r4,r8,r17
   1734c:	20003e26 	beq	r4,zero,17448 <__adddf3+0x61c>
   17350:	00c6303a 	nor	r3,zero,r3
   17354:	18003a1e 	bne	r3,zero,17440 <__adddf3+0x614>
   17358:	3463c83a 	sub	r17,r6,r17
   1735c:	4a07c83a 	sub	r3,r9,r8
   17360:	344d803a 	cmpltu	r6,r6,r17
   17364:	1991c83a 	sub	r8,r3,r6
   17368:	1021883a 	mov	r16,r2
   1736c:	3825883a 	mov	r18,r7
   17370:	003f0a06 	br	16f9c <__alt_mem_epcs_flash_controller_0+0xff815f9c>
   17374:	2023883a 	mov	r17,r4
   17378:	003f0d06 	br	16fb0 <__alt_mem_epcs_flash_controller_0+0xff815fb0>
   1737c:	0081ffc4 	movi	r2,2047
   17380:	80bf3f1e 	bne	r16,r2,17080 <__alt_mem_epcs_flash_controller_0+0xff816080>
   17384:	003ec806 	br	16ea8 <__alt_mem_epcs_flash_controller_0+0xff815ea8>
   17388:	0005883a 	mov	r2,zero
   1738c:	003fb106 	br	17254 <__alt_mem_epcs_flash_controller_0+0xff816254>
   17390:	0007883a 	mov	r3,zero
   17394:	003fbc06 	br	17288 <__alt_mem_epcs_flash_controller_0+0xff816288>
   17398:	4444b03a 	or	r2,r8,r17
   1739c:	8000871e 	bne	r16,zero,175bc <__adddf3+0x790>
   173a0:	1000ba26 	beq	r2,zero,1768c <__adddf3+0x860>
   173a4:	4984b03a 	or	r2,r9,r6
   173a8:	103ebf26 	beq	r2,zero,16ea8 <__alt_mem_epcs_flash_controller_0+0xff815ea8>
   173ac:	8985883a 	add	r2,r17,r6
   173b0:	4247883a 	add	r3,r8,r9
   173b4:	1451803a 	cmpltu	r8,r2,r17
   173b8:	40d1883a 	add	r8,r8,r3
   173bc:	40c0202c 	andhi	r3,r8,128
   173c0:	1023883a 	mov	r17,r2
   173c4:	183f1a26 	beq	r3,zero,17030 <__alt_mem_epcs_flash_controller_0+0xff816030>
   173c8:	00bfe034 	movhi	r2,65408
   173cc:	10bfffc4 	addi	r2,r2,-1
   173d0:	2021883a 	mov	r16,r4
   173d4:	4090703a 	and	r8,r8,r2
   173d8:	003eb306 	br	16ea8 <__alt_mem_epcs_flash_controller_0+0xff815ea8>
   173dc:	4444b03a 	or	r2,r8,r17
   173e0:	8000291e 	bne	r16,zero,17488 <__adddf3+0x65c>
   173e4:	10004b1e 	bne	r2,zero,17514 <__adddf3+0x6e8>
   173e8:	4990b03a 	or	r8,r9,r6
   173ec:	40008b26 	beq	r8,zero,1761c <__adddf3+0x7f0>
   173f0:	4811883a 	mov	r8,r9
   173f4:	3023883a 	mov	r17,r6
   173f8:	3825883a 	mov	r18,r7
   173fc:	003eaa06 	br	16ea8 <__alt_mem_epcs_flash_controller_0+0xff815ea8>
   17400:	1021883a 	mov	r16,r2
   17404:	0011883a 	mov	r8,zero
   17408:	0005883a 	mov	r2,zero
   1740c:	003f0f06 	br	1704c <__alt_mem_epcs_flash_controller_0+0xff81604c>
   17410:	217ff804 	addi	r5,r4,-32
   17414:	00800804 	movi	r2,32
   17418:	494ad83a 	srl	r5,r9,r5
   1741c:	20807d26 	beq	r4,r2,17614 <__adddf3+0x7e8>
   17420:	00801004 	movi	r2,64
   17424:	1109c83a 	sub	r4,r2,r4
   17428:	4912983a 	sll	r9,r9,r4
   1742c:	498cb03a 	or	r6,r9,r6
   17430:	300cc03a 	cmpne	r6,r6,zero
   17434:	298ab03a 	or	r5,r5,r6
   17438:	0013883a 	mov	r9,zero
   1743c:	003f1506 	br	17094 <__alt_mem_epcs_flash_controller_0+0xff816094>
   17440:	0101ffc4 	movi	r4,2047
   17444:	113f9a1e 	bne	r2,r4,172b0 <__alt_mem_epcs_flash_controller_0+0xff8162b0>
   17448:	4811883a 	mov	r8,r9
   1744c:	3023883a 	mov	r17,r6
   17450:	1021883a 	mov	r16,r2
   17454:	3825883a 	mov	r18,r7
   17458:	003e9306 	br	16ea8 <__alt_mem_epcs_flash_controller_0+0xff815ea8>
   1745c:	8000161e 	bne	r16,zero,174b8 <__adddf3+0x68c>
   17460:	444ab03a 	or	r5,r8,r17
   17464:	28005126 	beq	r5,zero,175ac <__adddf3+0x780>
   17468:	0108303a 	nor	r4,zero,r4
   1746c:	20004d1e 	bne	r4,zero,175a4 <__adddf3+0x778>
   17470:	89a3883a 	add	r17,r17,r6
   17474:	4253883a 	add	r9,r8,r9
   17478:	898d803a 	cmpltu	r6,r17,r6
   1747c:	3251883a 	add	r8,r6,r9
   17480:	1021883a 	mov	r16,r2
   17484:	003f0806 	br	170a8 <__alt_mem_epcs_flash_controller_0+0xff8160a8>
   17488:	1000301e 	bne	r2,zero,1754c <__adddf3+0x720>
   1748c:	4984b03a 	or	r2,r9,r6
   17490:	10007126 	beq	r2,zero,17658 <__adddf3+0x82c>
   17494:	4811883a 	mov	r8,r9
   17498:	3023883a 	mov	r17,r6
   1749c:	3825883a 	mov	r18,r7
   174a0:	0401ffc4 	movi	r16,2047
   174a4:	003e8006 	br	16ea8 <__alt_mem_epcs_flash_controller_0+0xff815ea8>
   174a8:	4462b03a 	or	r17,r8,r17
   174ac:	8822c03a 	cmpne	r17,r17,zero
   174b0:	0007883a 	mov	r3,zero
   174b4:	003f8b06 	br	172e4 <__alt_mem_epcs_flash_controller_0+0xff8162e4>
   174b8:	0141ffc4 	movi	r5,2047
   174bc:	11403b26 	beq	r2,r5,175ac <__adddf3+0x780>
   174c0:	0109c83a 	sub	r4,zero,r4
   174c4:	42002034 	orhi	r8,r8,128
   174c8:	01400e04 	movi	r5,56
   174cc:	29006716 	blt	r5,r4,1766c <__adddf3+0x840>
   174d0:	014007c4 	movi	r5,31
   174d4:	29007016 	blt	r5,r4,17698 <__adddf3+0x86c>
   174d8:	01400804 	movi	r5,32
   174dc:	290bc83a 	sub	r5,r5,r4
   174e0:	4154983a 	sll	r10,r8,r5
   174e4:	890ed83a 	srl	r7,r17,r4
   174e8:	894a983a 	sll	r5,r17,r5
   174ec:	4108d83a 	srl	r4,r8,r4
   174f0:	51e2b03a 	or	r17,r10,r7
   174f4:	280ac03a 	cmpne	r5,r5,zero
   174f8:	8962b03a 	or	r17,r17,r5
   174fc:	89a3883a 	add	r17,r17,r6
   17500:	2253883a 	add	r9,r4,r9
   17504:	898d803a 	cmpltu	r6,r17,r6
   17508:	3251883a 	add	r8,r6,r9
   1750c:	1021883a 	mov	r16,r2
   17510:	003ee506 	br	170a8 <__alt_mem_epcs_flash_controller_0+0xff8160a8>
   17514:	4984b03a 	or	r2,r9,r6
   17518:	103e6326 	beq	r2,zero,16ea8 <__alt_mem_epcs_flash_controller_0+0xff815ea8>
   1751c:	8987c83a 	sub	r3,r17,r6
   17520:	88c9803a 	cmpltu	r4,r17,r3
   17524:	4245c83a 	sub	r2,r8,r9
   17528:	1105c83a 	sub	r2,r2,r4
   1752c:	1100202c 	andhi	r4,r2,128
   17530:	203ebb26 	beq	r4,zero,17020 <__alt_mem_epcs_flash_controller_0+0xff816020>
   17534:	3463c83a 	sub	r17,r6,r17
   17538:	4a07c83a 	sub	r3,r9,r8
   1753c:	344d803a 	cmpltu	r6,r6,r17
   17540:	1991c83a 	sub	r8,r3,r6
   17544:	3825883a 	mov	r18,r7
   17548:	003e5706 	br	16ea8 <__alt_mem_epcs_flash_controller_0+0xff815ea8>
   1754c:	4984b03a 	or	r2,r9,r6
   17550:	10002e26 	beq	r2,zero,1760c <__adddf3+0x7e0>
   17554:	4004d0fa 	srli	r2,r8,3
   17558:	8822d0fa 	srli	r17,r17,3
   1755c:	4010977a 	slli	r8,r8,29
   17560:	10c0022c 	andhi	r3,r2,8
   17564:	4462b03a 	or	r17,r8,r17
   17568:	18000826 	beq	r3,zero,1758c <__adddf3+0x760>
   1756c:	4808d0fa 	srli	r4,r9,3
   17570:	20c0022c 	andhi	r3,r4,8
   17574:	1800051e 	bne	r3,zero,1758c <__adddf3+0x760>
   17578:	300cd0fa 	srli	r6,r6,3
   1757c:	4806977a 	slli	r3,r9,29
   17580:	2005883a 	mov	r2,r4
   17584:	3825883a 	mov	r18,r7
   17588:	19a2b03a 	or	r17,r3,r6
   1758c:	8810d77a 	srli	r8,r17,29
   17590:	100490fa 	slli	r2,r2,3
   17594:	882290fa 	slli	r17,r17,3
   17598:	0401ffc4 	movi	r16,2047
   1759c:	4090b03a 	or	r8,r8,r2
   175a0:	003e4106 	br	16ea8 <__alt_mem_epcs_flash_controller_0+0xff815ea8>
   175a4:	0141ffc4 	movi	r5,2047
   175a8:	117fc71e 	bne	r2,r5,174c8 <__alt_mem_epcs_flash_controller_0+0xff8164c8>
   175ac:	4811883a 	mov	r8,r9
   175b0:	3023883a 	mov	r17,r6
   175b4:	1021883a 	mov	r16,r2
   175b8:	003e3b06 	br	16ea8 <__alt_mem_epcs_flash_controller_0+0xff815ea8>
   175bc:	10002f26 	beq	r2,zero,1767c <__adddf3+0x850>
   175c0:	4984b03a 	or	r2,r9,r6
   175c4:	10001126 	beq	r2,zero,1760c <__adddf3+0x7e0>
   175c8:	4004d0fa 	srli	r2,r8,3
   175cc:	8822d0fa 	srli	r17,r17,3
   175d0:	4010977a 	slli	r8,r8,29
   175d4:	10c0022c 	andhi	r3,r2,8
   175d8:	4462b03a 	or	r17,r8,r17
   175dc:	183feb26 	beq	r3,zero,1758c <__alt_mem_epcs_flash_controller_0+0xff81658c>
   175e0:	4808d0fa 	srli	r4,r9,3
   175e4:	20c0022c 	andhi	r3,r4,8
   175e8:	183fe81e 	bne	r3,zero,1758c <__alt_mem_epcs_flash_controller_0+0xff81658c>
   175ec:	300cd0fa 	srli	r6,r6,3
   175f0:	4806977a 	slli	r3,r9,29
   175f4:	2005883a 	mov	r2,r4
   175f8:	19a2b03a 	or	r17,r3,r6
   175fc:	003fe306 	br	1758c <__alt_mem_epcs_flash_controller_0+0xff81658c>
   17600:	0011883a 	mov	r8,zero
   17604:	0005883a 	mov	r2,zero
   17608:	003e3f06 	br	16f08 <__alt_mem_epcs_flash_controller_0+0xff815f08>
   1760c:	0401ffc4 	movi	r16,2047
   17610:	003e2506 	br	16ea8 <__alt_mem_epcs_flash_controller_0+0xff815ea8>
   17614:	0013883a 	mov	r9,zero
   17618:	003f8406 	br	1742c <__alt_mem_epcs_flash_controller_0+0xff81642c>
   1761c:	0005883a 	mov	r2,zero
   17620:	0007883a 	mov	r3,zero
   17624:	003e8906 	br	1704c <__alt_mem_epcs_flash_controller_0+0xff81604c>
   17628:	197ff804 	addi	r5,r3,-32
   1762c:	01000804 	movi	r4,32
   17630:	414ad83a 	srl	r5,r8,r5
   17634:	19002426 	beq	r3,r4,176c8 <__adddf3+0x89c>
   17638:	01001004 	movi	r4,64
   1763c:	20c7c83a 	sub	r3,r4,r3
   17640:	40c6983a 	sll	r3,r8,r3
   17644:	1c46b03a 	or	r3,r3,r17
   17648:	1806c03a 	cmpne	r3,r3,zero
   1764c:	28e2b03a 	or	r17,r5,r3
   17650:	0007883a 	mov	r3,zero
   17654:	003f2306 	br	172e4 <__alt_mem_epcs_flash_controller_0+0xff8162e4>
   17658:	0007883a 	mov	r3,zero
   1765c:	5811883a 	mov	r8,r11
   17660:	00bfffc4 	movi	r2,-1
   17664:	0401ffc4 	movi	r16,2047
   17668:	003e7806 	br	1704c <__alt_mem_epcs_flash_controller_0+0xff81604c>
   1766c:	4462b03a 	or	r17,r8,r17
   17670:	8822c03a 	cmpne	r17,r17,zero
   17674:	0009883a 	mov	r4,zero
   17678:	003fa006 	br	174fc <__alt_mem_epcs_flash_controller_0+0xff8164fc>
   1767c:	4811883a 	mov	r8,r9
   17680:	3023883a 	mov	r17,r6
   17684:	0401ffc4 	movi	r16,2047
   17688:	003e0706 	br	16ea8 <__alt_mem_epcs_flash_controller_0+0xff815ea8>
   1768c:	4811883a 	mov	r8,r9
   17690:	3023883a 	mov	r17,r6
   17694:	003e0406 	br	16ea8 <__alt_mem_epcs_flash_controller_0+0xff815ea8>
   17698:	21fff804 	addi	r7,r4,-32
   1769c:	01400804 	movi	r5,32
   176a0:	41ced83a 	srl	r7,r8,r7
   176a4:	21400a26 	beq	r4,r5,176d0 <__adddf3+0x8a4>
   176a8:	01401004 	movi	r5,64
   176ac:	2909c83a 	sub	r4,r5,r4
   176b0:	4108983a 	sll	r4,r8,r4
   176b4:	2448b03a 	or	r4,r4,r17
   176b8:	2008c03a 	cmpne	r4,r4,zero
   176bc:	3922b03a 	or	r17,r7,r4
   176c0:	0009883a 	mov	r4,zero
   176c4:	003f8d06 	br	174fc <__alt_mem_epcs_flash_controller_0+0xff8164fc>
   176c8:	0007883a 	mov	r3,zero
   176cc:	003fdd06 	br	17644 <__alt_mem_epcs_flash_controller_0+0xff816644>
   176d0:	0009883a 	mov	r4,zero
   176d4:	003ff706 	br	176b4 <__alt_mem_epcs_flash_controller_0+0xff8166b4>

000176d8 <__divdf3>:
   176d8:	defff004 	addi	sp,sp,-64
   176dc:	dc800815 	stw	r18,32(sp)
   176e0:	2824d53a 	srli	r18,r5,20
   176e4:	dd800c15 	stw	r22,48(sp)
   176e8:	282cd7fa 	srli	r22,r5,31
   176ec:	dc000615 	stw	r16,24(sp)
   176f0:	04000434 	movhi	r16,16
   176f4:	843fffc4 	addi	r16,r16,-1
   176f8:	dfc00f15 	stw	ra,60(sp)
   176fc:	df000e15 	stw	fp,56(sp)
   17700:	ddc00d15 	stw	r23,52(sp)
   17704:	dd400b15 	stw	r21,44(sp)
   17708:	dd000a15 	stw	r20,40(sp)
   1770c:	dcc00915 	stw	r19,36(sp)
   17710:	dc400715 	stw	r17,28(sp)
   17714:	9481ffcc 	andi	r18,r18,2047
   17718:	2c20703a 	and	r16,r5,r16
   1771c:	b2003fcc 	andi	r8,r22,255
   17720:	90006126 	beq	r18,zero,178a8 <__divdf3+0x1d0>
   17724:	0081ffc4 	movi	r2,2047
   17728:	202b883a 	mov	r21,r4
   1772c:	90803726 	beq	r18,r2,1780c <__divdf3+0x134>
   17730:	80800434 	orhi	r2,r16,16
   17734:	100490fa 	slli	r2,r2,3
   17738:	2020d77a 	srli	r16,r4,29
   1773c:	202a90fa 	slli	r21,r4,3
   17740:	94bf0044 	addi	r18,r18,-1023
   17744:	80a0b03a 	or	r16,r16,r2
   17748:	0013883a 	mov	r9,zero
   1774c:	000b883a 	mov	r5,zero
   17750:	3806d53a 	srli	r3,r7,20
   17754:	382ed7fa 	srli	r23,r7,31
   17758:	04400434 	movhi	r17,16
   1775c:	8c7fffc4 	addi	r17,r17,-1
   17760:	18c1ffcc 	andi	r3,r3,2047
   17764:	3029883a 	mov	r20,r6
   17768:	3c62703a 	and	r17,r7,r17
   1776c:	bf003fcc 	andi	fp,r23,255
   17770:	18006e26 	beq	r3,zero,1792c <__divdf3+0x254>
   17774:	0081ffc4 	movi	r2,2047
   17778:	18806626 	beq	r3,r2,17914 <__divdf3+0x23c>
   1777c:	88800434 	orhi	r2,r17,16
   17780:	100490fa 	slli	r2,r2,3
   17784:	3022d77a 	srli	r17,r6,29
   17788:	302890fa 	slli	r20,r6,3
   1778c:	18ff0044 	addi	r3,r3,-1023
   17790:	88a2b03a 	or	r17,r17,r2
   17794:	000f883a 	mov	r7,zero
   17798:	b5e6f03a 	xor	r19,r22,r23
   1779c:	3a4cb03a 	or	r6,r7,r9
   177a0:	008003c4 	movi	r2,15
   177a4:	9809883a 	mov	r4,r19
   177a8:	90c7c83a 	sub	r3,r18,r3
   177ac:	9cc03fcc 	andi	r19,r19,255
   177b0:	11809636 	bltu	r2,r6,17a0c <__divdf3+0x334>
   177b4:	300c90ba 	slli	r6,r6,2
   177b8:	00800074 	movhi	r2,1
   177bc:	109df304 	addi	r2,r2,30668
   177c0:	308d883a 	add	r6,r6,r2
   177c4:	30800017 	ldw	r2,0(r6)
   177c8:	1000683a 	jmp	r2
   177cc:	00017a0c 	andi	zero,zero,1512
   177d0:	00017844 	movi	zero,1505
   177d4:	000179fc 	xorhi	zero,zero,1511
   177d8:	00017838 	rdprs	zero,zero,1504
   177dc:	000179fc 	xorhi	zero,zero,1511
   177e0:	000179d0 	cmplti	zero,zero,1511
   177e4:	000179fc 	xorhi	zero,zero,1511
   177e8:	00017838 	rdprs	zero,zero,1504
   177ec:	00017844 	movi	zero,1505
   177f0:	00017844 	movi	zero,1505
   177f4:	000179d0 	cmplti	zero,zero,1511
   177f8:	00017838 	rdprs	zero,zero,1504
   177fc:	00017828 	cmpgeui	zero,zero,1504
   17800:	00017828 	cmpgeui	zero,zero,1504
   17804:	00017828 	cmpgeui	zero,zero,1504
   17808:	00017d94 	movui	zero,1526
   1780c:	2404b03a 	or	r2,r4,r16
   17810:	10006c1e 	bne	r2,zero,179c4 <__divdf3+0x2ec>
   17814:	02400204 	movi	r9,8
   17818:	0021883a 	mov	r16,zero
   1781c:	002b883a 	mov	r21,zero
   17820:	01400084 	movi	r5,2
   17824:	003fca06 	br	17750 <__alt_mem_epcs_flash_controller_0+0xff816750>
   17828:	8023883a 	mov	r17,r16
   1782c:	a829883a 	mov	r20,r21
   17830:	4039883a 	mov	fp,r8
   17834:	280f883a 	mov	r7,r5
   17838:	00800084 	movi	r2,2
   1783c:	3881601e 	bne	r7,r2,17dc0 <__divdf3+0x6e8>
   17840:	e027883a 	mov	r19,fp
   17844:	9900004c 	andi	r4,r19,1
   17848:	0081ffc4 	movi	r2,2047
   1784c:	0021883a 	mov	r16,zero
   17850:	002b883a 	mov	r21,zero
   17854:	1004953a 	slli	r2,r2,20
   17858:	20c03fcc 	andi	r3,r4,255
   1785c:	01400434 	movhi	r5,16
   17860:	297fffc4 	addi	r5,r5,-1
   17864:	180697fa 	slli	r3,r3,31
   17868:	8160703a 	and	r16,r16,r5
   1786c:	80a0b03a 	or	r16,r16,r2
   17870:	80c6b03a 	or	r3,r16,r3
   17874:	a805883a 	mov	r2,r21
   17878:	dfc00f17 	ldw	ra,60(sp)
   1787c:	df000e17 	ldw	fp,56(sp)
   17880:	ddc00d17 	ldw	r23,52(sp)
   17884:	dd800c17 	ldw	r22,48(sp)
   17888:	dd400b17 	ldw	r21,44(sp)
   1788c:	dd000a17 	ldw	r20,40(sp)
   17890:	dcc00917 	ldw	r19,36(sp)
   17894:	dc800817 	ldw	r18,32(sp)
   17898:	dc400717 	ldw	r17,28(sp)
   1789c:	dc000617 	ldw	r16,24(sp)
   178a0:	dec01004 	addi	sp,sp,64
   178a4:	f800283a 	ret
   178a8:	2404b03a 	or	r2,r4,r16
   178ac:	2023883a 	mov	r17,r4
   178b0:	10003f26 	beq	r2,zero,179b0 <__divdf3+0x2d8>
   178b4:	80015e26 	beq	r16,zero,17e30 <__divdf3+0x758>
   178b8:	8009883a 	mov	r4,r16
   178bc:	d9800215 	stw	r6,8(sp)
   178c0:	d9c00515 	stw	r7,20(sp)
   178c4:	da000415 	stw	r8,16(sp)
   178c8:	00198140 	call	19814 <__clzsi2>
   178cc:	d9800217 	ldw	r6,8(sp)
   178d0:	d9c00517 	ldw	r7,20(sp)
   178d4:	da000417 	ldw	r8,16(sp)
   178d8:	113ffd44 	addi	r4,r2,-11
   178dc:	00c00704 	movi	r3,28
   178e0:	19014f16 	blt	r3,r4,17e20 <__divdf3+0x748>
   178e4:	00c00744 	movi	r3,29
   178e8:	157ffe04 	addi	r21,r2,-8
   178ec:	1907c83a 	sub	r3,r3,r4
   178f0:	8560983a 	sll	r16,r16,r21
   178f4:	88c6d83a 	srl	r3,r17,r3
   178f8:	8d6a983a 	sll	r21,r17,r21
   178fc:	1c20b03a 	or	r16,r3,r16
   17900:	1080fcc4 	addi	r2,r2,1011
   17904:	00a5c83a 	sub	r18,zero,r2
   17908:	0013883a 	mov	r9,zero
   1790c:	000b883a 	mov	r5,zero
   17910:	003f8f06 	br	17750 <__alt_mem_epcs_flash_controller_0+0xff816750>
   17914:	3444b03a 	or	r2,r6,r17
   17918:	1000231e 	bne	r2,zero,179a8 <__divdf3+0x2d0>
   1791c:	0023883a 	mov	r17,zero
   17920:	0029883a 	mov	r20,zero
   17924:	01c00084 	movi	r7,2
   17928:	003f9b06 	br	17798 <__alt_mem_epcs_flash_controller_0+0xff816798>
   1792c:	3444b03a 	or	r2,r6,r17
   17930:	10001926 	beq	r2,zero,17998 <__divdf3+0x2c0>
   17934:	88014b26 	beq	r17,zero,17e64 <__divdf3+0x78c>
   17938:	8809883a 	mov	r4,r17
   1793c:	d9400115 	stw	r5,4(sp)
   17940:	d9800215 	stw	r6,8(sp)
   17944:	da000415 	stw	r8,16(sp)
   17948:	da400315 	stw	r9,12(sp)
   1794c:	00198140 	call	19814 <__clzsi2>
   17950:	d9400117 	ldw	r5,4(sp)
   17954:	d9800217 	ldw	r6,8(sp)
   17958:	da000417 	ldw	r8,16(sp)
   1795c:	da400317 	ldw	r9,12(sp)
   17960:	113ffd44 	addi	r4,r2,-11
   17964:	00c00704 	movi	r3,28
   17968:	19013a16 	blt	r3,r4,17e54 <__divdf3+0x77c>
   1796c:	00c00744 	movi	r3,29
   17970:	153ffe04 	addi	r20,r2,-8
   17974:	1907c83a 	sub	r3,r3,r4
   17978:	8d22983a 	sll	r17,r17,r20
   1797c:	30c6d83a 	srl	r3,r6,r3
   17980:	3528983a 	sll	r20,r6,r20
   17984:	1c62b03a 	or	r17,r3,r17
   17988:	1080fcc4 	addi	r2,r2,1011
   1798c:	0087c83a 	sub	r3,zero,r2
   17990:	000f883a 	mov	r7,zero
   17994:	003f8006 	br	17798 <__alt_mem_epcs_flash_controller_0+0xff816798>
   17998:	0023883a 	mov	r17,zero
   1799c:	0029883a 	mov	r20,zero
   179a0:	01c00044 	movi	r7,1
   179a4:	003f7c06 	br	17798 <__alt_mem_epcs_flash_controller_0+0xff816798>
   179a8:	01c000c4 	movi	r7,3
   179ac:	003f7a06 	br	17798 <__alt_mem_epcs_flash_controller_0+0xff816798>
   179b0:	02400104 	movi	r9,4
   179b4:	0021883a 	mov	r16,zero
   179b8:	002b883a 	mov	r21,zero
   179bc:	01400044 	movi	r5,1
   179c0:	003f6306 	br	17750 <__alt_mem_epcs_flash_controller_0+0xff816750>
   179c4:	02400304 	movi	r9,12
   179c8:	014000c4 	movi	r5,3
   179cc:	003f6006 	br	17750 <__alt_mem_epcs_flash_controller_0+0xff816750>
   179d0:	04000434 	movhi	r16,16
   179d4:	0009883a 	mov	r4,zero
   179d8:	843fffc4 	addi	r16,r16,-1
   179dc:	057fffc4 	movi	r21,-1
   179e0:	0081ffc4 	movi	r2,2047
   179e4:	003f9b06 	br	17854 <__alt_mem_epcs_flash_controller_0+0xff816854>
   179e8:	00c00044 	movi	r3,1
   179ec:	1887c83a 	sub	r3,r3,r2
   179f0:	01000e04 	movi	r4,56
   179f4:	20c1530e 	bge	r4,r3,17f44 <__divdf3+0x86c>
   179f8:	9900004c 	andi	r4,r19,1
   179fc:	0005883a 	mov	r2,zero
   17a00:	0021883a 	mov	r16,zero
   17a04:	002b883a 	mov	r21,zero
   17a08:	003f9206 	br	17854 <__alt_mem_epcs_flash_controller_0+0xff816854>
   17a0c:	8c012e36 	bltu	r17,r16,17ec8 <__divdf3+0x7f0>
   17a10:	84412c26 	beq	r16,r17,17ec4 <__divdf3+0x7ec>
   17a14:	a82f883a 	mov	r23,r21
   17a18:	18ffffc4 	addi	r3,r3,-1
   17a1c:	002b883a 	mov	r21,zero
   17a20:	a004d63a 	srli	r2,r20,24
   17a24:	8822923a 	slli	r17,r17,8
   17a28:	a028923a 	slli	r20,r20,8
   17a2c:	8009883a 	mov	r4,r16
   17a30:	88acb03a 	or	r22,r17,r2
   17a34:	dd000015 	stw	r20,0(sp)
   17a38:	b028d43a 	srli	r20,r22,16
   17a3c:	d8c00215 	stw	r3,8(sp)
   17a40:	b4bfffcc 	andi	r18,r22,65535
   17a44:	a00b883a 	mov	r5,r20
   17a48:	00023880 	call	2388 <__udivsi3>
   17a4c:	100b883a 	mov	r5,r2
   17a50:	9009883a 	mov	r4,r18
   17a54:	1023883a 	mov	r17,r2
   17a58:	00024440 	call	2444 <__mulsi3>
   17a5c:	8009883a 	mov	r4,r16
   17a60:	a00b883a 	mov	r5,r20
   17a64:	1039883a 	mov	fp,r2
   17a68:	00023ec0 	call	23ec <__umodsi3>
   17a6c:	1004943a 	slli	r2,r2,16
   17a70:	b808d43a 	srli	r4,r23,16
   17a74:	d8c00217 	ldw	r3,8(sp)
   17a78:	2084b03a 	or	r2,r4,r2
   17a7c:	1700062e 	bgeu	r2,fp,17a98 <__divdf3+0x3c0>
   17a80:	1585883a 	add	r2,r2,r22
   17a84:	893fffc4 	addi	r4,r17,-1
   17a88:	15811d36 	bltu	r2,r22,17f00 <__divdf3+0x828>
   17a8c:	17011c2e 	bgeu	r2,fp,17f00 <__divdf3+0x828>
   17a90:	8c7fff84 	addi	r17,r17,-2
   17a94:	1585883a 	add	r2,r2,r22
   17a98:	1739c83a 	sub	fp,r2,fp
   17a9c:	a00b883a 	mov	r5,r20
   17aa0:	e009883a 	mov	r4,fp
   17aa4:	d8c00215 	stw	r3,8(sp)
   17aa8:	00023880 	call	2388 <__udivsi3>
   17aac:	100b883a 	mov	r5,r2
   17ab0:	9009883a 	mov	r4,r18
   17ab4:	1021883a 	mov	r16,r2
   17ab8:	00024440 	call	2444 <__mulsi3>
   17abc:	a00b883a 	mov	r5,r20
   17ac0:	e009883a 	mov	r4,fp
   17ac4:	d8800415 	stw	r2,16(sp)
   17ac8:	00023ec0 	call	23ec <__umodsi3>
   17acc:	1004943a 	slli	r2,r2,16
   17ad0:	da000417 	ldw	r8,16(sp)
   17ad4:	bdffffcc 	andi	r23,r23,65535
   17ad8:	b884b03a 	or	r2,r23,r2
   17adc:	d8c00217 	ldw	r3,8(sp)
   17ae0:	1200062e 	bgeu	r2,r8,17afc <__divdf3+0x424>
   17ae4:	1585883a 	add	r2,r2,r22
   17ae8:	813fffc4 	addi	r4,r16,-1
   17aec:	15810236 	bltu	r2,r22,17ef8 <__divdf3+0x820>
   17af0:	1201012e 	bgeu	r2,r8,17ef8 <__divdf3+0x820>
   17af4:	843fff84 	addi	r16,r16,-2
   17af8:	1585883a 	add	r2,r2,r22
   17afc:	8822943a 	slli	r17,r17,16
   17b00:	d9800017 	ldw	r6,0(sp)
   17b04:	1211c83a 	sub	r8,r2,r8
   17b08:	8c22b03a 	or	r17,r17,r16
   17b0c:	373fffcc 	andi	fp,r6,65535
   17b10:	8abfffcc 	andi	r10,r17,65535
   17b14:	8820d43a 	srli	r16,r17,16
   17b18:	5009883a 	mov	r4,r10
   17b1c:	e00b883a 	mov	r5,fp
   17b20:	302ed43a 	srli	r23,r6,16
   17b24:	d8c00215 	stw	r3,8(sp)
   17b28:	da000415 	stw	r8,16(sp)
   17b2c:	da800115 	stw	r10,4(sp)
   17b30:	00024440 	call	2444 <__mulsi3>
   17b34:	800b883a 	mov	r5,r16
   17b38:	e009883a 	mov	r4,fp
   17b3c:	d8800515 	stw	r2,20(sp)
   17b40:	00024440 	call	2444 <__mulsi3>
   17b44:	8009883a 	mov	r4,r16
   17b48:	b80b883a 	mov	r5,r23
   17b4c:	d8800315 	stw	r2,12(sp)
   17b50:	00024440 	call	2444 <__mulsi3>
   17b54:	da800117 	ldw	r10,4(sp)
   17b58:	b80b883a 	mov	r5,r23
   17b5c:	1021883a 	mov	r16,r2
   17b60:	5009883a 	mov	r4,r10
   17b64:	00024440 	call	2444 <__mulsi3>
   17b68:	d9c00517 	ldw	r7,20(sp)
   17b6c:	da400317 	ldw	r9,12(sp)
   17b70:	d8c00217 	ldw	r3,8(sp)
   17b74:	3808d43a 	srli	r4,r7,16
   17b78:	1245883a 	add	r2,r2,r9
   17b7c:	da000417 	ldw	r8,16(sp)
   17b80:	2085883a 	add	r2,r4,r2
   17b84:	1240022e 	bgeu	r2,r9,17b90 <__divdf3+0x4b8>
   17b88:	01000074 	movhi	r4,1
   17b8c:	8121883a 	add	r16,r16,r4
   17b90:	1008d43a 	srli	r4,r2,16
   17b94:	1004943a 	slli	r2,r2,16
   17b98:	39ffffcc 	andi	r7,r7,65535
   17b9c:	2409883a 	add	r4,r4,r16
   17ba0:	11c5883a 	add	r2,r2,r7
   17ba4:	4100bb36 	bltu	r8,r4,17e94 <__divdf3+0x7bc>
   17ba8:	4100d726 	beq	r8,r4,17f08 <__divdf3+0x830>
   17bac:	4109c83a 	sub	r4,r8,r4
   17bb0:	a8a1c83a 	sub	r16,r21,r2
   17bb4:	ac2b803a 	cmpltu	r21,r21,r16
   17bb8:	256bc83a 	sub	r21,r4,r21
   17bbc:	b540d926 	beq	r22,r21,17f24 <__divdf3+0x84c>
   17bc0:	a00b883a 	mov	r5,r20
   17bc4:	a809883a 	mov	r4,r21
   17bc8:	d8c00215 	stw	r3,8(sp)
   17bcc:	00023880 	call	2388 <__udivsi3>
   17bd0:	100b883a 	mov	r5,r2
   17bd4:	9009883a 	mov	r4,r18
   17bd8:	d8800515 	stw	r2,20(sp)
   17bdc:	00024440 	call	2444 <__mulsi3>
   17be0:	a809883a 	mov	r4,r21
   17be4:	a00b883a 	mov	r5,r20
   17be8:	d8800415 	stw	r2,16(sp)
   17bec:	00023ec0 	call	23ec <__umodsi3>
   17bf0:	1004943a 	slli	r2,r2,16
   17bf4:	8008d43a 	srli	r4,r16,16
   17bf8:	da000417 	ldw	r8,16(sp)
   17bfc:	d8c00217 	ldw	r3,8(sp)
   17c00:	2084b03a 	or	r2,r4,r2
   17c04:	d9c00517 	ldw	r7,20(sp)
   17c08:	1200062e 	bgeu	r2,r8,17c24 <__divdf3+0x54c>
   17c0c:	1585883a 	add	r2,r2,r22
   17c10:	393fffc4 	addi	r4,r7,-1
   17c14:	1580c536 	bltu	r2,r22,17f2c <__divdf3+0x854>
   17c18:	1200c42e 	bgeu	r2,r8,17f2c <__divdf3+0x854>
   17c1c:	39ffff84 	addi	r7,r7,-2
   17c20:	1585883a 	add	r2,r2,r22
   17c24:	122bc83a 	sub	r21,r2,r8
   17c28:	a00b883a 	mov	r5,r20
   17c2c:	a809883a 	mov	r4,r21
   17c30:	d8c00215 	stw	r3,8(sp)
   17c34:	d9c00515 	stw	r7,20(sp)
   17c38:	00023880 	call	2388 <__udivsi3>
   17c3c:	9009883a 	mov	r4,r18
   17c40:	100b883a 	mov	r5,r2
   17c44:	d8800415 	stw	r2,16(sp)
   17c48:	00024440 	call	2444 <__mulsi3>
   17c4c:	a809883a 	mov	r4,r21
   17c50:	a00b883a 	mov	r5,r20
   17c54:	1025883a 	mov	r18,r2
   17c58:	00023ec0 	call	23ec <__umodsi3>
   17c5c:	1004943a 	slli	r2,r2,16
   17c60:	813fffcc 	andi	r4,r16,65535
   17c64:	d8c00217 	ldw	r3,8(sp)
   17c68:	20a0b03a 	or	r16,r4,r2
   17c6c:	d9c00517 	ldw	r7,20(sp)
   17c70:	da000417 	ldw	r8,16(sp)
   17c74:	8480062e 	bgeu	r16,r18,17c90 <__divdf3+0x5b8>
   17c78:	85a1883a 	add	r16,r16,r22
   17c7c:	40bfffc4 	addi	r2,r8,-1
   17c80:	8580ac36 	bltu	r16,r22,17f34 <__divdf3+0x85c>
   17c84:	8480ab2e 	bgeu	r16,r18,17f34 <__divdf3+0x85c>
   17c88:	423fff84 	addi	r8,r8,-2
   17c8c:	85a1883a 	add	r16,r16,r22
   17c90:	3804943a 	slli	r2,r7,16
   17c94:	84a1c83a 	sub	r16,r16,r18
   17c98:	e009883a 	mov	r4,fp
   17c9c:	1228b03a 	or	r20,r2,r8
   17ca0:	a1ffffcc 	andi	r7,r20,65535
   17ca4:	a024d43a 	srli	r18,r20,16
   17ca8:	380b883a 	mov	r5,r7
   17cac:	d8c00215 	stw	r3,8(sp)
   17cb0:	d9c00515 	stw	r7,20(sp)
   17cb4:	00024440 	call	2444 <__mulsi3>
   17cb8:	900b883a 	mov	r5,r18
   17cbc:	e009883a 	mov	r4,fp
   17cc0:	102b883a 	mov	r21,r2
   17cc4:	00024440 	call	2444 <__mulsi3>
   17cc8:	900b883a 	mov	r5,r18
   17ccc:	b809883a 	mov	r4,r23
   17cd0:	1039883a 	mov	fp,r2
   17cd4:	00024440 	call	2444 <__mulsi3>
   17cd8:	d9c00517 	ldw	r7,20(sp)
   17cdc:	b80b883a 	mov	r5,r23
   17ce0:	1025883a 	mov	r18,r2
   17ce4:	3809883a 	mov	r4,r7
   17ce8:	00024440 	call	2444 <__mulsi3>
   17cec:	a808d43a 	srli	r4,r21,16
   17cf0:	1705883a 	add	r2,r2,fp
   17cf4:	d8c00217 	ldw	r3,8(sp)
   17cf8:	2085883a 	add	r2,r4,r2
   17cfc:	1700022e 	bgeu	r2,fp,17d08 <__divdf3+0x630>
   17d00:	01000074 	movhi	r4,1
   17d04:	9125883a 	add	r18,r18,r4
   17d08:	1008d43a 	srli	r4,r2,16
   17d0c:	1004943a 	slli	r2,r2,16
   17d10:	ad7fffcc 	andi	r21,r21,65535
   17d14:	2489883a 	add	r4,r4,r18
   17d18:	1545883a 	add	r2,r2,r21
   17d1c:	81003836 	bltu	r16,r4,17e00 <__divdf3+0x728>
   17d20:	81003626 	beq	r16,r4,17dfc <__divdf3+0x724>
   17d24:	a5000054 	ori	r20,r20,1
   17d28:	1880ffc4 	addi	r2,r3,1023
   17d2c:	00bf2e0e 	bge	zero,r2,179e8 <__alt_mem_epcs_flash_controller_0+0xff8169e8>
   17d30:	a10001cc 	andi	r4,r20,7
   17d34:	20000726 	beq	r4,zero,17d54 <__divdf3+0x67c>
   17d38:	a10003cc 	andi	r4,r20,15
   17d3c:	01400104 	movi	r5,4
   17d40:	21400426 	beq	r4,r5,17d54 <__divdf3+0x67c>
   17d44:	a149883a 	add	r4,r20,r5
   17d48:	2529803a 	cmpltu	r20,r4,r20
   17d4c:	8d23883a 	add	r17,r17,r20
   17d50:	2029883a 	mov	r20,r4
   17d54:	8900402c 	andhi	r4,r17,256
   17d58:	20000426 	beq	r4,zero,17d6c <__divdf3+0x694>
   17d5c:	18810004 	addi	r2,r3,1024
   17d60:	00ffc034 	movhi	r3,65280
   17d64:	18ffffc4 	addi	r3,r3,-1
   17d68:	88e2703a 	and	r17,r17,r3
   17d6c:	00c1ff84 	movi	r3,2046
   17d70:	18beb416 	blt	r3,r2,17844 <__alt_mem_epcs_flash_controller_0+0xff816844>
   17d74:	a028d0fa 	srli	r20,r20,3
   17d78:	882a977a 	slli	r21,r17,29
   17d7c:	8820927a 	slli	r16,r17,9
   17d80:	1081ffcc 	andi	r2,r2,2047
   17d84:	ad2ab03a 	or	r21,r21,r20
   17d88:	8020d33a 	srli	r16,r16,12
   17d8c:	9900004c 	andi	r4,r19,1
   17d90:	003eb006 	br	17854 <__alt_mem_epcs_flash_controller_0+0xff816854>
   17d94:	8080022c 	andhi	r2,r16,8
   17d98:	10001226 	beq	r2,zero,17de4 <__divdf3+0x70c>
   17d9c:	8880022c 	andhi	r2,r17,8
   17da0:	1000101e 	bne	r2,zero,17de4 <__divdf3+0x70c>
   17da4:	00800434 	movhi	r2,16
   17da8:	8c000234 	orhi	r16,r17,8
   17dac:	10bfffc4 	addi	r2,r2,-1
   17db0:	b809883a 	mov	r4,r23
   17db4:	80a0703a 	and	r16,r16,r2
   17db8:	a02b883a 	mov	r21,r20
   17dbc:	003f0806 	br	179e0 <__alt_mem_epcs_flash_controller_0+0xff8169e0>
   17dc0:	008000c4 	movi	r2,3
   17dc4:	3880b126 	beq	r7,r2,1808c <__divdf3+0x9b4>
   17dc8:	00800044 	movi	r2,1
   17dcc:	38805b1e 	bne	r7,r2,17f3c <__divdf3+0x864>
   17dd0:	e009883a 	mov	r4,fp
   17dd4:	0005883a 	mov	r2,zero
   17dd8:	0021883a 	mov	r16,zero
   17ddc:	002b883a 	mov	r21,zero
   17de0:	003e9c06 	br	17854 <__alt_mem_epcs_flash_controller_0+0xff816854>
   17de4:	00800434 	movhi	r2,16
   17de8:	84000234 	orhi	r16,r16,8
   17dec:	10bfffc4 	addi	r2,r2,-1
   17df0:	b009883a 	mov	r4,r22
   17df4:	80a0703a 	and	r16,r16,r2
   17df8:	003ef906 	br	179e0 <__alt_mem_epcs_flash_controller_0+0xff8169e0>
   17dfc:	103fca26 	beq	r2,zero,17d28 <__alt_mem_epcs_flash_controller_0+0xff816d28>
   17e00:	b421883a 	add	r16,r22,r16
   17e04:	a17fffc4 	addi	r5,r20,-1
   17e08:	8580422e 	bgeu	r16,r22,17f14 <__divdf3+0x83c>
   17e0c:	2829883a 	mov	r20,r5
   17e10:	813fc41e 	bne	r16,r4,17d24 <__alt_mem_epcs_flash_controller_0+0xff816d24>
   17e14:	d9800017 	ldw	r6,0(sp)
   17e18:	30bfc21e 	bne	r6,r2,17d24 <__alt_mem_epcs_flash_controller_0+0xff816d24>
   17e1c:	003fc206 	br	17d28 <__alt_mem_epcs_flash_controller_0+0xff816d28>
   17e20:	143ff604 	addi	r16,r2,-40
   17e24:	8c20983a 	sll	r16,r17,r16
   17e28:	002b883a 	mov	r21,zero
   17e2c:	003eb406 	br	17900 <__alt_mem_epcs_flash_controller_0+0xff816900>
   17e30:	d9800215 	stw	r6,8(sp)
   17e34:	d9c00515 	stw	r7,20(sp)
   17e38:	da000415 	stw	r8,16(sp)
   17e3c:	00198140 	call	19814 <__clzsi2>
   17e40:	10800804 	addi	r2,r2,32
   17e44:	da000417 	ldw	r8,16(sp)
   17e48:	d9c00517 	ldw	r7,20(sp)
   17e4c:	d9800217 	ldw	r6,8(sp)
   17e50:	003ea106 	br	178d8 <__alt_mem_epcs_flash_controller_0+0xff8168d8>
   17e54:	147ff604 	addi	r17,r2,-40
   17e58:	3462983a 	sll	r17,r6,r17
   17e5c:	0029883a 	mov	r20,zero
   17e60:	003ec906 	br	17988 <__alt_mem_epcs_flash_controller_0+0xff816988>
   17e64:	3009883a 	mov	r4,r6
   17e68:	d9400115 	stw	r5,4(sp)
   17e6c:	d9800215 	stw	r6,8(sp)
   17e70:	da000415 	stw	r8,16(sp)
   17e74:	da400315 	stw	r9,12(sp)
   17e78:	00198140 	call	19814 <__clzsi2>
   17e7c:	10800804 	addi	r2,r2,32
   17e80:	da400317 	ldw	r9,12(sp)
   17e84:	da000417 	ldw	r8,16(sp)
   17e88:	d9800217 	ldw	r6,8(sp)
   17e8c:	d9400117 	ldw	r5,4(sp)
   17e90:	003eb306 	br	17960 <__alt_mem_epcs_flash_controller_0+0xff816960>
   17e94:	d9800017 	ldw	r6,0(sp)
   17e98:	a9ab883a 	add	r21,r21,r6
   17e9c:	a98b803a 	cmpltu	r5,r21,r6
   17ea0:	2d8b883a 	add	r5,r5,r22
   17ea4:	2a11883a 	add	r8,r5,r8
   17ea8:	897fffc4 	addi	r5,r17,-1
   17eac:	b2000c2e 	bgeu	r22,r8,17ee0 <__divdf3+0x808>
   17eb0:	41003f36 	bltu	r8,r4,17fb0 <__divdf3+0x8d8>
   17eb4:	22006c26 	beq	r4,r8,18068 <__divdf3+0x990>
   17eb8:	4109c83a 	sub	r4,r8,r4
   17ebc:	2823883a 	mov	r17,r5
   17ec0:	003f3b06 	br	17bb0 <__alt_mem_epcs_flash_controller_0+0xff816bb0>
   17ec4:	ad3ed336 	bltu	r21,r20,17a14 <__alt_mem_epcs_flash_controller_0+0xff816a14>
   17ec8:	a804d07a 	srli	r2,r21,1
   17ecc:	802e97fa 	slli	r23,r16,31
   17ed0:	a82a97fa 	slli	r21,r21,31
   17ed4:	8020d07a 	srli	r16,r16,1
   17ed8:	b8aeb03a 	or	r23,r23,r2
   17edc:	003ed006 	br	17a20 <__alt_mem_epcs_flash_controller_0+0xff816a20>
   17ee0:	b23ff51e 	bne	r22,r8,17eb8 <__alt_mem_epcs_flash_controller_0+0xff816eb8>
   17ee4:	d9800017 	ldw	r6,0(sp)
   17ee8:	a9bff12e 	bgeu	r21,r6,17eb0 <__alt_mem_epcs_flash_controller_0+0xff816eb0>
   17eec:	b109c83a 	sub	r4,r22,r4
   17ef0:	2823883a 	mov	r17,r5
   17ef4:	003f2e06 	br	17bb0 <__alt_mem_epcs_flash_controller_0+0xff816bb0>
   17ef8:	2021883a 	mov	r16,r4
   17efc:	003eff06 	br	17afc <__alt_mem_epcs_flash_controller_0+0xff816afc>
   17f00:	2023883a 	mov	r17,r4
   17f04:	003ee406 	br	17a98 <__alt_mem_epcs_flash_controller_0+0xff816a98>
   17f08:	a8bfe236 	bltu	r21,r2,17e94 <__alt_mem_epcs_flash_controller_0+0xff816e94>
   17f0c:	0009883a 	mov	r4,zero
   17f10:	003f2706 	br	17bb0 <__alt_mem_epcs_flash_controller_0+0xff816bb0>
   17f14:	81002d36 	bltu	r16,r4,17fcc <__divdf3+0x8f4>
   17f18:	24005626 	beq	r4,r16,18074 <__divdf3+0x99c>
   17f1c:	2829883a 	mov	r20,r5
   17f20:	003f8006 	br	17d24 <__alt_mem_epcs_flash_controller_0+0xff816d24>
   17f24:	053fffc4 	movi	r20,-1
   17f28:	003f7f06 	br	17d28 <__alt_mem_epcs_flash_controller_0+0xff816d28>
   17f2c:	200f883a 	mov	r7,r4
   17f30:	003f3c06 	br	17c24 <__alt_mem_epcs_flash_controller_0+0xff816c24>
   17f34:	1011883a 	mov	r8,r2
   17f38:	003f5506 	br	17c90 <__alt_mem_epcs_flash_controller_0+0xff816c90>
   17f3c:	e027883a 	mov	r19,fp
   17f40:	003f7906 	br	17d28 <__alt_mem_epcs_flash_controller_0+0xff816d28>
   17f44:	010007c4 	movi	r4,31
   17f48:	20c02816 	blt	r4,r3,17fec <__divdf3+0x914>
   17f4c:	00800804 	movi	r2,32
   17f50:	10c5c83a 	sub	r2,r2,r3
   17f54:	888a983a 	sll	r5,r17,r2
   17f58:	a0c8d83a 	srl	r4,r20,r3
   17f5c:	a084983a 	sll	r2,r20,r2
   17f60:	88e2d83a 	srl	r17,r17,r3
   17f64:	2906b03a 	or	r3,r5,r4
   17f68:	1004c03a 	cmpne	r2,r2,zero
   17f6c:	1886b03a 	or	r3,r3,r2
   17f70:	188001cc 	andi	r2,r3,7
   17f74:	10000726 	beq	r2,zero,17f94 <__divdf3+0x8bc>
   17f78:	188003cc 	andi	r2,r3,15
   17f7c:	01000104 	movi	r4,4
   17f80:	11000426 	beq	r2,r4,17f94 <__divdf3+0x8bc>
   17f84:	1805883a 	mov	r2,r3
   17f88:	10c00104 	addi	r3,r2,4
   17f8c:	1885803a 	cmpltu	r2,r3,r2
   17f90:	88a3883a 	add	r17,r17,r2
   17f94:	8880202c 	andhi	r2,r17,128
   17f98:	10002926 	beq	r2,zero,18040 <__divdf3+0x968>
   17f9c:	9900004c 	andi	r4,r19,1
   17fa0:	00800044 	movi	r2,1
   17fa4:	0021883a 	mov	r16,zero
   17fa8:	002b883a 	mov	r21,zero
   17fac:	003e2906 	br	17854 <__alt_mem_epcs_flash_controller_0+0xff816854>
   17fb0:	d9800017 	ldw	r6,0(sp)
   17fb4:	8c7fff84 	addi	r17,r17,-2
   17fb8:	a9ab883a 	add	r21,r21,r6
   17fbc:	a98b803a 	cmpltu	r5,r21,r6
   17fc0:	2d8b883a 	add	r5,r5,r22
   17fc4:	2a11883a 	add	r8,r5,r8
   17fc8:	003ef806 	br	17bac <__alt_mem_epcs_flash_controller_0+0xff816bac>
   17fcc:	d9800017 	ldw	r6,0(sp)
   17fd0:	318f883a 	add	r7,r6,r6
   17fd4:	398b803a 	cmpltu	r5,r7,r6
   17fd8:	2d8d883a 	add	r6,r5,r22
   17fdc:	81a1883a 	add	r16,r16,r6
   17fe0:	a17fff84 	addi	r5,r20,-2
   17fe4:	d9c00015 	stw	r7,0(sp)
   17fe8:	003f8806 	br	17e0c <__alt_mem_epcs_flash_controller_0+0xff816e0c>
   17fec:	013ff844 	movi	r4,-31
   17ff0:	2085c83a 	sub	r2,r4,r2
   17ff4:	8888d83a 	srl	r4,r17,r2
   17ff8:	00800804 	movi	r2,32
   17ffc:	18802126 	beq	r3,r2,18084 <__divdf3+0x9ac>
   18000:	04001004 	movi	r16,64
   18004:	80c7c83a 	sub	r3,r16,r3
   18008:	88e0983a 	sll	r16,r17,r3
   1800c:	8504b03a 	or	r2,r16,r20
   18010:	1004c03a 	cmpne	r2,r2,zero
   18014:	2084b03a 	or	r2,r4,r2
   18018:	144001cc 	andi	r17,r2,7
   1801c:	88000d1e 	bne	r17,zero,18054 <__divdf3+0x97c>
   18020:	0021883a 	mov	r16,zero
   18024:	102ad0fa 	srli	r21,r2,3
   18028:	9900004c 	andi	r4,r19,1
   1802c:	0005883a 	mov	r2,zero
   18030:	ac6ab03a 	or	r21,r21,r17
   18034:	003e0706 	br	17854 <__alt_mem_epcs_flash_controller_0+0xff816854>
   18038:	1007883a 	mov	r3,r2
   1803c:	0023883a 	mov	r17,zero
   18040:	8820927a 	slli	r16,r17,9
   18044:	1805883a 	mov	r2,r3
   18048:	8822977a 	slli	r17,r17,29
   1804c:	8020d33a 	srli	r16,r16,12
   18050:	003ff406 	br	18024 <__alt_mem_epcs_flash_controller_0+0xff817024>
   18054:	10c003cc 	andi	r3,r2,15
   18058:	01000104 	movi	r4,4
   1805c:	193ff626 	beq	r3,r4,18038 <__alt_mem_epcs_flash_controller_0+0xff817038>
   18060:	0023883a 	mov	r17,zero
   18064:	003fc806 	br	17f88 <__alt_mem_epcs_flash_controller_0+0xff816f88>
   18068:	a8bfd136 	bltu	r21,r2,17fb0 <__alt_mem_epcs_flash_controller_0+0xff816fb0>
   1806c:	2823883a 	mov	r17,r5
   18070:	003fa606 	br	17f0c <__alt_mem_epcs_flash_controller_0+0xff816f0c>
   18074:	d9800017 	ldw	r6,0(sp)
   18078:	30bfd436 	bltu	r6,r2,17fcc <__alt_mem_epcs_flash_controller_0+0xff816fcc>
   1807c:	2829883a 	mov	r20,r5
   18080:	003f6406 	br	17e14 <__alt_mem_epcs_flash_controller_0+0xff816e14>
   18084:	0021883a 	mov	r16,zero
   18088:	003fe006 	br	1800c <__alt_mem_epcs_flash_controller_0+0xff81700c>
   1808c:	00800434 	movhi	r2,16
   18090:	8c000234 	orhi	r16,r17,8
   18094:	10bfffc4 	addi	r2,r2,-1
   18098:	e009883a 	mov	r4,fp
   1809c:	80a0703a 	and	r16,r16,r2
   180a0:	a02b883a 	mov	r21,r20
   180a4:	003e4e06 	br	179e0 <__alt_mem_epcs_flash_controller_0+0xff8169e0>

000180a8 <__eqdf2>:
   180a8:	2804d53a 	srli	r2,r5,20
   180ac:	3806d53a 	srli	r3,r7,20
   180b0:	02000434 	movhi	r8,16
   180b4:	423fffc4 	addi	r8,r8,-1
   180b8:	1081ffcc 	andi	r2,r2,2047
   180bc:	0281ffc4 	movi	r10,2047
   180c0:	2a12703a 	and	r9,r5,r8
   180c4:	18c1ffcc 	andi	r3,r3,2047
   180c8:	3a10703a 	and	r8,r7,r8
   180cc:	280ad7fa 	srli	r5,r5,31
   180d0:	380ed7fa 	srli	r7,r7,31
   180d4:	12801026 	beq	r2,r10,18118 <__eqdf2+0x70>
   180d8:	0281ffc4 	movi	r10,2047
   180dc:	1a800a26 	beq	r3,r10,18108 <__eqdf2+0x60>
   180e0:	10c00226 	beq	r2,r3,180ec <__eqdf2+0x44>
   180e4:	00800044 	movi	r2,1
   180e8:	f800283a 	ret
   180ec:	4a3ffd1e 	bne	r9,r8,180e4 <__alt_mem_epcs_flash_controller_0+0xff8170e4>
   180f0:	21bffc1e 	bne	r4,r6,180e4 <__alt_mem_epcs_flash_controller_0+0xff8170e4>
   180f4:	29c00c26 	beq	r5,r7,18128 <__eqdf2+0x80>
   180f8:	103ffa1e 	bne	r2,zero,180e4 <__alt_mem_epcs_flash_controller_0+0xff8170e4>
   180fc:	2244b03a 	or	r2,r4,r9
   18100:	1004c03a 	cmpne	r2,r2,zero
   18104:	f800283a 	ret
   18108:	3214b03a 	or	r10,r6,r8
   1810c:	503ff426 	beq	r10,zero,180e0 <__alt_mem_epcs_flash_controller_0+0xff8170e0>
   18110:	00800044 	movi	r2,1
   18114:	f800283a 	ret
   18118:	2254b03a 	or	r10,r4,r9
   1811c:	503fee26 	beq	r10,zero,180d8 <__alt_mem_epcs_flash_controller_0+0xff8170d8>
   18120:	00800044 	movi	r2,1
   18124:	f800283a 	ret
   18128:	0005883a 	mov	r2,zero
   1812c:	f800283a 	ret

00018130 <__gedf2>:
   18130:	2804d53a 	srli	r2,r5,20
   18134:	3806d53a 	srli	r3,r7,20
   18138:	02000434 	movhi	r8,16
   1813c:	423fffc4 	addi	r8,r8,-1
   18140:	1081ffcc 	andi	r2,r2,2047
   18144:	0241ffc4 	movi	r9,2047
   18148:	2a14703a 	and	r10,r5,r8
   1814c:	18c1ffcc 	andi	r3,r3,2047
   18150:	3a10703a 	and	r8,r7,r8
   18154:	280ad7fa 	srli	r5,r5,31
   18158:	380ed7fa 	srli	r7,r7,31
   1815c:	12401d26 	beq	r2,r9,181d4 <__gedf2+0xa4>
   18160:	0241ffc4 	movi	r9,2047
   18164:	1a401226 	beq	r3,r9,181b0 <__gedf2+0x80>
   18168:	1000081e 	bne	r2,zero,1818c <__gedf2+0x5c>
   1816c:	2296b03a 	or	r11,r4,r10
   18170:	5813003a 	cmpeq	r9,r11,zero
   18174:	1800091e 	bne	r3,zero,1819c <__gedf2+0x6c>
   18178:	3218b03a 	or	r12,r6,r8
   1817c:	6000071e 	bne	r12,zero,1819c <__gedf2+0x6c>
   18180:	0005883a 	mov	r2,zero
   18184:	5800101e 	bne	r11,zero,181c8 <__gedf2+0x98>
   18188:	f800283a 	ret
   1818c:	18000c1e 	bne	r3,zero,181c0 <__gedf2+0x90>
   18190:	3212b03a 	or	r9,r6,r8
   18194:	48000c26 	beq	r9,zero,181c8 <__gedf2+0x98>
   18198:	0013883a 	mov	r9,zero
   1819c:	39c03fcc 	andi	r7,r7,255
   181a0:	48000826 	beq	r9,zero,181c4 <__gedf2+0x94>
   181a4:	38000926 	beq	r7,zero,181cc <__gedf2+0x9c>
   181a8:	00800044 	movi	r2,1
   181ac:	f800283a 	ret
   181b0:	3212b03a 	or	r9,r6,r8
   181b4:	483fec26 	beq	r9,zero,18168 <__alt_mem_epcs_flash_controller_0+0xff817168>
   181b8:	00bfff84 	movi	r2,-2
   181bc:	f800283a 	ret
   181c0:	39c03fcc 	andi	r7,r7,255
   181c4:	29c00626 	beq	r5,r7,181e0 <__gedf2+0xb0>
   181c8:	283ff726 	beq	r5,zero,181a8 <__alt_mem_epcs_flash_controller_0+0xff8171a8>
   181cc:	00bfffc4 	movi	r2,-1
   181d0:	f800283a 	ret
   181d4:	2292b03a 	or	r9,r4,r10
   181d8:	483fe126 	beq	r9,zero,18160 <__alt_mem_epcs_flash_controller_0+0xff817160>
   181dc:	003ff606 	br	181b8 <__alt_mem_epcs_flash_controller_0+0xff8171b8>
   181e0:	18bff916 	blt	r3,r2,181c8 <__alt_mem_epcs_flash_controller_0+0xff8171c8>
   181e4:	10c00316 	blt	r2,r3,181f4 <__gedf2+0xc4>
   181e8:	42bff736 	bltu	r8,r10,181c8 <__alt_mem_epcs_flash_controller_0+0xff8171c8>
   181ec:	52000326 	beq	r10,r8,181fc <__gedf2+0xcc>
   181f0:	5200042e 	bgeu	r10,r8,18204 <__gedf2+0xd4>
   181f4:	283fec1e 	bne	r5,zero,181a8 <__alt_mem_epcs_flash_controller_0+0xff8171a8>
   181f8:	003ff406 	br	181cc <__alt_mem_epcs_flash_controller_0+0xff8171cc>
   181fc:	313ff236 	bltu	r6,r4,181c8 <__alt_mem_epcs_flash_controller_0+0xff8171c8>
   18200:	21bffc36 	bltu	r4,r6,181f4 <__alt_mem_epcs_flash_controller_0+0xff8171f4>
   18204:	0005883a 	mov	r2,zero
   18208:	f800283a 	ret

0001820c <__ledf2>:
   1820c:	2804d53a 	srli	r2,r5,20
   18210:	3810d53a 	srli	r8,r7,20
   18214:	00c00434 	movhi	r3,16
   18218:	18ffffc4 	addi	r3,r3,-1
   1821c:	1081ffcc 	andi	r2,r2,2047
   18220:	0241ffc4 	movi	r9,2047
   18224:	28d4703a 	and	r10,r5,r3
   18228:	4201ffcc 	andi	r8,r8,2047
   1822c:	38c6703a 	and	r3,r7,r3
   18230:	280ad7fa 	srli	r5,r5,31
   18234:	380ed7fa 	srli	r7,r7,31
   18238:	12401f26 	beq	r2,r9,182b8 <__ledf2+0xac>
   1823c:	0241ffc4 	movi	r9,2047
   18240:	42401426 	beq	r8,r9,18294 <__ledf2+0x88>
   18244:	1000091e 	bne	r2,zero,1826c <__ledf2+0x60>
   18248:	2296b03a 	or	r11,r4,r10
   1824c:	5813003a 	cmpeq	r9,r11,zero
   18250:	29403fcc 	andi	r5,r5,255
   18254:	40000a1e 	bne	r8,zero,18280 <__ledf2+0x74>
   18258:	30d8b03a 	or	r12,r6,r3
   1825c:	6000081e 	bne	r12,zero,18280 <__ledf2+0x74>
   18260:	0005883a 	mov	r2,zero
   18264:	5800111e 	bne	r11,zero,182ac <__ledf2+0xa0>
   18268:	f800283a 	ret
   1826c:	29403fcc 	andi	r5,r5,255
   18270:	40000c1e 	bne	r8,zero,182a4 <__ledf2+0x98>
   18274:	30d2b03a 	or	r9,r6,r3
   18278:	48000c26 	beq	r9,zero,182ac <__ledf2+0xa0>
   1827c:	0013883a 	mov	r9,zero
   18280:	39c03fcc 	andi	r7,r7,255
   18284:	48000826 	beq	r9,zero,182a8 <__ledf2+0x9c>
   18288:	38001126 	beq	r7,zero,182d0 <__ledf2+0xc4>
   1828c:	00800044 	movi	r2,1
   18290:	f800283a 	ret
   18294:	30d2b03a 	or	r9,r6,r3
   18298:	483fea26 	beq	r9,zero,18244 <__alt_mem_epcs_flash_controller_0+0xff817244>
   1829c:	00800084 	movi	r2,2
   182a0:	f800283a 	ret
   182a4:	39c03fcc 	andi	r7,r7,255
   182a8:	39400726 	beq	r7,r5,182c8 <__ledf2+0xbc>
   182ac:	2800081e 	bne	r5,zero,182d0 <__ledf2+0xc4>
   182b0:	00800044 	movi	r2,1
   182b4:	f800283a 	ret
   182b8:	2292b03a 	or	r9,r4,r10
   182bc:	483fdf26 	beq	r9,zero,1823c <__alt_mem_epcs_flash_controller_0+0xff81723c>
   182c0:	00800084 	movi	r2,2
   182c4:	f800283a 	ret
   182c8:	4080030e 	bge	r8,r2,182d8 <__ledf2+0xcc>
   182cc:	383fef26 	beq	r7,zero,1828c <__alt_mem_epcs_flash_controller_0+0xff81728c>
   182d0:	00bfffc4 	movi	r2,-1
   182d4:	f800283a 	ret
   182d8:	123feb16 	blt	r2,r8,18288 <__alt_mem_epcs_flash_controller_0+0xff817288>
   182dc:	1abff336 	bltu	r3,r10,182ac <__alt_mem_epcs_flash_controller_0+0xff8172ac>
   182e0:	50c00326 	beq	r10,r3,182f0 <__ledf2+0xe4>
   182e4:	50c0042e 	bgeu	r10,r3,182f8 <__ledf2+0xec>
   182e8:	283fe81e 	bne	r5,zero,1828c <__alt_mem_epcs_flash_controller_0+0xff81728c>
   182ec:	003ff806 	br	182d0 <__alt_mem_epcs_flash_controller_0+0xff8172d0>
   182f0:	313fee36 	bltu	r6,r4,182ac <__alt_mem_epcs_flash_controller_0+0xff8172ac>
   182f4:	21bffc36 	bltu	r4,r6,182e8 <__alt_mem_epcs_flash_controller_0+0xff8172e8>
   182f8:	0005883a 	mov	r2,zero
   182fc:	f800283a 	ret

00018300 <__muldf3>:
   18300:	deffee04 	addi	sp,sp,-72
   18304:	dd000c15 	stw	r20,48(sp)
   18308:	2828d53a 	srli	r20,r5,20
   1830c:	ddc00f15 	stw	r23,60(sp)
   18310:	282ed7fa 	srli	r23,r5,31
   18314:	dc000815 	stw	r16,32(sp)
   18318:	04000434 	movhi	r16,16
   1831c:	dcc00b15 	stw	r19,44(sp)
   18320:	843fffc4 	addi	r16,r16,-1
   18324:	dfc01115 	stw	ra,68(sp)
   18328:	df001015 	stw	fp,64(sp)
   1832c:	dd800e15 	stw	r22,56(sp)
   18330:	dd400d15 	stw	r21,52(sp)
   18334:	dc800a15 	stw	r18,40(sp)
   18338:	dc400915 	stw	r17,36(sp)
   1833c:	a501ffcc 	andi	r20,r20,2047
   18340:	2c20703a 	and	r16,r5,r16
   18344:	b827883a 	mov	r19,r23
   18348:	ba403fcc 	andi	r9,r23,255
   1834c:	a0006026 	beq	r20,zero,184d0 <__muldf3+0x1d0>
   18350:	0081ffc4 	movi	r2,2047
   18354:	202d883a 	mov	r22,r4
   18358:	a0803626 	beq	r20,r2,18434 <__muldf3+0x134>
   1835c:	84000434 	orhi	r16,r16,16
   18360:	200ad77a 	srli	r5,r4,29
   18364:	800490fa 	slli	r2,r16,3
   18368:	202c90fa 	slli	r22,r4,3
   1836c:	a53f0044 	addi	r20,r20,-1023
   18370:	28a0b03a 	or	r16,r5,r2
   18374:	002b883a 	mov	r21,zero
   18378:	000b883a 	mov	r5,zero
   1837c:	3804d53a 	srli	r2,r7,20
   18380:	3838d7fa 	srli	fp,r7,31
   18384:	04400434 	movhi	r17,16
   18388:	8c7fffc4 	addi	r17,r17,-1
   1838c:	1081ffcc 	andi	r2,r2,2047
   18390:	3025883a 	mov	r18,r6
   18394:	3c62703a 	and	r17,r7,r17
   18398:	e2803fcc 	andi	r10,fp,255
   1839c:	10006d26 	beq	r2,zero,18554 <__muldf3+0x254>
   183a0:	00c1ffc4 	movi	r3,2047
   183a4:	10c06526 	beq	r2,r3,1853c <__muldf3+0x23c>
   183a8:	8c400434 	orhi	r17,r17,16
   183ac:	300ed77a 	srli	r7,r6,29
   183b0:	880690fa 	slli	r3,r17,3
   183b4:	302490fa 	slli	r18,r6,3
   183b8:	10bf0044 	addi	r2,r2,-1023
   183bc:	38e2b03a 	or	r17,r7,r3
   183c0:	000f883a 	mov	r7,zero
   183c4:	a087883a 	add	r3,r20,r2
   183c8:	010003c4 	movi	r4,15
   183cc:	3d44b03a 	or	r2,r7,r21
   183d0:	e5ccf03a 	xor	r6,fp,r23
   183d4:	1a000044 	addi	r8,r3,1
   183d8:	20809b36 	bltu	r4,r2,18648 <__muldf3+0x348>
   183dc:	100490ba 	slli	r2,r2,2
   183e0:	010000b4 	movhi	r4,2
   183e4:	2120fd04 	addi	r4,r4,-31756
   183e8:	1105883a 	add	r2,r2,r4
   183ec:	10800017 	ldw	r2,0(r2)
   183f0:	1000683a 	jmp	r2
   183f4:	00018648 	cmpgei	zero,zero,1561
   183f8:	00018454 	movui	zero,1553
   183fc:	00018454 	movui	zero,1553
   18400:	00018450 	cmplti	zero,zero,1553
   18404:	00018624 	muli	zero,zero,1560
   18408:	00018624 	muli	zero,zero,1560
   1840c:	0001860c 	andi	zero,zero,1560
   18410:	00018450 	cmplti	zero,zero,1553
   18414:	00018624 	muli	zero,zero,1560
   18418:	0001860c 	andi	zero,zero,1560
   1841c:	00018624 	muli	zero,zero,1560
   18420:	00018450 	cmplti	zero,zero,1553
   18424:	00018634 	movhi	zero,1560
   18428:	00018634 	movhi	zero,1560
   1842c:	00018634 	movhi	zero,1560
   18430:	00018994 	movui	zero,1574
   18434:	2404b03a 	or	r2,r4,r16
   18438:	1000711e 	bne	r2,zero,18600 <__muldf3+0x300>
   1843c:	05400204 	movi	r21,8
   18440:	0021883a 	mov	r16,zero
   18444:	002d883a 	mov	r22,zero
   18448:	01400084 	movi	r5,2
   1844c:	003fcb06 	br	1837c <__alt_mem_epcs_flash_controller_0+0xff81737c>
   18450:	500d883a 	mov	r6,r10
   18454:	00800084 	movi	r2,2
   18458:	38805926 	beq	r7,r2,185c0 <__muldf3+0x2c0>
   1845c:	008000c4 	movi	r2,3
   18460:	3881bb26 	beq	r7,r2,18b50 <__muldf3+0x850>
   18464:	00800044 	movi	r2,1
   18468:	3881961e 	bne	r7,r2,18ac4 <__muldf3+0x7c4>
   1846c:	3027883a 	mov	r19,r6
   18470:	0005883a 	mov	r2,zero
   18474:	0021883a 	mov	r16,zero
   18478:	002d883a 	mov	r22,zero
   1847c:	1004953a 	slli	r2,r2,20
   18480:	98c03fcc 	andi	r3,r19,255
   18484:	04400434 	movhi	r17,16
   18488:	8c7fffc4 	addi	r17,r17,-1
   1848c:	180697fa 	slli	r3,r3,31
   18490:	8460703a 	and	r16,r16,r17
   18494:	80a0b03a 	or	r16,r16,r2
   18498:	80c6b03a 	or	r3,r16,r3
   1849c:	b005883a 	mov	r2,r22
   184a0:	dfc01117 	ldw	ra,68(sp)
   184a4:	df001017 	ldw	fp,64(sp)
   184a8:	ddc00f17 	ldw	r23,60(sp)
   184ac:	dd800e17 	ldw	r22,56(sp)
   184b0:	dd400d17 	ldw	r21,52(sp)
   184b4:	dd000c17 	ldw	r20,48(sp)
   184b8:	dcc00b17 	ldw	r19,44(sp)
   184bc:	dc800a17 	ldw	r18,40(sp)
   184c0:	dc400917 	ldw	r17,36(sp)
   184c4:	dc000817 	ldw	r16,32(sp)
   184c8:	dec01204 	addi	sp,sp,72
   184cc:	f800283a 	ret
   184d0:	2404b03a 	or	r2,r4,r16
   184d4:	202b883a 	mov	r21,r4
   184d8:	10004426 	beq	r2,zero,185ec <__muldf3+0x2ec>
   184dc:	80015126 	beq	r16,zero,18a24 <__muldf3+0x724>
   184e0:	8009883a 	mov	r4,r16
   184e4:	d9800715 	stw	r6,28(sp)
   184e8:	d9c00215 	stw	r7,8(sp)
   184ec:	da400415 	stw	r9,16(sp)
   184f0:	00198140 	call	19814 <__clzsi2>
   184f4:	d9800717 	ldw	r6,28(sp)
   184f8:	d9c00217 	ldw	r7,8(sp)
   184fc:	da400417 	ldw	r9,16(sp)
   18500:	113ffd44 	addi	r4,r2,-11
   18504:	00c00704 	movi	r3,28
   18508:	19014216 	blt	r3,r4,18a14 <__muldf3+0x714>
   1850c:	00c00744 	movi	r3,29
   18510:	15bffe04 	addi	r22,r2,-8
   18514:	1907c83a 	sub	r3,r3,r4
   18518:	85a0983a 	sll	r16,r16,r22
   1851c:	a8c6d83a 	srl	r3,r21,r3
   18520:	adac983a 	sll	r22,r21,r22
   18524:	1c20b03a 	or	r16,r3,r16
   18528:	1080fcc4 	addi	r2,r2,1011
   1852c:	00a9c83a 	sub	r20,zero,r2
   18530:	002b883a 	mov	r21,zero
   18534:	000b883a 	mov	r5,zero
   18538:	003f9006 	br	1837c <__alt_mem_epcs_flash_controller_0+0xff81737c>
   1853c:	3446b03a 	or	r3,r6,r17
   18540:	1800281e 	bne	r3,zero,185e4 <__muldf3+0x2e4>
   18544:	0023883a 	mov	r17,zero
   18548:	0025883a 	mov	r18,zero
   1854c:	01c00084 	movi	r7,2
   18550:	003f9c06 	br	183c4 <__alt_mem_epcs_flash_controller_0+0xff8173c4>
   18554:	3446b03a 	or	r3,r6,r17
   18558:	18001e26 	beq	r3,zero,185d4 <__muldf3+0x2d4>
   1855c:	88012126 	beq	r17,zero,189e4 <__muldf3+0x6e4>
   18560:	8809883a 	mov	r4,r17
   18564:	d9400215 	stw	r5,8(sp)
   18568:	d9800715 	stw	r6,28(sp)
   1856c:	da400415 	stw	r9,16(sp)
   18570:	da800315 	stw	r10,12(sp)
   18574:	00198140 	call	19814 <__clzsi2>
   18578:	d9400217 	ldw	r5,8(sp)
   1857c:	d9800717 	ldw	r6,28(sp)
   18580:	da400417 	ldw	r9,16(sp)
   18584:	da800317 	ldw	r10,12(sp)
   18588:	113ffd44 	addi	r4,r2,-11
   1858c:	00c00704 	movi	r3,28
   18590:	19011016 	blt	r3,r4,189d4 <__muldf3+0x6d4>
   18594:	00c00744 	movi	r3,29
   18598:	14bffe04 	addi	r18,r2,-8
   1859c:	1907c83a 	sub	r3,r3,r4
   185a0:	8ca2983a 	sll	r17,r17,r18
   185a4:	30c6d83a 	srl	r3,r6,r3
   185a8:	34a4983a 	sll	r18,r6,r18
   185ac:	1c62b03a 	or	r17,r3,r17
   185b0:	1080fcc4 	addi	r2,r2,1011
   185b4:	0085c83a 	sub	r2,zero,r2
   185b8:	000f883a 	mov	r7,zero
   185bc:	003f8106 	br	183c4 <__alt_mem_epcs_flash_controller_0+0xff8173c4>
   185c0:	3027883a 	mov	r19,r6
   185c4:	0081ffc4 	movi	r2,2047
   185c8:	0021883a 	mov	r16,zero
   185cc:	002d883a 	mov	r22,zero
   185d0:	003faa06 	br	1847c <__alt_mem_epcs_flash_controller_0+0xff81747c>
   185d4:	0023883a 	mov	r17,zero
   185d8:	0025883a 	mov	r18,zero
   185dc:	01c00044 	movi	r7,1
   185e0:	003f7806 	br	183c4 <__alt_mem_epcs_flash_controller_0+0xff8173c4>
   185e4:	01c000c4 	movi	r7,3
   185e8:	003f7606 	br	183c4 <__alt_mem_epcs_flash_controller_0+0xff8173c4>
   185ec:	05400104 	movi	r21,4
   185f0:	0021883a 	mov	r16,zero
   185f4:	002d883a 	mov	r22,zero
   185f8:	01400044 	movi	r5,1
   185fc:	003f5f06 	br	1837c <__alt_mem_epcs_flash_controller_0+0xff81737c>
   18600:	05400304 	movi	r21,12
   18604:	014000c4 	movi	r5,3
   18608:	003f5c06 	br	1837c <__alt_mem_epcs_flash_controller_0+0xff81737c>
   1860c:	04000434 	movhi	r16,16
   18610:	0027883a 	mov	r19,zero
   18614:	843fffc4 	addi	r16,r16,-1
   18618:	05bfffc4 	movi	r22,-1
   1861c:	0081ffc4 	movi	r2,2047
   18620:	003f9606 	br	1847c <__alt_mem_epcs_flash_controller_0+0xff81747c>
   18624:	8023883a 	mov	r17,r16
   18628:	b025883a 	mov	r18,r22
   1862c:	280f883a 	mov	r7,r5
   18630:	003f8806 	br	18454 <__alt_mem_epcs_flash_controller_0+0xff817454>
   18634:	8023883a 	mov	r17,r16
   18638:	b025883a 	mov	r18,r22
   1863c:	480d883a 	mov	r6,r9
   18640:	280f883a 	mov	r7,r5
   18644:	003f8306 	br	18454 <__alt_mem_epcs_flash_controller_0+0xff817454>
   18648:	b026d43a 	srli	r19,r22,16
   1864c:	902ed43a 	srli	r23,r18,16
   18650:	b5bfffcc 	andi	r22,r22,65535
   18654:	94bfffcc 	andi	r18,r18,65535
   18658:	b00b883a 	mov	r5,r22
   1865c:	9009883a 	mov	r4,r18
   18660:	d8c00515 	stw	r3,20(sp)
   18664:	d9800715 	stw	r6,28(sp)
   18668:	da000615 	stw	r8,24(sp)
   1866c:	00024440 	call	2444 <__mulsi3>
   18670:	980b883a 	mov	r5,r19
   18674:	9009883a 	mov	r4,r18
   18678:	1029883a 	mov	r20,r2
   1867c:	00024440 	call	2444 <__mulsi3>
   18680:	b80b883a 	mov	r5,r23
   18684:	9809883a 	mov	r4,r19
   18688:	102b883a 	mov	r21,r2
   1868c:	00024440 	call	2444 <__mulsi3>
   18690:	b809883a 	mov	r4,r23
   18694:	b00b883a 	mov	r5,r22
   18698:	1039883a 	mov	fp,r2
   1869c:	00024440 	call	2444 <__mulsi3>
   186a0:	a008d43a 	srli	r4,r20,16
   186a4:	1545883a 	add	r2,r2,r21
   186a8:	d8c00517 	ldw	r3,20(sp)
   186ac:	2085883a 	add	r2,r4,r2
   186b0:	d9800717 	ldw	r6,28(sp)
   186b4:	da000617 	ldw	r8,24(sp)
   186b8:	1540022e 	bgeu	r2,r21,186c4 <__muldf3+0x3c4>
   186bc:	01000074 	movhi	r4,1
   186c0:	e139883a 	add	fp,fp,r4
   186c4:	100e943a 	slli	r7,r2,16
   186c8:	1004d43a 	srli	r2,r2,16
   186cc:	882ad43a 	srli	r21,r17,16
   186d0:	a53fffcc 	andi	r20,r20,65535
   186d4:	8c7fffcc 	andi	r17,r17,65535
   186d8:	3d29883a 	add	r20,r7,r20
   186dc:	b00b883a 	mov	r5,r22
   186e0:	8809883a 	mov	r4,r17
   186e4:	d8c00515 	stw	r3,20(sp)
   186e8:	d9800715 	stw	r6,28(sp)
   186ec:	da000615 	stw	r8,24(sp)
   186f0:	dd000115 	stw	r20,4(sp)
   186f4:	d8800015 	stw	r2,0(sp)
   186f8:	00024440 	call	2444 <__mulsi3>
   186fc:	980b883a 	mov	r5,r19
   18700:	8809883a 	mov	r4,r17
   18704:	d8800215 	stw	r2,8(sp)
   18708:	00024440 	call	2444 <__mulsi3>
   1870c:	9809883a 	mov	r4,r19
   18710:	a80b883a 	mov	r5,r21
   18714:	1029883a 	mov	r20,r2
   18718:	00024440 	call	2444 <__mulsi3>
   1871c:	b00b883a 	mov	r5,r22
   18720:	a809883a 	mov	r4,r21
   18724:	d8800415 	stw	r2,16(sp)
   18728:	00024440 	call	2444 <__mulsi3>
   1872c:	d9c00217 	ldw	r7,8(sp)
   18730:	1505883a 	add	r2,r2,r20
   18734:	d8c00517 	ldw	r3,20(sp)
   18738:	3826d43a 	srli	r19,r7,16
   1873c:	d9800717 	ldw	r6,28(sp)
   18740:	da000617 	ldw	r8,24(sp)
   18744:	9885883a 	add	r2,r19,r2
   18748:	da400417 	ldw	r9,16(sp)
   1874c:	1500022e 	bgeu	r2,r20,18758 <__muldf3+0x458>
   18750:	01000074 	movhi	r4,1
   18754:	4913883a 	add	r9,r9,r4
   18758:	1028d43a 	srli	r20,r2,16
   1875c:	1004943a 	slli	r2,r2,16
   18760:	802cd43a 	srli	r22,r16,16
   18764:	843fffcc 	andi	r16,r16,65535
   18768:	3cffffcc 	andi	r19,r7,65535
   1876c:	9009883a 	mov	r4,r18
   18770:	800b883a 	mov	r5,r16
   18774:	a269883a 	add	r20,r20,r9
   18778:	d8c00515 	stw	r3,20(sp)
   1877c:	d9800715 	stw	r6,28(sp)
   18780:	da000615 	stw	r8,24(sp)
   18784:	14e7883a 	add	r19,r2,r19
   18788:	00024440 	call	2444 <__mulsi3>
   1878c:	9009883a 	mov	r4,r18
   18790:	b00b883a 	mov	r5,r22
   18794:	d8800315 	stw	r2,12(sp)
   18798:	00024440 	call	2444 <__mulsi3>
   1879c:	b809883a 	mov	r4,r23
   187a0:	b00b883a 	mov	r5,r22
   187a4:	d8800215 	stw	r2,8(sp)
   187a8:	00024440 	call	2444 <__mulsi3>
   187ac:	b80b883a 	mov	r5,r23
   187b0:	8009883a 	mov	r4,r16
   187b4:	d8800415 	stw	r2,16(sp)
   187b8:	00024440 	call	2444 <__mulsi3>
   187bc:	da800317 	ldw	r10,12(sp)
   187c0:	d9c00217 	ldw	r7,8(sp)
   187c4:	d9000017 	ldw	r4,0(sp)
   187c8:	502ed43a 	srli	r23,r10,16
   187cc:	11c5883a 	add	r2,r2,r7
   187d0:	24e5883a 	add	r18,r4,r19
   187d4:	b885883a 	add	r2,r23,r2
   187d8:	d8c00517 	ldw	r3,20(sp)
   187dc:	d9800717 	ldw	r6,28(sp)
   187e0:	da000617 	ldw	r8,24(sp)
   187e4:	da400417 	ldw	r9,16(sp)
   187e8:	11c0022e 	bgeu	r2,r7,187f4 <__muldf3+0x4f4>
   187ec:	01000074 	movhi	r4,1
   187f0:	4913883a 	add	r9,r9,r4
   187f4:	100ed43a 	srli	r7,r2,16
   187f8:	1004943a 	slli	r2,r2,16
   187fc:	55ffffcc 	andi	r23,r10,65535
   18800:	3a53883a 	add	r9,r7,r9
   18804:	8809883a 	mov	r4,r17
   18808:	800b883a 	mov	r5,r16
   1880c:	d8c00515 	stw	r3,20(sp)
   18810:	d9800715 	stw	r6,28(sp)
   18814:	da000615 	stw	r8,24(sp)
   18818:	da400415 	stw	r9,16(sp)
   1881c:	15ef883a 	add	r23,r2,r23
   18820:	00024440 	call	2444 <__mulsi3>
   18824:	8809883a 	mov	r4,r17
   18828:	b00b883a 	mov	r5,r22
   1882c:	d8800215 	stw	r2,8(sp)
   18830:	00024440 	call	2444 <__mulsi3>
   18834:	b00b883a 	mov	r5,r22
   18838:	a809883a 	mov	r4,r21
   1883c:	d8800315 	stw	r2,12(sp)
   18840:	00024440 	call	2444 <__mulsi3>
   18844:	8009883a 	mov	r4,r16
   18848:	a80b883a 	mov	r5,r21
   1884c:	1023883a 	mov	r17,r2
   18850:	00024440 	call	2444 <__mulsi3>
   18854:	d9c00217 	ldw	r7,8(sp)
   18858:	da800317 	ldw	r10,12(sp)
   1885c:	d8c00517 	ldw	r3,20(sp)
   18860:	3808d43a 	srli	r4,r7,16
   18864:	1285883a 	add	r2,r2,r10
   18868:	d9800717 	ldw	r6,28(sp)
   1886c:	2085883a 	add	r2,r4,r2
   18870:	da000617 	ldw	r8,24(sp)
   18874:	da400417 	ldw	r9,16(sp)
   18878:	1280022e 	bgeu	r2,r10,18884 <__muldf3+0x584>
   1887c:	01000074 	movhi	r4,1
   18880:	8923883a 	add	r17,r17,r4
   18884:	1008943a 	slli	r4,r2,16
   18888:	39ffffcc 	andi	r7,r7,65535
   1888c:	e4b9883a 	add	fp,fp,r18
   18890:	21cf883a 	add	r7,r4,r7
   18894:	e4e7803a 	cmpltu	r19,fp,r19
   18898:	3d0f883a 	add	r7,r7,r20
   1889c:	bf39883a 	add	fp,r23,fp
   188a0:	99c9883a 	add	r4,r19,r7
   188a4:	e5ef803a 	cmpltu	r23,fp,r23
   188a8:	490b883a 	add	r5,r9,r4
   188ac:	1004d43a 	srli	r2,r2,16
   188b0:	b965883a 	add	r18,r23,r5
   188b4:	24c9803a 	cmpltu	r4,r4,r19
   188b8:	3d29803a 	cmpltu	r20,r7,r20
   188bc:	a128b03a 	or	r20,r20,r4
   188c0:	95ef803a 	cmpltu	r23,r18,r23
   188c4:	2a53803a 	cmpltu	r9,r5,r9
   188c8:	a0a9883a 	add	r20,r20,r2
   188cc:	4deeb03a 	or	r23,r9,r23
   188d0:	a5ef883a 	add	r23,r20,r23
   188d4:	bc63883a 	add	r17,r23,r17
   188d8:	e004927a 	slli	r2,fp,9
   188dc:	d9000117 	ldw	r4,4(sp)
   188e0:	882e927a 	slli	r23,r17,9
   188e4:	9022d5fa 	srli	r17,r18,23
   188e8:	e038d5fa 	srli	fp,fp,23
   188ec:	1104b03a 	or	r2,r2,r4
   188f0:	9024927a 	slli	r18,r18,9
   188f4:	1004c03a 	cmpne	r2,r2,zero
   188f8:	bc62b03a 	or	r17,r23,r17
   188fc:	1738b03a 	or	fp,r2,fp
   18900:	8880402c 	andhi	r2,r17,256
   18904:	e4a4b03a 	or	r18,fp,r18
   18908:	10000726 	beq	r2,zero,18928 <__muldf3+0x628>
   1890c:	9006d07a 	srli	r3,r18,1
   18910:	880497fa 	slli	r2,r17,31
   18914:	9480004c 	andi	r18,r18,1
   18918:	8822d07a 	srli	r17,r17,1
   1891c:	1ca4b03a 	or	r18,r3,r18
   18920:	14a4b03a 	or	r18,r2,r18
   18924:	4007883a 	mov	r3,r8
   18928:	1880ffc4 	addi	r2,r3,1023
   1892c:	0080460e 	bge	zero,r2,18a48 <__muldf3+0x748>
   18930:	910001cc 	andi	r4,r18,7
   18934:	20000726 	beq	r4,zero,18954 <__muldf3+0x654>
   18938:	910003cc 	andi	r4,r18,15
   1893c:	01400104 	movi	r5,4
   18940:	21400426 	beq	r4,r5,18954 <__muldf3+0x654>
   18944:	9149883a 	add	r4,r18,r5
   18948:	24a5803a 	cmpltu	r18,r4,r18
   1894c:	8ca3883a 	add	r17,r17,r18
   18950:	2025883a 	mov	r18,r4
   18954:	8900402c 	andhi	r4,r17,256
   18958:	20000426 	beq	r4,zero,1896c <__muldf3+0x66c>
   1895c:	18810004 	addi	r2,r3,1024
   18960:	00ffc034 	movhi	r3,65280
   18964:	18ffffc4 	addi	r3,r3,-1
   18968:	88e2703a 	and	r17,r17,r3
   1896c:	00c1ff84 	movi	r3,2046
   18970:	18bf1316 	blt	r3,r2,185c0 <__alt_mem_epcs_flash_controller_0+0xff8175c0>
   18974:	882c977a 	slli	r22,r17,29
   18978:	9024d0fa 	srli	r18,r18,3
   1897c:	8822927a 	slli	r17,r17,9
   18980:	1081ffcc 	andi	r2,r2,2047
   18984:	b4acb03a 	or	r22,r22,r18
   18988:	8820d33a 	srli	r16,r17,12
   1898c:	3027883a 	mov	r19,r6
   18990:	003eba06 	br	1847c <__alt_mem_epcs_flash_controller_0+0xff81747c>
   18994:	8080022c 	andhi	r2,r16,8
   18998:	10000926 	beq	r2,zero,189c0 <__muldf3+0x6c0>
   1899c:	8880022c 	andhi	r2,r17,8
   189a0:	1000071e 	bne	r2,zero,189c0 <__muldf3+0x6c0>
   189a4:	00800434 	movhi	r2,16
   189a8:	8c000234 	orhi	r16,r17,8
   189ac:	10bfffc4 	addi	r2,r2,-1
   189b0:	e027883a 	mov	r19,fp
   189b4:	80a0703a 	and	r16,r16,r2
   189b8:	902d883a 	mov	r22,r18
   189bc:	003f1706 	br	1861c <__alt_mem_epcs_flash_controller_0+0xff81761c>
   189c0:	00800434 	movhi	r2,16
   189c4:	84000234 	orhi	r16,r16,8
   189c8:	10bfffc4 	addi	r2,r2,-1
   189cc:	80a0703a 	and	r16,r16,r2
   189d0:	003f1206 	br	1861c <__alt_mem_epcs_flash_controller_0+0xff81761c>
   189d4:	147ff604 	addi	r17,r2,-40
   189d8:	3462983a 	sll	r17,r6,r17
   189dc:	0025883a 	mov	r18,zero
   189e0:	003ef306 	br	185b0 <__alt_mem_epcs_flash_controller_0+0xff8175b0>
   189e4:	3009883a 	mov	r4,r6
   189e8:	d9400215 	stw	r5,8(sp)
   189ec:	d9800715 	stw	r6,28(sp)
   189f0:	da400415 	stw	r9,16(sp)
   189f4:	da800315 	stw	r10,12(sp)
   189f8:	00198140 	call	19814 <__clzsi2>
   189fc:	10800804 	addi	r2,r2,32
   18a00:	da800317 	ldw	r10,12(sp)
   18a04:	da400417 	ldw	r9,16(sp)
   18a08:	d9800717 	ldw	r6,28(sp)
   18a0c:	d9400217 	ldw	r5,8(sp)
   18a10:	003edd06 	br	18588 <__alt_mem_epcs_flash_controller_0+0xff817588>
   18a14:	143ff604 	addi	r16,r2,-40
   18a18:	ac20983a 	sll	r16,r21,r16
   18a1c:	002d883a 	mov	r22,zero
   18a20:	003ec106 	br	18528 <__alt_mem_epcs_flash_controller_0+0xff817528>
   18a24:	d9800715 	stw	r6,28(sp)
   18a28:	d9c00215 	stw	r7,8(sp)
   18a2c:	da400415 	stw	r9,16(sp)
   18a30:	00198140 	call	19814 <__clzsi2>
   18a34:	10800804 	addi	r2,r2,32
   18a38:	da400417 	ldw	r9,16(sp)
   18a3c:	d9c00217 	ldw	r7,8(sp)
   18a40:	d9800717 	ldw	r6,28(sp)
   18a44:	003eae06 	br	18500 <__alt_mem_epcs_flash_controller_0+0xff817500>
   18a48:	00c00044 	movi	r3,1
   18a4c:	1887c83a 	sub	r3,r3,r2
   18a50:	01000e04 	movi	r4,56
   18a54:	20fe8516 	blt	r4,r3,1846c <__alt_mem_epcs_flash_controller_0+0xff81746c>
   18a58:	010007c4 	movi	r4,31
   18a5c:	20c01b16 	blt	r4,r3,18acc <__muldf3+0x7cc>
   18a60:	00800804 	movi	r2,32
   18a64:	10c5c83a 	sub	r2,r2,r3
   18a68:	888a983a 	sll	r5,r17,r2
   18a6c:	90c8d83a 	srl	r4,r18,r3
   18a70:	9084983a 	sll	r2,r18,r2
   18a74:	88e2d83a 	srl	r17,r17,r3
   18a78:	2906b03a 	or	r3,r5,r4
   18a7c:	1004c03a 	cmpne	r2,r2,zero
   18a80:	1886b03a 	or	r3,r3,r2
   18a84:	188001cc 	andi	r2,r3,7
   18a88:	10000726 	beq	r2,zero,18aa8 <__muldf3+0x7a8>
   18a8c:	188003cc 	andi	r2,r3,15
   18a90:	01000104 	movi	r4,4
   18a94:	11000426 	beq	r2,r4,18aa8 <__muldf3+0x7a8>
   18a98:	1805883a 	mov	r2,r3
   18a9c:	10c00104 	addi	r3,r2,4
   18aa0:	1885803a 	cmpltu	r2,r3,r2
   18aa4:	88a3883a 	add	r17,r17,r2
   18aa8:	8880202c 	andhi	r2,r17,128
   18aac:	10001c26 	beq	r2,zero,18b20 <__muldf3+0x820>
   18ab0:	3027883a 	mov	r19,r6
   18ab4:	00800044 	movi	r2,1
   18ab8:	0021883a 	mov	r16,zero
   18abc:	002d883a 	mov	r22,zero
   18ac0:	003e6e06 	br	1847c <__alt_mem_epcs_flash_controller_0+0xff81747c>
   18ac4:	4007883a 	mov	r3,r8
   18ac8:	003f9706 	br	18928 <__alt_mem_epcs_flash_controller_0+0xff817928>
   18acc:	017ff844 	movi	r5,-31
   18ad0:	2885c83a 	sub	r2,r5,r2
   18ad4:	888ad83a 	srl	r5,r17,r2
   18ad8:	00800804 	movi	r2,32
   18adc:	18801a26 	beq	r3,r2,18b48 <__muldf3+0x848>
   18ae0:	01001004 	movi	r4,64
   18ae4:	20c7c83a 	sub	r3,r4,r3
   18ae8:	88e2983a 	sll	r17,r17,r3
   18aec:	8ca4b03a 	or	r18,r17,r18
   18af0:	9004c03a 	cmpne	r2,r18,zero
   18af4:	2884b03a 	or	r2,r5,r2
   18af8:	144001cc 	andi	r17,r2,7
   18afc:	88000d1e 	bne	r17,zero,18b34 <__muldf3+0x834>
   18b00:	0021883a 	mov	r16,zero
   18b04:	102cd0fa 	srli	r22,r2,3
   18b08:	3027883a 	mov	r19,r6
   18b0c:	0005883a 	mov	r2,zero
   18b10:	b46cb03a 	or	r22,r22,r17
   18b14:	003e5906 	br	1847c <__alt_mem_epcs_flash_controller_0+0xff81747c>
   18b18:	1007883a 	mov	r3,r2
   18b1c:	0023883a 	mov	r17,zero
   18b20:	8820927a 	slli	r16,r17,9
   18b24:	1805883a 	mov	r2,r3
   18b28:	8822977a 	slli	r17,r17,29
   18b2c:	8020d33a 	srli	r16,r16,12
   18b30:	003ff406 	br	18b04 <__alt_mem_epcs_flash_controller_0+0xff817b04>
   18b34:	10c003cc 	andi	r3,r2,15
   18b38:	01000104 	movi	r4,4
   18b3c:	193ff626 	beq	r3,r4,18b18 <__alt_mem_epcs_flash_controller_0+0xff817b18>
   18b40:	0023883a 	mov	r17,zero
   18b44:	003fd506 	br	18a9c <__alt_mem_epcs_flash_controller_0+0xff817a9c>
   18b48:	0023883a 	mov	r17,zero
   18b4c:	003fe706 	br	18aec <__alt_mem_epcs_flash_controller_0+0xff817aec>
   18b50:	00800434 	movhi	r2,16
   18b54:	8c000234 	orhi	r16,r17,8
   18b58:	10bfffc4 	addi	r2,r2,-1
   18b5c:	3027883a 	mov	r19,r6
   18b60:	80a0703a 	and	r16,r16,r2
   18b64:	902d883a 	mov	r22,r18
   18b68:	003eac06 	br	1861c <__alt_mem_epcs_flash_controller_0+0xff81761c>

00018b6c <__subdf3>:
   18b6c:	02000434 	movhi	r8,16
   18b70:	423fffc4 	addi	r8,r8,-1
   18b74:	defffb04 	addi	sp,sp,-20
   18b78:	2a14703a 	and	r10,r5,r8
   18b7c:	3812d53a 	srli	r9,r7,20
   18b80:	3a10703a 	and	r8,r7,r8
   18b84:	2006d77a 	srli	r3,r4,29
   18b88:	3004d77a 	srli	r2,r6,29
   18b8c:	dc000015 	stw	r16,0(sp)
   18b90:	501490fa 	slli	r10,r10,3
   18b94:	2820d53a 	srli	r16,r5,20
   18b98:	401090fa 	slli	r8,r8,3
   18b9c:	dc800215 	stw	r18,8(sp)
   18ba0:	dc400115 	stw	r17,4(sp)
   18ba4:	dfc00415 	stw	ra,16(sp)
   18ba8:	202290fa 	slli	r17,r4,3
   18bac:	dcc00315 	stw	r19,12(sp)
   18bb0:	4a41ffcc 	andi	r9,r9,2047
   18bb4:	0101ffc4 	movi	r4,2047
   18bb8:	2824d7fa 	srli	r18,r5,31
   18bbc:	8401ffcc 	andi	r16,r16,2047
   18bc0:	50c6b03a 	or	r3,r10,r3
   18bc4:	380ed7fa 	srli	r7,r7,31
   18bc8:	408ab03a 	or	r5,r8,r2
   18bcc:	300c90fa 	slli	r6,r6,3
   18bd0:	49009626 	beq	r9,r4,18e2c <__subdf3+0x2c0>
   18bd4:	39c0005c 	xori	r7,r7,1
   18bd8:	8245c83a 	sub	r2,r16,r9
   18bdc:	3c807426 	beq	r7,r18,18db0 <__subdf3+0x244>
   18be0:	0080af0e 	bge	zero,r2,18ea0 <__subdf3+0x334>
   18be4:	48002a1e 	bne	r9,zero,18c90 <__subdf3+0x124>
   18be8:	2988b03a 	or	r4,r5,r6
   18bec:	20009a1e 	bne	r4,zero,18e58 <__subdf3+0x2ec>
   18bf0:	888001cc 	andi	r2,r17,7
   18bf4:	10000726 	beq	r2,zero,18c14 <__subdf3+0xa8>
   18bf8:	888003cc 	andi	r2,r17,15
   18bfc:	01000104 	movi	r4,4
   18c00:	11000426 	beq	r2,r4,18c14 <__subdf3+0xa8>
   18c04:	890b883a 	add	r5,r17,r4
   18c08:	2c63803a 	cmpltu	r17,r5,r17
   18c0c:	1c47883a 	add	r3,r3,r17
   18c10:	2823883a 	mov	r17,r5
   18c14:	1880202c 	andhi	r2,r3,128
   18c18:	10005926 	beq	r2,zero,18d80 <__subdf3+0x214>
   18c1c:	84000044 	addi	r16,r16,1
   18c20:	0081ffc4 	movi	r2,2047
   18c24:	8080be26 	beq	r16,r2,18f20 <__subdf3+0x3b4>
   18c28:	017fe034 	movhi	r5,65408
   18c2c:	297fffc4 	addi	r5,r5,-1
   18c30:	1946703a 	and	r3,r3,r5
   18c34:	1804977a 	slli	r2,r3,29
   18c38:	1806927a 	slli	r3,r3,9
   18c3c:	8822d0fa 	srli	r17,r17,3
   18c40:	8401ffcc 	andi	r16,r16,2047
   18c44:	180ad33a 	srli	r5,r3,12
   18c48:	9100004c 	andi	r4,r18,1
   18c4c:	1444b03a 	or	r2,r2,r17
   18c50:	80c1ffcc 	andi	r3,r16,2047
   18c54:	1820953a 	slli	r16,r3,20
   18c58:	20c03fcc 	andi	r3,r4,255
   18c5c:	180897fa 	slli	r4,r3,31
   18c60:	00c00434 	movhi	r3,16
   18c64:	18ffffc4 	addi	r3,r3,-1
   18c68:	28c6703a 	and	r3,r5,r3
   18c6c:	1c06b03a 	or	r3,r3,r16
   18c70:	1906b03a 	or	r3,r3,r4
   18c74:	dfc00417 	ldw	ra,16(sp)
   18c78:	dcc00317 	ldw	r19,12(sp)
   18c7c:	dc800217 	ldw	r18,8(sp)
   18c80:	dc400117 	ldw	r17,4(sp)
   18c84:	dc000017 	ldw	r16,0(sp)
   18c88:	dec00504 	addi	sp,sp,20
   18c8c:	f800283a 	ret
   18c90:	0101ffc4 	movi	r4,2047
   18c94:	813fd626 	beq	r16,r4,18bf0 <__alt_mem_epcs_flash_controller_0+0xff817bf0>
   18c98:	29402034 	orhi	r5,r5,128
   18c9c:	01000e04 	movi	r4,56
   18ca0:	2080a316 	blt	r4,r2,18f30 <__subdf3+0x3c4>
   18ca4:	010007c4 	movi	r4,31
   18ca8:	2080c616 	blt	r4,r2,18fc4 <__subdf3+0x458>
   18cac:	01000804 	movi	r4,32
   18cb0:	2089c83a 	sub	r4,r4,r2
   18cb4:	2910983a 	sll	r8,r5,r4
   18cb8:	308ed83a 	srl	r7,r6,r2
   18cbc:	3108983a 	sll	r4,r6,r4
   18cc0:	2884d83a 	srl	r2,r5,r2
   18cc4:	41ccb03a 	or	r6,r8,r7
   18cc8:	2008c03a 	cmpne	r4,r4,zero
   18ccc:	310cb03a 	or	r6,r6,r4
   18cd0:	898dc83a 	sub	r6,r17,r6
   18cd4:	89a3803a 	cmpltu	r17,r17,r6
   18cd8:	1887c83a 	sub	r3,r3,r2
   18cdc:	1c47c83a 	sub	r3,r3,r17
   18ce0:	3023883a 	mov	r17,r6
   18ce4:	1880202c 	andhi	r2,r3,128
   18ce8:	10002326 	beq	r2,zero,18d78 <__subdf3+0x20c>
   18cec:	04c02034 	movhi	r19,128
   18cf0:	9cffffc4 	addi	r19,r19,-1
   18cf4:	1ce6703a 	and	r19,r3,r19
   18cf8:	98007a26 	beq	r19,zero,18ee4 <__subdf3+0x378>
   18cfc:	9809883a 	mov	r4,r19
   18d00:	00198140 	call	19814 <__clzsi2>
   18d04:	113ffe04 	addi	r4,r2,-8
   18d08:	00c007c4 	movi	r3,31
   18d0c:	19007b16 	blt	r3,r4,18efc <__subdf3+0x390>
   18d10:	00800804 	movi	r2,32
   18d14:	1105c83a 	sub	r2,r2,r4
   18d18:	8884d83a 	srl	r2,r17,r2
   18d1c:	9906983a 	sll	r3,r19,r4
   18d20:	8922983a 	sll	r17,r17,r4
   18d24:	10c4b03a 	or	r2,r2,r3
   18d28:	24007816 	blt	r4,r16,18f0c <__subdf3+0x3a0>
   18d2c:	2421c83a 	sub	r16,r4,r16
   18d30:	80c00044 	addi	r3,r16,1
   18d34:	010007c4 	movi	r4,31
   18d38:	20c09516 	blt	r4,r3,18f90 <__subdf3+0x424>
   18d3c:	01400804 	movi	r5,32
   18d40:	28cbc83a 	sub	r5,r5,r3
   18d44:	88c8d83a 	srl	r4,r17,r3
   18d48:	8962983a 	sll	r17,r17,r5
   18d4c:	114a983a 	sll	r5,r2,r5
   18d50:	10c6d83a 	srl	r3,r2,r3
   18d54:	8804c03a 	cmpne	r2,r17,zero
   18d58:	290ab03a 	or	r5,r5,r4
   18d5c:	28a2b03a 	or	r17,r5,r2
   18d60:	0021883a 	mov	r16,zero
   18d64:	003fa206 	br	18bf0 <__alt_mem_epcs_flash_controller_0+0xff817bf0>
   18d68:	2090b03a 	or	r8,r4,r2
   18d6c:	40018e26 	beq	r8,zero,193a8 <__subdf3+0x83c>
   18d70:	1007883a 	mov	r3,r2
   18d74:	2023883a 	mov	r17,r4
   18d78:	888001cc 	andi	r2,r17,7
   18d7c:	103f9e1e 	bne	r2,zero,18bf8 <__alt_mem_epcs_flash_controller_0+0xff817bf8>
   18d80:	1804977a 	slli	r2,r3,29
   18d84:	8822d0fa 	srli	r17,r17,3
   18d88:	1810d0fa 	srli	r8,r3,3
   18d8c:	9100004c 	andi	r4,r18,1
   18d90:	1444b03a 	or	r2,r2,r17
   18d94:	00c1ffc4 	movi	r3,2047
   18d98:	80c02826 	beq	r16,r3,18e3c <__subdf3+0x2d0>
   18d9c:	01400434 	movhi	r5,16
   18da0:	297fffc4 	addi	r5,r5,-1
   18da4:	80e0703a 	and	r16,r16,r3
   18da8:	414a703a 	and	r5,r8,r5
   18dac:	003fa806 	br	18c50 <__alt_mem_epcs_flash_controller_0+0xff817c50>
   18db0:	0080630e 	bge	zero,r2,18f40 <__subdf3+0x3d4>
   18db4:	48003026 	beq	r9,zero,18e78 <__subdf3+0x30c>
   18db8:	0101ffc4 	movi	r4,2047
   18dbc:	813f8c26 	beq	r16,r4,18bf0 <__alt_mem_epcs_flash_controller_0+0xff817bf0>
   18dc0:	29402034 	orhi	r5,r5,128
   18dc4:	01000e04 	movi	r4,56
   18dc8:	2080a90e 	bge	r4,r2,19070 <__subdf3+0x504>
   18dcc:	298cb03a 	or	r6,r5,r6
   18dd0:	3012c03a 	cmpne	r9,r6,zero
   18dd4:	0005883a 	mov	r2,zero
   18dd8:	4c53883a 	add	r9,r9,r17
   18ddc:	4c63803a 	cmpltu	r17,r9,r17
   18de0:	10c7883a 	add	r3,r2,r3
   18de4:	88c7883a 	add	r3,r17,r3
   18de8:	4823883a 	mov	r17,r9
   18dec:	1880202c 	andhi	r2,r3,128
   18df0:	1000d026 	beq	r2,zero,19134 <__subdf3+0x5c8>
   18df4:	84000044 	addi	r16,r16,1
   18df8:	0081ffc4 	movi	r2,2047
   18dfc:	8080fe26 	beq	r16,r2,191f8 <__subdf3+0x68c>
   18e00:	00bfe034 	movhi	r2,65408
   18e04:	10bfffc4 	addi	r2,r2,-1
   18e08:	1886703a 	and	r3,r3,r2
   18e0c:	880ad07a 	srli	r5,r17,1
   18e10:	180497fa 	slli	r2,r3,31
   18e14:	8900004c 	andi	r4,r17,1
   18e18:	2922b03a 	or	r17,r5,r4
   18e1c:	1806d07a 	srli	r3,r3,1
   18e20:	1462b03a 	or	r17,r2,r17
   18e24:	3825883a 	mov	r18,r7
   18e28:	003f7106 	br	18bf0 <__alt_mem_epcs_flash_controller_0+0xff817bf0>
   18e2c:	2984b03a 	or	r2,r5,r6
   18e30:	103f6826 	beq	r2,zero,18bd4 <__alt_mem_epcs_flash_controller_0+0xff817bd4>
   18e34:	39c03fcc 	andi	r7,r7,255
   18e38:	003f6706 	br	18bd8 <__alt_mem_epcs_flash_controller_0+0xff817bd8>
   18e3c:	4086b03a 	or	r3,r8,r2
   18e40:	18015226 	beq	r3,zero,1938c <__subdf3+0x820>
   18e44:	00c00434 	movhi	r3,16
   18e48:	41400234 	orhi	r5,r8,8
   18e4c:	18ffffc4 	addi	r3,r3,-1
   18e50:	28ca703a 	and	r5,r5,r3
   18e54:	003f7e06 	br	18c50 <__alt_mem_epcs_flash_controller_0+0xff817c50>
   18e58:	10bfffc4 	addi	r2,r2,-1
   18e5c:	1000491e 	bne	r2,zero,18f84 <__subdf3+0x418>
   18e60:	898fc83a 	sub	r7,r17,r6
   18e64:	89e3803a 	cmpltu	r17,r17,r7
   18e68:	1947c83a 	sub	r3,r3,r5
   18e6c:	1c47c83a 	sub	r3,r3,r17
   18e70:	3823883a 	mov	r17,r7
   18e74:	003f9b06 	br	18ce4 <__alt_mem_epcs_flash_controller_0+0xff817ce4>
   18e78:	2988b03a 	or	r4,r5,r6
   18e7c:	203f5c26 	beq	r4,zero,18bf0 <__alt_mem_epcs_flash_controller_0+0xff817bf0>
   18e80:	10bfffc4 	addi	r2,r2,-1
   18e84:	1000931e 	bne	r2,zero,190d4 <__subdf3+0x568>
   18e88:	898d883a 	add	r6,r17,r6
   18e8c:	3463803a 	cmpltu	r17,r6,r17
   18e90:	1947883a 	add	r3,r3,r5
   18e94:	88c7883a 	add	r3,r17,r3
   18e98:	3023883a 	mov	r17,r6
   18e9c:	003fd306 	br	18dec <__alt_mem_epcs_flash_controller_0+0xff817dec>
   18ea0:	1000541e 	bne	r2,zero,18ff4 <__subdf3+0x488>
   18ea4:	80800044 	addi	r2,r16,1
   18ea8:	1081ffcc 	andi	r2,r2,2047
   18eac:	01000044 	movi	r4,1
   18eb0:	2080a20e 	bge	r4,r2,1913c <__subdf3+0x5d0>
   18eb4:	8989c83a 	sub	r4,r17,r6
   18eb8:	8905803a 	cmpltu	r2,r17,r4
   18ebc:	1967c83a 	sub	r19,r3,r5
   18ec0:	98a7c83a 	sub	r19,r19,r2
   18ec4:	9880202c 	andhi	r2,r19,128
   18ec8:	10006326 	beq	r2,zero,19058 <__subdf3+0x4ec>
   18ecc:	3463c83a 	sub	r17,r6,r17
   18ed0:	28c7c83a 	sub	r3,r5,r3
   18ed4:	344d803a 	cmpltu	r6,r6,r17
   18ed8:	19a7c83a 	sub	r19,r3,r6
   18edc:	3825883a 	mov	r18,r7
   18ee0:	983f861e 	bne	r19,zero,18cfc <__alt_mem_epcs_flash_controller_0+0xff817cfc>
   18ee4:	8809883a 	mov	r4,r17
   18ee8:	00198140 	call	19814 <__clzsi2>
   18eec:	10800804 	addi	r2,r2,32
   18ef0:	113ffe04 	addi	r4,r2,-8
   18ef4:	00c007c4 	movi	r3,31
   18ef8:	193f850e 	bge	r3,r4,18d10 <__alt_mem_epcs_flash_controller_0+0xff817d10>
   18efc:	10bff604 	addi	r2,r2,-40
   18f00:	8884983a 	sll	r2,r17,r2
   18f04:	0023883a 	mov	r17,zero
   18f08:	243f880e 	bge	r4,r16,18d2c <__alt_mem_epcs_flash_controller_0+0xff817d2c>
   18f0c:	00ffe034 	movhi	r3,65408
   18f10:	18ffffc4 	addi	r3,r3,-1
   18f14:	8121c83a 	sub	r16,r16,r4
   18f18:	10c6703a 	and	r3,r2,r3
   18f1c:	003f3406 	br	18bf0 <__alt_mem_epcs_flash_controller_0+0xff817bf0>
   18f20:	9100004c 	andi	r4,r18,1
   18f24:	000b883a 	mov	r5,zero
   18f28:	0005883a 	mov	r2,zero
   18f2c:	003f4806 	br	18c50 <__alt_mem_epcs_flash_controller_0+0xff817c50>
   18f30:	298cb03a 	or	r6,r5,r6
   18f34:	300cc03a 	cmpne	r6,r6,zero
   18f38:	0005883a 	mov	r2,zero
   18f3c:	003f6406 	br	18cd0 <__alt_mem_epcs_flash_controller_0+0xff817cd0>
   18f40:	10009a1e 	bne	r2,zero,191ac <__subdf3+0x640>
   18f44:	82400044 	addi	r9,r16,1
   18f48:	4881ffcc 	andi	r2,r9,2047
   18f4c:	02800044 	movi	r10,1
   18f50:	5080670e 	bge	r10,r2,190f0 <__subdf3+0x584>
   18f54:	0081ffc4 	movi	r2,2047
   18f58:	4880af26 	beq	r9,r2,19218 <__subdf3+0x6ac>
   18f5c:	898d883a 	add	r6,r17,r6
   18f60:	1945883a 	add	r2,r3,r5
   18f64:	3447803a 	cmpltu	r3,r6,r17
   18f68:	1887883a 	add	r3,r3,r2
   18f6c:	182297fa 	slli	r17,r3,31
   18f70:	300cd07a 	srli	r6,r6,1
   18f74:	1806d07a 	srli	r3,r3,1
   18f78:	4821883a 	mov	r16,r9
   18f7c:	89a2b03a 	or	r17,r17,r6
   18f80:	003f1b06 	br	18bf0 <__alt_mem_epcs_flash_controller_0+0xff817bf0>
   18f84:	0101ffc4 	movi	r4,2047
   18f88:	813f441e 	bne	r16,r4,18c9c <__alt_mem_epcs_flash_controller_0+0xff817c9c>
   18f8c:	003f1806 	br	18bf0 <__alt_mem_epcs_flash_controller_0+0xff817bf0>
   18f90:	843ff844 	addi	r16,r16,-31
   18f94:	01400804 	movi	r5,32
   18f98:	1408d83a 	srl	r4,r2,r16
   18f9c:	19405026 	beq	r3,r5,190e0 <__subdf3+0x574>
   18fa0:	01401004 	movi	r5,64
   18fa4:	28c7c83a 	sub	r3,r5,r3
   18fa8:	10c4983a 	sll	r2,r2,r3
   18fac:	88a2b03a 	or	r17,r17,r2
   18fb0:	8822c03a 	cmpne	r17,r17,zero
   18fb4:	2462b03a 	or	r17,r4,r17
   18fb8:	0007883a 	mov	r3,zero
   18fbc:	0021883a 	mov	r16,zero
   18fc0:	003f6d06 	br	18d78 <__alt_mem_epcs_flash_controller_0+0xff817d78>
   18fc4:	11fff804 	addi	r7,r2,-32
   18fc8:	01000804 	movi	r4,32
   18fcc:	29ced83a 	srl	r7,r5,r7
   18fd0:	11004526 	beq	r2,r4,190e8 <__subdf3+0x57c>
   18fd4:	01001004 	movi	r4,64
   18fd8:	2089c83a 	sub	r4,r4,r2
   18fdc:	2904983a 	sll	r2,r5,r4
   18fe0:	118cb03a 	or	r6,r2,r6
   18fe4:	300cc03a 	cmpne	r6,r6,zero
   18fe8:	398cb03a 	or	r6,r7,r6
   18fec:	0005883a 	mov	r2,zero
   18ff0:	003f3706 	br	18cd0 <__alt_mem_epcs_flash_controller_0+0xff817cd0>
   18ff4:	80002a26 	beq	r16,zero,190a0 <__subdf3+0x534>
   18ff8:	0101ffc4 	movi	r4,2047
   18ffc:	49006626 	beq	r9,r4,19198 <__subdf3+0x62c>
   19000:	0085c83a 	sub	r2,zero,r2
   19004:	18c02034 	orhi	r3,r3,128
   19008:	01000e04 	movi	r4,56
   1900c:	20807e16 	blt	r4,r2,19208 <__subdf3+0x69c>
   19010:	010007c4 	movi	r4,31
   19014:	2080e716 	blt	r4,r2,193b4 <__subdf3+0x848>
   19018:	01000804 	movi	r4,32
   1901c:	2089c83a 	sub	r4,r4,r2
   19020:	1914983a 	sll	r10,r3,r4
   19024:	8890d83a 	srl	r8,r17,r2
   19028:	8908983a 	sll	r4,r17,r4
   1902c:	1884d83a 	srl	r2,r3,r2
   19030:	5222b03a 	or	r17,r10,r8
   19034:	2006c03a 	cmpne	r3,r4,zero
   19038:	88e2b03a 	or	r17,r17,r3
   1903c:	3463c83a 	sub	r17,r6,r17
   19040:	2885c83a 	sub	r2,r5,r2
   19044:	344d803a 	cmpltu	r6,r6,r17
   19048:	1187c83a 	sub	r3,r2,r6
   1904c:	4821883a 	mov	r16,r9
   19050:	3825883a 	mov	r18,r7
   19054:	003f2306 	br	18ce4 <__alt_mem_epcs_flash_controller_0+0xff817ce4>
   19058:	24d0b03a 	or	r8,r4,r19
   1905c:	40001b1e 	bne	r8,zero,190cc <__subdf3+0x560>
   19060:	0005883a 	mov	r2,zero
   19064:	0009883a 	mov	r4,zero
   19068:	0021883a 	mov	r16,zero
   1906c:	003f4906 	br	18d94 <__alt_mem_epcs_flash_controller_0+0xff817d94>
   19070:	010007c4 	movi	r4,31
   19074:	20803a16 	blt	r4,r2,19160 <__subdf3+0x5f4>
   19078:	01000804 	movi	r4,32
   1907c:	2089c83a 	sub	r4,r4,r2
   19080:	2912983a 	sll	r9,r5,r4
   19084:	3090d83a 	srl	r8,r6,r2
   19088:	3108983a 	sll	r4,r6,r4
   1908c:	2884d83a 	srl	r2,r5,r2
   19090:	4a12b03a 	or	r9,r9,r8
   19094:	2008c03a 	cmpne	r4,r4,zero
   19098:	4912b03a 	or	r9,r9,r4
   1909c:	003f4e06 	br	18dd8 <__alt_mem_epcs_flash_controller_0+0xff817dd8>
   190a0:	1c48b03a 	or	r4,r3,r17
   190a4:	20003c26 	beq	r4,zero,19198 <__subdf3+0x62c>
   190a8:	0084303a 	nor	r2,zero,r2
   190ac:	1000381e 	bne	r2,zero,19190 <__subdf3+0x624>
   190b0:	3463c83a 	sub	r17,r6,r17
   190b4:	28c5c83a 	sub	r2,r5,r3
   190b8:	344d803a 	cmpltu	r6,r6,r17
   190bc:	1187c83a 	sub	r3,r2,r6
   190c0:	4821883a 	mov	r16,r9
   190c4:	3825883a 	mov	r18,r7
   190c8:	003f0606 	br	18ce4 <__alt_mem_epcs_flash_controller_0+0xff817ce4>
   190cc:	2023883a 	mov	r17,r4
   190d0:	003f0906 	br	18cf8 <__alt_mem_epcs_flash_controller_0+0xff817cf8>
   190d4:	0101ffc4 	movi	r4,2047
   190d8:	813f3a1e 	bne	r16,r4,18dc4 <__alt_mem_epcs_flash_controller_0+0xff817dc4>
   190dc:	003ec406 	br	18bf0 <__alt_mem_epcs_flash_controller_0+0xff817bf0>
   190e0:	0005883a 	mov	r2,zero
   190e4:	003fb106 	br	18fac <__alt_mem_epcs_flash_controller_0+0xff817fac>
   190e8:	0005883a 	mov	r2,zero
   190ec:	003fbc06 	br	18fe0 <__alt_mem_epcs_flash_controller_0+0xff817fe0>
   190f0:	1c44b03a 	or	r2,r3,r17
   190f4:	80008e1e 	bne	r16,zero,19330 <__subdf3+0x7c4>
   190f8:	1000c826 	beq	r2,zero,1941c <__subdf3+0x8b0>
   190fc:	2984b03a 	or	r2,r5,r6
   19100:	103ebb26 	beq	r2,zero,18bf0 <__alt_mem_epcs_flash_controller_0+0xff817bf0>
   19104:	8989883a 	add	r4,r17,r6
   19108:	1945883a 	add	r2,r3,r5
   1910c:	2447803a 	cmpltu	r3,r4,r17
   19110:	1887883a 	add	r3,r3,r2
   19114:	1880202c 	andhi	r2,r3,128
   19118:	2023883a 	mov	r17,r4
   1911c:	103f1626 	beq	r2,zero,18d78 <__alt_mem_epcs_flash_controller_0+0xff817d78>
   19120:	00bfe034 	movhi	r2,65408
   19124:	10bfffc4 	addi	r2,r2,-1
   19128:	5021883a 	mov	r16,r10
   1912c:	1886703a 	and	r3,r3,r2
   19130:	003eaf06 	br	18bf0 <__alt_mem_epcs_flash_controller_0+0xff817bf0>
   19134:	3825883a 	mov	r18,r7
   19138:	003f0f06 	br	18d78 <__alt_mem_epcs_flash_controller_0+0xff817d78>
   1913c:	1c44b03a 	or	r2,r3,r17
   19140:	8000251e 	bne	r16,zero,191d8 <__subdf3+0x66c>
   19144:	1000661e 	bne	r2,zero,192e0 <__subdf3+0x774>
   19148:	2990b03a 	or	r8,r5,r6
   1914c:	40009626 	beq	r8,zero,193a8 <__subdf3+0x83c>
   19150:	2807883a 	mov	r3,r5
   19154:	3023883a 	mov	r17,r6
   19158:	3825883a 	mov	r18,r7
   1915c:	003ea406 	br	18bf0 <__alt_mem_epcs_flash_controller_0+0xff817bf0>
   19160:	127ff804 	addi	r9,r2,-32
   19164:	01000804 	movi	r4,32
   19168:	2a52d83a 	srl	r9,r5,r9
   1916c:	11008c26 	beq	r2,r4,193a0 <__subdf3+0x834>
   19170:	01001004 	movi	r4,64
   19174:	2085c83a 	sub	r2,r4,r2
   19178:	2884983a 	sll	r2,r5,r2
   1917c:	118cb03a 	or	r6,r2,r6
   19180:	300cc03a 	cmpne	r6,r6,zero
   19184:	4992b03a 	or	r9,r9,r6
   19188:	0005883a 	mov	r2,zero
   1918c:	003f1206 	br	18dd8 <__alt_mem_epcs_flash_controller_0+0xff817dd8>
   19190:	0101ffc4 	movi	r4,2047
   19194:	493f9c1e 	bne	r9,r4,19008 <__alt_mem_epcs_flash_controller_0+0xff818008>
   19198:	2807883a 	mov	r3,r5
   1919c:	3023883a 	mov	r17,r6
   191a0:	4821883a 	mov	r16,r9
   191a4:	3825883a 	mov	r18,r7
   191a8:	003e9106 	br	18bf0 <__alt_mem_epcs_flash_controller_0+0xff817bf0>
   191ac:	80001f1e 	bne	r16,zero,1922c <__subdf3+0x6c0>
   191b0:	1c48b03a 	or	r4,r3,r17
   191b4:	20005a26 	beq	r4,zero,19320 <__subdf3+0x7b4>
   191b8:	0084303a 	nor	r2,zero,r2
   191bc:	1000561e 	bne	r2,zero,19318 <__subdf3+0x7ac>
   191c0:	89a3883a 	add	r17,r17,r6
   191c4:	1945883a 	add	r2,r3,r5
   191c8:	898d803a 	cmpltu	r6,r17,r6
   191cc:	3087883a 	add	r3,r6,r2
   191d0:	4821883a 	mov	r16,r9
   191d4:	003f0506 	br	18dec <__alt_mem_epcs_flash_controller_0+0xff817dec>
   191d8:	10002b1e 	bne	r2,zero,19288 <__subdf3+0x71c>
   191dc:	2984b03a 	or	r2,r5,r6
   191e0:	10008026 	beq	r2,zero,193e4 <__subdf3+0x878>
   191e4:	2807883a 	mov	r3,r5
   191e8:	3023883a 	mov	r17,r6
   191ec:	3825883a 	mov	r18,r7
   191f0:	0401ffc4 	movi	r16,2047
   191f4:	003e7e06 	br	18bf0 <__alt_mem_epcs_flash_controller_0+0xff817bf0>
   191f8:	3809883a 	mov	r4,r7
   191fc:	0011883a 	mov	r8,zero
   19200:	0005883a 	mov	r2,zero
   19204:	003ee306 	br	18d94 <__alt_mem_epcs_flash_controller_0+0xff817d94>
   19208:	1c62b03a 	or	r17,r3,r17
   1920c:	8822c03a 	cmpne	r17,r17,zero
   19210:	0005883a 	mov	r2,zero
   19214:	003f8906 	br	1903c <__alt_mem_epcs_flash_controller_0+0xff81803c>
   19218:	3809883a 	mov	r4,r7
   1921c:	4821883a 	mov	r16,r9
   19220:	0011883a 	mov	r8,zero
   19224:	0005883a 	mov	r2,zero
   19228:	003eda06 	br	18d94 <__alt_mem_epcs_flash_controller_0+0xff817d94>
   1922c:	0101ffc4 	movi	r4,2047
   19230:	49003b26 	beq	r9,r4,19320 <__subdf3+0x7b4>
   19234:	0085c83a 	sub	r2,zero,r2
   19238:	18c02034 	orhi	r3,r3,128
   1923c:	01000e04 	movi	r4,56
   19240:	20806e16 	blt	r4,r2,193fc <__subdf3+0x890>
   19244:	010007c4 	movi	r4,31
   19248:	20807716 	blt	r4,r2,19428 <__subdf3+0x8bc>
   1924c:	01000804 	movi	r4,32
   19250:	2089c83a 	sub	r4,r4,r2
   19254:	1914983a 	sll	r10,r3,r4
   19258:	8890d83a 	srl	r8,r17,r2
   1925c:	8908983a 	sll	r4,r17,r4
   19260:	1884d83a 	srl	r2,r3,r2
   19264:	5222b03a 	or	r17,r10,r8
   19268:	2006c03a 	cmpne	r3,r4,zero
   1926c:	88e2b03a 	or	r17,r17,r3
   19270:	89a3883a 	add	r17,r17,r6
   19274:	1145883a 	add	r2,r2,r5
   19278:	898d803a 	cmpltu	r6,r17,r6
   1927c:	3087883a 	add	r3,r6,r2
   19280:	4821883a 	mov	r16,r9
   19284:	003ed906 	br	18dec <__alt_mem_epcs_flash_controller_0+0xff817dec>
   19288:	2984b03a 	or	r2,r5,r6
   1928c:	10004226 	beq	r2,zero,19398 <__subdf3+0x82c>
   19290:	1808d0fa 	srli	r4,r3,3
   19294:	8822d0fa 	srli	r17,r17,3
   19298:	1806977a 	slli	r3,r3,29
   1929c:	2080022c 	andhi	r2,r4,8
   192a0:	1c62b03a 	or	r17,r3,r17
   192a4:	10000826 	beq	r2,zero,192c8 <__subdf3+0x75c>
   192a8:	2812d0fa 	srli	r9,r5,3
   192ac:	4880022c 	andhi	r2,r9,8
   192b0:	1000051e 	bne	r2,zero,192c8 <__subdf3+0x75c>
   192b4:	300cd0fa 	srli	r6,r6,3
   192b8:	2804977a 	slli	r2,r5,29
   192bc:	4809883a 	mov	r4,r9
   192c0:	3825883a 	mov	r18,r7
   192c4:	11a2b03a 	or	r17,r2,r6
   192c8:	8806d77a 	srli	r3,r17,29
   192cc:	200890fa 	slli	r4,r4,3
   192d0:	882290fa 	slli	r17,r17,3
   192d4:	0401ffc4 	movi	r16,2047
   192d8:	1906b03a 	or	r3,r3,r4
   192dc:	003e4406 	br	18bf0 <__alt_mem_epcs_flash_controller_0+0xff817bf0>
   192e0:	2984b03a 	or	r2,r5,r6
   192e4:	103e4226 	beq	r2,zero,18bf0 <__alt_mem_epcs_flash_controller_0+0xff817bf0>
   192e8:	8989c83a 	sub	r4,r17,r6
   192ec:	8911803a 	cmpltu	r8,r17,r4
   192f0:	1945c83a 	sub	r2,r3,r5
   192f4:	1205c83a 	sub	r2,r2,r8
   192f8:	1200202c 	andhi	r8,r2,128
   192fc:	403e9a26 	beq	r8,zero,18d68 <__alt_mem_epcs_flash_controller_0+0xff817d68>
   19300:	3463c83a 	sub	r17,r6,r17
   19304:	28c5c83a 	sub	r2,r5,r3
   19308:	344d803a 	cmpltu	r6,r6,r17
   1930c:	1187c83a 	sub	r3,r2,r6
   19310:	3825883a 	mov	r18,r7
   19314:	003e3606 	br	18bf0 <__alt_mem_epcs_flash_controller_0+0xff817bf0>
   19318:	0101ffc4 	movi	r4,2047
   1931c:	493fc71e 	bne	r9,r4,1923c <__alt_mem_epcs_flash_controller_0+0xff81823c>
   19320:	2807883a 	mov	r3,r5
   19324:	3023883a 	mov	r17,r6
   19328:	4821883a 	mov	r16,r9
   1932c:	003e3006 	br	18bf0 <__alt_mem_epcs_flash_controller_0+0xff817bf0>
   19330:	10003626 	beq	r2,zero,1940c <__subdf3+0x8a0>
   19334:	2984b03a 	or	r2,r5,r6
   19338:	10001726 	beq	r2,zero,19398 <__subdf3+0x82c>
   1933c:	1808d0fa 	srli	r4,r3,3
   19340:	8822d0fa 	srli	r17,r17,3
   19344:	1806977a 	slli	r3,r3,29
   19348:	2080022c 	andhi	r2,r4,8
   1934c:	1c62b03a 	or	r17,r3,r17
   19350:	10000726 	beq	r2,zero,19370 <__subdf3+0x804>
   19354:	2812d0fa 	srli	r9,r5,3
   19358:	4880022c 	andhi	r2,r9,8
   1935c:	1000041e 	bne	r2,zero,19370 <__subdf3+0x804>
   19360:	300cd0fa 	srli	r6,r6,3
   19364:	2804977a 	slli	r2,r5,29
   19368:	4809883a 	mov	r4,r9
   1936c:	11a2b03a 	or	r17,r2,r6
   19370:	8806d77a 	srli	r3,r17,29
   19374:	200890fa 	slli	r4,r4,3
   19378:	882290fa 	slli	r17,r17,3
   1937c:	3825883a 	mov	r18,r7
   19380:	1906b03a 	or	r3,r3,r4
   19384:	0401ffc4 	movi	r16,2047
   19388:	003e1906 	br	18bf0 <__alt_mem_epcs_flash_controller_0+0xff817bf0>
   1938c:	000b883a 	mov	r5,zero
   19390:	0005883a 	mov	r2,zero
   19394:	003e2e06 	br	18c50 <__alt_mem_epcs_flash_controller_0+0xff817c50>
   19398:	0401ffc4 	movi	r16,2047
   1939c:	003e1406 	br	18bf0 <__alt_mem_epcs_flash_controller_0+0xff817bf0>
   193a0:	0005883a 	mov	r2,zero
   193a4:	003f7506 	br	1917c <__alt_mem_epcs_flash_controller_0+0xff81817c>
   193a8:	0005883a 	mov	r2,zero
   193ac:	0009883a 	mov	r4,zero
   193b0:	003e7806 	br	18d94 <__alt_mem_epcs_flash_controller_0+0xff817d94>
   193b4:	123ff804 	addi	r8,r2,-32
   193b8:	01000804 	movi	r4,32
   193bc:	1a10d83a 	srl	r8,r3,r8
   193c0:	11002526 	beq	r2,r4,19458 <__subdf3+0x8ec>
   193c4:	01001004 	movi	r4,64
   193c8:	2085c83a 	sub	r2,r4,r2
   193cc:	1884983a 	sll	r2,r3,r2
   193d0:	1444b03a 	or	r2,r2,r17
   193d4:	1004c03a 	cmpne	r2,r2,zero
   193d8:	40a2b03a 	or	r17,r8,r2
   193dc:	0005883a 	mov	r2,zero
   193e0:	003f1606 	br	1903c <__alt_mem_epcs_flash_controller_0+0xff81803c>
   193e4:	02000434 	movhi	r8,16
   193e8:	0009883a 	mov	r4,zero
   193ec:	423fffc4 	addi	r8,r8,-1
   193f0:	00bfffc4 	movi	r2,-1
   193f4:	0401ffc4 	movi	r16,2047
   193f8:	003e6606 	br	18d94 <__alt_mem_epcs_flash_controller_0+0xff817d94>
   193fc:	1c62b03a 	or	r17,r3,r17
   19400:	8822c03a 	cmpne	r17,r17,zero
   19404:	0005883a 	mov	r2,zero
   19408:	003f9906 	br	19270 <__alt_mem_epcs_flash_controller_0+0xff818270>
   1940c:	2807883a 	mov	r3,r5
   19410:	3023883a 	mov	r17,r6
   19414:	0401ffc4 	movi	r16,2047
   19418:	003df506 	br	18bf0 <__alt_mem_epcs_flash_controller_0+0xff817bf0>
   1941c:	2807883a 	mov	r3,r5
   19420:	3023883a 	mov	r17,r6
   19424:	003df206 	br	18bf0 <__alt_mem_epcs_flash_controller_0+0xff817bf0>
   19428:	123ff804 	addi	r8,r2,-32
   1942c:	01000804 	movi	r4,32
   19430:	1a10d83a 	srl	r8,r3,r8
   19434:	11000a26 	beq	r2,r4,19460 <__subdf3+0x8f4>
   19438:	01001004 	movi	r4,64
   1943c:	2085c83a 	sub	r2,r4,r2
   19440:	1884983a 	sll	r2,r3,r2
   19444:	1444b03a 	or	r2,r2,r17
   19448:	1004c03a 	cmpne	r2,r2,zero
   1944c:	40a2b03a 	or	r17,r8,r2
   19450:	0005883a 	mov	r2,zero
   19454:	003f8606 	br	19270 <__alt_mem_epcs_flash_controller_0+0xff818270>
   19458:	0005883a 	mov	r2,zero
   1945c:	003fdc06 	br	193d0 <__alt_mem_epcs_flash_controller_0+0xff8183d0>
   19460:	0005883a 	mov	r2,zero
   19464:	003ff706 	br	19444 <__alt_mem_epcs_flash_controller_0+0xff818444>

00019468 <__fixdfsi>:
   19468:	280cd53a 	srli	r6,r5,20
   1946c:	00c00434 	movhi	r3,16
   19470:	18ffffc4 	addi	r3,r3,-1
   19474:	3181ffcc 	andi	r6,r6,2047
   19478:	01c0ff84 	movi	r7,1022
   1947c:	28c6703a 	and	r3,r5,r3
   19480:	280ad7fa 	srli	r5,r5,31
   19484:	3980120e 	bge	r7,r6,194d0 <__fixdfsi+0x68>
   19488:	00810744 	movi	r2,1053
   1948c:	11800c16 	blt	r2,r6,194c0 <__fixdfsi+0x58>
   19490:	00810cc4 	movi	r2,1075
   19494:	1185c83a 	sub	r2,r2,r6
   19498:	01c007c4 	movi	r7,31
   1949c:	18c00434 	orhi	r3,r3,16
   194a0:	38800d16 	blt	r7,r2,194d8 <__fixdfsi+0x70>
   194a4:	31befb44 	addi	r6,r6,-1043
   194a8:	2084d83a 	srl	r2,r4,r2
   194ac:	1986983a 	sll	r3,r3,r6
   194b0:	1884b03a 	or	r2,r3,r2
   194b4:	28000726 	beq	r5,zero,194d4 <__fixdfsi+0x6c>
   194b8:	0085c83a 	sub	r2,zero,r2
   194bc:	f800283a 	ret
   194c0:	00a00034 	movhi	r2,32768
   194c4:	10bfffc4 	addi	r2,r2,-1
   194c8:	2885883a 	add	r2,r5,r2
   194cc:	f800283a 	ret
   194d0:	0005883a 	mov	r2,zero
   194d4:	f800283a 	ret
   194d8:	008104c4 	movi	r2,1043
   194dc:	1185c83a 	sub	r2,r2,r6
   194e0:	1884d83a 	srl	r2,r3,r2
   194e4:	003ff306 	br	194b4 <__alt_mem_epcs_flash_controller_0+0xff8184b4>

000194e8 <__floatsidf>:
   194e8:	defffd04 	addi	sp,sp,-12
   194ec:	dfc00215 	stw	ra,8(sp)
   194f0:	dc400115 	stw	r17,4(sp)
   194f4:	dc000015 	stw	r16,0(sp)
   194f8:	20002b26 	beq	r4,zero,195a8 <__floatsidf+0xc0>
   194fc:	2023883a 	mov	r17,r4
   19500:	2020d7fa 	srli	r16,r4,31
   19504:	20002d16 	blt	r4,zero,195bc <__floatsidf+0xd4>
   19508:	8809883a 	mov	r4,r17
   1950c:	00198140 	call	19814 <__clzsi2>
   19510:	01410784 	movi	r5,1054
   19514:	288bc83a 	sub	r5,r5,r2
   19518:	01010cc4 	movi	r4,1075
   1951c:	2149c83a 	sub	r4,r4,r5
   19520:	00c007c4 	movi	r3,31
   19524:	1900160e 	bge	r3,r4,19580 <__floatsidf+0x98>
   19528:	00c104c4 	movi	r3,1043
   1952c:	1947c83a 	sub	r3,r3,r5
   19530:	88c6983a 	sll	r3,r17,r3
   19534:	00800434 	movhi	r2,16
   19538:	10bfffc4 	addi	r2,r2,-1
   1953c:	1886703a 	and	r3,r3,r2
   19540:	2941ffcc 	andi	r5,r5,2047
   19544:	800d883a 	mov	r6,r16
   19548:	0005883a 	mov	r2,zero
   1954c:	280a953a 	slli	r5,r5,20
   19550:	31803fcc 	andi	r6,r6,255
   19554:	01000434 	movhi	r4,16
   19558:	300c97fa 	slli	r6,r6,31
   1955c:	213fffc4 	addi	r4,r4,-1
   19560:	1906703a 	and	r3,r3,r4
   19564:	1946b03a 	or	r3,r3,r5
   19568:	1986b03a 	or	r3,r3,r6
   1956c:	dfc00217 	ldw	ra,8(sp)
   19570:	dc400117 	ldw	r17,4(sp)
   19574:	dc000017 	ldw	r16,0(sp)
   19578:	dec00304 	addi	sp,sp,12
   1957c:	f800283a 	ret
   19580:	00c002c4 	movi	r3,11
   19584:	1887c83a 	sub	r3,r3,r2
   19588:	88c6d83a 	srl	r3,r17,r3
   1958c:	8904983a 	sll	r2,r17,r4
   19590:	01000434 	movhi	r4,16
   19594:	213fffc4 	addi	r4,r4,-1
   19598:	2941ffcc 	andi	r5,r5,2047
   1959c:	1906703a 	and	r3,r3,r4
   195a0:	800d883a 	mov	r6,r16
   195a4:	003fe906 	br	1954c <__alt_mem_epcs_flash_controller_0+0xff81854c>
   195a8:	000d883a 	mov	r6,zero
   195ac:	000b883a 	mov	r5,zero
   195b0:	0007883a 	mov	r3,zero
   195b4:	0005883a 	mov	r2,zero
   195b8:	003fe406 	br	1954c <__alt_mem_epcs_flash_controller_0+0xff81854c>
   195bc:	0123c83a 	sub	r17,zero,r4
   195c0:	003fd106 	br	19508 <__alt_mem_epcs_flash_controller_0+0xff818508>

000195c4 <__floatunsidf>:
   195c4:	defffe04 	addi	sp,sp,-8
   195c8:	dc000015 	stw	r16,0(sp)
   195cc:	dfc00115 	stw	ra,4(sp)
   195d0:	2021883a 	mov	r16,r4
   195d4:	20002226 	beq	r4,zero,19660 <__floatunsidf+0x9c>
   195d8:	00198140 	call	19814 <__clzsi2>
   195dc:	01010784 	movi	r4,1054
   195e0:	2089c83a 	sub	r4,r4,r2
   195e4:	01810cc4 	movi	r6,1075
   195e8:	310dc83a 	sub	r6,r6,r4
   195ec:	00c007c4 	movi	r3,31
   195f0:	1980120e 	bge	r3,r6,1963c <__floatunsidf+0x78>
   195f4:	00c104c4 	movi	r3,1043
   195f8:	1907c83a 	sub	r3,r3,r4
   195fc:	80ca983a 	sll	r5,r16,r3
   19600:	00800434 	movhi	r2,16
   19604:	10bfffc4 	addi	r2,r2,-1
   19608:	2101ffcc 	andi	r4,r4,2047
   1960c:	0021883a 	mov	r16,zero
   19610:	288a703a 	and	r5,r5,r2
   19614:	2008953a 	slli	r4,r4,20
   19618:	00c00434 	movhi	r3,16
   1961c:	18ffffc4 	addi	r3,r3,-1
   19620:	28c6703a 	and	r3,r5,r3
   19624:	8005883a 	mov	r2,r16
   19628:	1906b03a 	or	r3,r3,r4
   1962c:	dfc00117 	ldw	ra,4(sp)
   19630:	dc000017 	ldw	r16,0(sp)
   19634:	dec00204 	addi	sp,sp,8
   19638:	f800283a 	ret
   1963c:	00c002c4 	movi	r3,11
   19640:	188bc83a 	sub	r5,r3,r2
   19644:	814ad83a 	srl	r5,r16,r5
   19648:	00c00434 	movhi	r3,16
   1964c:	18ffffc4 	addi	r3,r3,-1
   19650:	81a0983a 	sll	r16,r16,r6
   19654:	2101ffcc 	andi	r4,r4,2047
   19658:	28ca703a 	and	r5,r5,r3
   1965c:	003fed06 	br	19614 <__alt_mem_epcs_flash_controller_0+0xff818614>
   19660:	0009883a 	mov	r4,zero
   19664:	000b883a 	mov	r5,zero
   19668:	003fea06 	br	19614 <__alt_mem_epcs_flash_controller_0+0xff818614>

0001966c <__truncdfsf2>:
   1966c:	2810d53a 	srli	r8,r5,20
   19670:	01c00434 	movhi	r7,16
   19674:	39ffffc4 	addi	r7,r7,-1
   19678:	29ce703a 	and	r7,r5,r7
   1967c:	4201ffcc 	andi	r8,r8,2047
   19680:	380e90fa 	slli	r7,r7,3
   19684:	200cd77a 	srli	r6,r4,29
   19688:	42400044 	addi	r9,r8,1
   1968c:	4a41ffcc 	andi	r9,r9,2047
   19690:	00c00044 	movi	r3,1
   19694:	280ad7fa 	srli	r5,r5,31
   19698:	31ceb03a 	or	r7,r6,r7
   1969c:	200490fa 	slli	r2,r4,3
   196a0:	1a40230e 	bge	r3,r9,19730 <__truncdfsf2+0xc4>
   196a4:	40ff2004 	addi	r3,r8,-896
   196a8:	01803f84 	movi	r6,254
   196ac:	30c01516 	blt	r6,r3,19704 <__truncdfsf2+0x98>
   196b0:	00c0380e 	bge	zero,r3,19794 <__truncdfsf2+0x128>
   196b4:	200c91ba 	slli	r6,r4,6
   196b8:	380e90fa 	slli	r7,r7,3
   196bc:	1004d77a 	srli	r2,r2,29
   196c0:	300cc03a 	cmpne	r6,r6,zero
   196c4:	31ccb03a 	or	r6,r6,r7
   196c8:	308cb03a 	or	r6,r6,r2
   196cc:	308001cc 	andi	r2,r6,7
   196d0:	10000426 	beq	r2,zero,196e4 <__truncdfsf2+0x78>
   196d4:	308003cc 	andi	r2,r6,15
   196d8:	01000104 	movi	r4,4
   196dc:	11000126 	beq	r2,r4,196e4 <__truncdfsf2+0x78>
   196e0:	31800104 	addi	r6,r6,4
   196e4:	3081002c 	andhi	r2,r6,1024
   196e8:	10001626 	beq	r2,zero,19744 <__truncdfsf2+0xd8>
   196ec:	18c00044 	addi	r3,r3,1
   196f0:	00803fc4 	movi	r2,255
   196f4:	18800326 	beq	r3,r2,19704 <__truncdfsf2+0x98>
   196f8:	300c91ba 	slli	r6,r6,6
   196fc:	300cd27a 	srli	r6,r6,9
   19700:	00000206 	br	1970c <__truncdfsf2+0xa0>
   19704:	00ffffc4 	movi	r3,-1
   19708:	000d883a 	mov	r6,zero
   1970c:	18c03fcc 	andi	r3,r3,255
   19710:	180895fa 	slli	r4,r3,23
   19714:	00c02034 	movhi	r3,128
   19718:	280a97fa 	slli	r5,r5,31
   1971c:	18ffffc4 	addi	r3,r3,-1
   19720:	30c6703a 	and	r3,r6,r3
   19724:	1906b03a 	or	r3,r3,r4
   19728:	1944b03a 	or	r2,r3,r5
   1972c:	f800283a 	ret
   19730:	40000b1e 	bne	r8,zero,19760 <__truncdfsf2+0xf4>
   19734:	388cb03a 	or	r6,r7,r2
   19738:	0007883a 	mov	r3,zero
   1973c:	30000426 	beq	r6,zero,19750 <__truncdfsf2+0xe4>
   19740:	01800144 	movi	r6,5
   19744:	00803fc4 	movi	r2,255
   19748:	300cd0fa 	srli	r6,r6,3
   1974c:	18800a26 	beq	r3,r2,19778 <__truncdfsf2+0x10c>
   19750:	00802034 	movhi	r2,128
   19754:	10bfffc4 	addi	r2,r2,-1
   19758:	308c703a 	and	r6,r6,r2
   1975c:	003feb06 	br	1970c <__alt_mem_epcs_flash_controller_0+0xff81870c>
   19760:	3888b03a 	or	r4,r7,r2
   19764:	203fe726 	beq	r4,zero,19704 <__alt_mem_epcs_flash_controller_0+0xff818704>
   19768:	380c90fa 	slli	r6,r7,3
   1976c:	00c03fc4 	movi	r3,255
   19770:	31808034 	orhi	r6,r6,512
   19774:	003fd506 	br	196cc <__alt_mem_epcs_flash_controller_0+0xff8186cc>
   19778:	303fe226 	beq	r6,zero,19704 <__alt_mem_epcs_flash_controller_0+0xff818704>
   1977c:	00802034 	movhi	r2,128
   19780:	31801034 	orhi	r6,r6,64
   19784:	10bfffc4 	addi	r2,r2,-1
   19788:	00ffffc4 	movi	r3,-1
   1978c:	308c703a 	and	r6,r6,r2
   19790:	003fde06 	br	1970c <__alt_mem_epcs_flash_controller_0+0xff81870c>
   19794:	013ffa44 	movi	r4,-23
   19798:	19000e16 	blt	r3,r4,197d4 <__truncdfsf2+0x168>
   1979c:	01000784 	movi	r4,30
   197a0:	20c9c83a 	sub	r4,r4,r3
   197a4:	018007c4 	movi	r6,31
   197a8:	39c02034 	orhi	r7,r7,128
   197ac:	31000b16 	blt	r6,r4,197dc <__truncdfsf2+0x170>
   197b0:	423f2084 	addi	r8,r8,-894
   197b4:	120c983a 	sll	r6,r2,r8
   197b8:	3a0e983a 	sll	r7,r7,r8
   197bc:	1104d83a 	srl	r2,r2,r4
   197c0:	300cc03a 	cmpne	r6,r6,zero
   197c4:	31ceb03a 	or	r7,r6,r7
   197c8:	388cb03a 	or	r6,r7,r2
   197cc:	0007883a 	mov	r3,zero
   197d0:	003fbe06 	br	196cc <__alt_mem_epcs_flash_controller_0+0xff8186cc>
   197d4:	0007883a 	mov	r3,zero
   197d8:	003fd906 	br	19740 <__alt_mem_epcs_flash_controller_0+0xff818740>
   197dc:	01bfff84 	movi	r6,-2
   197e0:	30cdc83a 	sub	r6,r6,r3
   197e4:	00c00804 	movi	r3,32
   197e8:	398cd83a 	srl	r6,r7,r6
   197ec:	20c00726 	beq	r4,r3,1980c <__truncdfsf2+0x1a0>
   197f0:	423f2884 	addi	r8,r8,-862
   197f4:	3a0e983a 	sll	r7,r7,r8
   197f8:	3884b03a 	or	r2,r7,r2
   197fc:	1004c03a 	cmpne	r2,r2,zero
   19800:	118cb03a 	or	r6,r2,r6
   19804:	0007883a 	mov	r3,zero
   19808:	003fb006 	br	196cc <__alt_mem_epcs_flash_controller_0+0xff8186cc>
   1980c:	000f883a 	mov	r7,zero
   19810:	003ff906 	br	197f8 <__alt_mem_epcs_flash_controller_0+0xff8187f8>

00019814 <__clzsi2>:
   19814:	00bfffd4 	movui	r2,65535
   19818:	11000536 	bltu	r2,r4,19830 <__clzsi2+0x1c>
   1981c:	00803fc4 	movi	r2,255
   19820:	11000f36 	bltu	r2,r4,19860 <__clzsi2+0x4c>
   19824:	00800804 	movi	r2,32
   19828:	0007883a 	mov	r3,zero
   1982c:	00000506 	br	19844 <__clzsi2+0x30>
   19830:	00804034 	movhi	r2,256
   19834:	10bfffc4 	addi	r2,r2,-1
   19838:	11000c2e 	bgeu	r2,r4,1986c <__clzsi2+0x58>
   1983c:	00800204 	movi	r2,8
   19840:	00c00604 	movi	r3,24
   19844:	20c8d83a 	srl	r4,r4,r3
   19848:	00c000b4 	movhi	r3,2
   1984c:	18f8e784 	addi	r3,r3,-7266
   19850:	1909883a 	add	r4,r3,r4
   19854:	20c00003 	ldbu	r3,0(r4)
   19858:	10c5c83a 	sub	r2,r2,r3
   1985c:	f800283a 	ret
   19860:	00800604 	movi	r2,24
   19864:	00c00204 	movi	r3,8
   19868:	003ff606 	br	19844 <__alt_mem_epcs_flash_controller_0+0xff818844>
   1986c:	00800404 	movi	r2,16
   19870:	1007883a 	mov	r3,r2
   19874:	003ff306 	br	19844 <__alt_mem_epcs_flash_controller_0+0xff818844>

00019878 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   19878:	defffe04 	addi	sp,sp,-8
   1987c:	dfc00115 	stw	ra,4(sp)
   19880:	df000015 	stw	fp,0(sp)
   19884:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   19888:	d0a00d17 	ldw	r2,-32716(gp)
   1988c:	10000326 	beq	r2,zero,1989c <alt_get_errno+0x24>
   19890:	d0a00d17 	ldw	r2,-32716(gp)
   19894:	103ee83a 	callr	r2
   19898:	00000106 	br	198a0 <alt_get_errno+0x28>
   1989c:	d0a70b04 	addi	r2,gp,-25556
}
   198a0:	e037883a 	mov	sp,fp
   198a4:	dfc00117 	ldw	ra,4(sp)
   198a8:	df000017 	ldw	fp,0(sp)
   198ac:	dec00204 	addi	sp,sp,8
   198b0:	f800283a 	ret

000198b4 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   198b4:	defffb04 	addi	sp,sp,-20
   198b8:	dfc00415 	stw	ra,16(sp)
   198bc:	df000315 	stw	fp,12(sp)
   198c0:	df000304 	addi	fp,sp,12
   198c4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   198c8:	e0bfff17 	ldw	r2,-4(fp)
   198cc:	10000816 	blt	r2,zero,198f0 <close+0x3c>
   198d0:	01400304 	movi	r5,12
   198d4:	e13fff17 	ldw	r4,-4(fp)
   198d8:	00024440 	call	2444 <__mulsi3>
   198dc:	1007883a 	mov	r3,r2
   198e0:	008000b4 	movhi	r2,2
   198e4:	10bb7004 	addi	r2,r2,-4672
   198e8:	1885883a 	add	r2,r3,r2
   198ec:	00000106 	br	198f4 <close+0x40>
   198f0:	0005883a 	mov	r2,zero
   198f4:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   198f8:	e0bffd17 	ldw	r2,-12(fp)
   198fc:	10001926 	beq	r2,zero,19964 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   19900:	e0bffd17 	ldw	r2,-12(fp)
   19904:	10800017 	ldw	r2,0(r2)
   19908:	10800417 	ldw	r2,16(r2)
   1990c:	10000626 	beq	r2,zero,19928 <close+0x74>
   19910:	e0bffd17 	ldw	r2,-12(fp)
   19914:	10800017 	ldw	r2,0(r2)
   19918:	10800417 	ldw	r2,16(r2)
   1991c:	e13ffd17 	ldw	r4,-12(fp)
   19920:	103ee83a 	callr	r2
   19924:	00000106 	br	1992c <close+0x78>
   19928:	0005883a 	mov	r2,zero
   1992c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   19930:	e13fff17 	ldw	r4,-4(fp)
   19934:	001a0580 	call	1a058 <alt_release_fd>
    if (rval < 0)
   19938:	e0bffe17 	ldw	r2,-8(fp)
   1993c:	1000070e 	bge	r2,zero,1995c <close+0xa8>
    {
      ALT_ERRNO = -rval;
   19940:	00198780 	call	19878 <alt_get_errno>
   19944:	1007883a 	mov	r3,r2
   19948:	e0bffe17 	ldw	r2,-8(fp)
   1994c:	0085c83a 	sub	r2,zero,r2
   19950:	18800015 	stw	r2,0(r3)
      return -1;
   19954:	00bfffc4 	movi	r2,-1
   19958:	00000706 	br	19978 <close+0xc4>
    }
    return 0;
   1995c:	0005883a 	mov	r2,zero
   19960:	00000506 	br	19978 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   19964:	00198780 	call	19878 <alt_get_errno>
   19968:	1007883a 	mov	r3,r2
   1996c:	00801444 	movi	r2,81
   19970:	18800015 	stw	r2,0(r3)
    return -1;
   19974:	00bfffc4 	movi	r2,-1
  }
}
   19978:	e037883a 	mov	sp,fp
   1997c:	dfc00117 	ldw	ra,4(sp)
   19980:	df000017 	ldw	fp,0(sp)
   19984:	dec00204 	addi	sp,sp,8
   19988:	f800283a 	ret

0001998c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   1998c:	defffc04 	addi	sp,sp,-16
   19990:	df000315 	stw	fp,12(sp)
   19994:	df000304 	addi	fp,sp,12
   19998:	e13ffd15 	stw	r4,-12(fp)
   1999c:	e17ffe15 	stw	r5,-8(fp)
   199a0:	e1bfff15 	stw	r6,-4(fp)
  return len;
   199a4:	e0bfff17 	ldw	r2,-4(fp)
}
   199a8:	e037883a 	mov	sp,fp
   199ac:	df000017 	ldw	fp,0(sp)
   199b0:	dec00104 	addi	sp,sp,4
   199b4:	f800283a 	ret

000199b8 <alt_flash_open_dev>:
#include "priv/alt_file.h"

ALT_LLIST_HEAD(alt_flash_dev_list);

alt_flash_fd* alt_flash_open_dev(const char* name)
{
   199b8:	defffc04 	addi	sp,sp,-16
   199bc:	dfc00315 	stw	ra,12(sp)
   199c0:	df000215 	stw	fp,8(sp)
   199c4:	df000204 	addi	fp,sp,8
   199c8:	e13fff15 	stw	r4,-4(fp)
  alt_flash_dev* dev = (alt_flash_dev*)alt_find_dev(name, &alt_flash_dev_list);
   199cc:	d1600e04 	addi	r5,gp,-32712
   199d0:	e13fff17 	ldw	r4,-4(fp)
   199d4:	001c2140 	call	1c214 <alt_find_dev>
   199d8:	e0bffe15 	stw	r2,-8(fp)

  if ((dev) && dev->open)
   199dc:	e0bffe17 	ldw	r2,-8(fp)
   199e0:	10000926 	beq	r2,zero,19a08 <alt_flash_open_dev+0x50>
   199e4:	e0bffe17 	ldw	r2,-8(fp)
   199e8:	10800317 	ldw	r2,12(r2)
   199ec:	10000626 	beq	r2,zero,19a08 <alt_flash_open_dev+0x50>
  {
    return dev->open(dev, name);
   199f0:	e0bffe17 	ldw	r2,-8(fp)
   199f4:	10800317 	ldw	r2,12(r2)
   199f8:	e17fff17 	ldw	r5,-4(fp)
   199fc:	e13ffe17 	ldw	r4,-8(fp)
   19a00:	103ee83a 	callr	r2
   19a04:	00000106 	br	19a0c <alt_flash_open_dev+0x54>
  }

  return dev;
   19a08:	e0bffe17 	ldw	r2,-8(fp)
}
   19a0c:	e037883a 	mov	sp,fp
   19a10:	dfc00117 	ldw	ra,4(sp)
   19a14:	df000017 	ldw	fp,0(sp)
   19a18:	dec00204 	addi	sp,sp,8
   19a1c:	f800283a 	ret

00019a20 <alt_flash_close_dev>:

void alt_flash_close_dev(alt_flash_fd* fd)
{
   19a20:	defffd04 	addi	sp,sp,-12
   19a24:	dfc00215 	stw	ra,8(sp)
   19a28:	df000115 	stw	fp,4(sp)
   19a2c:	df000104 	addi	fp,sp,4
   19a30:	e13fff15 	stw	r4,-4(fp)
  if (fd && fd->close)
   19a34:	e0bfff17 	ldw	r2,-4(fp)
   19a38:	10000826 	beq	r2,zero,19a5c <alt_flash_close_dev+0x3c>
   19a3c:	e0bfff17 	ldw	r2,-4(fp)
   19a40:	10800417 	ldw	r2,16(r2)
   19a44:	10000526 	beq	r2,zero,19a5c <alt_flash_close_dev+0x3c>
  {
    fd->close(fd);
   19a48:	e0bfff17 	ldw	r2,-4(fp)
   19a4c:	10800417 	ldw	r2,16(r2)
   19a50:	e13fff17 	ldw	r4,-4(fp)
   19a54:	103ee83a 	callr	r2
  }
  return;
   19a58:	0001883a 	nop
   19a5c:	0001883a 	nop
}
   19a60:	e037883a 	mov	sp,fp
   19a64:	dfc00117 	ldw	ra,4(sp)
   19a68:	df000017 	ldw	fp,0(sp)
   19a6c:	dec00204 	addi	sp,sp,8
   19a70:	f800283a 	ret

00019a74 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   19a74:	defffe04 	addi	sp,sp,-8
   19a78:	dfc00115 	stw	ra,4(sp)
   19a7c:	df000015 	stw	fp,0(sp)
   19a80:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   19a84:	d0a00d17 	ldw	r2,-32716(gp)
   19a88:	10000326 	beq	r2,zero,19a98 <alt_get_errno+0x24>
   19a8c:	d0a00d17 	ldw	r2,-32716(gp)
   19a90:	103ee83a 	callr	r2
   19a94:	00000106 	br	19a9c <alt_get_errno+0x28>
   19a98:	d0a70b04 	addi	r2,gp,-25556
}
   19a9c:	e037883a 	mov	sp,fp
   19aa0:	dfc00117 	ldw	ra,4(sp)
   19aa4:	df000017 	ldw	fp,0(sp)
   19aa8:	dec00204 	addi	sp,sp,8
   19aac:	f800283a 	ret

00019ab0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   19ab0:	defffb04 	addi	sp,sp,-20
   19ab4:	dfc00415 	stw	ra,16(sp)
   19ab8:	df000315 	stw	fp,12(sp)
   19abc:	df000304 	addi	fp,sp,12
   19ac0:	e13ffe15 	stw	r4,-8(fp)
   19ac4:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   19ac8:	e0bffe17 	ldw	r2,-8(fp)
   19acc:	10000816 	blt	r2,zero,19af0 <fstat+0x40>
   19ad0:	01400304 	movi	r5,12
   19ad4:	e13ffe17 	ldw	r4,-8(fp)
   19ad8:	00024440 	call	2444 <__mulsi3>
   19adc:	1007883a 	mov	r3,r2
   19ae0:	008000b4 	movhi	r2,2
   19ae4:	10bb7004 	addi	r2,r2,-4672
   19ae8:	1885883a 	add	r2,r3,r2
   19aec:	00000106 	br	19af4 <fstat+0x44>
   19af0:	0005883a 	mov	r2,zero
   19af4:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   19af8:	e0bffd17 	ldw	r2,-12(fp)
   19afc:	10001026 	beq	r2,zero,19b40 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   19b00:	e0bffd17 	ldw	r2,-12(fp)
   19b04:	10800017 	ldw	r2,0(r2)
   19b08:	10800817 	ldw	r2,32(r2)
   19b0c:	10000726 	beq	r2,zero,19b2c <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
   19b10:	e0bffd17 	ldw	r2,-12(fp)
   19b14:	10800017 	ldw	r2,0(r2)
   19b18:	10800817 	ldw	r2,32(r2)
   19b1c:	e17fff17 	ldw	r5,-4(fp)
   19b20:	e13ffd17 	ldw	r4,-12(fp)
   19b24:	103ee83a 	callr	r2
   19b28:	00000a06 	br	19b54 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   19b2c:	e0bfff17 	ldw	r2,-4(fp)
   19b30:	00c80004 	movi	r3,8192
   19b34:	10c00115 	stw	r3,4(r2)
      return 0;
   19b38:	0005883a 	mov	r2,zero
   19b3c:	00000506 	br	19b54 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   19b40:	0019a740 	call	19a74 <alt_get_errno>
   19b44:	1007883a 	mov	r3,r2
   19b48:	00801444 	movi	r2,81
   19b4c:	18800015 	stw	r2,0(r3)
    return -1;
   19b50:	00bfffc4 	movi	r2,-1
  }
}
   19b54:	e037883a 	mov	sp,fp
   19b58:	dfc00117 	ldw	ra,4(sp)
   19b5c:	df000017 	ldw	fp,0(sp)
   19b60:	dec00204 	addi	sp,sp,8
   19b64:	f800283a 	ret

00019b68 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   19b68:	defffe04 	addi	sp,sp,-8
   19b6c:	dfc00115 	stw	ra,4(sp)
   19b70:	df000015 	stw	fp,0(sp)
   19b74:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   19b78:	d0a00d17 	ldw	r2,-32716(gp)
   19b7c:	10000326 	beq	r2,zero,19b8c <alt_get_errno+0x24>
   19b80:	d0a00d17 	ldw	r2,-32716(gp)
   19b84:	103ee83a 	callr	r2
   19b88:	00000106 	br	19b90 <alt_get_errno+0x28>
   19b8c:	d0a70b04 	addi	r2,gp,-25556
}
   19b90:	e037883a 	mov	sp,fp
   19b94:	dfc00117 	ldw	ra,4(sp)
   19b98:	df000017 	ldw	fp,0(sp)
   19b9c:	dec00204 	addi	sp,sp,8
   19ba0:	f800283a 	ret

00019ba4 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   19ba4:	deffed04 	addi	sp,sp,-76
   19ba8:	dfc01215 	stw	ra,72(sp)
   19bac:	df001115 	stw	fp,68(sp)
   19bb0:	df001104 	addi	fp,sp,68
   19bb4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   19bb8:	e0bfff17 	ldw	r2,-4(fp)
   19bbc:	10000816 	blt	r2,zero,19be0 <isatty+0x3c>
   19bc0:	01400304 	movi	r5,12
   19bc4:	e13fff17 	ldw	r4,-4(fp)
   19bc8:	00024440 	call	2444 <__mulsi3>
   19bcc:	1007883a 	mov	r3,r2
   19bd0:	008000b4 	movhi	r2,2
   19bd4:	10bb7004 	addi	r2,r2,-4672
   19bd8:	1885883a 	add	r2,r3,r2
   19bdc:	00000106 	br	19be4 <isatty+0x40>
   19be0:	0005883a 	mov	r2,zero
   19be4:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   19be8:	e0bfef17 	ldw	r2,-68(fp)
   19bec:	10000e26 	beq	r2,zero,19c28 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   19bf0:	e0bfef17 	ldw	r2,-68(fp)
   19bf4:	10800017 	ldw	r2,0(r2)
   19bf8:	10800817 	ldw	r2,32(r2)
   19bfc:	1000021e 	bne	r2,zero,19c08 <isatty+0x64>
    {
      return 1;
   19c00:	00800044 	movi	r2,1
   19c04:	00000d06 	br	19c3c <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   19c08:	e0bff004 	addi	r2,fp,-64
   19c0c:	100b883a 	mov	r5,r2
   19c10:	e13fff17 	ldw	r4,-4(fp)
   19c14:	0019ab00 	call	19ab0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   19c18:	e0bff117 	ldw	r2,-60(fp)
   19c1c:	10880020 	cmpeqi	r2,r2,8192
   19c20:	10803fcc 	andi	r2,r2,255
   19c24:	00000506 	br	19c3c <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   19c28:	0019b680 	call	19b68 <alt_get_errno>
   19c2c:	1007883a 	mov	r3,r2
   19c30:	00801444 	movi	r2,81
   19c34:	18800015 	stw	r2,0(r3)
    return 0;
   19c38:	0005883a 	mov	r2,zero
  }
}
   19c3c:	e037883a 	mov	sp,fp
   19c40:	dfc00117 	ldw	ra,4(sp)
   19c44:	df000017 	ldw	fp,0(sp)
   19c48:	dec00204 	addi	sp,sp,8
   19c4c:	f800283a 	ret

00019c50 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   19c50:	defffc04 	addi	sp,sp,-16
   19c54:	df000315 	stw	fp,12(sp)
   19c58:	df000304 	addi	fp,sp,12
   19c5c:	e13ffd15 	stw	r4,-12(fp)
   19c60:	e17ffe15 	stw	r5,-8(fp)
   19c64:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   19c68:	e0fffe17 	ldw	r3,-8(fp)
   19c6c:	e0bffd17 	ldw	r2,-12(fp)
   19c70:	18800c26 	beq	r3,r2,19ca4 <alt_load_section+0x54>
  {
    while( to != end )
   19c74:	00000806 	br	19c98 <alt_load_section+0x48>
    {
      *to++ = *from++;
   19c78:	e0bffe17 	ldw	r2,-8(fp)
   19c7c:	10c00104 	addi	r3,r2,4
   19c80:	e0fffe15 	stw	r3,-8(fp)
   19c84:	e0fffd17 	ldw	r3,-12(fp)
   19c88:	19000104 	addi	r4,r3,4
   19c8c:	e13ffd15 	stw	r4,-12(fp)
   19c90:	18c00017 	ldw	r3,0(r3)
   19c94:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   19c98:	e0fffe17 	ldw	r3,-8(fp)
   19c9c:	e0bfff17 	ldw	r2,-4(fp)
   19ca0:	18bff51e 	bne	r3,r2,19c78 <__alt_mem_epcs_flash_controller_0+0xff818c78>
    {
      *to++ = *from++;
    }
  }
}
   19ca4:	0001883a 	nop
   19ca8:	e037883a 	mov	sp,fp
   19cac:	df000017 	ldw	fp,0(sp)
   19cb0:	dec00104 	addi	sp,sp,4
   19cb4:	f800283a 	ret

00019cb8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   19cb8:	defffe04 	addi	sp,sp,-8
   19cbc:	dfc00115 	stw	ra,4(sp)
   19cc0:	df000015 	stw	fp,0(sp)
   19cc4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   19cc8:	018000b4 	movhi	r6,2
   19ccc:	31802f04 	addi	r6,r6,188
   19cd0:	014000b4 	movhi	r5,2
   19cd4:	29793d04 	addi	r5,r5,-6924
   19cd8:	010000b4 	movhi	r4,2
   19cdc:	21002f04 	addi	r4,r4,188
   19ce0:	0019c500 	call	19c50 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   19ce4:	01800034 	movhi	r6,0
   19ce8:	31808c04 	addi	r6,r6,560
   19cec:	01400034 	movhi	r5,0
   19cf0:	29400804 	addi	r5,r5,32
   19cf4:	01000034 	movhi	r4,0
   19cf8:	21000804 	addi	r4,r4,32
   19cfc:	0019c500 	call	19c50 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   19d00:	018000b4 	movhi	r6,2
   19d04:	31b93d04 	addi	r6,r6,-6924
   19d08:	014000b4 	movhi	r5,2
   19d0c:	2974a304 	addi	r5,r5,-11636
   19d10:	010000b4 	movhi	r4,2
   19d14:	2134a304 	addi	r4,r4,-11636
   19d18:	0019c500 	call	19c50 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   19d1c:	001c0540 	call	1c054 <alt_dcache_flush_all>
  alt_icache_flush_all();
   19d20:	001c2a40 	call	1c2a4 <alt_icache_flush_all>
}
   19d24:	0001883a 	nop
   19d28:	e037883a 	mov	sp,fp
   19d2c:	dfc00117 	ldw	ra,4(sp)
   19d30:	df000017 	ldw	fp,0(sp)
   19d34:	dec00204 	addi	sp,sp,8
   19d38:	f800283a 	ret

00019d3c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   19d3c:	defffe04 	addi	sp,sp,-8
   19d40:	dfc00115 	stw	ra,4(sp)
   19d44:	df000015 	stw	fp,0(sp)
   19d48:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   19d4c:	d0a00d17 	ldw	r2,-32716(gp)
   19d50:	10000326 	beq	r2,zero,19d60 <alt_get_errno+0x24>
   19d54:	d0a00d17 	ldw	r2,-32716(gp)
   19d58:	103ee83a 	callr	r2
   19d5c:	00000106 	br	19d64 <alt_get_errno+0x28>
   19d60:	d0a70b04 	addi	r2,gp,-25556
}
   19d64:	e037883a 	mov	sp,fp
   19d68:	dfc00117 	ldw	ra,4(sp)
   19d6c:	df000017 	ldw	fp,0(sp)
   19d70:	dec00204 	addi	sp,sp,8
   19d74:	f800283a 	ret

00019d78 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   19d78:	defff904 	addi	sp,sp,-28
   19d7c:	dfc00615 	stw	ra,24(sp)
   19d80:	df000515 	stw	fp,20(sp)
   19d84:	df000504 	addi	fp,sp,20
   19d88:	e13ffd15 	stw	r4,-12(fp)
   19d8c:	e17ffe15 	stw	r5,-8(fp)
   19d90:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   19d94:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   19d98:	e0bffd17 	ldw	r2,-12(fp)
   19d9c:	10000816 	blt	r2,zero,19dc0 <lseek+0x48>
   19da0:	01400304 	movi	r5,12
   19da4:	e13ffd17 	ldw	r4,-12(fp)
   19da8:	00024440 	call	2444 <__mulsi3>
   19dac:	1007883a 	mov	r3,r2
   19db0:	008000b4 	movhi	r2,2
   19db4:	10bb7004 	addi	r2,r2,-4672
   19db8:	1885883a 	add	r2,r3,r2
   19dbc:	00000106 	br	19dc4 <lseek+0x4c>
   19dc0:	0005883a 	mov	r2,zero
   19dc4:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   19dc8:	e0bffc17 	ldw	r2,-16(fp)
   19dcc:	10001026 	beq	r2,zero,19e10 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   19dd0:	e0bffc17 	ldw	r2,-16(fp)
   19dd4:	10800017 	ldw	r2,0(r2)
   19dd8:	10800717 	ldw	r2,28(r2)
   19ddc:	10000926 	beq	r2,zero,19e04 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   19de0:	e0bffc17 	ldw	r2,-16(fp)
   19de4:	10800017 	ldw	r2,0(r2)
   19de8:	10800717 	ldw	r2,28(r2)
   19dec:	e1bfff17 	ldw	r6,-4(fp)
   19df0:	e17ffe17 	ldw	r5,-8(fp)
   19df4:	e13ffc17 	ldw	r4,-16(fp)
   19df8:	103ee83a 	callr	r2
   19dfc:	e0bffb15 	stw	r2,-20(fp)
   19e00:	00000506 	br	19e18 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   19e04:	00bfde84 	movi	r2,-134
   19e08:	e0bffb15 	stw	r2,-20(fp)
   19e0c:	00000206 	br	19e18 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
   19e10:	00bfebc4 	movi	r2,-81
   19e14:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   19e18:	e0bffb17 	ldw	r2,-20(fp)
   19e1c:	1000070e 	bge	r2,zero,19e3c <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
   19e20:	0019d3c0 	call	19d3c <alt_get_errno>
   19e24:	1007883a 	mov	r3,r2
   19e28:	e0bffb17 	ldw	r2,-20(fp)
   19e2c:	0085c83a 	sub	r2,zero,r2
   19e30:	18800015 	stw	r2,0(r3)
    rc = -1;
   19e34:	00bfffc4 	movi	r2,-1
   19e38:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   19e3c:	e0bffb17 	ldw	r2,-20(fp)
}
   19e40:	e037883a 	mov	sp,fp
   19e44:	dfc00117 	ldw	ra,4(sp)
   19e48:	df000017 	ldw	fp,0(sp)
   19e4c:	dec00204 	addi	sp,sp,8
   19e50:	f800283a 	ret

00019e54 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   19e54:	defffd04 	addi	sp,sp,-12
   19e58:	dfc00215 	stw	ra,8(sp)
   19e5c:	df000115 	stw	fp,4(sp)
   19e60:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   19e64:	0009883a 	mov	r4,zero
   19e68:	001a2fc0 	call	1a2fc <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   19e6c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   19e70:	001a3340 	call	1a334 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   19e74:	018000b4 	movhi	r6,2
   19e78:	31b92b04 	addi	r6,r6,-6996
   19e7c:	014000b4 	movhi	r5,2
   19e80:	29792b04 	addi	r5,r5,-6996
   19e84:	010000b4 	movhi	r4,2
   19e88:	21392b04 	addi	r4,r4,-6996
   19e8c:	001c6480 	call	1c648 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   19e90:	001c1540 	call	1c154 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   19e94:	010000b4 	movhi	r4,2
   19e98:	21306d04 	addi	r4,r4,-15948
   19e9c:	001cf740 	call	1cf74 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   19ea0:	d0a70f17 	ldw	r2,-25540(gp)
   19ea4:	d0e71017 	ldw	r3,-25536(gp)
   19ea8:	d1271117 	ldw	r4,-25532(gp)
   19eac:	200d883a 	mov	r6,r4
   19eb0:	180b883a 	mov	r5,r3
   19eb4:	1009883a 	mov	r4,r2
   19eb8:	00022400 	call	2240 <main>
   19ebc:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   19ec0:	01000044 	movi	r4,1
   19ec4:	00198b40 	call	198b4 <close>
  exit (result);
   19ec8:	e13fff17 	ldw	r4,-4(fp)
   19ecc:	001cf880 	call	1cf88 <exit>

00019ed0 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   19ed0:	defffe04 	addi	sp,sp,-8
   19ed4:	df000115 	stw	fp,4(sp)
   19ed8:	df000104 	addi	fp,sp,4
   19edc:	e13fff15 	stw	r4,-4(fp)
}
   19ee0:	0001883a 	nop
   19ee4:	e037883a 	mov	sp,fp
   19ee8:	df000017 	ldw	fp,0(sp)
   19eec:	dec00104 	addi	sp,sp,4
   19ef0:	f800283a 	ret

00019ef4 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   19ef4:	defffe04 	addi	sp,sp,-8
   19ef8:	df000115 	stw	fp,4(sp)
   19efc:	df000104 	addi	fp,sp,4
   19f00:	e13fff15 	stw	r4,-4(fp)
}
   19f04:	0001883a 	nop
   19f08:	e037883a 	mov	sp,fp
   19f0c:	df000017 	ldw	fp,0(sp)
   19f10:	dec00104 	addi	sp,sp,4
   19f14:	f800283a 	ret

00019f18 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   19f18:	defffe04 	addi	sp,sp,-8
   19f1c:	dfc00115 	stw	ra,4(sp)
   19f20:	df000015 	stw	fp,0(sp)
   19f24:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   19f28:	d0a00d17 	ldw	r2,-32716(gp)
   19f2c:	10000326 	beq	r2,zero,19f3c <alt_get_errno+0x24>
   19f30:	d0a00d17 	ldw	r2,-32716(gp)
   19f34:	103ee83a 	callr	r2
   19f38:	00000106 	br	19f40 <alt_get_errno+0x28>
   19f3c:	d0a70b04 	addi	r2,gp,-25556
}
   19f40:	e037883a 	mov	sp,fp
   19f44:	dfc00117 	ldw	ra,4(sp)
   19f48:	df000017 	ldw	fp,0(sp)
   19f4c:	dec00204 	addi	sp,sp,8
   19f50:	f800283a 	ret

00019f54 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   19f54:	defff904 	addi	sp,sp,-28
   19f58:	dfc00615 	stw	ra,24(sp)
   19f5c:	df000515 	stw	fp,20(sp)
   19f60:	df000504 	addi	fp,sp,20
   19f64:	e13ffd15 	stw	r4,-12(fp)
   19f68:	e17ffe15 	stw	r5,-8(fp)
   19f6c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   19f70:	e0bffd17 	ldw	r2,-12(fp)
   19f74:	10000816 	blt	r2,zero,19f98 <read+0x44>
   19f78:	01400304 	movi	r5,12
   19f7c:	e13ffd17 	ldw	r4,-12(fp)
   19f80:	00024440 	call	2444 <__mulsi3>
   19f84:	1007883a 	mov	r3,r2
   19f88:	008000b4 	movhi	r2,2
   19f8c:	10bb7004 	addi	r2,r2,-4672
   19f90:	1885883a 	add	r2,r3,r2
   19f94:	00000106 	br	19f9c <read+0x48>
   19f98:	0005883a 	mov	r2,zero
   19f9c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   19fa0:	e0bffb17 	ldw	r2,-20(fp)
   19fa4:	10002226 	beq	r2,zero,1a030 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   19fa8:	e0bffb17 	ldw	r2,-20(fp)
   19fac:	10800217 	ldw	r2,8(r2)
   19fb0:	108000cc 	andi	r2,r2,3
   19fb4:	10800060 	cmpeqi	r2,r2,1
   19fb8:	1000181e 	bne	r2,zero,1a01c <read+0xc8>
        (fd->dev->read))
   19fbc:	e0bffb17 	ldw	r2,-20(fp)
   19fc0:	10800017 	ldw	r2,0(r2)
   19fc4:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   19fc8:	10001426 	beq	r2,zero,1a01c <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   19fcc:	e0bffb17 	ldw	r2,-20(fp)
   19fd0:	10800017 	ldw	r2,0(r2)
   19fd4:	10800517 	ldw	r2,20(r2)
   19fd8:	e0ffff17 	ldw	r3,-4(fp)
   19fdc:	180d883a 	mov	r6,r3
   19fe0:	e17ffe17 	ldw	r5,-8(fp)
   19fe4:	e13ffb17 	ldw	r4,-20(fp)
   19fe8:	103ee83a 	callr	r2
   19fec:	e0bffc15 	stw	r2,-16(fp)
   19ff0:	e0bffc17 	ldw	r2,-16(fp)
   19ff4:	1000070e 	bge	r2,zero,1a014 <read+0xc0>
        {
          ALT_ERRNO = -rval;
   19ff8:	0019f180 	call	19f18 <alt_get_errno>
   19ffc:	1007883a 	mov	r3,r2
   1a000:	e0bffc17 	ldw	r2,-16(fp)
   1a004:	0085c83a 	sub	r2,zero,r2
   1a008:	18800015 	stw	r2,0(r3)
          return -1;
   1a00c:	00bfffc4 	movi	r2,-1
   1a010:	00000c06 	br	1a044 <read+0xf0>
        }
        return rval;
   1a014:	e0bffc17 	ldw	r2,-16(fp)
   1a018:	00000a06 	br	1a044 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
   1a01c:	0019f180 	call	19f18 <alt_get_errno>
   1a020:	1007883a 	mov	r3,r2
   1a024:	00800344 	movi	r2,13
   1a028:	18800015 	stw	r2,0(r3)
   1a02c:	00000406 	br	1a040 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   1a030:	0019f180 	call	19f18 <alt_get_errno>
   1a034:	1007883a 	mov	r3,r2
   1a038:	00801444 	movi	r2,81
   1a03c:	18800015 	stw	r2,0(r3)
  }
  return -1;
   1a040:	00bfffc4 	movi	r2,-1
}
   1a044:	e037883a 	mov	sp,fp
   1a048:	dfc00117 	ldw	ra,4(sp)
   1a04c:	df000017 	ldw	fp,0(sp)
   1a050:	dec00204 	addi	sp,sp,8
   1a054:	f800283a 	ret

0001a058 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   1a058:	defffc04 	addi	sp,sp,-16
   1a05c:	dfc00315 	stw	ra,12(sp)
   1a060:	df000215 	stw	fp,8(sp)
   1a064:	dc000115 	stw	r16,4(sp)
   1a068:	df000204 	addi	fp,sp,8
   1a06c:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
   1a070:	e0bffe17 	ldw	r2,-8(fp)
   1a074:	108000d0 	cmplti	r2,r2,3
   1a078:	1000111e 	bne	r2,zero,1a0c0 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
   1a07c:	040000b4 	movhi	r16,2
   1a080:	843b7004 	addi	r16,r16,-4672
   1a084:	e0bffe17 	ldw	r2,-8(fp)
   1a088:	01400304 	movi	r5,12
   1a08c:	1009883a 	mov	r4,r2
   1a090:	00024440 	call	2444 <__mulsi3>
   1a094:	8085883a 	add	r2,r16,r2
   1a098:	10800204 	addi	r2,r2,8
   1a09c:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   1a0a0:	040000b4 	movhi	r16,2
   1a0a4:	843b7004 	addi	r16,r16,-4672
   1a0a8:	e0bffe17 	ldw	r2,-8(fp)
   1a0ac:	01400304 	movi	r5,12
   1a0b0:	1009883a 	mov	r4,r2
   1a0b4:	00024440 	call	2444 <__mulsi3>
   1a0b8:	8085883a 	add	r2,r16,r2
   1a0bc:	10000015 	stw	zero,0(r2)
  }
}
   1a0c0:	0001883a 	nop
   1a0c4:	e6ffff04 	addi	sp,fp,-4
   1a0c8:	dfc00217 	ldw	ra,8(sp)
   1a0cc:	df000117 	ldw	fp,4(sp)
   1a0d0:	dc000017 	ldw	r16,0(sp)
   1a0d4:	dec00304 	addi	sp,sp,12
   1a0d8:	f800283a 	ret

0001a0dc <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   1a0dc:	defff904 	addi	sp,sp,-28
   1a0e0:	df000615 	stw	fp,24(sp)
   1a0e4:	df000604 	addi	fp,sp,24
   1a0e8:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1a0ec:	0005303a 	rdctl	r2,status
   1a0f0:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1a0f4:	e0fffe17 	ldw	r3,-8(fp)
   1a0f8:	00bfff84 	movi	r2,-2
   1a0fc:	1884703a 	and	r2,r3,r2
   1a100:	1001703a 	wrctl	status,r2
  
  return context;
   1a104:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   1a108:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   1a10c:	d0a01017 	ldw	r2,-32704(gp)
   1a110:	10c000c4 	addi	r3,r2,3
   1a114:	00bfff04 	movi	r2,-4
   1a118:	1884703a 	and	r2,r3,r2
   1a11c:	d0a01015 	stw	r2,-32704(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   1a120:	d0e01017 	ldw	r3,-32704(gp)
   1a124:	e0bfff17 	ldw	r2,-4(fp)
   1a128:	1887883a 	add	r3,r3,r2
   1a12c:	00802034 	movhi	r2,128
   1a130:	10800004 	addi	r2,r2,0
   1a134:	10c0062e 	bgeu	r2,r3,1a150 <sbrk+0x74>
   1a138:	e0bffb17 	ldw	r2,-20(fp)
   1a13c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1a140:	e0bffa17 	ldw	r2,-24(fp)
   1a144:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   1a148:	00bfffc4 	movi	r2,-1
   1a14c:	00000b06 	br	1a17c <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   1a150:	d0a01017 	ldw	r2,-32704(gp)
   1a154:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   1a158:	d0e01017 	ldw	r3,-32704(gp)
   1a15c:	e0bfff17 	ldw	r2,-4(fp)
   1a160:	1885883a 	add	r2,r3,r2
   1a164:	d0a01015 	stw	r2,-32704(gp)
   1a168:	e0bffb17 	ldw	r2,-20(fp)
   1a16c:	e0bffc15 	stw	r2,-16(fp)
   1a170:	e0bffc17 	ldw	r2,-16(fp)
   1a174:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   1a178:	e0bffd17 	ldw	r2,-12(fp)
} 
   1a17c:	e037883a 	mov	sp,fp
   1a180:	df000017 	ldw	fp,0(sp)
   1a184:	dec00104 	addi	sp,sp,4
   1a188:	f800283a 	ret

0001a18c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   1a18c:	defffe04 	addi	sp,sp,-8
   1a190:	dfc00115 	stw	ra,4(sp)
   1a194:	df000015 	stw	fp,0(sp)
   1a198:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   1a19c:	d0a00d17 	ldw	r2,-32716(gp)
   1a1a0:	10000326 	beq	r2,zero,1a1b0 <alt_get_errno+0x24>
   1a1a4:	d0a00d17 	ldw	r2,-32716(gp)
   1a1a8:	103ee83a 	callr	r2
   1a1ac:	00000106 	br	1a1b4 <alt_get_errno+0x28>
   1a1b0:	d0a70b04 	addi	r2,gp,-25556
}
   1a1b4:	e037883a 	mov	sp,fp
   1a1b8:	dfc00117 	ldw	ra,4(sp)
   1a1bc:	df000017 	ldw	fp,0(sp)
   1a1c0:	dec00204 	addi	sp,sp,8
   1a1c4:	f800283a 	ret

0001a1c8 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   1a1c8:	defff904 	addi	sp,sp,-28
   1a1cc:	dfc00615 	stw	ra,24(sp)
   1a1d0:	df000515 	stw	fp,20(sp)
   1a1d4:	df000504 	addi	fp,sp,20
   1a1d8:	e13ffd15 	stw	r4,-12(fp)
   1a1dc:	e17ffe15 	stw	r5,-8(fp)
   1a1e0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   1a1e4:	e0bffd17 	ldw	r2,-12(fp)
   1a1e8:	10000816 	blt	r2,zero,1a20c <write+0x44>
   1a1ec:	01400304 	movi	r5,12
   1a1f0:	e13ffd17 	ldw	r4,-12(fp)
   1a1f4:	00024440 	call	2444 <__mulsi3>
   1a1f8:	1007883a 	mov	r3,r2
   1a1fc:	008000b4 	movhi	r2,2
   1a200:	10bb7004 	addi	r2,r2,-4672
   1a204:	1885883a 	add	r2,r3,r2
   1a208:	00000106 	br	1a210 <write+0x48>
   1a20c:	0005883a 	mov	r2,zero
   1a210:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   1a214:	e0bffb17 	ldw	r2,-20(fp)
   1a218:	10002126 	beq	r2,zero,1a2a0 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   1a21c:	e0bffb17 	ldw	r2,-20(fp)
   1a220:	10800217 	ldw	r2,8(r2)
   1a224:	108000cc 	andi	r2,r2,3
   1a228:	10001826 	beq	r2,zero,1a28c <write+0xc4>
   1a22c:	e0bffb17 	ldw	r2,-20(fp)
   1a230:	10800017 	ldw	r2,0(r2)
   1a234:	10800617 	ldw	r2,24(r2)
   1a238:	10001426 	beq	r2,zero,1a28c <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   1a23c:	e0bffb17 	ldw	r2,-20(fp)
   1a240:	10800017 	ldw	r2,0(r2)
   1a244:	10800617 	ldw	r2,24(r2)
   1a248:	e0ffff17 	ldw	r3,-4(fp)
   1a24c:	180d883a 	mov	r6,r3
   1a250:	e17ffe17 	ldw	r5,-8(fp)
   1a254:	e13ffb17 	ldw	r4,-20(fp)
   1a258:	103ee83a 	callr	r2
   1a25c:	e0bffc15 	stw	r2,-16(fp)
   1a260:	e0bffc17 	ldw	r2,-16(fp)
   1a264:	1000070e 	bge	r2,zero,1a284 <write+0xbc>
      {
        ALT_ERRNO = -rval;
   1a268:	001a18c0 	call	1a18c <alt_get_errno>
   1a26c:	1007883a 	mov	r3,r2
   1a270:	e0bffc17 	ldw	r2,-16(fp)
   1a274:	0085c83a 	sub	r2,zero,r2
   1a278:	18800015 	stw	r2,0(r3)
        return -1;
   1a27c:	00bfffc4 	movi	r2,-1
   1a280:	00000c06 	br	1a2b4 <write+0xec>
      }
      return rval;
   1a284:	e0bffc17 	ldw	r2,-16(fp)
   1a288:	00000a06 	br	1a2b4 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
   1a28c:	001a18c0 	call	1a18c <alt_get_errno>
   1a290:	1007883a 	mov	r3,r2
   1a294:	00800344 	movi	r2,13
   1a298:	18800015 	stw	r2,0(r3)
   1a29c:	00000406 	br	1a2b0 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   1a2a0:	001a18c0 	call	1a18c <alt_get_errno>
   1a2a4:	1007883a 	mov	r3,r2
   1a2a8:	00801444 	movi	r2,81
   1a2ac:	18800015 	stw	r2,0(r3)
  }
  return -1;
   1a2b0:	00bfffc4 	movi	r2,-1
}
   1a2b4:	e037883a 	mov	sp,fp
   1a2b8:	dfc00117 	ldw	ra,4(sp)
   1a2bc:	df000017 	ldw	fp,0(sp)
   1a2c0:	dec00204 	addi	sp,sp,8
   1a2c4:	f800283a 	ret

0001a2c8 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   1a2c8:	defffd04 	addi	sp,sp,-12
   1a2cc:	dfc00215 	stw	ra,8(sp)
   1a2d0:	df000115 	stw	fp,4(sp)
   1a2d4:	df000104 	addi	fp,sp,4
   1a2d8:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   1a2dc:	d1600a04 	addi	r5,gp,-32728
   1a2e0:	e13fff17 	ldw	r4,-4(fp)
   1a2e4:	001c0b00 	call	1c0b0 <alt_dev_llist_insert>
}
   1a2e8:	e037883a 	mov	sp,fp
   1a2ec:	dfc00117 	ldw	ra,4(sp)
   1a2f0:	df000017 	ldw	fp,0(sp)
   1a2f4:	dec00204 	addi	sp,sp,8
   1a2f8:	f800283a 	ret

0001a2fc <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   1a2fc:	defffd04 	addi	sp,sp,-12
   1a300:	dfc00215 	stw	ra,8(sp)
   1a304:	df000115 	stw	fp,4(sp)
   1a308:	df000104 	addi	fp,sp,4
   1a30c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_QSYS_0, nios2_qsys_0);
   1a310:	001caec0 	call	1caec <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   1a314:	00800044 	movi	r2,1
   1a318:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   1a31c:	0001883a 	nop
   1a320:	e037883a 	mov	sp,fp
   1a324:	dfc00117 	ldw	ra,4(sp)
   1a328:	df000017 	ldw	fp,0(sp)
   1a32c:	dec00204 	addi	sp,sp,8
   1a330:	f800283a 	ret

0001a334 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   1a334:	defffe04 	addi	sp,sp,-8
   1a338:	dfc00115 	stw	ra,4(sp)
   1a33c:	df000015 	stw	fp,0(sp)
   1a340:	d839883a 	mov	fp,sp
    ALTERA_AVALON_EPCS_FLASH_CONTROLLER_INIT ( EPCS_FLASH_CONTROLLER_0, epcs_flash_controller_0);
   1a344:	010000b4 	movhi	r4,2
   1a348:	213bd004 	addi	r4,r4,-4288
   1a34c:	001a3bc0 	call	1a3bc <alt_epcs_flash_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   1a350:	01800084 	movi	r6,2
   1a354:	000b883a 	mov	r5,zero
   1a358:	010000b4 	movhi	r4,2
   1a35c:	213c0d04 	addi	r4,r4,-4044
   1a360:	001afe80 	call	1afe8 <altera_avalon_jtag_uart_init>
   1a364:	010000b4 	movhi	r4,2
   1a368:	213c0304 	addi	r4,r4,-4084
   1a36c:	001a2c80 	call	1a2c8 <alt_dev_reg>
}
   1a370:	0001883a 	nop
   1a374:	e037883a 	mov	sp,fp
   1a378:	dfc00117 	ldw	ra,4(sp)
   1a37c:	df000017 	ldw	fp,0(sp)
   1a380:	dec00204 	addi	sp,sp,8
   1a384:	f800283a 	ret

0001a388 <alt_flash_device_register>:

typedef struct alt_flash_dev alt_flash_dev; 
typedef alt_flash_dev alt_flash_fd;

static ALT_INLINE int alt_flash_device_register( alt_flash_fd* fd)
{
   1a388:	defffd04 	addi	sp,sp,-12
   1a38c:	dfc00215 	stw	ra,8(sp)
   1a390:	df000115 	stw	fp,4(sp)
   1a394:	df000104 	addi	fp,sp,4
   1a398:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_flash_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) fd, &alt_flash_dev_list);
   1a39c:	d1600e04 	addi	r5,gp,-32712
   1a3a0:	e13fff17 	ldw	r4,-4(fp)
   1a3a4:	001c0b00 	call	1c0b0 <alt_dev_llist_insert>
}
   1a3a8:	e037883a 	mov	sp,fp
   1a3ac:	dfc00117 	ldw	ra,4(sp)
   1a3b0:	df000017 	ldw	fp,0(sp)
   1a3b4:	dec00204 	addi	sp,sp,8
   1a3b8:	f800283a 	ret

0001a3bc <alt_epcs_flash_init>:
/*
 * alt_epcs_flash_init
 *
 */
int alt_epcs_flash_init(alt_flash_epcs_dev* flash)
{
   1a3bc:	defffc04 	addi	sp,sp,-16
   1a3c0:	dfc00315 	stw	ra,12(sp)
   1a3c4:	df000215 	stw	fp,8(sp)
   1a3c8:	df000204 	addi	fp,sp,8
   1a3cc:	e13fff15 	stw	r4,-4(fp)
  int ret_code = 0;
   1a3d0:	e03ffe15 	stw	zero,-8(fp)

  /* Set up function pointers and/or data structures as needed. */
  ret_code = alt_epcs_flash_query(flash);
   1a3d4:	e13fff17 	ldw	r4,-4(fp)
   1a3d8:	001a4100 	call	1a410 <alt_epcs_flash_query>
   1a3dc:	e0bffe15 	stw	r2,-8(fp)
  */

  /*
  *  Register this device as a valid flash device type
  */
  if (!ret_code)
   1a3e0:	e0bffe17 	ldw	r2,-8(fp)
   1a3e4:	1000041e 	bne	r2,zero,1a3f8 <alt_epcs_flash_init+0x3c>
    ret_code = alt_flash_device_register(&(flash->dev));
   1a3e8:	e0bfff17 	ldw	r2,-4(fp)
   1a3ec:	1009883a 	mov	r4,r2
   1a3f0:	001a3880 	call	1a388 <alt_flash_device_register>
   1a3f4:	e0bffe15 	stw	r2,-8(fp)

  return ret_code;
   1a3f8:	e0bffe17 	ldw	r2,-8(fp)
}
   1a3fc:	e037883a 	mov	sp,fp
   1a400:	dfc00117 	ldw	ra,4(sp)
   1a404:	df000017 	ldw	fp,0(sp)
   1a408:	dec00204 	addi	sp,sp,8
   1a40c:	f800283a 	ret

0001a410 <alt_epcs_flash_query>:


static int alt_epcs_flash_query(alt_flash_epcs_dev* flash)
{
   1a410:	defffc04 	addi	sp,sp,-16
   1a414:	dfc00315 	stw	ra,12(sp)
   1a418:	df000215 	stw	fp,8(sp)
   1a41c:	df000204 	addi	fp,sp,8
   1a420:	e13fff15 	stw	r4,-4(fp)
  int ret_code = 0;
   1a424:	e03ffe15 	stw	zero,-8(fp)
   * reset the device, or whatever, to ensure that
   * it's in a known working state.
  */
  
  /* Disable 4-bytes address mode. */
  flash->four_bytes_mode = 0;
   1a428:	e0bfff17 	ldw	r2,-4(fp)
   1a42c:	10003215 	stw	zero,200(r2)
  
  /* Send the RES command sequence */
  flash->silicon_id =
    epcs_read_electronic_signature(flash->register_base);
   1a430:	e0bfff17 	ldw	r2,-4(fp)
   1a434:	10802e17 	ldw	r2,184(r2)
   1a438:	1009883a 	mov	r4,r2
   1a43c:	001bd880 	call	1bd88 <epcs_read_electronic_signature>
  
  /* Disable 4-bytes address mode. */
  flash->four_bytes_mode = 0;
  
  /* Send the RES command sequence */
  flash->silicon_id =
   1a440:	10c03fcc 	andi	r3,r2,255
   1a444:	e0bfff17 	ldw	r2,-4(fp)
   1a448:	10c03015 	stw	r3,192(r2)
    epcs_read_electronic_signature(flash->register_base);

  /* Fill in all device-specific parameters. */
  if (flash->silicon_id == 0x16) /* EPCS64 */
   1a44c:	e0bfff17 	ldw	r2,-4(fp)
   1a450:	10803017 	ldw	r2,192(r2)
   1a454:	10800598 	cmpnei	r2,r2,22
   1a458:	10000a1e 	bne	r2,zero,1a484 <alt_epcs_flash_query+0x74>
  {
    flash->dev.region_info[0].region_size = 64 * 1024 * 1024 / 8;
   1a45c:	e0bfff17 	ldw	r2,-4(fp)
   1a460:	00c02034 	movhi	r3,128
   1a464:	10c00e15 	stw	r3,56(r2)
    flash->dev.region_info[0].number_of_blocks = 128;
   1a468:	e0bfff17 	ldw	r2,-4(fp)
   1a46c:	00c02004 	movi	r3,128
   1a470:	10c00f15 	stw	r3,60(r2)
    flash->dev.region_info[0].block_size = 65536;
   1a474:	e0bfff17 	ldw	r2,-4(fp)
   1a478:	00c00074 	movhi	r3,1
   1a47c:	10c01015 	stw	r3,64(r2)
   1a480:	0000ce06 	br	1a7bc <alt_epcs_flash_query+0x3ac>
  }
  else if (flash->silicon_id == 0x14) /* EPCS16 */
   1a484:	e0bfff17 	ldw	r2,-4(fp)
   1a488:	10803017 	ldw	r2,192(r2)
   1a48c:	10800518 	cmpnei	r2,r2,20
   1a490:	10000a1e 	bne	r2,zero,1a4bc <alt_epcs_flash_query+0xac>
  {
    flash->dev.region_info[0].region_size = 16 * 1024 * 1024 / 8;
   1a494:	e0bfff17 	ldw	r2,-4(fp)
   1a498:	00c00834 	movhi	r3,32
   1a49c:	10c00e15 	stw	r3,56(r2)
    flash->dev.region_info[0].number_of_blocks = 32;
   1a4a0:	e0bfff17 	ldw	r2,-4(fp)
   1a4a4:	00c00804 	movi	r3,32
   1a4a8:	10c00f15 	stw	r3,60(r2)
    flash->dev.region_info[0].block_size = 65536;
   1a4ac:	e0bfff17 	ldw	r2,-4(fp)
   1a4b0:	00c00074 	movhi	r3,1
   1a4b4:	10c01015 	stw	r3,64(r2)
   1a4b8:	0000c006 	br	1a7bc <alt_epcs_flash_query+0x3ac>
  }
  else if (flash->silicon_id == 0x13) /* EPCS8 */
   1a4bc:	e0bfff17 	ldw	r2,-4(fp)
   1a4c0:	10803017 	ldw	r2,192(r2)
   1a4c4:	108004d8 	cmpnei	r2,r2,19
   1a4c8:	10000a1e 	bne	r2,zero,1a4f4 <alt_epcs_flash_query+0xe4>
  {
    flash->dev.region_info[0].region_size = 8 * 1024 * 1024 / 8;
   1a4cc:	e0bfff17 	ldw	r2,-4(fp)
   1a4d0:	00c00434 	movhi	r3,16
   1a4d4:	10c00e15 	stw	r3,56(r2)
    flash->dev.region_info[0].number_of_blocks = 16;
   1a4d8:	e0bfff17 	ldw	r2,-4(fp)
   1a4dc:	00c00404 	movi	r3,16
   1a4e0:	10c00f15 	stw	r3,60(r2)
    flash->dev.region_info[0].block_size = 65536;
   1a4e4:	e0bfff17 	ldw	r2,-4(fp)
   1a4e8:	00c00074 	movhi	r3,1
   1a4ec:	10c01015 	stw	r3,64(r2)
   1a4f0:	0000b206 	br	1a7bc <alt_epcs_flash_query+0x3ac>
  }
  else if (flash->silicon_id == 0x12) /* EPCS4 */
   1a4f4:	e0bfff17 	ldw	r2,-4(fp)
   1a4f8:	10803017 	ldw	r2,192(r2)
   1a4fc:	10800498 	cmpnei	r2,r2,18
   1a500:	10000a1e 	bne	r2,zero,1a52c <alt_epcs_flash_query+0x11c>
  {
    flash->dev.region_info[0].region_size = 4 * 1024 * 1024 / 8;
   1a504:	e0bfff17 	ldw	r2,-4(fp)
   1a508:	00c00234 	movhi	r3,8
   1a50c:	10c00e15 	stw	r3,56(r2)
    flash->dev.region_info[0].number_of_blocks = 8;
   1a510:	e0bfff17 	ldw	r2,-4(fp)
   1a514:	00c00204 	movi	r3,8
   1a518:	10c00f15 	stw	r3,60(r2)
    flash->dev.region_info[0].block_size = 65536;
   1a51c:	e0bfff17 	ldw	r2,-4(fp)
   1a520:	00c00074 	movhi	r3,1
   1a524:	10c01015 	stw	r3,64(r2)
   1a528:	0000a406 	br	1a7bc <alt_epcs_flash_query+0x3ac>
  }
  else if (flash->silicon_id == 0x10) /* EPCS1 */
   1a52c:	e0bfff17 	ldw	r2,-4(fp)
   1a530:	10803017 	ldw	r2,192(r2)
   1a534:	10800418 	cmpnei	r2,r2,16
   1a538:	10000a1e 	bne	r2,zero,1a564 <alt_epcs_flash_query+0x154>
  {
    flash->dev.region_info[0].region_size = 1 * 1024 * 1024 / 8;
   1a53c:	e0bfff17 	ldw	r2,-4(fp)
   1a540:	00c000b4 	movhi	r3,2
   1a544:	10c00e15 	stw	r3,56(r2)
    flash->dev.region_info[0].number_of_blocks = 4;
   1a548:	e0bfff17 	ldw	r2,-4(fp)
   1a54c:	00c00104 	movi	r3,4
   1a550:	10c00f15 	stw	r3,60(r2)
    flash->dev.region_info[0].block_size = 32768;
   1a554:	e0bfff17 	ldw	r2,-4(fp)
   1a558:	00e00014 	movui	r3,32768
   1a55c:	10c01015 	stw	r3,64(r2)
   1a560:	00009606 	br	1a7bc <alt_epcs_flash_query+0x3ac>
  {
    /* 
     * Read electronic signature doesn't work for newer devices; try 
     * the "Read Device ID" command" before giving up.
     */
    flash->silicon_id = epcs_read_device_id(flash->register_base);
   1a564:	e0bfff17 	ldw	r2,-4(fp)
   1a568:	10802e17 	ldw	r2,184(r2)
   1a56c:	1009883a 	mov	r4,r2
   1a570:	001bdf00 	call	1bdf0 <epcs_read_device_id>
   1a574:	1007883a 	mov	r3,r2
   1a578:	e0bfff17 	ldw	r2,-4(fp)
   1a57c:	10c03015 	stw	r3,192(r2)
    /*
     * Last byte is the density ID. Note the difference between
     * EPCS128 and EPCQ128 -- arranged differently, though the 
     * least significant byte of each is '0x18'.
     */
    if((flash->silicon_id & 0xFFFFFF) == 0x20BA15) /* EPCQ16 */
   1a580:	e0bfff17 	ldw	r2,-4(fp)
   1a584:	10c03017 	ldw	r3,192(r2)
   1a588:	00804034 	movhi	r2,256
   1a58c:	10bfffc4 	addi	r2,r2,-1
   1a590:	1886703a 	and	r3,r3,r2
   1a594:	00800874 	movhi	r2,33
   1a598:	10ae8544 	addi	r2,r2,-17899
   1a59c:	18800a1e 	bne	r3,r2,1a5c8 <alt_epcs_flash_query+0x1b8>
    {
      flash->dev.region_info[0].region_size = 16 * 1024 * 1024 / 8;
   1a5a0:	e0bfff17 	ldw	r2,-4(fp)
   1a5a4:	00c00834 	movhi	r3,32
   1a5a8:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 32; /* number of sectors */
   1a5ac:	e0bfff17 	ldw	r2,-4(fp)
   1a5b0:	00c00804 	movi	r3,32
   1a5b4:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
   1a5b8:	e0bfff17 	ldw	r2,-4(fp)
   1a5bc:	00c00074 	movhi	r3,1
   1a5c0:	10c01015 	stw	r3,64(r2)
   1a5c4:	00007d06 	br	1a7bc <alt_epcs_flash_query+0x3ac>
    }
    else if((flash->silicon_id & 0xFFFFFF) == 0x20BA16) /* EPCQ32 */
   1a5c8:	e0bfff17 	ldw	r2,-4(fp)
   1a5cc:	10c03017 	ldw	r3,192(r2)
   1a5d0:	00804034 	movhi	r2,256
   1a5d4:	10bfffc4 	addi	r2,r2,-1
   1a5d8:	1886703a 	and	r3,r3,r2
   1a5dc:	00800874 	movhi	r2,33
   1a5e0:	10ae8584 	addi	r2,r2,-17898
   1a5e4:	18800a1e 	bne	r3,r2,1a610 <alt_epcs_flash_query+0x200>
    {
      flash->dev.region_info[0].region_size = 32 * 1024 * 1024 / 8;
   1a5e8:	e0bfff17 	ldw	r2,-4(fp)
   1a5ec:	00c01034 	movhi	r3,64
   1a5f0:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 64; /* number of sectors */
   1a5f4:	e0bfff17 	ldw	r2,-4(fp)
   1a5f8:	00c01004 	movi	r3,64
   1a5fc:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
   1a600:	e0bfff17 	ldw	r2,-4(fp)
   1a604:	00c00074 	movhi	r3,1
   1a608:	10c01015 	stw	r3,64(r2)
   1a60c:	00006b06 	br	1a7bc <alt_epcs_flash_query+0x3ac>
    }
    else if((flash->silicon_id & 0xFFFFFF) == 0x20BA17) /* EPCQ64 */
   1a610:	e0bfff17 	ldw	r2,-4(fp)
   1a614:	10c03017 	ldw	r3,192(r2)
   1a618:	00804034 	movhi	r2,256
   1a61c:	10bfffc4 	addi	r2,r2,-1
   1a620:	1886703a 	and	r3,r3,r2
   1a624:	00800874 	movhi	r2,33
   1a628:	10ae85c4 	addi	r2,r2,-17897
   1a62c:	18800a1e 	bne	r3,r2,1a658 <alt_epcs_flash_query+0x248>
    {
      flash->dev.region_info[0].region_size = 64 * 1024 * 1024 / 8;
   1a630:	e0bfff17 	ldw	r2,-4(fp)
   1a634:	00c02034 	movhi	r3,128
   1a638:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 128; /* number of sectors */
   1a63c:	e0bfff17 	ldw	r2,-4(fp)
   1a640:	00c02004 	movi	r3,128
   1a644:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
   1a648:	e0bfff17 	ldw	r2,-4(fp)
   1a64c:	00c00074 	movhi	r3,1
   1a650:	10c01015 	stw	r3,64(r2)
   1a654:	00005906 	br	1a7bc <alt_epcs_flash_query+0x3ac>
    }
    else if((flash->silicon_id & 0xFFFFFF) == 0x20BA18) /* EPCQ128 */
   1a658:	e0bfff17 	ldw	r2,-4(fp)
   1a65c:	10c03017 	ldw	r3,192(r2)
   1a660:	00804034 	movhi	r2,256
   1a664:	10bfffc4 	addi	r2,r2,-1
   1a668:	1886703a 	and	r3,r3,r2
   1a66c:	00800874 	movhi	r2,33
   1a670:	10ae8604 	addi	r2,r2,-17896
   1a674:	18800a1e 	bne	r3,r2,1a6a0 <alt_epcs_flash_query+0x290>
    {
      flash->dev.region_info[0].region_size = 128 * 1024 * 1024 / 8;
   1a678:	e0bfff17 	ldw	r2,-4(fp)
   1a67c:	00c04034 	movhi	r3,256
   1a680:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 256; /* number of sectors */
   1a684:	e0bfff17 	ldw	r2,-4(fp)
   1a688:	00c04004 	movi	r3,256
   1a68c:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
   1a690:	e0bfff17 	ldw	r2,-4(fp)
   1a694:	00c00074 	movhi	r3,1
   1a698:	10c01015 	stw	r3,64(r2)
   1a69c:	00004706 	br	1a7bc <alt_epcs_flash_query+0x3ac>
    }
    else if((flash->silicon_id & 0xFF) == 0x18) /* EPCS128 */
   1a6a0:	e0bfff17 	ldw	r2,-4(fp)
   1a6a4:	10803017 	ldw	r2,192(r2)
   1a6a8:	10803fcc 	andi	r2,r2,255
   1a6ac:	10800618 	cmpnei	r2,r2,24
   1a6b0:	10000a1e 	bne	r2,zero,1a6dc <alt_epcs_flash_query+0x2cc>
    {
      flash->dev.region_info[0].region_size = 128 * 1024 * 1024 / 8;
   1a6b4:	e0bfff17 	ldw	r2,-4(fp)
   1a6b8:	00c04034 	movhi	r3,256
   1a6bc:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 64;
   1a6c0:	e0bfff17 	ldw	r2,-4(fp)
   1a6c4:	00c01004 	movi	r3,64
   1a6c8:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 262144;
   1a6cc:	e0bfff17 	ldw	r2,-4(fp)
   1a6d0:	00c00134 	movhi	r3,4
   1a6d4:	10c01015 	stw	r3,64(r2)
   1a6d8:	00003806 	br	1a7bc <alt_epcs_flash_query+0x3ac>
    }
    else if((flash->silicon_id & 0xFF ) == 0x19) /* EPCQ256 */
   1a6dc:	e0bfff17 	ldw	r2,-4(fp)
   1a6e0:	10803017 	ldw	r2,192(r2)
   1a6e4:	10803fcc 	andi	r2,r2,255
   1a6e8:	10800658 	cmpnei	r2,r2,25
   1a6ec:	10000d1e 	bne	r2,zero,1a724 <alt_epcs_flash_query+0x314>
    {
      flash->dev.region_info[0].region_size = 256 * 1024 * 1024 / 8;
   1a6f0:	e0bfff17 	ldw	r2,-4(fp)
   1a6f4:	00c08034 	movhi	r3,512
   1a6f8:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 512; /* number of sectors */
   1a6fc:	e0bfff17 	ldw	r2,-4(fp)
   1a700:	00c08004 	movi	r3,512
   1a704:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
   1a708:	e0bfff17 	ldw	r2,-4(fp)
   1a70c:	00c00074 	movhi	r3,1
   1a710:	10c01015 	stw	r3,64(r2)
       * must first be programmed into the device, though. To complicate things, 
       * other Altera IP expects the chip to be in 3 byte address mode when they 
       * start using it. To be nice, we'll place the device into 4-byte address mode
       * when we need to, and take it back out when we're done.
       */
      flash->four_bytes_mode = 1;
   1a714:	e0bfff17 	ldw	r2,-4(fp)
   1a718:	00c00044 	movi	r3,1
   1a71c:	10c03215 	stw	r3,200(r2)
   1a720:	00002606 	br	1a7bc <alt_epcs_flash_query+0x3ac>
    }
    else if((flash->silicon_id & 0xFF ) == 0x20) /* EPCQ512 */
   1a724:	e0bfff17 	ldw	r2,-4(fp)
   1a728:	10803017 	ldw	r2,192(r2)
   1a72c:	10803fcc 	andi	r2,r2,255
   1a730:	10800818 	cmpnei	r2,r2,32
   1a734:	10000d1e 	bne	r2,zero,1a76c <alt_epcs_flash_query+0x35c>
    {
      flash->dev.region_info[0].region_size = 512 * 1024 * 1024 / 8;
   1a738:	e0bfff17 	ldw	r2,-4(fp)
   1a73c:	00c10034 	movhi	r3,1024
   1a740:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 1024; /* number of sectors */
   1a744:	e0bfff17 	ldw	r2,-4(fp)
   1a748:	00c10004 	movi	r3,1024
   1a74c:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
   1a750:	e0bfff17 	ldw	r2,-4(fp)
   1a754:	00c00074 	movhi	r3,1
   1a758:	10c01015 	stw	r3,64(r2)

      /* Enable 4-bytes address mode if the device density is greater than 256Mbit. */
      flash->four_bytes_mode = 1;
   1a75c:	e0bfff17 	ldw	r2,-4(fp)
   1a760:	00c00044 	movi	r3,1
   1a764:	10c03215 	stw	r3,200(r2)
   1a768:	00001406 	br	1a7bc <alt_epcs_flash_query+0x3ac>
    }
    else if((flash->silicon_id & 0xFF ) == 0x21) /* EPCQ1024 */
   1a76c:	e0bfff17 	ldw	r2,-4(fp)
   1a770:	10803017 	ldw	r2,192(r2)
   1a774:	10803fcc 	andi	r2,r2,255
   1a778:	10800858 	cmpnei	r2,r2,33
   1a77c:	10000d1e 	bne	r2,zero,1a7b4 <alt_epcs_flash_query+0x3a4>
    {
      flash->dev.region_info[0].region_size = 1024 * 1024 * 1024 / 8;
   1a780:	e0bfff17 	ldw	r2,-4(fp)
   1a784:	00c20034 	movhi	r3,2048
   1a788:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 2048; /* number of sectors */
   1a78c:	e0bfff17 	ldw	r2,-4(fp)
   1a790:	00c20004 	movi	r3,2048
   1a794:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
   1a798:	e0bfff17 	ldw	r2,-4(fp)
   1a79c:	00c00074 	movhi	r3,1
   1a7a0:	10c01015 	stw	r3,64(r2)

      /* Enable 4-bytes address mode if the device density is greater than 256Mbit. */
      flash->four_bytes_mode = 1;
   1a7a4:	e0bfff17 	ldw	r2,-4(fp)
   1a7a8:	00c00044 	movi	r3,1
   1a7ac:	10c03215 	stw	r3,200(r2)
   1a7b0:	00000206 	br	1a7bc <alt_epcs_flash_query+0x3ac>
    }
    else 
    {
      ret_code = -ENODEV; /* No known device found! */
   1a7b4:	00bffb44 	movi	r2,-19
   1a7b8:	e0bffe15 	stw	r2,-8(fp)
    }
  }
  
  flash->size_in_bytes = flash->dev.region_info[0].region_size;
   1a7bc:	e0bfff17 	ldw	r2,-4(fp)
   1a7c0:	10800e17 	ldw	r2,56(r2)
   1a7c4:	1007883a 	mov	r3,r2
   1a7c8:	e0bfff17 	ldw	r2,-4(fp)
   1a7cc:	10c02f15 	stw	r3,188(r2)
  flash->dev.number_of_regions = 1;
   1a7d0:	e0bfff17 	ldw	r2,-4(fp)
   1a7d4:	00c00044 	movi	r3,1
   1a7d8:	10c00c15 	stw	r3,48(r2)
  flash->dev.region_info[0].offset = 0;
   1a7dc:	e0bfff17 	ldw	r2,-4(fp)
   1a7e0:	10000d15 	stw	zero,52(r2)
  flash->page_size = 256;
   1a7e4:	e0bfff17 	ldw	r2,-4(fp)
   1a7e8:	00c04004 	movi	r3,256
   1a7ec:	10c03115 	stw	r3,196(r2)

  /* Consider clearing all BP bits here. */
  return ret_code;
   1a7f0:	e0bffe17 	ldw	r2,-8(fp)
}
   1a7f4:	e037883a 	mov	sp,fp
   1a7f8:	dfc00117 	ldw	ra,4(sp)
   1a7fc:	df000017 	ldw	fp,0(sp)
   1a800:	dec00204 	addi	sp,sp,8
   1a804:	f800283a 	ret

0001a808 <alt_epcs_flash_memcmp>:
  alt_flash_dev* flash_info,
  const void* src_buffer,
  int offset,
  size_t n
)
{
   1a808:	deffee04 	addi	sp,sp,-72
   1a80c:	dfc01115 	stw	ra,68(sp)
   1a810:	df001015 	stw	fp,64(sp)
   1a814:	df001004 	addi	fp,sp,64
   1a818:	e13ffc15 	stw	r4,-16(fp)
   1a81c:	e17ffd15 	stw	r5,-12(fp)
   1a820:	e1bffe15 	stw	r6,-8(fp)
   1a824:	e1ffff15 	stw	r7,-4(fp)
  /*
   * Compare chunks of memory at a time, for better serial-flash
   * read efficiency.
   */
  alt_u8 chunk_buffer[32];
  const int chunk_size = sizeof(chunk_buffer) / sizeof(*chunk_buffer);
   1a828:	00800804 	movi	r2,32
   1a82c:	e0bff115 	stw	r2,-60(fp)
  int current_offset = 0;
   1a830:	e03ff015 	stw	zero,-64(fp)

  while (n > 0)
   1a834:	00002706 	br	1a8d4 <alt_epcs_flash_memcmp+0xcc>
  {
    int this_chunk_size = n > chunk_size ? chunk_size : n;
   1a838:	e0fff117 	ldw	r3,-60(fp)
   1a83c:	e0bfff17 	ldw	r2,-4(fp)
   1a840:	1880012e 	bgeu	r3,r2,1a848 <alt_epcs_flash_memcmp+0x40>
   1a844:	1805883a 	mov	r2,r3
   1a848:	e0bff215 	stw	r2,-56(fp)
    int this_chunk_cmp;

    if (
      alt_epcs_flash_read(
   1a84c:	e0fffe17 	ldw	r3,-8(fp)
   1a850:	e0bff017 	ldw	r2,-64(fp)
   1a854:	1885883a 	add	r2,r3,r2
   1a858:	e0fff404 	addi	r3,fp,-48
   1a85c:	e1fff217 	ldw	r7,-56(fp)
   1a860:	180d883a 	mov	r6,r3
   1a864:	100b883a 	mov	r5,r2
   1a868:	e13ffc17 	ldw	r4,-16(fp)
   1a86c:	001adec0 	call	1adec <alt_epcs_flash_read>
  while (n > 0)
  {
    int this_chunk_size = n > chunk_size ? chunk_size : n;
    int this_chunk_cmp;

    if (
   1a870:	1000020e 	bge	r2,zero,1a87c <alt_epcs_flash_memcmp+0x74>
    {
      /*
      * If the read fails, I'm not sure what the appropriate action is.
      * Compare success seems wrong, so make it compare fail.
      */
      return -1;
   1a874:	00bfffc4 	movi	r2,-1
   1a878:	00001906 	br	1a8e0 <alt_epcs_flash_memcmp+0xd8>
    }

    /* Compare this chunk against the source memory buffer. */
    this_chunk_cmp = memcmp(&((unsigned char*)(src_buffer))[current_offset], chunk_buffer, this_chunk_size);
   1a87c:	e0bff017 	ldw	r2,-64(fp)
   1a880:	e0fffd17 	ldw	r3,-12(fp)
   1a884:	1885883a 	add	r2,r3,r2
   1a888:	e13ff217 	ldw	r4,-56(fp)
   1a88c:	e0fff404 	addi	r3,fp,-48
   1a890:	200d883a 	mov	r6,r4
   1a894:	180b883a 	mov	r5,r3
   1a898:	1009883a 	mov	r4,r2
   1a89c:	0002d980 	call	2d98 <memcmp>
   1a8a0:	e0bff315 	stw	r2,-52(fp)
    if (this_chunk_cmp)
   1a8a4:	e0bff317 	ldw	r2,-52(fp)
   1a8a8:	10000226 	beq	r2,zero,1a8b4 <alt_epcs_flash_memcmp+0xac>
    {
      return this_chunk_cmp;
   1a8ac:	e0bff317 	ldw	r2,-52(fp)
   1a8b0:	00000b06 	br	1a8e0 <alt_epcs_flash_memcmp+0xd8>
    }

    n -= this_chunk_size;
   1a8b4:	e0bff217 	ldw	r2,-56(fp)
   1a8b8:	e0ffff17 	ldw	r3,-4(fp)
   1a8bc:	1885c83a 	sub	r2,r3,r2
   1a8c0:	e0bfff15 	stw	r2,-4(fp)
    current_offset += this_chunk_size;
   1a8c4:	e0fff017 	ldw	r3,-64(fp)
   1a8c8:	e0bff217 	ldw	r2,-56(fp)
   1a8cc:	1885883a 	add	r2,r3,r2
   1a8d0:	e0bff015 	stw	r2,-64(fp)
   */
  alt_u8 chunk_buffer[32];
  const int chunk_size = sizeof(chunk_buffer) / sizeof(*chunk_buffer);
  int current_offset = 0;

  while (n > 0)
   1a8d4:	e0bfff17 	ldw	r2,-4(fp)
   1a8d8:	103fd71e 	bne	r2,zero,1a838 <__alt_mem_epcs_flash_controller_0+0xff819838>
  }

  /*
   * If execution made it to this point, compare is successful.
   */
  return 0;
   1a8dc:	0005883a 	mov	r2,zero
}
   1a8e0:	e037883a 	mov	sp,fp
   1a8e4:	dfc00117 	ldw	ra,4(sp)
   1a8e8:	df000017 	ldw	fp,0(sp)
   1a8ec:	dec00204 	addi	sp,sp,8
   1a8f0:	f800283a 	ret

0001a8f4 <alt_epcs_flash_write>:
 * large buffer to tie up in our programming library, when not all users will
 * want that functionality.
 */
int alt_epcs_flash_write(alt_flash_dev* flash_info, int offset,
                          const void* src_addr, int length)
{
   1a8f4:	defff404 	addi	sp,sp,-48
   1a8f8:	dfc00b15 	stw	ra,44(sp)
   1a8fc:	df000a15 	stw	fp,40(sp)
   1a900:	df000a04 	addi	fp,sp,40
   1a904:	e13ffc15 	stw	r4,-16(fp)
   1a908:	e17ffd15 	stw	r5,-12(fp)
   1a90c:	e1bffe15 	stw	r6,-8(fp)
   1a910:	e1ffff15 	stw	r7,-4(fp)
  int         ret_code = 0;
   1a914:	e03ff715 	stw	zero,-36(fp)
  int         current_offset;

  /*
   * First and foremost which sectors are affected?
   */
  for(i = 0; i < flash_info->number_of_regions; i++)
   1a918:	e03ff815 	stw	zero,-32(fp)
   1a91c:	00008306 	br	1ab2c <alt_epcs_flash_write+0x238>
  {
    /* Is it in this erase block region?*/
    if((offset >= flash_info->region_info[i].offset) &&
   1a920:	e0fffc17 	ldw	r3,-16(fp)
   1a924:	e0bff817 	ldw	r2,-32(fp)
   1a928:	1004913a 	slli	r2,r2,4
   1a92c:	1885883a 	add	r2,r3,r2
   1a930:	10800d04 	addi	r2,r2,52
   1a934:	10800017 	ldw	r2,0(r2)
   1a938:	e0fffd17 	ldw	r3,-12(fp)
   1a93c:	18807816 	blt	r3,r2,1ab20 <alt_epcs_flash_write+0x22c>
      (offset < (flash_info->region_info[i].offset +
   1a940:	e0fffc17 	ldw	r3,-16(fp)
   1a944:	e0bff817 	ldw	r2,-32(fp)
   1a948:	1004913a 	slli	r2,r2,4
   1a94c:	1885883a 	add	r2,r3,r2
   1a950:	10800d04 	addi	r2,r2,52
   1a954:	10c00017 	ldw	r3,0(r2)
      flash_info->region_info[i].region_size)))
   1a958:	e13ffc17 	ldw	r4,-16(fp)
   1a95c:	e0bff817 	ldw	r2,-32(fp)
   1a960:	1004913a 	slli	r2,r2,4
   1a964:	2085883a 	add	r2,r4,r2
   1a968:	10800e04 	addi	r2,r2,56
   1a96c:	10800017 	ldw	r2,0(r2)
   */
  for(i = 0; i < flash_info->number_of_regions; i++)
  {
    /* Is it in this erase block region?*/
    if((offset >= flash_info->region_info[i].offset) &&
      (offset < (flash_info->region_info[i].offset +
   1a970:	1885883a 	add	r2,r3,r2
   * First and foremost which sectors are affected?
   */
  for(i = 0; i < flash_info->number_of_regions; i++)
  {
    /* Is it in this erase block region?*/
    if((offset >= flash_info->region_info[i].offset) &&
   1a974:	e0fffd17 	ldw	r3,-12(fp)
   1a978:	1880690e 	bge	r3,r2,1ab20 <alt_epcs_flash_write+0x22c>
      (offset < (flash_info->region_info[i].offset +
      flash_info->region_info[i].region_size)))
    {
      current_offset = flash_info->region_info[i].offset;
   1a97c:	e0fffc17 	ldw	r3,-16(fp)
   1a980:	e0bff817 	ldw	r2,-32(fp)
   1a984:	1004913a 	slli	r2,r2,4
   1a988:	1885883a 	add	r2,r3,r2
   1a98c:	10800d04 	addi	r2,r2,52
   1a990:	10800017 	ldw	r2,0(r2)
   1a994:	e0bffa15 	stw	r2,-24(fp)

      for(j=0;j<flash_info->region_info[i].number_of_blocks;j++)
   1a998:	e03ff915 	stw	zero,-28(fp)
   1a99c:	00005806 	br	1ab00 <alt_epcs_flash_write+0x20c>
      {
        if ((offset >= current_offset ) &&
   1a9a0:	e0fffd17 	ldw	r3,-12(fp)
   1a9a4:	e0bffa17 	ldw	r2,-24(fp)
   1a9a8:	18804916 	blt	r3,r2,1aad0 <alt_epcs_flash_write+0x1dc>
            (offset < (current_offset +
            flash_info->region_info[i].block_size)))
   1a9ac:	e0fffc17 	ldw	r3,-16(fp)
   1a9b0:	e0bff817 	ldw	r2,-32(fp)
   1a9b4:	10800104 	addi	r2,r2,4
   1a9b8:	1004913a 	slli	r2,r2,4
   1a9bc:	1885883a 	add	r2,r3,r2
   1a9c0:	10c00017 	ldw	r3,0(r2)
      current_offset = flash_info->region_info[i].offset;

      for(j=0;j<flash_info->region_info[i].number_of_blocks;j++)
      {
        if ((offset >= current_offset ) &&
            (offset < (current_offset +
   1a9c4:	e0bffa17 	ldw	r2,-24(fp)
   1a9c8:	1885883a 	add	r2,r3,r2
    {
      current_offset = flash_info->region_info[i].offset;

      for(j=0;j<flash_info->region_info[i].number_of_blocks;j++)
      {
        if ((offset >= current_offset ) &&
   1a9cc:	e0fffd17 	ldw	r3,-12(fp)
   1a9d0:	18803f0e 	bge	r3,r2,1aad0 <alt_epcs_flash_write+0x1dc>
        {
          /*
           * Check if the contents of the block are different
           * from the data we wish to put there
           */
          data_to_write = ( current_offset + flash_info->region_info[i].block_size
   1a9d4:	e0fffc17 	ldw	r3,-16(fp)
   1a9d8:	e0bff817 	ldw	r2,-32(fp)
   1a9dc:	10800104 	addi	r2,r2,4
   1a9e0:	1004913a 	slli	r2,r2,4
   1a9e4:	1885883a 	add	r2,r3,r2
   1a9e8:	10c00017 	ldw	r3,0(r2)
   1a9ec:	e0bffa17 	ldw	r2,-24(fp)
   1a9f0:	1887883a 	add	r3,r3,r2
   1a9f4:	e0bffd17 	ldw	r2,-12(fp)
   1a9f8:	1885c83a 	sub	r2,r3,r2
   1a9fc:	e0bffb15 	stw	r2,-20(fp)
                            - offset);
          data_to_write = MIN(data_to_write, length);
   1aa00:	e0fffb17 	ldw	r3,-20(fp)
   1aa04:	e0bfff17 	ldw	r2,-4(fp)
   1aa08:	1880010e 	bge	r3,r2,1aa10 <alt_epcs_flash_write+0x11c>
   1aa0c:	1805883a 	mov	r2,r3
   1aa10:	e0bffb15 	stw	r2,-20(fp)

          if(alt_epcs_flash_memcmp(flash_info, src_addr, offset, data_to_write))
   1aa14:	e0bffb17 	ldw	r2,-20(fp)
   1aa18:	100f883a 	mov	r7,r2
   1aa1c:	e1bffd17 	ldw	r6,-12(fp)
   1aa20:	e17ffe17 	ldw	r5,-8(fp)
   1aa24:	e13ffc17 	ldw	r4,-16(fp)
   1aa28:	001a8080 	call	1a808 <alt_epcs_flash_memcmp>
   1aa2c:	10001226 	beq	r2,zero,1aa78 <alt_epcs_flash_write+0x184>
          {
            ret_code = (*flash_info->erase_block)(flash_info, current_offset);
   1aa30:	e0bffc17 	ldw	r2,-16(fp)
   1aa34:	10800817 	ldw	r2,32(r2)
   1aa38:	e17ffa17 	ldw	r5,-24(fp)
   1aa3c:	e13ffc17 	ldw	r4,-16(fp)
   1aa40:	103ee83a 	callr	r2
   1aa44:	e0bff715 	stw	r2,-36(fp)

            if (!ret_code)
   1aa48:	e0bff717 	ldw	r2,-36(fp)
   1aa4c:	10000a1e 	bne	r2,zero,1aa78 <alt_epcs_flash_write+0x184>
            {
              ret_code = (*flash_info->write_block)(
   1aa50:	e0bffc17 	ldw	r2,-16(fp)
   1aa54:	10800917 	ldw	r2,36(r2)
   1aa58:	e0fffb17 	ldw	r3,-20(fp)
   1aa5c:	d8c00015 	stw	r3,0(sp)
   1aa60:	e1fffe17 	ldw	r7,-8(fp)
   1aa64:	e1bffd17 	ldw	r6,-12(fp)
   1aa68:	e17ffa17 	ldw	r5,-24(fp)
   1aa6c:	e13ffc17 	ldw	r4,-16(fp)
   1aa70:	103ee83a 	callr	r2
   1aa74:	e0bff715 	stw	r2,-36(fp)
                                                  data_to_write);
            }
          }

          /* Was this the last block? */
          if ((length == data_to_write) || ret_code)
   1aa78:	e0ffff17 	ldw	r3,-4(fp)
   1aa7c:	e0bffb17 	ldw	r2,-20(fp)
   1aa80:	18802e26 	beq	r3,r2,1ab3c <alt_epcs_flash_write+0x248>
   1aa84:	e0bff717 	ldw	r2,-36(fp)
   1aa88:	10002c1e 	bne	r2,zero,1ab3c <alt_epcs_flash_write+0x248>
          {
            goto finished;
          }

          length -= data_to_write;
   1aa8c:	e0ffff17 	ldw	r3,-4(fp)
   1aa90:	e0bffb17 	ldw	r2,-20(fp)
   1aa94:	1885c83a 	sub	r2,r3,r2
   1aa98:	e0bfff15 	stw	r2,-4(fp)
          offset = current_offset + flash_info->region_info[i].block_size;
   1aa9c:	e0fffc17 	ldw	r3,-16(fp)
   1aaa0:	e0bff817 	ldw	r2,-32(fp)
   1aaa4:	10800104 	addi	r2,r2,4
   1aaa8:	1004913a 	slli	r2,r2,4
   1aaac:	1885883a 	add	r2,r3,r2
   1aab0:	10c00017 	ldw	r3,0(r2)
   1aab4:	e0bffa17 	ldw	r2,-24(fp)
   1aab8:	1885883a 	add	r2,r3,r2
   1aabc:	e0bffd15 	stw	r2,-12(fp)
          src_addr = (alt_u8*)src_addr + data_to_write;
   1aac0:	e0bffb17 	ldw	r2,-20(fp)
   1aac4:	e0fffe17 	ldw	r3,-8(fp)
   1aac8:	1885883a 	add	r2,r3,r2
   1aacc:	e0bffe15 	stw	r2,-8(fp)
        }
        current_offset += flash_info->region_info[i].block_size;
   1aad0:	e0fffc17 	ldw	r3,-16(fp)
   1aad4:	e0bff817 	ldw	r2,-32(fp)
   1aad8:	10800104 	addi	r2,r2,4
   1aadc:	1004913a 	slli	r2,r2,4
   1aae0:	1885883a 	add	r2,r3,r2
   1aae4:	10800017 	ldw	r2,0(r2)
   1aae8:	e0fffa17 	ldw	r3,-24(fp)
   1aaec:	1885883a 	add	r2,r3,r2
   1aaf0:	e0bffa15 	stw	r2,-24(fp)
      (offset < (flash_info->region_info[i].offset +
      flash_info->region_info[i].region_size)))
    {
      current_offset = flash_info->region_info[i].offset;

      for(j=0;j<flash_info->region_info[i].number_of_blocks;j++)
   1aaf4:	e0bff917 	ldw	r2,-28(fp)
   1aaf8:	10800044 	addi	r2,r2,1
   1aafc:	e0bff915 	stw	r2,-28(fp)
   1ab00:	e0fffc17 	ldw	r3,-16(fp)
   1ab04:	e0bff817 	ldw	r2,-32(fp)
   1ab08:	1004913a 	slli	r2,r2,4
   1ab0c:	1885883a 	add	r2,r3,r2
   1ab10:	10800f04 	addi	r2,r2,60
   1ab14:	10800017 	ldw	r2,0(r2)
   1ab18:	e0fff917 	ldw	r3,-28(fp)
   1ab1c:	18bfa016 	blt	r3,r2,1a9a0 <__alt_mem_epcs_flash_controller_0+0xff8199a0>
  int         current_offset;

  /*
   * First and foremost which sectors are affected?
   */
  for(i = 0; i < flash_info->number_of_regions; i++)
   1ab20:	e0bff817 	ldw	r2,-32(fp)
   1ab24:	10800044 	addi	r2,r2,1
   1ab28:	e0bff815 	stw	r2,-32(fp)
   1ab2c:	e0bffc17 	ldw	r2,-16(fp)
   1ab30:	10800c17 	ldw	r2,48(r2)
   1ab34:	e0fff817 	ldw	r3,-32(fp)
   1ab38:	18bf7916 	blt	r3,r2,1a920 <__alt_mem_epcs_flash_controller_0+0xff819920>
      }
    }
  }

finished:
  return ret_code;
   1ab3c:	e0bff717 	ldw	r2,-36(fp)
}
   1ab40:	e037883a 	mov	sp,fp
   1ab44:	dfc00117 	ldw	ra,4(sp)
   1ab48:	df000017 	ldw	fp,0(sp)
   1ab4c:	dec00204 	addi	sp,sp,8
   1ab50:	f800283a 	ret

0001ab54 <alt_epcs_flash_get_info>:
 *
 *  Pass the table of erase blocks to the user
 */
int alt_epcs_flash_get_info(alt_flash_fd* fd, flash_region** info,
                            int* number_of_regions)
{
   1ab54:	defffa04 	addi	sp,sp,-24
   1ab58:	df000515 	stw	fp,20(sp)
   1ab5c:	df000504 	addi	fp,sp,20
   1ab60:	e13ffd15 	stw	r4,-12(fp)
   1ab64:	e17ffe15 	stw	r5,-8(fp)
   1ab68:	e1bfff15 	stw	r6,-4(fp)
  int ret_code = 0;
   1ab6c:	e03ffb15 	stw	zero,-20(fp)

  alt_flash_dev* flash = (alt_flash_dev*)fd;
   1ab70:	e0bffd17 	ldw	r2,-12(fp)
   1ab74:	e0bffc15 	stw	r2,-16(fp)

  *number_of_regions = flash->number_of_regions;
   1ab78:	e0bffc17 	ldw	r2,-16(fp)
   1ab7c:	10c00c17 	ldw	r3,48(r2)
   1ab80:	e0bfff17 	ldw	r2,-4(fp)
   1ab84:	10c00015 	stw	r3,0(r2)

  if (!flash->number_of_regions)
   1ab88:	e0bffc17 	ldw	r2,-16(fp)
   1ab8c:	10800c17 	ldw	r2,48(r2)
   1ab90:	1000031e 	bne	r2,zero,1aba0 <alt_epcs_flash_get_info+0x4c>
  {
    ret_code = -EIO;
   1ab94:	00bffec4 	movi	r2,-5
   1ab98:	e0bffb15 	stw	r2,-20(fp)
   1ab9c:	00000b06 	br	1abcc <alt_epcs_flash_get_info+0x78>
  }
  else if (flash->number_of_regions > ALT_MAX_NUMBER_OF_FLASH_REGIONS)
   1aba0:	e0bffc17 	ldw	r2,-16(fp)
   1aba4:	10800c17 	ldw	r2,48(r2)
   1aba8:	10800250 	cmplti	r2,r2,9
   1abac:	1000031e 	bne	r2,zero,1abbc <alt_epcs_flash_get_info+0x68>
  {
    ret_code = -ENOMEM;
   1abb0:	00bffd04 	movi	r2,-12
   1abb4:	e0bffb15 	stw	r2,-20(fp)
   1abb8:	00000406 	br	1abcc <alt_epcs_flash_get_info+0x78>
  }
  else
  {
    *info = &flash->region_info[0];
   1abbc:	e0bffc17 	ldw	r2,-16(fp)
   1abc0:	10c00d04 	addi	r3,r2,52
   1abc4:	e0bffe17 	ldw	r2,-8(fp)
   1abc8:	10c00015 	stw	r3,0(r2)
  }

  return ret_code;
   1abcc:	e0bffb17 	ldw	r2,-20(fp)
}
   1abd0:	e037883a 	mov	sp,fp
   1abd4:	df000017 	ldw	fp,0(sp)
   1abd8:	dec00104 	addi	sp,sp,4
   1abdc:	f800283a 	ret

0001abe0 <alt_epcs_test_address>:


/* This might be a candidate for optimization.  Precompute the last-address? */
static ALT_INLINE int alt_epcs_test_address(alt_flash_dev* flash_info, int offset)
{
   1abe0:	defff904 	addi	sp,sp,-28
   1abe4:	df000615 	stw	fp,24(sp)
   1abe8:	df000604 	addi	fp,sp,24
   1abec:	e13ffe15 	stw	r4,-8(fp)
   1abf0:	e17fff15 	stw	r5,-4(fp)
  int ret_code = 0;
   1abf4:	e03ffa15 	stw	zero,-24(fp)
  /* Error checking:
   * if the block offset is outside of the memory, return -EIO.
   */
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;
   1abf8:	e0bffe17 	ldw	r2,-8(fp)
   1abfc:	e0bffb15 	stw	r2,-20(fp)

  const alt_u32 last_region_index = f->dev.number_of_regions - 1;
   1ac00:	e0bffb17 	ldw	r2,-20(fp)
   1ac04:	10800c17 	ldw	r2,48(r2)
   1ac08:	10bfffc4 	addi	r2,r2,-1
   1ac0c:	e0bffc15 	stw	r2,-16(fp)
  alt_u32 last_device_address =
    -1 +
    f->dev.region_info[last_region_index].offset +
   1ac10:	e0fffb17 	ldw	r3,-20(fp)
   1ac14:	e0bffc17 	ldw	r2,-16(fp)
   1ac18:	1004913a 	slli	r2,r2,4
   1ac1c:	1885883a 	add	r2,r3,r2
   1ac20:	10800d04 	addi	r2,r2,52
   1ac24:	10800017 	ldw	r2,0(r2)
   */
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;

  const alt_u32 last_region_index = f->dev.number_of_regions - 1;
  alt_u32 last_device_address =
    -1 +
   1ac28:	10ffffc4 	addi	r3,r2,-1
    f->dev.region_info[last_region_index].offset +
    f->dev.region_info[last_region_index].region_size;
   1ac2c:	e13ffb17 	ldw	r4,-20(fp)
   1ac30:	e0bffc17 	ldw	r2,-16(fp)
   1ac34:	1004913a 	slli	r2,r2,4
   1ac38:	2085883a 	add	r2,r4,r2
   1ac3c:	10800e04 	addi	r2,r2,56
   1ac40:	10800017 	ldw	r2,0(r2)
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;

  const alt_u32 last_region_index = f->dev.number_of_regions - 1;
  alt_u32 last_device_address =
    -1 +
    f->dev.region_info[last_region_index].offset +
   1ac44:	1885883a 	add	r2,r3,r2
   * if the block offset is outside of the memory, return -EIO.
   */
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;

  const alt_u32 last_region_index = f->dev.number_of_regions - 1;
  alt_u32 last_device_address =
   1ac48:	e0bffd15 	stw	r2,-12(fp)
    -1 +
    f->dev.region_info[last_region_index].offset +
    f->dev.region_info[last_region_index].region_size;

  if (offset > last_device_address)
   1ac4c:	e0bfff17 	ldw	r2,-4(fp)
   1ac50:	e0fffd17 	ldw	r3,-12(fp)
   1ac54:	1880022e 	bgeu	r3,r2,1ac60 <alt_epcs_test_address+0x80>
  {
    /* Someone tried to erase a block outside of this device's range. */
    ret_code = -EIO;
   1ac58:	00bffec4 	movi	r2,-5
   1ac5c:	e0bffa15 	stw	r2,-24(fp)
  }
  return ret_code;
   1ac60:	e0bffa17 	ldw	r2,-24(fp)
}
   1ac64:	e037883a 	mov	sp,fp
   1ac68:	df000017 	ldw	fp,0(sp)
   1ac6c:	dec00104 	addi	sp,sp,4
   1ac70:	f800283a 	ret

0001ac74 <alt_epcs_flash_erase_block>:
 *
 * Erase the selected erase block ("sector erase", from the POV
 * of the EPCS data sheet).
 */
int alt_epcs_flash_erase_block(alt_flash_dev* flash_info, int block_offset)
{
   1ac74:	defffa04 	addi	sp,sp,-24
   1ac78:	dfc00515 	stw	ra,20(sp)
   1ac7c:	df000415 	stw	fp,16(sp)
   1ac80:	df000404 	addi	fp,sp,16
   1ac84:	e13ffe15 	stw	r4,-8(fp)
   1ac88:	e17fff15 	stw	r5,-4(fp)
  int ret_code = 0;
   1ac8c:	e03ffc15 	stw	zero,-16(fp)
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;
   1ac90:	e0bffe17 	ldw	r2,-8(fp)
   1ac94:	e0bffd15 	stw	r2,-12(fp)

  ret_code = alt_epcs_test_address(flash_info, block_offset);
   1ac98:	e17fff17 	ldw	r5,-4(fp)
   1ac9c:	e13ffe17 	ldw	r4,-8(fp)
   1aca0:	001abe00 	call	1abe0 <alt_epcs_test_address>
   1aca4:	e0bffc15 	stw	r2,-16(fp)

  if (ret_code >= 0)
   1aca8:	e0bffc17 	ldw	r2,-16(fp)
   1acac:	10000916 	blt	r2,zero,1acd4 <alt_epcs_flash_erase_block+0x60>
  {
    /* Send the Sector Erase command, whose 3 address bytes are anywhere
     * within the chosen sector.
     */
    epcs_sector_erase(f->register_base, block_offset, f->four_bytes_mode);
   1acb0:	e0bffd17 	ldw	r2,-12(fp)
   1acb4:	10c02e17 	ldw	r3,184(r2)
   1acb8:	e13fff17 	ldw	r4,-4(fp)
   1acbc:	e0bffd17 	ldw	r2,-12(fp)
   1acc0:	10803217 	ldw	r2,200(r2)
   1acc4:	100d883a 	mov	r6,r2
   1acc8:	200b883a 	mov	r5,r4
   1accc:	1809883a 	mov	r4,r3
   1acd0:	001b9bc0 	call	1b9bc <epcs_sector_erase>
  }
  return ret_code;
   1acd4:	e0bffc17 	ldw	r2,-16(fp)
}
   1acd8:	e037883a 	mov	sp,fp
   1acdc:	dfc00117 	ldw	ra,4(sp)
   1ace0:	df000017 	ldw	fp,0(sp)
   1ace4:	dec00204 	addi	sp,sp,8
   1ace8:	f800283a 	ret

0001acec <alt_epcs_flash_write_block>:
 * function type compatibility.
 */
int alt_epcs_flash_write_block(alt_flash_dev* flash_info, int block_offset,
                                      int data_offset, const void* data,
                                      int length)
{
   1acec:	defff404 	addi	sp,sp,-48
   1acf0:	dfc00b15 	stw	ra,44(sp)
   1acf4:	df000a15 	stw	fp,40(sp)
   1acf8:	df000a04 	addi	fp,sp,40
   1acfc:	e13ffc15 	stw	r4,-16(fp)
   1ad00:	e17ffd15 	stw	r5,-12(fp)
   1ad04:	e1bffe15 	stw	r6,-8(fp)
   1ad08:	e1ffff15 	stw	r7,-4(fp)
  int ret_code;
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;
   1ad0c:	e0bffc17 	ldw	r2,-16(fp)
   1ad10:	e0bff815 	stw	r2,-32(fp)

  int buffer_offset = 0;
   1ad14:	e03ff715 	stw	zero,-36(fp)
  int length_of_current_write;
  ret_code = alt_epcs_test_address(flash_info, data_offset);
   1ad18:	e17ffe17 	ldw	r5,-8(fp)
   1ad1c:	e13ffc17 	ldw	r4,-16(fp)
   1ad20:	001abe00 	call	1abe0 <alt_epcs_test_address>
   1ad24:	e0bff915 	stw	r2,-28(fp)

  if (ret_code >= 0)
   1ad28:	e0bff917 	ldw	r2,-28(fp)
   1ad2c:	10002916 	blt	r2,zero,1add4 <alt_epcs_flash_write_block+0xe8>
  {

    /* "Block" writes must be broken up into the page writes that
     * the device understands.  Partial page writes are allowed.
     */
    while (length)
   1ad30:	00002606 	br	1adcc <alt_epcs_flash_write_block+0xe0>
    {
      int next_page_start = (data_offset + f->page_size) & ~(f->page_size - 1);
   1ad34:	e0bff817 	ldw	r2,-32(fp)
   1ad38:	10c03117 	ldw	r3,196(r2)
   1ad3c:	e0bffe17 	ldw	r2,-8(fp)
   1ad40:	1887883a 	add	r3,r3,r2
   1ad44:	e0bff817 	ldw	r2,-32(fp)
   1ad48:	10803117 	ldw	r2,196(r2)
   1ad4c:	0085c83a 	sub	r2,zero,r2
   1ad50:	1884703a 	and	r2,r3,r2
   1ad54:	e0bffa15 	stw	r2,-24(fp)
      length_of_current_write = MIN(length, next_page_start - data_offset);
   1ad58:	e0fffa17 	ldw	r3,-24(fp)
   1ad5c:	e0bffe17 	ldw	r2,-8(fp)
   1ad60:	1885c83a 	sub	r2,r3,r2
   1ad64:	e0c00217 	ldw	r3,8(fp)
   1ad68:	1880010e 	bge	r3,r2,1ad70 <alt_epcs_flash_write_block+0x84>
   1ad6c:	1805883a 	mov	r2,r3
   1ad70:	e0bffb15 	stw	r2,-20(fp)

      epcs_write_buffer(f->register_base, data_offset, &((const alt_u8*)data)[buffer_offset], length_of_current_write,
   1ad74:	e0bff817 	ldw	r2,-32(fp)
   1ad78:	11002e17 	ldw	r4,184(r2)
   1ad7c:	e0bff717 	ldw	r2,-36(fp)
   1ad80:	e0ffff17 	ldw	r3,-4(fp)
   1ad84:	1887883a 	add	r3,r3,r2
   1ad88:	e0bff817 	ldw	r2,-32(fp)
   1ad8c:	10803217 	ldw	r2,200(r2)
   1ad90:	d8800015 	stw	r2,0(sp)
   1ad94:	e1fffb17 	ldw	r7,-20(fp)
   1ad98:	180d883a 	mov	r6,r3
   1ad9c:	e17ffe17 	ldw	r5,-8(fp)
   1ada0:	001bc6c0 	call	1bc6c <epcs_write_buffer>
          f->four_bytes_mode);

      length -= length_of_current_write;
   1ada4:	e0c00217 	ldw	r3,8(fp)
   1ada8:	e0bffb17 	ldw	r2,-20(fp)
   1adac:	1885c83a 	sub	r2,r3,r2
   1adb0:	e0800215 	stw	r2,8(fp)
      buffer_offset += length_of_current_write;
   1adb4:	e0fff717 	ldw	r3,-36(fp)
   1adb8:	e0bffb17 	ldw	r2,-20(fp)
   1adbc:	1885883a 	add	r2,r3,r2
   1adc0:	e0bff715 	stw	r2,-36(fp)
      data_offset = next_page_start;
   1adc4:	e0bffa17 	ldw	r2,-24(fp)
   1adc8:	e0bffe15 	stw	r2,-8(fp)
  {

    /* "Block" writes must be broken up into the page writes that
     * the device understands.  Partial page writes are allowed.
     */
    while (length)
   1adcc:	e0800217 	ldw	r2,8(fp)
   1add0:	103fd81e 	bne	r2,zero,1ad34 <__alt_mem_epcs_flash_controller_0+0xff819d34>
      length -= length_of_current_write;
      buffer_offset += length_of_current_write;
      data_offset = next_page_start;
    }
  }
  return ret_code;
   1add4:	e0bff917 	ldw	r2,-28(fp)
}
   1add8:	e037883a 	mov	sp,fp
   1addc:	dfc00117 	ldw	ra,4(sp)
   1ade0:	df000017 	ldw	fp,0(sp)
   1ade4:	dec00204 	addi	sp,sp,8
   1ade8:	f800283a 	ret

0001adec <alt_epcs_flash_read>:
 *  to the beginning.  Reads that start beyond the end of the memory are
 *  flagged as errors with EIO (is there a better error code?).
 */
int alt_epcs_flash_read(alt_flash_dev* flash_info, int offset,
                        void* dest_addr, int length)
{
   1adec:	defff704 	addi	sp,sp,-36
   1adf0:	dfc00815 	stw	ra,32(sp)
   1adf4:	df000715 	stw	fp,28(sp)
   1adf8:	df000704 	addi	fp,sp,28
   1adfc:	e13ffc15 	stw	r4,-16(fp)
   1ae00:	e17ffd15 	stw	r5,-12(fp)
   1ae04:	e1bffe15 	stw	r6,-8(fp)
   1ae08:	e1ffff15 	stw	r7,-4(fp)
  int ret_code = 0;
   1ae0c:	e03ffa15 	stw	zero,-24(fp)

  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;
   1ae10:	e0bffc17 	ldw	r2,-16(fp)
   1ae14:	e0bffb15 	stw	r2,-20(fp)

  ret_code = alt_epcs_test_address(flash_info, offset);
   1ae18:	e17ffd17 	ldw	r5,-12(fp)
   1ae1c:	e13ffc17 	ldw	r4,-16(fp)
   1ae20:	001abe00 	call	1abe0 <alt_epcs_test_address>
   1ae24:	e0bffa15 	stw	r2,-24(fp)

  if (ret_code >= 0)
   1ae28:	e0bffa17 	ldw	r2,-24(fp)
   1ae2c:	10000f16 	blt	r2,zero,1ae6c <alt_epcs_flash_read+0x80>
  {
    ret_code = epcs_read_buffer(f->register_base, offset, dest_addr, length,
   1ae30:	e0bffb17 	ldw	r2,-20(fp)
   1ae34:	10c02e17 	ldw	r3,184(r2)
   1ae38:	e0bffb17 	ldw	r2,-20(fp)
   1ae3c:	10803217 	ldw	r2,200(r2)
   1ae40:	d8800015 	stw	r2,0(sp)
   1ae44:	e1ffff17 	ldw	r7,-4(fp)
   1ae48:	e1bffe17 	ldw	r6,-8(fp)
   1ae4c:	e17ffd17 	ldw	r5,-12(fp)
   1ae50:	1809883a 	mov	r4,r3
   1ae54:	001bab80 	call	1bab8 <epcs_read_buffer>
   1ae58:	e0bffa15 	stw	r2,-24(fp)
                                f->four_bytes_mode);

    /* epcs_read_buffer returns the number of buffers read, but
     * alt_epcs_flash_read returns 0 on success, <0 on failure.
     */
    if (ret_code == length)
   1ae5c:	e0fffa17 	ldw	r3,-24(fp)
   1ae60:	e0bfff17 	ldw	r2,-4(fp)
   1ae64:	1880011e 	bne	r3,r2,1ae6c <alt_epcs_flash_read+0x80>
    {
      ret_code = 0;
   1ae68:	e03ffa15 	stw	zero,-24(fp)
    }
  }
  return ret_code;
   1ae6c:	e0bffa17 	ldw	r2,-24(fp)
}
   1ae70:	e037883a 	mov	sp,fp
   1ae74:	dfc00117 	ldw	ra,4(sp)
   1ae78:	df000017 	ldw	fp,0(sp)
   1ae7c:	dec00204 	addi	sp,sp,8
   1ae80:	f800283a 	ret

0001ae84 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   1ae84:	defffa04 	addi	sp,sp,-24
   1ae88:	dfc00515 	stw	ra,20(sp)
   1ae8c:	df000415 	stw	fp,16(sp)
   1ae90:	df000404 	addi	fp,sp,16
   1ae94:	e13ffd15 	stw	r4,-12(fp)
   1ae98:	e17ffe15 	stw	r5,-8(fp)
   1ae9c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   1aea0:	e0bffd17 	ldw	r2,-12(fp)
   1aea4:	10800017 	ldw	r2,0(r2)
   1aea8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   1aeac:	e0bffc17 	ldw	r2,-16(fp)
   1aeb0:	10c00a04 	addi	r3,r2,40
   1aeb4:	e0bffd17 	ldw	r2,-12(fp)
   1aeb8:	10800217 	ldw	r2,8(r2)
   1aebc:	100f883a 	mov	r7,r2
   1aec0:	e1bfff17 	ldw	r6,-4(fp)
   1aec4:	e17ffe17 	ldw	r5,-8(fp)
   1aec8:	1809883a 	mov	r4,r3
   1aecc:	001b4ac0 	call	1b4ac <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   1aed0:	e037883a 	mov	sp,fp
   1aed4:	dfc00117 	ldw	ra,4(sp)
   1aed8:	df000017 	ldw	fp,0(sp)
   1aedc:	dec00204 	addi	sp,sp,8
   1aee0:	f800283a 	ret

0001aee4 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   1aee4:	defffa04 	addi	sp,sp,-24
   1aee8:	dfc00515 	stw	ra,20(sp)
   1aeec:	df000415 	stw	fp,16(sp)
   1aef0:	df000404 	addi	fp,sp,16
   1aef4:	e13ffd15 	stw	r4,-12(fp)
   1aef8:	e17ffe15 	stw	r5,-8(fp)
   1aefc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   1af00:	e0bffd17 	ldw	r2,-12(fp)
   1af04:	10800017 	ldw	r2,0(r2)
   1af08:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   1af0c:	e0bffc17 	ldw	r2,-16(fp)
   1af10:	10c00a04 	addi	r3,r2,40
   1af14:	e0bffd17 	ldw	r2,-12(fp)
   1af18:	10800217 	ldw	r2,8(r2)
   1af1c:	100f883a 	mov	r7,r2
   1af20:	e1bfff17 	ldw	r6,-4(fp)
   1af24:	e17ffe17 	ldw	r5,-8(fp)
   1af28:	1809883a 	mov	r4,r3
   1af2c:	001b6c80 	call	1b6c8 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   1af30:	e037883a 	mov	sp,fp
   1af34:	dfc00117 	ldw	ra,4(sp)
   1af38:	df000017 	ldw	fp,0(sp)
   1af3c:	dec00204 	addi	sp,sp,8
   1af40:	f800283a 	ret

0001af44 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   1af44:	defffc04 	addi	sp,sp,-16
   1af48:	dfc00315 	stw	ra,12(sp)
   1af4c:	df000215 	stw	fp,8(sp)
   1af50:	df000204 	addi	fp,sp,8
   1af54:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   1af58:	e0bfff17 	ldw	r2,-4(fp)
   1af5c:	10800017 	ldw	r2,0(r2)
   1af60:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   1af64:	e0bffe17 	ldw	r2,-8(fp)
   1af68:	10c00a04 	addi	r3,r2,40
   1af6c:	e0bfff17 	ldw	r2,-4(fp)
   1af70:	10800217 	ldw	r2,8(r2)
   1af74:	100b883a 	mov	r5,r2
   1af78:	1809883a 	mov	r4,r3
   1af7c:	001b3540 	call	1b354 <altera_avalon_jtag_uart_close>
}
   1af80:	e037883a 	mov	sp,fp
   1af84:	dfc00117 	ldw	ra,4(sp)
   1af88:	df000017 	ldw	fp,0(sp)
   1af8c:	dec00204 	addi	sp,sp,8
   1af90:	f800283a 	ret

0001af94 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   1af94:	defffa04 	addi	sp,sp,-24
   1af98:	dfc00515 	stw	ra,20(sp)
   1af9c:	df000415 	stw	fp,16(sp)
   1afa0:	df000404 	addi	fp,sp,16
   1afa4:	e13ffd15 	stw	r4,-12(fp)
   1afa8:	e17ffe15 	stw	r5,-8(fp)
   1afac:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   1afb0:	e0bffd17 	ldw	r2,-12(fp)
   1afb4:	10800017 	ldw	r2,0(r2)
   1afb8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   1afbc:	e0bffc17 	ldw	r2,-16(fp)
   1afc0:	10800a04 	addi	r2,r2,40
   1afc4:	e1bfff17 	ldw	r6,-4(fp)
   1afc8:	e17ffe17 	ldw	r5,-8(fp)
   1afcc:	1009883a 	mov	r4,r2
   1afd0:	001b3bc0 	call	1b3bc <altera_avalon_jtag_uart_ioctl>
}
   1afd4:	e037883a 	mov	sp,fp
   1afd8:	dfc00117 	ldw	ra,4(sp)
   1afdc:	df000017 	ldw	fp,0(sp)
   1afe0:	dec00204 	addi	sp,sp,8
   1afe4:	f800283a 	ret

0001afe8 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   1afe8:	defffa04 	addi	sp,sp,-24
   1afec:	dfc00515 	stw	ra,20(sp)
   1aff0:	df000415 	stw	fp,16(sp)
   1aff4:	df000404 	addi	fp,sp,16
   1aff8:	e13ffd15 	stw	r4,-12(fp)
   1affc:	e17ffe15 	stw	r5,-8(fp)
   1b000:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   1b004:	e0bffd17 	ldw	r2,-12(fp)
   1b008:	00c00044 	movi	r3,1
   1b00c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   1b010:	e0bffd17 	ldw	r2,-12(fp)
   1b014:	10800017 	ldw	r2,0(r2)
   1b018:	10800104 	addi	r2,r2,4
   1b01c:	1007883a 	mov	r3,r2
   1b020:	e0bffd17 	ldw	r2,-12(fp)
   1b024:	10800817 	ldw	r2,32(r2)
   1b028:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   1b02c:	e0bffe17 	ldw	r2,-8(fp)
   1b030:	e0ffff17 	ldw	r3,-4(fp)
   1b034:	d8000015 	stw	zero,0(sp)
   1b038:	e1fffd17 	ldw	r7,-12(fp)
   1b03c:	018000b4 	movhi	r6,2
   1b040:	31ac2a04 	addi	r6,r6,-20312
   1b044:	180b883a 	mov	r5,r3
   1b048:	1009883a 	mov	r4,r2
   1b04c:	001c2c40 	call	1c2c4 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   1b050:	e0bffd17 	ldw	r2,-12(fp)
   1b054:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   1b058:	e0bffd17 	ldw	r2,-12(fp)
   1b05c:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   1b060:	d0e71317 	ldw	r3,-25524(gp)
   1b064:	e1fffd17 	ldw	r7,-12(fp)
   1b068:	018000b4 	movhi	r6,2
   1b06c:	31acad04 	addi	r6,r6,-19788
   1b070:	180b883a 	mov	r5,r3
   1b074:	1009883a 	mov	r4,r2
   1b078:	001bf280 	call	1bf28 <alt_alarm_start>
   1b07c:	1000040e 	bge	r2,zero,1b090 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   1b080:	e0fffd17 	ldw	r3,-12(fp)
   1b084:	00a00034 	movhi	r2,32768
   1b088:	10bfffc4 	addi	r2,r2,-1
   1b08c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   1b090:	0001883a 	nop
   1b094:	e037883a 	mov	sp,fp
   1b098:	dfc00117 	ldw	ra,4(sp)
   1b09c:	df000017 	ldw	fp,0(sp)
   1b0a0:	dec00204 	addi	sp,sp,8
   1b0a4:	f800283a 	ret

0001b0a8 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   1b0a8:	defff804 	addi	sp,sp,-32
   1b0ac:	df000715 	stw	fp,28(sp)
   1b0b0:	df000704 	addi	fp,sp,28
   1b0b4:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   1b0b8:	e0bfff17 	ldw	r2,-4(fp)
   1b0bc:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   1b0c0:	e0bffb17 	ldw	r2,-20(fp)
   1b0c4:	10800017 	ldw	r2,0(r2)
   1b0c8:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   1b0cc:	e0bffc17 	ldw	r2,-16(fp)
   1b0d0:	10800104 	addi	r2,r2,4
   1b0d4:	10800037 	ldwio	r2,0(r2)
   1b0d8:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   1b0dc:	e0bffd17 	ldw	r2,-12(fp)
   1b0e0:	1080c00c 	andi	r2,r2,768
   1b0e4:	10006d26 	beq	r2,zero,1b29c <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   1b0e8:	e0bffd17 	ldw	r2,-12(fp)
   1b0ec:	1080400c 	andi	r2,r2,256
   1b0f0:	10003526 	beq	r2,zero,1b1c8 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   1b0f4:	00800074 	movhi	r2,1
   1b0f8:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   1b0fc:	e0bffb17 	ldw	r2,-20(fp)
   1b100:	10800a17 	ldw	r2,40(r2)
   1b104:	10800044 	addi	r2,r2,1
   1b108:	1081ffcc 	andi	r2,r2,2047
   1b10c:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   1b110:	e0bffb17 	ldw	r2,-20(fp)
   1b114:	10c00b17 	ldw	r3,44(r2)
   1b118:	e0bffe17 	ldw	r2,-8(fp)
   1b11c:	18801526 	beq	r3,r2,1b174 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   1b120:	e0bffc17 	ldw	r2,-16(fp)
   1b124:	10800037 	ldwio	r2,0(r2)
   1b128:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   1b12c:	e0bff917 	ldw	r2,-28(fp)
   1b130:	10a0000c 	andi	r2,r2,32768
   1b134:	10001126 	beq	r2,zero,1b17c <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   1b138:	e0bffb17 	ldw	r2,-20(fp)
   1b13c:	10800a17 	ldw	r2,40(r2)
   1b140:	e0fff917 	ldw	r3,-28(fp)
   1b144:	1809883a 	mov	r4,r3
   1b148:	e0fffb17 	ldw	r3,-20(fp)
   1b14c:	1885883a 	add	r2,r3,r2
   1b150:	10800e04 	addi	r2,r2,56
   1b154:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   1b158:	e0bffb17 	ldw	r2,-20(fp)
   1b15c:	10800a17 	ldw	r2,40(r2)
   1b160:	10800044 	addi	r2,r2,1
   1b164:	10c1ffcc 	andi	r3,r2,2047
   1b168:	e0bffb17 	ldw	r2,-20(fp)
   1b16c:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   1b170:	003fe206 	br	1b0fc <__alt_mem_epcs_flash_controller_0+0xff81a0fc>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   1b174:	0001883a 	nop
   1b178:	00000106 	br	1b180 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   1b17c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   1b180:	e0bff917 	ldw	r2,-28(fp)
   1b184:	10bfffec 	andhi	r2,r2,65535
   1b188:	10000f26 	beq	r2,zero,1b1c8 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   1b18c:	e0bffb17 	ldw	r2,-20(fp)
   1b190:	10c00817 	ldw	r3,32(r2)
   1b194:	00bfff84 	movi	r2,-2
   1b198:	1886703a 	and	r3,r3,r2
   1b19c:	e0bffb17 	ldw	r2,-20(fp)
   1b1a0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   1b1a4:	e0bffc17 	ldw	r2,-16(fp)
   1b1a8:	10800104 	addi	r2,r2,4
   1b1ac:	1007883a 	mov	r3,r2
   1b1b0:	e0bffb17 	ldw	r2,-20(fp)
   1b1b4:	10800817 	ldw	r2,32(r2)
   1b1b8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   1b1bc:	e0bffc17 	ldw	r2,-16(fp)
   1b1c0:	10800104 	addi	r2,r2,4
   1b1c4:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   1b1c8:	e0bffd17 	ldw	r2,-12(fp)
   1b1cc:	1080800c 	andi	r2,r2,512
   1b1d0:	103fbe26 	beq	r2,zero,1b0cc <__alt_mem_epcs_flash_controller_0+0xff81a0cc>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   1b1d4:	e0bffd17 	ldw	r2,-12(fp)
   1b1d8:	1004d43a 	srli	r2,r2,16
   1b1dc:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   1b1e0:	00001406 	br	1b234 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   1b1e4:	e0bffc17 	ldw	r2,-16(fp)
   1b1e8:	e0fffb17 	ldw	r3,-20(fp)
   1b1ec:	18c00d17 	ldw	r3,52(r3)
   1b1f0:	e13ffb17 	ldw	r4,-20(fp)
   1b1f4:	20c7883a 	add	r3,r4,r3
   1b1f8:	18c20e04 	addi	r3,r3,2104
   1b1fc:	18c00003 	ldbu	r3,0(r3)
   1b200:	18c03fcc 	andi	r3,r3,255
   1b204:	18c0201c 	xori	r3,r3,128
   1b208:	18ffe004 	addi	r3,r3,-128
   1b20c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   1b210:	e0bffb17 	ldw	r2,-20(fp)
   1b214:	10800d17 	ldw	r2,52(r2)
   1b218:	10800044 	addi	r2,r2,1
   1b21c:	10c1ffcc 	andi	r3,r2,2047
   1b220:	e0bffb17 	ldw	r2,-20(fp)
   1b224:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   1b228:	e0bffa17 	ldw	r2,-24(fp)
   1b22c:	10bfffc4 	addi	r2,r2,-1
   1b230:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   1b234:	e0bffa17 	ldw	r2,-24(fp)
   1b238:	10000526 	beq	r2,zero,1b250 <altera_avalon_jtag_uart_irq+0x1a8>
   1b23c:	e0bffb17 	ldw	r2,-20(fp)
   1b240:	10c00d17 	ldw	r3,52(r2)
   1b244:	e0bffb17 	ldw	r2,-20(fp)
   1b248:	10800c17 	ldw	r2,48(r2)
   1b24c:	18bfe51e 	bne	r3,r2,1b1e4 <__alt_mem_epcs_flash_controller_0+0xff81a1e4>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   1b250:	e0bffa17 	ldw	r2,-24(fp)
   1b254:	103f9d26 	beq	r2,zero,1b0cc <__alt_mem_epcs_flash_controller_0+0xff81a0cc>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   1b258:	e0bffb17 	ldw	r2,-20(fp)
   1b25c:	10c00817 	ldw	r3,32(r2)
   1b260:	00bfff44 	movi	r2,-3
   1b264:	1886703a 	and	r3,r3,r2
   1b268:	e0bffb17 	ldw	r2,-20(fp)
   1b26c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   1b270:	e0bffb17 	ldw	r2,-20(fp)
   1b274:	10800017 	ldw	r2,0(r2)
   1b278:	10800104 	addi	r2,r2,4
   1b27c:	1007883a 	mov	r3,r2
   1b280:	e0bffb17 	ldw	r2,-20(fp)
   1b284:	10800817 	ldw	r2,32(r2)
   1b288:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   1b28c:	e0bffc17 	ldw	r2,-16(fp)
   1b290:	10800104 	addi	r2,r2,4
   1b294:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   1b298:	003f8c06 	br	1b0cc <__alt_mem_epcs_flash_controller_0+0xff81a0cc>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   1b29c:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   1b2a0:	0001883a 	nop
   1b2a4:	e037883a 	mov	sp,fp
   1b2a8:	df000017 	ldw	fp,0(sp)
   1b2ac:	dec00104 	addi	sp,sp,4
   1b2b0:	f800283a 	ret

0001b2b4 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   1b2b4:	defff804 	addi	sp,sp,-32
   1b2b8:	df000715 	stw	fp,28(sp)
   1b2bc:	df000704 	addi	fp,sp,28
   1b2c0:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   1b2c4:	e0bffb17 	ldw	r2,-20(fp)
   1b2c8:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   1b2cc:	e0bff917 	ldw	r2,-28(fp)
   1b2d0:	10800017 	ldw	r2,0(r2)
   1b2d4:	10800104 	addi	r2,r2,4
   1b2d8:	10800037 	ldwio	r2,0(r2)
   1b2dc:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   1b2e0:	e0bffa17 	ldw	r2,-24(fp)
   1b2e4:	1081000c 	andi	r2,r2,1024
   1b2e8:	10000b26 	beq	r2,zero,1b318 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   1b2ec:	e0bff917 	ldw	r2,-28(fp)
   1b2f0:	10800017 	ldw	r2,0(r2)
   1b2f4:	10800104 	addi	r2,r2,4
   1b2f8:	1007883a 	mov	r3,r2
   1b2fc:	e0bff917 	ldw	r2,-28(fp)
   1b300:	10800817 	ldw	r2,32(r2)
   1b304:	10810014 	ori	r2,r2,1024
   1b308:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   1b30c:	e0bff917 	ldw	r2,-28(fp)
   1b310:	10000915 	stw	zero,36(r2)
   1b314:	00000a06 	br	1b340 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   1b318:	e0bff917 	ldw	r2,-28(fp)
   1b31c:	10c00917 	ldw	r3,36(r2)
   1b320:	00a00034 	movhi	r2,32768
   1b324:	10bfff04 	addi	r2,r2,-4
   1b328:	10c00536 	bltu	r2,r3,1b340 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   1b32c:	e0bff917 	ldw	r2,-28(fp)
   1b330:	10800917 	ldw	r2,36(r2)
   1b334:	10c00044 	addi	r3,r2,1
   1b338:	e0bff917 	ldw	r2,-28(fp)
   1b33c:	10c00915 	stw	r3,36(r2)
   1b340:	d0a71317 	ldw	r2,-25524(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   1b344:	e037883a 	mov	sp,fp
   1b348:	df000017 	ldw	fp,0(sp)
   1b34c:	dec00104 	addi	sp,sp,4
   1b350:	f800283a 	ret

0001b354 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   1b354:	defffd04 	addi	sp,sp,-12
   1b358:	df000215 	stw	fp,8(sp)
   1b35c:	df000204 	addi	fp,sp,8
   1b360:	e13ffe15 	stw	r4,-8(fp)
   1b364:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   1b368:	00000506 	br	1b380 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   1b36c:	e0bfff17 	ldw	r2,-4(fp)
   1b370:	1090000c 	andi	r2,r2,16384
   1b374:	10000226 	beq	r2,zero,1b380 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   1b378:	00bffd44 	movi	r2,-11
   1b37c:	00000b06 	br	1b3ac <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   1b380:	e0bffe17 	ldw	r2,-8(fp)
   1b384:	10c00d17 	ldw	r3,52(r2)
   1b388:	e0bffe17 	ldw	r2,-8(fp)
   1b38c:	10800c17 	ldw	r2,48(r2)
   1b390:	18800526 	beq	r3,r2,1b3a8 <altera_avalon_jtag_uart_close+0x54>
   1b394:	e0bffe17 	ldw	r2,-8(fp)
   1b398:	10c00917 	ldw	r3,36(r2)
   1b39c:	e0bffe17 	ldw	r2,-8(fp)
   1b3a0:	10800117 	ldw	r2,4(r2)
   1b3a4:	18bff136 	bltu	r3,r2,1b36c <__alt_mem_epcs_flash_controller_0+0xff81a36c>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   1b3a8:	0005883a 	mov	r2,zero
}
   1b3ac:	e037883a 	mov	sp,fp
   1b3b0:	df000017 	ldw	fp,0(sp)
   1b3b4:	dec00104 	addi	sp,sp,4
   1b3b8:	f800283a 	ret

0001b3bc <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   1b3bc:	defffa04 	addi	sp,sp,-24
   1b3c0:	df000515 	stw	fp,20(sp)
   1b3c4:	df000504 	addi	fp,sp,20
   1b3c8:	e13ffd15 	stw	r4,-12(fp)
   1b3cc:	e17ffe15 	stw	r5,-8(fp)
   1b3d0:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   1b3d4:	00bff9c4 	movi	r2,-25
   1b3d8:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   1b3dc:	e0bffe17 	ldw	r2,-8(fp)
   1b3e0:	10da8060 	cmpeqi	r3,r2,27137
   1b3e4:	1800031e 	bne	r3,zero,1b3f4 <altera_avalon_jtag_uart_ioctl+0x38>
   1b3e8:	109a80a0 	cmpeqi	r2,r2,27138
   1b3ec:	1000181e 	bne	r2,zero,1b450 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   1b3f0:	00002906 	br	1b498 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   1b3f4:	e0bffd17 	ldw	r2,-12(fp)
   1b3f8:	10c00117 	ldw	r3,4(r2)
   1b3fc:	00a00034 	movhi	r2,32768
   1b400:	10bfffc4 	addi	r2,r2,-1
   1b404:	18802126 	beq	r3,r2,1b48c <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   1b408:	e0bfff17 	ldw	r2,-4(fp)
   1b40c:	10800017 	ldw	r2,0(r2)
   1b410:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   1b414:	e0bffc17 	ldw	r2,-16(fp)
   1b418:	10800090 	cmplti	r2,r2,2
   1b41c:	1000061e 	bne	r2,zero,1b438 <altera_avalon_jtag_uart_ioctl+0x7c>
   1b420:	e0fffc17 	ldw	r3,-16(fp)
   1b424:	00a00034 	movhi	r2,32768
   1b428:	10bfffc4 	addi	r2,r2,-1
   1b42c:	18800226 	beq	r3,r2,1b438 <altera_avalon_jtag_uart_ioctl+0x7c>
   1b430:	e0bffc17 	ldw	r2,-16(fp)
   1b434:	00000206 	br	1b440 <altera_avalon_jtag_uart_ioctl+0x84>
   1b438:	00a00034 	movhi	r2,32768
   1b43c:	10bfff84 	addi	r2,r2,-2
   1b440:	e0fffd17 	ldw	r3,-12(fp)
   1b444:	18800115 	stw	r2,4(r3)
      rc = 0;
   1b448:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   1b44c:	00000f06 	br	1b48c <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   1b450:	e0bffd17 	ldw	r2,-12(fp)
   1b454:	10c00117 	ldw	r3,4(r2)
   1b458:	00a00034 	movhi	r2,32768
   1b45c:	10bfffc4 	addi	r2,r2,-1
   1b460:	18800c26 	beq	r3,r2,1b494 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   1b464:	e0bffd17 	ldw	r2,-12(fp)
   1b468:	10c00917 	ldw	r3,36(r2)
   1b46c:	e0bffd17 	ldw	r2,-12(fp)
   1b470:	10800117 	ldw	r2,4(r2)
   1b474:	1885803a 	cmpltu	r2,r3,r2
   1b478:	10c03fcc 	andi	r3,r2,255
   1b47c:	e0bfff17 	ldw	r2,-4(fp)
   1b480:	10c00015 	stw	r3,0(r2)
      rc = 0;
   1b484:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   1b488:	00000206 	br	1b494 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   1b48c:	0001883a 	nop
   1b490:	00000106 	br	1b498 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   1b494:	0001883a 	nop

  default:
    break;
  }

  return rc;
   1b498:	e0bffb17 	ldw	r2,-20(fp)
}
   1b49c:	e037883a 	mov	sp,fp
   1b4a0:	df000017 	ldw	fp,0(sp)
   1b4a4:	dec00104 	addi	sp,sp,4
   1b4a8:	f800283a 	ret

0001b4ac <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   1b4ac:	defff304 	addi	sp,sp,-52
   1b4b0:	dfc00c15 	stw	ra,48(sp)
   1b4b4:	df000b15 	stw	fp,44(sp)
   1b4b8:	df000b04 	addi	fp,sp,44
   1b4bc:	e13ffc15 	stw	r4,-16(fp)
   1b4c0:	e17ffd15 	stw	r5,-12(fp)
   1b4c4:	e1bffe15 	stw	r6,-8(fp)
   1b4c8:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   1b4cc:	e0bffd17 	ldw	r2,-12(fp)
   1b4d0:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   1b4d4:	00004706 	br	1b5f4 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   1b4d8:	e0bffc17 	ldw	r2,-16(fp)
   1b4dc:	10800a17 	ldw	r2,40(r2)
   1b4e0:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   1b4e4:	e0bffc17 	ldw	r2,-16(fp)
   1b4e8:	10800b17 	ldw	r2,44(r2)
   1b4ec:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   1b4f0:	e0fff717 	ldw	r3,-36(fp)
   1b4f4:	e0bff817 	ldw	r2,-32(fp)
   1b4f8:	18800536 	bltu	r3,r2,1b510 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   1b4fc:	e0fff717 	ldw	r3,-36(fp)
   1b500:	e0bff817 	ldw	r2,-32(fp)
   1b504:	1885c83a 	sub	r2,r3,r2
   1b508:	e0bff615 	stw	r2,-40(fp)
   1b50c:	00000406 	br	1b520 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   1b510:	00c20004 	movi	r3,2048
   1b514:	e0bff817 	ldw	r2,-32(fp)
   1b518:	1885c83a 	sub	r2,r3,r2
   1b51c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   1b520:	e0bff617 	ldw	r2,-40(fp)
   1b524:	10001e26 	beq	r2,zero,1b5a0 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   1b528:	e0fffe17 	ldw	r3,-8(fp)
   1b52c:	e0bff617 	ldw	r2,-40(fp)
   1b530:	1880022e 	bgeu	r3,r2,1b53c <altera_avalon_jtag_uart_read+0x90>
        n = space;
   1b534:	e0bffe17 	ldw	r2,-8(fp)
   1b538:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   1b53c:	e0bffc17 	ldw	r2,-16(fp)
   1b540:	10c00e04 	addi	r3,r2,56
   1b544:	e0bff817 	ldw	r2,-32(fp)
   1b548:	1885883a 	add	r2,r3,r2
   1b54c:	e1bff617 	ldw	r6,-40(fp)
   1b550:	100b883a 	mov	r5,r2
   1b554:	e13ff517 	ldw	r4,-44(fp)
   1b558:	0002e140 	call	2e14 <memcpy>
      ptr   += n;
   1b55c:	e0fff517 	ldw	r3,-44(fp)
   1b560:	e0bff617 	ldw	r2,-40(fp)
   1b564:	1885883a 	add	r2,r3,r2
   1b568:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   1b56c:	e0fffe17 	ldw	r3,-8(fp)
   1b570:	e0bff617 	ldw	r2,-40(fp)
   1b574:	1885c83a 	sub	r2,r3,r2
   1b578:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   1b57c:	e0fff817 	ldw	r3,-32(fp)
   1b580:	e0bff617 	ldw	r2,-40(fp)
   1b584:	1885883a 	add	r2,r3,r2
   1b588:	10c1ffcc 	andi	r3,r2,2047
   1b58c:	e0bffc17 	ldw	r2,-16(fp)
   1b590:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   1b594:	e0bffe17 	ldw	r2,-8(fp)
   1b598:	00bfcf16 	blt	zero,r2,1b4d8 <__alt_mem_epcs_flash_controller_0+0xff81a4d8>
   1b59c:	00000106 	br	1b5a4 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   1b5a0:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   1b5a4:	e0fff517 	ldw	r3,-44(fp)
   1b5a8:	e0bffd17 	ldw	r2,-12(fp)
   1b5ac:	1880141e 	bne	r3,r2,1b600 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   1b5b0:	e0bfff17 	ldw	r2,-4(fp)
   1b5b4:	1090000c 	andi	r2,r2,16384
   1b5b8:	1000131e 	bne	r2,zero,1b608 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   1b5bc:	0001883a 	nop
   1b5c0:	e0bffc17 	ldw	r2,-16(fp)
   1b5c4:	10c00a17 	ldw	r3,40(r2)
   1b5c8:	e0bff717 	ldw	r2,-36(fp)
   1b5cc:	1880051e 	bne	r3,r2,1b5e4 <altera_avalon_jtag_uart_read+0x138>
   1b5d0:	e0bffc17 	ldw	r2,-16(fp)
   1b5d4:	10c00917 	ldw	r3,36(r2)
   1b5d8:	e0bffc17 	ldw	r2,-16(fp)
   1b5dc:	10800117 	ldw	r2,4(r2)
   1b5e0:	18bff736 	bltu	r3,r2,1b5c0 <__alt_mem_epcs_flash_controller_0+0xff81a5c0>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   1b5e4:	e0bffc17 	ldw	r2,-16(fp)
   1b5e8:	10c00a17 	ldw	r3,40(r2)
   1b5ec:	e0bff717 	ldw	r2,-36(fp)
   1b5f0:	18800726 	beq	r3,r2,1b610 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   1b5f4:	e0bffe17 	ldw	r2,-8(fp)
   1b5f8:	00bfb716 	blt	zero,r2,1b4d8 <__alt_mem_epcs_flash_controller_0+0xff81a4d8>
   1b5fc:	00000506 	br	1b614 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   1b600:	0001883a 	nop
   1b604:	00000306 	br	1b614 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   1b608:	0001883a 	nop
   1b60c:	00000106 	br	1b614 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   1b610:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   1b614:	e0fff517 	ldw	r3,-44(fp)
   1b618:	e0bffd17 	ldw	r2,-12(fp)
   1b61c:	18801826 	beq	r3,r2,1b680 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1b620:	0005303a 	rdctl	r2,status
   1b624:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1b628:	e0fffb17 	ldw	r3,-20(fp)
   1b62c:	00bfff84 	movi	r2,-2
   1b630:	1884703a 	and	r2,r3,r2
   1b634:	1001703a 	wrctl	status,r2
  
  return context;
   1b638:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   1b63c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   1b640:	e0bffc17 	ldw	r2,-16(fp)
   1b644:	10800817 	ldw	r2,32(r2)
   1b648:	10c00054 	ori	r3,r2,1
   1b64c:	e0bffc17 	ldw	r2,-16(fp)
   1b650:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   1b654:	e0bffc17 	ldw	r2,-16(fp)
   1b658:	10800017 	ldw	r2,0(r2)
   1b65c:	10800104 	addi	r2,r2,4
   1b660:	1007883a 	mov	r3,r2
   1b664:	e0bffc17 	ldw	r2,-16(fp)
   1b668:	10800817 	ldw	r2,32(r2)
   1b66c:	18800035 	stwio	r2,0(r3)
   1b670:	e0bffa17 	ldw	r2,-24(fp)
   1b674:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1b678:	e0bff917 	ldw	r2,-28(fp)
   1b67c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   1b680:	e0fff517 	ldw	r3,-44(fp)
   1b684:	e0bffd17 	ldw	r2,-12(fp)
   1b688:	18800426 	beq	r3,r2,1b69c <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   1b68c:	e0fff517 	ldw	r3,-44(fp)
   1b690:	e0bffd17 	ldw	r2,-12(fp)
   1b694:	1885c83a 	sub	r2,r3,r2
   1b698:	00000606 	br	1b6b4 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   1b69c:	e0bfff17 	ldw	r2,-4(fp)
   1b6a0:	1090000c 	andi	r2,r2,16384
   1b6a4:	10000226 	beq	r2,zero,1b6b0 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   1b6a8:	00bffd44 	movi	r2,-11
   1b6ac:	00000106 	br	1b6b4 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   1b6b0:	00bffec4 	movi	r2,-5
}
   1b6b4:	e037883a 	mov	sp,fp
   1b6b8:	dfc00117 	ldw	ra,4(sp)
   1b6bc:	df000017 	ldw	fp,0(sp)
   1b6c0:	dec00204 	addi	sp,sp,8
   1b6c4:	f800283a 	ret

0001b6c8 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   1b6c8:	defff304 	addi	sp,sp,-52
   1b6cc:	dfc00c15 	stw	ra,48(sp)
   1b6d0:	df000b15 	stw	fp,44(sp)
   1b6d4:	df000b04 	addi	fp,sp,44
   1b6d8:	e13ffc15 	stw	r4,-16(fp)
   1b6dc:	e17ffd15 	stw	r5,-12(fp)
   1b6e0:	e1bffe15 	stw	r6,-8(fp)
   1b6e4:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   1b6e8:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   1b6ec:	e0bffd17 	ldw	r2,-12(fp)
   1b6f0:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   1b6f4:	00003706 	br	1b7d4 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   1b6f8:	e0bffc17 	ldw	r2,-16(fp)
   1b6fc:	10800c17 	ldw	r2,48(r2)
   1b700:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   1b704:	e0bffc17 	ldw	r2,-16(fp)
   1b708:	10800d17 	ldw	r2,52(r2)
   1b70c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   1b710:	e0fff917 	ldw	r3,-28(fp)
   1b714:	e0bff517 	ldw	r2,-44(fp)
   1b718:	1880062e 	bgeu	r3,r2,1b734 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   1b71c:	e0fff517 	ldw	r3,-44(fp)
   1b720:	e0bff917 	ldw	r2,-28(fp)
   1b724:	1885c83a 	sub	r2,r3,r2
   1b728:	10bfffc4 	addi	r2,r2,-1
   1b72c:	e0bff615 	stw	r2,-40(fp)
   1b730:	00000b06 	br	1b760 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   1b734:	e0bff517 	ldw	r2,-44(fp)
   1b738:	10000526 	beq	r2,zero,1b750 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   1b73c:	00c20004 	movi	r3,2048
   1b740:	e0bff917 	ldw	r2,-28(fp)
   1b744:	1885c83a 	sub	r2,r3,r2
   1b748:	e0bff615 	stw	r2,-40(fp)
   1b74c:	00000406 	br	1b760 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   1b750:	00c1ffc4 	movi	r3,2047
   1b754:	e0bff917 	ldw	r2,-28(fp)
   1b758:	1885c83a 	sub	r2,r3,r2
   1b75c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   1b760:	e0bff617 	ldw	r2,-40(fp)
   1b764:	10001e26 	beq	r2,zero,1b7e0 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   1b768:	e0fffe17 	ldw	r3,-8(fp)
   1b76c:	e0bff617 	ldw	r2,-40(fp)
   1b770:	1880022e 	bgeu	r3,r2,1b77c <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   1b774:	e0bffe17 	ldw	r2,-8(fp)
   1b778:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   1b77c:	e0bffc17 	ldw	r2,-16(fp)
   1b780:	10c20e04 	addi	r3,r2,2104
   1b784:	e0bff917 	ldw	r2,-28(fp)
   1b788:	1885883a 	add	r2,r3,r2
   1b78c:	e1bff617 	ldw	r6,-40(fp)
   1b790:	e17ffd17 	ldw	r5,-12(fp)
   1b794:	1009883a 	mov	r4,r2
   1b798:	0002e140 	call	2e14 <memcpy>
      ptr   += n;
   1b79c:	e0fffd17 	ldw	r3,-12(fp)
   1b7a0:	e0bff617 	ldw	r2,-40(fp)
   1b7a4:	1885883a 	add	r2,r3,r2
   1b7a8:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   1b7ac:	e0fffe17 	ldw	r3,-8(fp)
   1b7b0:	e0bff617 	ldw	r2,-40(fp)
   1b7b4:	1885c83a 	sub	r2,r3,r2
   1b7b8:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   1b7bc:	e0fff917 	ldw	r3,-28(fp)
   1b7c0:	e0bff617 	ldw	r2,-40(fp)
   1b7c4:	1885883a 	add	r2,r3,r2
   1b7c8:	10c1ffcc 	andi	r3,r2,2047
   1b7cc:	e0bffc17 	ldw	r2,-16(fp)
   1b7d0:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   1b7d4:	e0bffe17 	ldw	r2,-8(fp)
   1b7d8:	00bfc716 	blt	zero,r2,1b6f8 <__alt_mem_epcs_flash_controller_0+0xff81a6f8>
   1b7dc:	00000106 	br	1b7e4 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   1b7e0:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1b7e4:	0005303a 	rdctl	r2,status
   1b7e8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1b7ec:	e0fffb17 	ldw	r3,-20(fp)
   1b7f0:	00bfff84 	movi	r2,-2
   1b7f4:	1884703a 	and	r2,r3,r2
   1b7f8:	1001703a 	wrctl	status,r2
  
  return context;
   1b7fc:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   1b800:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   1b804:	e0bffc17 	ldw	r2,-16(fp)
   1b808:	10800817 	ldw	r2,32(r2)
   1b80c:	10c00094 	ori	r3,r2,2
   1b810:	e0bffc17 	ldw	r2,-16(fp)
   1b814:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   1b818:	e0bffc17 	ldw	r2,-16(fp)
   1b81c:	10800017 	ldw	r2,0(r2)
   1b820:	10800104 	addi	r2,r2,4
   1b824:	1007883a 	mov	r3,r2
   1b828:	e0bffc17 	ldw	r2,-16(fp)
   1b82c:	10800817 	ldw	r2,32(r2)
   1b830:	18800035 	stwio	r2,0(r3)
   1b834:	e0bffa17 	ldw	r2,-24(fp)
   1b838:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1b83c:	e0bff817 	ldw	r2,-32(fp)
   1b840:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   1b844:	e0bffe17 	ldw	r2,-8(fp)
   1b848:	0080100e 	bge	zero,r2,1b88c <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   1b84c:	e0bfff17 	ldw	r2,-4(fp)
   1b850:	1090000c 	andi	r2,r2,16384
   1b854:	1000101e 	bne	r2,zero,1b898 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   1b858:	0001883a 	nop
   1b85c:	e0bffc17 	ldw	r2,-16(fp)
   1b860:	10c00d17 	ldw	r3,52(r2)
   1b864:	e0bff517 	ldw	r2,-44(fp)
   1b868:	1880051e 	bne	r3,r2,1b880 <altera_avalon_jtag_uart_write+0x1b8>
   1b86c:	e0bffc17 	ldw	r2,-16(fp)
   1b870:	10c00917 	ldw	r3,36(r2)
   1b874:	e0bffc17 	ldw	r2,-16(fp)
   1b878:	10800117 	ldw	r2,4(r2)
   1b87c:	18bff736 	bltu	r3,r2,1b85c <__alt_mem_epcs_flash_controller_0+0xff81a85c>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   1b880:	e0bffc17 	ldw	r2,-16(fp)
   1b884:	10800917 	ldw	r2,36(r2)
   1b888:	1000051e 	bne	r2,zero,1b8a0 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   1b88c:	e0bffe17 	ldw	r2,-8(fp)
   1b890:	00bfd016 	blt	zero,r2,1b7d4 <__alt_mem_epcs_flash_controller_0+0xff81a7d4>
   1b894:	00000306 	br	1b8a4 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   1b898:	0001883a 	nop
   1b89c:	00000106 	br	1b8a4 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   1b8a0:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   1b8a4:	e0fffd17 	ldw	r3,-12(fp)
   1b8a8:	e0bff717 	ldw	r2,-36(fp)
   1b8ac:	18800426 	beq	r3,r2,1b8c0 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   1b8b0:	e0fffd17 	ldw	r3,-12(fp)
   1b8b4:	e0bff717 	ldw	r2,-36(fp)
   1b8b8:	1885c83a 	sub	r2,r3,r2
   1b8bc:	00000606 	br	1b8d8 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   1b8c0:	e0bfff17 	ldw	r2,-4(fp)
   1b8c4:	1090000c 	andi	r2,r2,16384
   1b8c8:	10000226 	beq	r2,zero,1b8d4 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   1b8cc:	00bffd44 	movi	r2,-11
   1b8d0:	00000106 	br	1b8d8 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   1b8d4:	00bffec4 	movi	r2,-5
}
   1b8d8:	e037883a 	mov	sp,fp
   1b8dc:	dfc00117 	ldw	ra,4(sp)
   1b8e0:	df000017 	ldw	fp,0(sp)
   1b8e4:	dec00204 	addi	sp,sp,8
   1b8e8:	f800283a 	ret

0001b8ec <epcs_read_status_register>:
#include "alt_types.h"
#include "epcs_commands.h"
#include "altera_avalon_spi.h"

alt_u8 epcs_read_status_register(alt_u32 base)
{
   1b8ec:	defff904 	addi	sp,sp,-28
   1b8f0:	dfc00615 	stw	ra,24(sp)
   1b8f4:	df000515 	stw	fp,20(sp)
   1b8f8:	df000504 	addi	fp,sp,20
   1b8fc:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 rdsr = epcs_rdsr;
   1b900:	00800144 	movi	r2,5
   1b904:	e0bffe05 	stb	r2,-8(fp)
  alt_u8 status;
  alt_avalon_spi_command(
   1b908:	d8000215 	stw	zero,8(sp)
   1b90c:	e0bffe44 	addi	r2,fp,-7
   1b910:	d8800115 	stw	r2,4(sp)
   1b914:	00800044 	movi	r2,1
   1b918:	d8800015 	stw	r2,0(sp)
   1b91c:	e1fffe04 	addi	r7,fp,-8
   1b920:	01800044 	movi	r6,1
   1b924:	000b883a 	mov	r5,zero
   1b928:	e13fff17 	ldw	r4,-4(fp)
   1b92c:	001cb100 	call	1cb10 <alt_avalon_spi_command>
    1,
    &status,
    0
  );

  return status;
   1b930:	e0bffe43 	ldbu	r2,-7(fp)
}
   1b934:	e037883a 	mov	sp,fp
   1b938:	dfc00117 	ldw	ra,4(sp)
   1b93c:	df000017 	ldw	fp,0(sp)
   1b940:	dec00204 	addi	sp,sp,8
   1b944:	f800283a 	ret

0001b948 <epcs_test_wip>:

static ALT_INLINE int epcs_test_wip(alt_u32 base)
{
   1b948:	defffd04 	addi	sp,sp,-12
   1b94c:	dfc00215 	stw	ra,8(sp)
   1b950:	df000115 	stw	fp,4(sp)
   1b954:	df000104 	addi	fp,sp,4
   1b958:	e13fff15 	stw	r4,-4(fp)
  return epcs_read_status_register(base) & 1;
   1b95c:	e13fff17 	ldw	r4,-4(fp)
   1b960:	001b8ec0 	call	1b8ec <epcs_read_status_register>
   1b964:	10803fcc 	andi	r2,r2,255
   1b968:	1080004c 	andi	r2,r2,1
}
   1b96c:	e037883a 	mov	sp,fp
   1b970:	dfc00117 	ldw	ra,4(sp)
   1b974:	df000017 	ldw	fp,0(sp)
   1b978:	dec00204 	addi	sp,sp,8
   1b97c:	f800283a 	ret

0001b980 <epcs_await_wip_released>:

static ALT_INLINE void epcs_await_wip_released(alt_u32 base)
{
   1b980:	defffd04 	addi	sp,sp,-12
   1b984:	dfc00215 	stw	ra,8(sp)
   1b988:	df000115 	stw	fp,4(sp)
   1b98c:	df000104 	addi	fp,sp,4
   1b990:	e13fff15 	stw	r4,-4(fp)
  /* Wait until the WIP bit goes low. */
  while (epcs_test_wip(base))
   1b994:	0001883a 	nop
   1b998:	e13fff17 	ldw	r4,-4(fp)
   1b99c:	001b9480 	call	1b948 <epcs_test_wip>
   1b9a0:	103ffd1e 	bne	r2,zero,1b998 <__alt_mem_epcs_flash_controller_0+0xff81a998>
  {
  }
}
   1b9a4:	0001883a 	nop
   1b9a8:	e037883a 	mov	sp,fp
   1b9ac:	dfc00117 	ldw	ra,4(sp)
   1b9b0:	df000017 	ldw	fp,0(sp)
   1b9b4:	dec00204 	addi	sp,sp,8
   1b9b8:	f800283a 	ret

0001b9bc <epcs_sector_erase>:

void epcs_sector_erase(alt_u32 base, alt_u32 offset, alt_u32 four_bytes_mode)
{
   1b9bc:	defff604 	addi	sp,sp,-40
   1b9c0:	dfc00915 	stw	ra,36(sp)
   1b9c4:	df000815 	stw	fp,32(sp)
   1b9c8:	df000804 	addi	fp,sp,32
   1b9cc:	e13ffd15 	stw	r4,-12(fp)
   1b9d0:	e17ffe15 	stw	r5,-8(fp)
   1b9d4:	e1bfff15 	stw	r6,-4(fp)
  alt_u8 se[5];
  alt_u8 len;
  
  if(four_bytes_mode)
   1b9d8:	e0bfff17 	ldw	r2,-4(fp)
   1b9dc:	10001226 	beq	r2,zero,1ba28 <epcs_sector_erase+0x6c>
  {
      se[0] = epcs_se;  /* Note: Use epcs_se for Micron EPCS256 */
   1b9e0:	00bff604 	movi	r2,-40
   1b9e4:	e0bffb45 	stb	r2,-19(fp)
      se[1] = (offset >> 24) & 0xFF;
   1b9e8:	e0bffe17 	ldw	r2,-8(fp)
   1b9ec:	1004d63a 	srli	r2,r2,24
   1b9f0:	e0bffb85 	stb	r2,-18(fp)
      se[2] = (offset >> 16) & 0xFF;
   1b9f4:	e0bffe17 	ldw	r2,-8(fp)
   1b9f8:	1004d43a 	srli	r2,r2,16
   1b9fc:	e0bffbc5 	stb	r2,-17(fp)
      se[3] = (offset >> 8) & 0xFF;
   1ba00:	e0bffe17 	ldw	r2,-8(fp)
   1ba04:	1004d23a 	srli	r2,r2,8
   1ba08:	e0bffc05 	stb	r2,-16(fp)
      se[4] = offset & 0xFF;
   1ba0c:	e0bffe17 	ldw	r2,-8(fp)
   1ba10:	e0bffc45 	stb	r2,-15(fp)
      len   = 5;
   1ba14:	00800144 	movi	r2,5
   1ba18:	e0bffb05 	stb	r2,-20(fp)
      epcs_enter_4_bytes_mode(base);
   1ba1c:	e13ffd17 	ldw	r4,-12(fp)
   1ba20:	001be700 	call	1be70 <epcs_enter_4_bytes_mode>
   1ba24:	00000c06 	br	1ba58 <epcs_sector_erase+0x9c>
  }
  else
  {
      se[0] = epcs_se;
   1ba28:	00bff604 	movi	r2,-40
   1ba2c:	e0bffb45 	stb	r2,-19(fp)
      se[1] = (offset >> 16) & 0xFF;
   1ba30:	e0bffe17 	ldw	r2,-8(fp)
   1ba34:	1004d43a 	srli	r2,r2,16
   1ba38:	e0bffb85 	stb	r2,-18(fp)
      se[2] = (offset >> 8) & 0xFF;
   1ba3c:	e0bffe17 	ldw	r2,-8(fp)
   1ba40:	1004d23a 	srli	r2,r2,8
   1ba44:	e0bffbc5 	stb	r2,-17(fp)
      se[3] = offset & 0xFF;
   1ba48:	e0bffe17 	ldw	r2,-8(fp)
   1ba4c:	e0bffc05 	stb	r2,-16(fp)
      len   = 4;
   1ba50:	00800104 	movi	r2,4
   1ba54:	e0bffb05 	stb	r2,-20(fp)
  }

  /* Execute a WREN instruction */
  epcs_write_enable(base);
   1ba58:	e13ffd17 	ldw	r4,-12(fp)
   1ba5c:	001bbac0 	call	1bbac <epcs_write_enable>

  alt_avalon_spi_command(
   1ba60:	e0bffb03 	ldbu	r2,-20(fp)
   1ba64:	e0fffb44 	addi	r3,fp,-19
   1ba68:	d8000215 	stw	zero,8(sp)
   1ba6c:	d8000115 	stw	zero,4(sp)
   1ba70:	d8000015 	stw	zero,0(sp)
   1ba74:	180f883a 	mov	r7,r3
   1ba78:	100d883a 	mov	r6,r2
   1ba7c:	000b883a 	mov	r5,zero
   1ba80:	e13ffd17 	ldw	r4,-12(fp)
   1ba84:	001cb100 	call	1cb10 <alt_avalon_spi_command>
    0,
    (alt_u8*)0,
    0
  );

  epcs_await_wip_released(base);
   1ba88:	e13ffd17 	ldw	r4,-12(fp)
   1ba8c:	001b9800 	call	1b980 <epcs_await_wip_released>

  if(four_bytes_mode)
   1ba90:	e0bfff17 	ldw	r2,-4(fp)
   1ba94:	10000226 	beq	r2,zero,1baa0 <epcs_sector_erase+0xe4>
  {
    epcs_exit_4_bytes_mode(base);
   1ba98:	e13ffd17 	ldw	r4,-12(fp)
   1ba9c:	001becc0 	call	1becc <epcs_exit_4_bytes_mode>
  }
}
   1baa0:	0001883a 	nop
   1baa4:	e037883a 	mov	sp,fp
   1baa8:	dfc00117 	ldw	ra,4(sp)
   1baac:	df000017 	ldw	fp,0(sp)
   1bab0:	dec00204 	addi	sp,sp,8
   1bab4:	f800283a 	ret

0001bab8 <epcs_read_buffer>:

alt_32 epcs_read_buffer(alt_u32 base, int offset, alt_u8 *dest_addr, int length,
                        alt_u32 four_bytes_mode)
{
   1bab8:	defff404 	addi	sp,sp,-48
   1babc:	dfc00b15 	stw	ra,44(sp)
   1bac0:	df000a15 	stw	fp,40(sp)
   1bac4:	df000a04 	addi	fp,sp,40
   1bac8:	e13ffc15 	stw	r4,-16(fp)
   1bacc:	e17ffd15 	stw	r5,-12(fp)
   1bad0:	e1bffe15 	stw	r6,-8(fp)
   1bad4:	e1ffff15 	stw	r7,-4(fp)
  alt_u8 read_command[5];
  alt_u32 cmd_len;

  read_command[0] = epcs_read;
   1bad8:	008000c4 	movi	r2,3
   1badc:	e0bffa05 	stb	r2,-24(fp)
  
  if(four_bytes_mode)
   1bae0:	e0800217 	ldw	r2,8(fp)
   1bae4:	10001026 	beq	r2,zero,1bb28 <epcs_read_buffer+0x70>
  {
        read_command[1] = (offset >> 24) & 0xFF;
   1bae8:	e0bffd17 	ldw	r2,-12(fp)
   1baec:	1004d63a 	srli	r2,r2,24
   1baf0:	e0bffa45 	stb	r2,-23(fp)
        read_command[2] = (offset >> 16) & 0xFF;
   1baf4:	e0bffd17 	ldw	r2,-12(fp)
   1baf8:	1005d43a 	srai	r2,r2,16
   1bafc:	e0bffa85 	stb	r2,-22(fp)
        read_command[3] = (offset >> 8) & 0xFF;
   1bb00:	e0bffd17 	ldw	r2,-12(fp)
   1bb04:	1005d23a 	srai	r2,r2,8
   1bb08:	e0bffac5 	stb	r2,-21(fp)
        read_command[4] = offset & 0xFF;
   1bb0c:	e0bffd17 	ldw	r2,-12(fp)
   1bb10:	e0bffb05 	stb	r2,-20(fp)
        cmd_len = 5;
   1bb14:	00800144 	movi	r2,5
   1bb18:	e0bff915 	stw	r2,-28(fp)
        epcs_enter_4_bytes_mode(base);
   1bb1c:	e13ffc17 	ldw	r4,-16(fp)
   1bb20:	001be700 	call	1be70 <epcs_enter_4_bytes_mode>
   1bb24:	00000a06 	br	1bb50 <epcs_read_buffer+0x98>
  }
  else
  {
        read_command[1] = (offset >> 16) & 0xFF;
   1bb28:	e0bffd17 	ldw	r2,-12(fp)
   1bb2c:	1005d43a 	srai	r2,r2,16
   1bb30:	e0bffa45 	stb	r2,-23(fp)
        read_command[2] = (offset >> 8) & 0xFF;
   1bb34:	e0bffd17 	ldw	r2,-12(fp)
   1bb38:	1005d23a 	srai	r2,r2,8
   1bb3c:	e0bffa85 	stb	r2,-22(fp)
        read_command[3] = offset & 0xFF;
   1bb40:	e0bffd17 	ldw	r2,-12(fp)
   1bb44:	e0bffac5 	stb	r2,-21(fp)
        cmd_len = 4;
   1bb48:	00800104 	movi	r2,4
   1bb4c:	e0bff915 	stw	r2,-28(fp)
  }

  epcs_await_wip_released(base);
   1bb50:	e13ffc17 	ldw	r4,-16(fp)
   1bb54:	001b9800 	call	1b980 <epcs_await_wip_released>

  alt_avalon_spi_command(
   1bb58:	e0bfff17 	ldw	r2,-4(fp)
   1bb5c:	e13ffa04 	addi	r4,fp,-24
   1bb60:	d8000215 	stw	zero,8(sp)
   1bb64:	e0fffe17 	ldw	r3,-8(fp)
   1bb68:	d8c00115 	stw	r3,4(sp)
   1bb6c:	d8800015 	stw	r2,0(sp)
   1bb70:	200f883a 	mov	r7,r4
   1bb74:	e1bff917 	ldw	r6,-28(fp)
   1bb78:	000b883a 	mov	r5,zero
   1bb7c:	e13ffc17 	ldw	r4,-16(fp)
   1bb80:	001cb100 	call	1cb10 <alt_avalon_spi_command>
    length,
    (alt_u8*)dest_addr,
    0
  );

  if(four_bytes_mode)
   1bb84:	e0800217 	ldw	r2,8(fp)
   1bb88:	10000226 	beq	r2,zero,1bb94 <epcs_read_buffer+0xdc>
  {
    epcs_exit_4_bytes_mode(base);
   1bb8c:	e13ffc17 	ldw	r4,-16(fp)
   1bb90:	001becc0 	call	1becc <epcs_exit_4_bytes_mode>
  }

  return length;
   1bb94:	e0bfff17 	ldw	r2,-4(fp)
}
   1bb98:	e037883a 	mov	sp,fp
   1bb9c:	dfc00117 	ldw	ra,4(sp)
   1bba0:	df000017 	ldw	fp,0(sp)
   1bba4:	dec00204 	addi	sp,sp,8
   1bba8:	f800283a 	ret

0001bbac <epcs_write_enable>:

void epcs_write_enable(alt_u32 base)
{
   1bbac:	defff904 	addi	sp,sp,-28
   1bbb0:	dfc00615 	stw	ra,24(sp)
   1bbb4:	df000515 	stw	fp,20(sp)
   1bbb8:	df000504 	addi	fp,sp,20
   1bbbc:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 wren = epcs_wren;
   1bbc0:	00800184 	movi	r2,6
   1bbc4:	e0bffe05 	stb	r2,-8(fp)
  alt_avalon_spi_command(
   1bbc8:	d8000215 	stw	zero,8(sp)
   1bbcc:	d8000115 	stw	zero,4(sp)
   1bbd0:	d8000015 	stw	zero,0(sp)
   1bbd4:	e1fffe04 	addi	r7,fp,-8
   1bbd8:	01800044 	movi	r6,1
   1bbdc:	000b883a 	mov	r5,zero
   1bbe0:	e13fff17 	ldw	r4,-4(fp)
   1bbe4:	001cb100 	call	1cb10 <alt_avalon_spi_command>
    &wren,
    0,
    (alt_u8*)0,
    0
  );
}
   1bbe8:	0001883a 	nop
   1bbec:	e037883a 	mov	sp,fp
   1bbf0:	dfc00117 	ldw	ra,4(sp)
   1bbf4:	df000017 	ldw	fp,0(sp)
   1bbf8:	dec00204 	addi	sp,sp,8
   1bbfc:	f800283a 	ret

0001bc00 <epcs_write_status_register>:

void epcs_write_status_register(alt_u32 base, alt_u8 value)
{
   1bc00:	defff804 	addi	sp,sp,-32
   1bc04:	dfc00715 	stw	ra,28(sp)
   1bc08:	df000615 	stw	fp,24(sp)
   1bc0c:	df000604 	addi	fp,sp,24
   1bc10:	e13ffe15 	stw	r4,-8(fp)
   1bc14:	2805883a 	mov	r2,r5
   1bc18:	e0bfff05 	stb	r2,-4(fp)
  alt_u8 wrsr[2];
  
  wrsr[0] = epcs_wrsr;
   1bc1c:	00800044 	movi	r2,1
   1bc20:	e0bffd05 	stb	r2,-12(fp)
  wrsr[1] = value;
   1bc24:	e0bfff03 	ldbu	r2,-4(fp)
   1bc28:	e0bffd45 	stb	r2,-11(fp)

  alt_avalon_spi_command(
   1bc2c:	d8000215 	stw	zero,8(sp)
   1bc30:	d8000115 	stw	zero,4(sp)
   1bc34:	d8000015 	stw	zero,0(sp)
   1bc38:	e1fffd04 	addi	r7,fp,-12
   1bc3c:	01800084 	movi	r6,2
   1bc40:	000b883a 	mov	r5,zero
   1bc44:	e13ffe17 	ldw	r4,-8(fp)
   1bc48:	001cb100 	call	1cb10 <alt_avalon_spi_command>
    0,
    (alt_u8*)0,
    0
  );

  epcs_await_wip_released(base);
   1bc4c:	e13ffe17 	ldw	r4,-8(fp)
   1bc50:	001b9800 	call	1b980 <epcs_await_wip_released>
}
   1bc54:	0001883a 	nop
   1bc58:	e037883a 	mov	sp,fp
   1bc5c:	dfc00117 	ldw	ra,4(sp)
   1bc60:	df000017 	ldw	fp,0(sp)
   1bc64:	dec00204 	addi	sp,sp,8
   1bc68:	f800283a 	ret

0001bc6c <epcs_write_buffer>:

/* Write a partial or full page, assuming that page has been erased */
alt_32 epcs_write_buffer(alt_u32 base, int offset, const alt_u8* src_addr, 
                         int length, alt_u32 four_bytes_mode)
{
   1bc6c:	defff404 	addi	sp,sp,-48
   1bc70:	dfc00b15 	stw	ra,44(sp)
   1bc74:	df000a15 	stw	fp,40(sp)
   1bc78:	df000a04 	addi	fp,sp,40
   1bc7c:	e13ffc15 	stw	r4,-16(fp)
   1bc80:	e17ffd15 	stw	r5,-12(fp)
   1bc84:	e1bffe15 	stw	r6,-8(fp)
   1bc88:	e1ffff15 	stw	r7,-4(fp)
  alt_u8 pp[5];
  alt_u32 cmd_len;
  
  pp[0] = epcs_pp;
   1bc8c:	00800084 	movi	r2,2
   1bc90:	e0bffa05 	stb	r2,-24(fp)
  
  if(four_bytes_mode)
   1bc94:	e0800217 	ldw	r2,8(fp)
   1bc98:	10001026 	beq	r2,zero,1bcdc <epcs_write_buffer+0x70>
  {
      pp[1] = (offset >> 24) & 0xFF;
   1bc9c:	e0bffd17 	ldw	r2,-12(fp)
   1bca0:	1004d63a 	srli	r2,r2,24
   1bca4:	e0bffa45 	stb	r2,-23(fp)
      pp[2] = (offset >> 16) & 0xFF;
   1bca8:	e0bffd17 	ldw	r2,-12(fp)
   1bcac:	1005d43a 	srai	r2,r2,16
   1bcb0:	e0bffa85 	stb	r2,-22(fp)
      pp[3] = (offset >> 8) & 0xFF;
   1bcb4:	e0bffd17 	ldw	r2,-12(fp)
   1bcb8:	1005d23a 	srai	r2,r2,8
   1bcbc:	e0bffac5 	stb	r2,-21(fp)
      pp[4] = offset & 0xFF;
   1bcc0:	e0bffd17 	ldw	r2,-12(fp)
   1bcc4:	e0bffb05 	stb	r2,-20(fp)
      cmd_len = 5;
   1bcc8:	00800144 	movi	r2,5
   1bccc:	e0bff915 	stw	r2,-28(fp)
      epcs_enter_4_bytes_mode(base);
   1bcd0:	e13ffc17 	ldw	r4,-16(fp)
   1bcd4:	001be700 	call	1be70 <epcs_enter_4_bytes_mode>
   1bcd8:	00000a06 	br	1bd04 <epcs_write_buffer+0x98>
  }
  else
  {
      pp[1] = (offset >> 16) & 0xFF;
   1bcdc:	e0bffd17 	ldw	r2,-12(fp)
   1bce0:	1005d43a 	srai	r2,r2,16
   1bce4:	e0bffa45 	stb	r2,-23(fp)
      pp[2] = (offset >> 8) & 0xFF;
   1bce8:	e0bffd17 	ldw	r2,-12(fp)
   1bcec:	1005d23a 	srai	r2,r2,8
   1bcf0:	e0bffa85 	stb	r2,-22(fp)
      pp[3] = offset & 0xFF;
   1bcf4:	e0bffd17 	ldw	r2,-12(fp)
   1bcf8:	e0bffac5 	stb	r2,-21(fp)
      cmd_len = 4;
   1bcfc:	00800104 	movi	r2,4
   1bd00:	e0bff915 	stw	r2,-28(fp)
  }

  /* First, WREN */
  epcs_write_enable(base);
   1bd04:	e13ffc17 	ldw	r4,-16(fp)
   1bd08:	001bbac0 	call	1bbac <epcs_write_enable>

  /* Send the PP command */
  alt_avalon_spi_command(
   1bd0c:	e0fffa04 	addi	r3,fp,-24
   1bd10:	00800044 	movi	r2,1
   1bd14:	d8800215 	stw	r2,8(sp)
   1bd18:	d8000115 	stw	zero,4(sp)
   1bd1c:	d8000015 	stw	zero,0(sp)
   1bd20:	180f883a 	mov	r7,r3
   1bd24:	e1bff917 	ldw	r6,-28(fp)
   1bd28:	000b883a 	mov	r5,zero
   1bd2c:	e13ffc17 	ldw	r4,-16(fp)
   1bd30:	001cb100 	call	1cb10 <alt_avalon_spi_command>
    (alt_u8*)0,
    ALT_AVALON_SPI_COMMAND_MERGE
  );

  /* Send the user's buffer */
  alt_avalon_spi_command(
   1bd34:	e0bfff17 	ldw	r2,-4(fp)
   1bd38:	d8000215 	stw	zero,8(sp)
   1bd3c:	d8000115 	stw	zero,4(sp)
   1bd40:	d8000015 	stw	zero,0(sp)
   1bd44:	e1fffe17 	ldw	r7,-8(fp)
   1bd48:	100d883a 	mov	r6,r2
   1bd4c:	000b883a 	mov	r5,zero
   1bd50:	e13ffc17 	ldw	r4,-16(fp)
   1bd54:	001cb100 	call	1cb10 <alt_avalon_spi_command>
   * if the user's going to go off and ignore the flash for
   * a while, its writes could occur in parallel with user code
   * execution.  Unfortunately, I have to guard all reads/writes
   * with wip-tests, to make that happen.
   */
  epcs_await_wip_released(base);
   1bd58:	e13ffc17 	ldw	r4,-16(fp)
   1bd5c:	001b9800 	call	1b980 <epcs_await_wip_released>

  if(four_bytes_mode)
   1bd60:	e0800217 	ldw	r2,8(fp)
   1bd64:	10000226 	beq	r2,zero,1bd70 <epcs_write_buffer+0x104>
  {
    epcs_exit_4_bytes_mode(base);
   1bd68:	e13ffc17 	ldw	r4,-16(fp)
   1bd6c:	001becc0 	call	1becc <epcs_exit_4_bytes_mode>
  }

  return length;
   1bd70:	e0bfff17 	ldw	r2,-4(fp)
}
   1bd74:	e037883a 	mov	sp,fp
   1bd78:	dfc00117 	ldw	ra,4(sp)
   1bd7c:	df000017 	ldw	fp,0(sp)
   1bd80:	dec00204 	addi	sp,sp,8
   1bd84:	f800283a 	ret

0001bd88 <epcs_read_electronic_signature>:


alt_u8 epcs_read_electronic_signature(alt_u32 base)
{
   1bd88:	defff804 	addi	sp,sp,-32
   1bd8c:	dfc00715 	stw	ra,28(sp)
   1bd90:	df000615 	stw	fp,24(sp)
   1bd94:	df000604 	addi	fp,sp,24
   1bd98:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 res_cmd[] = {epcs_res, 0, 0, 0};
   1bd9c:	00bfeac4 	movi	r2,-85
   1bda0:	e0bffd05 	stb	r2,-12(fp)
   1bda4:	e03ffd45 	stb	zero,-11(fp)
   1bda8:	e03ffd85 	stb	zero,-10(fp)
   1bdac:	e03ffdc5 	stb	zero,-9(fp)
  alt_u8 res;

  alt_avalon_spi_command(
   1bdb0:	d8000215 	stw	zero,8(sp)
   1bdb4:	e0bffe04 	addi	r2,fp,-8
   1bdb8:	d8800115 	stw	r2,4(sp)
   1bdbc:	00800044 	movi	r2,1
   1bdc0:	d8800015 	stw	r2,0(sp)
   1bdc4:	e1fffd04 	addi	r7,fp,-12
   1bdc8:	01800104 	movi	r6,4
   1bdcc:	000b883a 	mov	r5,zero
   1bdd0:	e13fff17 	ldw	r4,-4(fp)
   1bdd4:	001cb100 	call	1cb10 <alt_avalon_spi_command>
    1,
    &res,
    0
  );

  return res;
   1bdd8:	e0bffe03 	ldbu	r2,-8(fp)
}
   1bddc:	e037883a 	mov	sp,fp
   1bde0:	dfc00117 	ldw	ra,4(sp)
   1bde4:	df000017 	ldw	fp,0(sp)
   1bde8:	dec00204 	addi	sp,sp,8
   1bdec:	f800283a 	ret

0001bdf0 <epcs_read_device_id>:

alt_u32 epcs_read_device_id(alt_u32 base)
{
   1bdf0:	defff904 	addi	sp,sp,-28
   1bdf4:	dfc00615 	stw	ra,24(sp)
   1bdf8:	df000515 	stw	fp,20(sp)
   1bdfc:	df000504 	addi	fp,sp,20
   1be00:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 rd_id_cmd[] = {epcs_rdid};
   1be04:	00bfe7c4 	movi	r2,-97
   1be08:	e0bffe05 	stb	r2,-8(fp)
  alt_u8 id[3];

  alt_avalon_spi_command(
   1be0c:	d8000215 	stw	zero,8(sp)
   1be10:	e0bffe44 	addi	r2,fp,-7
   1be14:	d8800115 	stw	r2,4(sp)
   1be18:	008000c4 	movi	r2,3
   1be1c:	d8800015 	stw	r2,0(sp)
   1be20:	e1fffe04 	addi	r7,fp,-8
   1be24:	01800044 	movi	r6,1
   1be28:	000b883a 	mov	r5,zero
   1be2c:	e13fff17 	ldw	r4,-4(fp)
   1be30:	001cb100 	call	1cb10 <alt_avalon_spi_command>
    3,
    id,
    0
  );

  return (alt_u32) ((id[0] << 16) | (id[1] << 8) | id[2]);
   1be34:	e0bffe43 	ldbu	r2,-7(fp)
   1be38:	10803fcc 	andi	r2,r2,255
   1be3c:	1006943a 	slli	r3,r2,16
   1be40:	e0bffe83 	ldbu	r2,-6(fp)
   1be44:	10803fcc 	andi	r2,r2,255
   1be48:	1004923a 	slli	r2,r2,8
   1be4c:	1886b03a 	or	r3,r3,r2
   1be50:	e0bffec3 	ldbu	r2,-5(fp)
   1be54:	10803fcc 	andi	r2,r2,255
   1be58:	1884b03a 	or	r2,r3,r2
}
   1be5c:	e037883a 	mov	sp,fp
   1be60:	dfc00117 	ldw	ra,4(sp)
   1be64:	df000017 	ldw	fp,0(sp)
   1be68:	dec00204 	addi	sp,sp,8
   1be6c:	f800283a 	ret

0001be70 <epcs_enter_4_bytes_mode>:

void epcs_enter_4_bytes_mode(alt_u32 base)
{
   1be70:	defff904 	addi	sp,sp,-28
   1be74:	dfc00615 	stw	ra,24(sp)
   1be78:	df000515 	stw	fp,20(sp)
   1be7c:	df000504 	addi	fp,sp,20
   1be80:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 en4b_cmd = epcs_en4b;
   1be84:	00bfedc4 	movi	r2,-73
   1be88:	e0bffe05 	stb	r2,-8(fp)

  /* First, WREN */
  epcs_write_enable(base);
   1be8c:	e13fff17 	ldw	r4,-4(fp)
   1be90:	001bbac0 	call	1bbac <epcs_write_enable>

  alt_avalon_spi_command(
   1be94:	d8000215 	stw	zero,8(sp)
   1be98:	d8000115 	stw	zero,4(sp)
   1be9c:	d8000015 	stw	zero,0(sp)
   1bea0:	e1fffe04 	addi	r7,fp,-8
   1bea4:	01800044 	movi	r6,1
   1bea8:	000b883a 	mov	r5,zero
   1beac:	e13fff17 	ldw	r4,-4(fp)
   1beb0:	001cb100 	call	1cb10 <alt_avalon_spi_command>
    0,
    (alt_u8*)0,
    0
  );

  return;
   1beb4:	0001883a 	nop
}
   1beb8:	e037883a 	mov	sp,fp
   1bebc:	dfc00117 	ldw	ra,4(sp)
   1bec0:	df000017 	ldw	fp,0(sp)
   1bec4:	dec00204 	addi	sp,sp,8
   1bec8:	f800283a 	ret

0001becc <epcs_exit_4_bytes_mode>:

void epcs_exit_4_bytes_mode(alt_u32 base)
{
   1becc:	defff904 	addi	sp,sp,-28
   1bed0:	dfc00615 	stw	ra,24(sp)
   1bed4:	df000515 	stw	fp,20(sp)
   1bed8:	df000504 	addi	fp,sp,20
   1bedc:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 exit4b_cmd = epcs_dis4b;
   1bee0:	00bffa44 	movi	r2,-23
   1bee4:	e0bffe05 	stb	r2,-8(fp)

  /* First, WREN */
  epcs_write_enable(base);
   1bee8:	e13fff17 	ldw	r4,-4(fp)
   1beec:	001bbac0 	call	1bbac <epcs_write_enable>

  alt_avalon_spi_command(
   1bef0:	d8000215 	stw	zero,8(sp)
   1bef4:	d8000115 	stw	zero,4(sp)
   1bef8:	d8000015 	stw	zero,0(sp)
   1befc:	e1fffe04 	addi	r7,fp,-8
   1bf00:	01800044 	movi	r6,1
   1bf04:	000b883a 	mov	r5,zero
   1bf08:	e13fff17 	ldw	r4,-4(fp)
   1bf0c:	001cb100 	call	1cb10 <alt_avalon_spi_command>
    0,
    (alt_u8*)0,
    0
  );

  return;
   1bf10:	0001883a 	nop
}
   1bf14:	e037883a 	mov	sp,fp
   1bf18:	dfc00117 	ldw	ra,4(sp)
   1bf1c:	df000017 	ldw	fp,0(sp)
   1bf20:	dec00204 	addi	sp,sp,8
   1bf24:	f800283a 	ret

0001bf28 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   1bf28:	defff504 	addi	sp,sp,-44
   1bf2c:	df000a15 	stw	fp,40(sp)
   1bf30:	df000a04 	addi	fp,sp,40
   1bf34:	e13ffc15 	stw	r4,-16(fp)
   1bf38:	e17ffd15 	stw	r5,-12(fp)
   1bf3c:	e1bffe15 	stw	r6,-8(fp)
   1bf40:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   1bf44:	e03ff615 	stw	zero,-40(fp)
   1bf48:	d0a71317 	ldw	r2,-25524(gp)
  
  if (alt_ticks_per_second ())
   1bf4c:	10003c26 	beq	r2,zero,1c040 <alt_alarm_start+0x118>
  {
    if (alarm)
   1bf50:	e0bffc17 	ldw	r2,-16(fp)
   1bf54:	10003826 	beq	r2,zero,1c038 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   1bf58:	e0bffc17 	ldw	r2,-16(fp)
   1bf5c:	e0fffe17 	ldw	r3,-8(fp)
   1bf60:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   1bf64:	e0bffc17 	ldw	r2,-16(fp)
   1bf68:	e0ffff17 	ldw	r3,-4(fp)
   1bf6c:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1bf70:	0005303a 	rdctl	r2,status
   1bf74:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1bf78:	e0fff917 	ldw	r3,-28(fp)
   1bf7c:	00bfff84 	movi	r2,-2
   1bf80:	1884703a 	and	r2,r3,r2
   1bf84:	1001703a 	wrctl	status,r2
  
  return context;
   1bf88:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   1bf8c:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   1bf90:	d0a71417 	ldw	r2,-25520(gp)
      
      current_nticks = alt_nticks();
   1bf94:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   1bf98:	e0fffd17 	ldw	r3,-12(fp)
   1bf9c:	e0bff617 	ldw	r2,-40(fp)
   1bfa0:	1885883a 	add	r2,r3,r2
   1bfa4:	10c00044 	addi	r3,r2,1
   1bfa8:	e0bffc17 	ldw	r2,-16(fp)
   1bfac:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   1bfb0:	e0bffc17 	ldw	r2,-16(fp)
   1bfb4:	10c00217 	ldw	r3,8(r2)
   1bfb8:	e0bff617 	ldw	r2,-40(fp)
   1bfbc:	1880042e 	bgeu	r3,r2,1bfd0 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   1bfc0:	e0bffc17 	ldw	r2,-16(fp)
   1bfc4:	00c00044 	movi	r3,1
   1bfc8:	10c00405 	stb	r3,16(r2)
   1bfcc:	00000206 	br	1bfd8 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   1bfd0:	e0bffc17 	ldw	r2,-16(fp)
   1bfd4:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   1bfd8:	e0bffc17 	ldw	r2,-16(fp)
   1bfdc:	d0e01204 	addi	r3,gp,-32696
   1bfe0:	e0fffa15 	stw	r3,-24(fp)
   1bfe4:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   1bfe8:	e0bffb17 	ldw	r2,-20(fp)
   1bfec:	e0fffa17 	ldw	r3,-24(fp)
   1bff0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   1bff4:	e0bffa17 	ldw	r2,-24(fp)
   1bff8:	10c00017 	ldw	r3,0(r2)
   1bffc:	e0bffb17 	ldw	r2,-20(fp)
   1c000:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   1c004:	e0bffa17 	ldw	r2,-24(fp)
   1c008:	10800017 	ldw	r2,0(r2)
   1c00c:	e0fffb17 	ldw	r3,-20(fp)
   1c010:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   1c014:	e0bffa17 	ldw	r2,-24(fp)
   1c018:	e0fffb17 	ldw	r3,-20(fp)
   1c01c:	10c00015 	stw	r3,0(r2)
   1c020:	e0bff817 	ldw	r2,-32(fp)
   1c024:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1c028:	e0bff717 	ldw	r2,-36(fp)
   1c02c:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   1c030:	0005883a 	mov	r2,zero
   1c034:	00000306 	br	1c044 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   1c038:	00bffa84 	movi	r2,-22
   1c03c:	00000106 	br	1c044 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   1c040:	00bfde84 	movi	r2,-134
  }
}
   1c044:	e037883a 	mov	sp,fp
   1c048:	df000017 	ldw	fp,0(sp)
   1c04c:	dec00104 	addi	sp,sp,4
   1c050:	f800283a 	ret

0001c054 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   1c054:	deffff04 	addi	sp,sp,-4
   1c058:	df000015 	stw	fp,0(sp)
   1c05c:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   1c060:	0001883a 	nop
   1c064:	e037883a 	mov	sp,fp
   1c068:	df000017 	ldw	fp,0(sp)
   1c06c:	dec00104 	addi	sp,sp,4
   1c070:	f800283a 	ret

0001c074 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   1c074:	defffe04 	addi	sp,sp,-8
   1c078:	dfc00115 	stw	ra,4(sp)
   1c07c:	df000015 	stw	fp,0(sp)
   1c080:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   1c084:	d0a00d17 	ldw	r2,-32716(gp)
   1c088:	10000326 	beq	r2,zero,1c098 <alt_get_errno+0x24>
   1c08c:	d0a00d17 	ldw	r2,-32716(gp)
   1c090:	103ee83a 	callr	r2
   1c094:	00000106 	br	1c09c <alt_get_errno+0x28>
   1c098:	d0a70b04 	addi	r2,gp,-25556
}
   1c09c:	e037883a 	mov	sp,fp
   1c0a0:	dfc00117 	ldw	ra,4(sp)
   1c0a4:	df000017 	ldw	fp,0(sp)
   1c0a8:	dec00204 	addi	sp,sp,8
   1c0ac:	f800283a 	ret

0001c0b0 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   1c0b0:	defffa04 	addi	sp,sp,-24
   1c0b4:	dfc00515 	stw	ra,20(sp)
   1c0b8:	df000415 	stw	fp,16(sp)
   1c0bc:	df000404 	addi	fp,sp,16
   1c0c0:	e13ffe15 	stw	r4,-8(fp)
   1c0c4:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   1c0c8:	e0bffe17 	ldw	r2,-8(fp)
   1c0cc:	10000326 	beq	r2,zero,1c0dc <alt_dev_llist_insert+0x2c>
   1c0d0:	e0bffe17 	ldw	r2,-8(fp)
   1c0d4:	10800217 	ldw	r2,8(r2)
   1c0d8:	1000061e 	bne	r2,zero,1c0f4 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   1c0dc:	001c0740 	call	1c074 <alt_get_errno>
   1c0e0:	1007883a 	mov	r3,r2
   1c0e4:	00800584 	movi	r2,22
   1c0e8:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   1c0ec:	00bffa84 	movi	r2,-22
   1c0f0:	00001306 	br	1c140 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   1c0f4:	e0bffe17 	ldw	r2,-8(fp)
   1c0f8:	e0ffff17 	ldw	r3,-4(fp)
   1c0fc:	e0fffc15 	stw	r3,-16(fp)
   1c100:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   1c104:	e0bffd17 	ldw	r2,-12(fp)
   1c108:	e0fffc17 	ldw	r3,-16(fp)
   1c10c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   1c110:	e0bffc17 	ldw	r2,-16(fp)
   1c114:	10c00017 	ldw	r3,0(r2)
   1c118:	e0bffd17 	ldw	r2,-12(fp)
   1c11c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   1c120:	e0bffc17 	ldw	r2,-16(fp)
   1c124:	10800017 	ldw	r2,0(r2)
   1c128:	e0fffd17 	ldw	r3,-12(fp)
   1c12c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   1c130:	e0bffc17 	ldw	r2,-16(fp)
   1c134:	e0fffd17 	ldw	r3,-12(fp)
   1c138:	10c00015 	stw	r3,0(r2)

  return 0;  
   1c13c:	0005883a 	mov	r2,zero
}
   1c140:	e037883a 	mov	sp,fp
   1c144:	dfc00117 	ldw	ra,4(sp)
   1c148:	df000017 	ldw	fp,0(sp)
   1c14c:	dec00204 	addi	sp,sp,8
   1c150:	f800283a 	ret

0001c154 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   1c154:	defffd04 	addi	sp,sp,-12
   1c158:	dfc00215 	stw	ra,8(sp)
   1c15c:	df000115 	stw	fp,4(sp)
   1c160:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   1c164:	008000b4 	movhi	r2,2
   1c168:	10b4a204 	addi	r2,r2,-11640
   1c16c:	e0bfff15 	stw	r2,-4(fp)
   1c170:	00000606 	br	1c18c <_do_ctors+0x38>
        (*ctor) (); 
   1c174:	e0bfff17 	ldw	r2,-4(fp)
   1c178:	10800017 	ldw	r2,0(r2)
   1c17c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   1c180:	e0bfff17 	ldw	r2,-4(fp)
   1c184:	10bfff04 	addi	r2,r2,-4
   1c188:	e0bfff15 	stw	r2,-4(fp)
   1c18c:	e0ffff17 	ldw	r3,-4(fp)
   1c190:	008000b4 	movhi	r2,2
   1c194:	10b4a304 	addi	r2,r2,-11636
   1c198:	18bff62e 	bgeu	r3,r2,1c174 <__alt_mem_epcs_flash_controller_0+0xff81b174>
        (*ctor) (); 
}
   1c19c:	0001883a 	nop
   1c1a0:	e037883a 	mov	sp,fp
   1c1a4:	dfc00117 	ldw	ra,4(sp)
   1c1a8:	df000017 	ldw	fp,0(sp)
   1c1ac:	dec00204 	addi	sp,sp,8
   1c1b0:	f800283a 	ret

0001c1b4 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   1c1b4:	defffd04 	addi	sp,sp,-12
   1c1b8:	dfc00215 	stw	ra,8(sp)
   1c1bc:	df000115 	stw	fp,4(sp)
   1c1c0:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   1c1c4:	008000b4 	movhi	r2,2
   1c1c8:	10b4a204 	addi	r2,r2,-11640
   1c1cc:	e0bfff15 	stw	r2,-4(fp)
   1c1d0:	00000606 	br	1c1ec <_do_dtors+0x38>
        (*dtor) (); 
   1c1d4:	e0bfff17 	ldw	r2,-4(fp)
   1c1d8:	10800017 	ldw	r2,0(r2)
   1c1dc:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   1c1e0:	e0bfff17 	ldw	r2,-4(fp)
   1c1e4:	10bfff04 	addi	r2,r2,-4
   1c1e8:	e0bfff15 	stw	r2,-4(fp)
   1c1ec:	e0ffff17 	ldw	r3,-4(fp)
   1c1f0:	008000b4 	movhi	r2,2
   1c1f4:	10b4a304 	addi	r2,r2,-11636
   1c1f8:	18bff62e 	bgeu	r3,r2,1c1d4 <__alt_mem_epcs_flash_controller_0+0xff81b1d4>
        (*dtor) (); 
}
   1c1fc:	0001883a 	nop
   1c200:	e037883a 	mov	sp,fp
   1c204:	dfc00117 	ldw	ra,4(sp)
   1c208:	df000017 	ldw	fp,0(sp)
   1c20c:	dec00204 	addi	sp,sp,8
   1c210:	f800283a 	ret

0001c214 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   1c214:	defffa04 	addi	sp,sp,-24
   1c218:	dfc00515 	stw	ra,20(sp)
   1c21c:	df000415 	stw	fp,16(sp)
   1c220:	df000404 	addi	fp,sp,16
   1c224:	e13ffe15 	stw	r4,-8(fp)
   1c228:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   1c22c:	e0bfff17 	ldw	r2,-4(fp)
   1c230:	10800017 	ldw	r2,0(r2)
   1c234:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   1c238:	e13ffe17 	ldw	r4,-8(fp)
   1c23c:	00033c80 	call	33c8 <strlen>
   1c240:	10800044 	addi	r2,r2,1
   1c244:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   1c248:	00000d06 	br	1c280 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   1c24c:	e0bffc17 	ldw	r2,-16(fp)
   1c250:	10800217 	ldw	r2,8(r2)
   1c254:	e0fffd17 	ldw	r3,-12(fp)
   1c258:	180d883a 	mov	r6,r3
   1c25c:	e17ffe17 	ldw	r5,-8(fp)
   1c260:	1009883a 	mov	r4,r2
   1c264:	0002d980 	call	2d98 <memcmp>
   1c268:	1000021e 	bne	r2,zero,1c274 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   1c26c:	e0bffc17 	ldw	r2,-16(fp)
   1c270:	00000706 	br	1c290 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   1c274:	e0bffc17 	ldw	r2,-16(fp)
   1c278:	10800017 	ldw	r2,0(r2)
   1c27c:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   1c280:	e0fffc17 	ldw	r3,-16(fp)
   1c284:	e0bfff17 	ldw	r2,-4(fp)
   1c288:	18bff01e 	bne	r3,r2,1c24c <__alt_mem_epcs_flash_controller_0+0xff81b24c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   1c28c:	0005883a 	mov	r2,zero
}
   1c290:	e037883a 	mov	sp,fp
   1c294:	dfc00117 	ldw	ra,4(sp)
   1c298:	df000017 	ldw	fp,0(sp)
   1c29c:	dec00204 	addi	sp,sp,8
   1c2a0:	f800283a 	ret

0001c2a4 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   1c2a4:	deffff04 	addi	sp,sp,-4
   1c2a8:	df000015 	stw	fp,0(sp)
   1c2ac:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   1c2b0:	0001883a 	nop
   1c2b4:	e037883a 	mov	sp,fp
   1c2b8:	df000017 	ldw	fp,0(sp)
   1c2bc:	dec00104 	addi	sp,sp,4
   1c2c0:	f800283a 	ret

0001c2c4 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   1c2c4:	defff904 	addi	sp,sp,-28
   1c2c8:	dfc00615 	stw	ra,24(sp)
   1c2cc:	df000515 	stw	fp,20(sp)
   1c2d0:	df000504 	addi	fp,sp,20
   1c2d4:	e13ffc15 	stw	r4,-16(fp)
   1c2d8:	e17ffd15 	stw	r5,-12(fp)
   1c2dc:	e1bffe15 	stw	r6,-8(fp)
   1c2e0:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   1c2e4:	e0800217 	ldw	r2,8(fp)
   1c2e8:	d8800015 	stw	r2,0(sp)
   1c2ec:	e1ffff17 	ldw	r7,-4(fp)
   1c2f0:	e1bffe17 	ldw	r6,-8(fp)
   1c2f4:	e17ffd17 	ldw	r5,-12(fp)
   1c2f8:	e13ffc17 	ldw	r4,-16(fp)
   1c2fc:	001c4740 	call	1c474 <alt_iic_isr_register>
}  
   1c300:	e037883a 	mov	sp,fp
   1c304:	dfc00117 	ldw	ra,4(sp)
   1c308:	df000017 	ldw	fp,0(sp)
   1c30c:	dec00204 	addi	sp,sp,8
   1c310:	f800283a 	ret

0001c314 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   1c314:	defff904 	addi	sp,sp,-28
   1c318:	df000615 	stw	fp,24(sp)
   1c31c:	df000604 	addi	fp,sp,24
   1c320:	e13ffe15 	stw	r4,-8(fp)
   1c324:	e17fff15 	stw	r5,-4(fp)
   1c328:	e0bfff17 	ldw	r2,-4(fp)
   1c32c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1c330:	0005303a 	rdctl	r2,status
   1c334:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1c338:	e0fffb17 	ldw	r3,-20(fp)
   1c33c:	00bfff84 	movi	r2,-2
   1c340:	1884703a 	and	r2,r3,r2
   1c344:	1001703a 	wrctl	status,r2
  
  return context;
   1c348:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   1c34c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   1c350:	00c00044 	movi	r3,1
   1c354:	e0bffa17 	ldw	r2,-24(fp)
   1c358:	1884983a 	sll	r2,r3,r2
   1c35c:	1007883a 	mov	r3,r2
   1c360:	d0a71217 	ldw	r2,-25528(gp)
   1c364:	1884b03a 	or	r2,r3,r2
   1c368:	d0a71215 	stw	r2,-25528(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   1c36c:	d0a71217 	ldw	r2,-25528(gp)
   1c370:	100170fa 	wrctl	ienable,r2
   1c374:	e0bffc17 	ldw	r2,-16(fp)
   1c378:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1c37c:	e0bffd17 	ldw	r2,-12(fp)
   1c380:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   1c384:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   1c388:	0001883a 	nop
}
   1c38c:	e037883a 	mov	sp,fp
   1c390:	df000017 	ldw	fp,0(sp)
   1c394:	dec00104 	addi	sp,sp,4
   1c398:	f800283a 	ret

0001c39c <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   1c39c:	defff904 	addi	sp,sp,-28
   1c3a0:	df000615 	stw	fp,24(sp)
   1c3a4:	df000604 	addi	fp,sp,24
   1c3a8:	e13ffe15 	stw	r4,-8(fp)
   1c3ac:	e17fff15 	stw	r5,-4(fp)
   1c3b0:	e0bfff17 	ldw	r2,-4(fp)
   1c3b4:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1c3b8:	0005303a 	rdctl	r2,status
   1c3bc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1c3c0:	e0fffb17 	ldw	r3,-20(fp)
   1c3c4:	00bfff84 	movi	r2,-2
   1c3c8:	1884703a 	and	r2,r3,r2
   1c3cc:	1001703a 	wrctl	status,r2
  
  return context;
   1c3d0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   1c3d4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   1c3d8:	00c00044 	movi	r3,1
   1c3dc:	e0bffa17 	ldw	r2,-24(fp)
   1c3e0:	1884983a 	sll	r2,r3,r2
   1c3e4:	0084303a 	nor	r2,zero,r2
   1c3e8:	1007883a 	mov	r3,r2
   1c3ec:	d0a71217 	ldw	r2,-25528(gp)
   1c3f0:	1884703a 	and	r2,r3,r2
   1c3f4:	d0a71215 	stw	r2,-25528(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   1c3f8:	d0a71217 	ldw	r2,-25528(gp)
   1c3fc:	100170fa 	wrctl	ienable,r2
   1c400:	e0bffc17 	ldw	r2,-16(fp)
   1c404:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1c408:	e0bffd17 	ldw	r2,-12(fp)
   1c40c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   1c410:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   1c414:	0001883a 	nop
}
   1c418:	e037883a 	mov	sp,fp
   1c41c:	df000017 	ldw	fp,0(sp)
   1c420:	dec00104 	addi	sp,sp,4
   1c424:	f800283a 	ret

0001c428 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   1c428:	defffc04 	addi	sp,sp,-16
   1c42c:	df000315 	stw	fp,12(sp)
   1c430:	df000304 	addi	fp,sp,12
   1c434:	e13ffe15 	stw	r4,-8(fp)
   1c438:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   1c43c:	000530fa 	rdctl	r2,ienable
   1c440:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   1c444:	00c00044 	movi	r3,1
   1c448:	e0bfff17 	ldw	r2,-4(fp)
   1c44c:	1884983a 	sll	r2,r3,r2
   1c450:	1007883a 	mov	r3,r2
   1c454:	e0bffd17 	ldw	r2,-12(fp)
   1c458:	1884703a 	and	r2,r3,r2
   1c45c:	1004c03a 	cmpne	r2,r2,zero
   1c460:	10803fcc 	andi	r2,r2,255
}
   1c464:	e037883a 	mov	sp,fp
   1c468:	df000017 	ldw	fp,0(sp)
   1c46c:	dec00104 	addi	sp,sp,4
   1c470:	f800283a 	ret

0001c474 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   1c474:	defff504 	addi	sp,sp,-44
   1c478:	dfc00a15 	stw	ra,40(sp)
   1c47c:	df000915 	stw	fp,36(sp)
   1c480:	df000904 	addi	fp,sp,36
   1c484:	e13ffc15 	stw	r4,-16(fp)
   1c488:	e17ffd15 	stw	r5,-12(fp)
   1c48c:	e1bffe15 	stw	r6,-8(fp)
   1c490:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   1c494:	00bffa84 	movi	r2,-22
   1c498:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   1c49c:	e0bffd17 	ldw	r2,-12(fp)
   1c4a0:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   1c4a4:	e0bff817 	ldw	r2,-32(fp)
   1c4a8:	10800808 	cmpgei	r2,r2,32
   1c4ac:	1000271e 	bne	r2,zero,1c54c <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1c4b0:	0005303a 	rdctl	r2,status
   1c4b4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1c4b8:	e0fffb17 	ldw	r3,-20(fp)
   1c4bc:	00bfff84 	movi	r2,-2
   1c4c0:	1884703a 	and	r2,r3,r2
   1c4c4:	1001703a 	wrctl	status,r2
  
  return context;
   1c4c8:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   1c4cc:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   1c4d0:	008000b4 	movhi	r2,2
   1c4d4:	10873b04 	addi	r2,r2,7404
   1c4d8:	e0fff817 	ldw	r3,-32(fp)
   1c4dc:	180690fa 	slli	r3,r3,3
   1c4e0:	10c5883a 	add	r2,r2,r3
   1c4e4:	e0fffe17 	ldw	r3,-8(fp)
   1c4e8:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   1c4ec:	008000b4 	movhi	r2,2
   1c4f0:	10873b04 	addi	r2,r2,7404
   1c4f4:	e0fff817 	ldw	r3,-32(fp)
   1c4f8:	180690fa 	slli	r3,r3,3
   1c4fc:	10c5883a 	add	r2,r2,r3
   1c500:	10800104 	addi	r2,r2,4
   1c504:	e0ffff17 	ldw	r3,-4(fp)
   1c508:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   1c50c:	e0bffe17 	ldw	r2,-8(fp)
   1c510:	10000526 	beq	r2,zero,1c528 <alt_iic_isr_register+0xb4>
   1c514:	e0bff817 	ldw	r2,-32(fp)
   1c518:	100b883a 	mov	r5,r2
   1c51c:	e13ffc17 	ldw	r4,-16(fp)
   1c520:	001c3140 	call	1c314 <alt_ic_irq_enable>
   1c524:	00000406 	br	1c538 <alt_iic_isr_register+0xc4>
   1c528:	e0bff817 	ldw	r2,-32(fp)
   1c52c:	100b883a 	mov	r5,r2
   1c530:	e13ffc17 	ldw	r4,-16(fp)
   1c534:	001c39c0 	call	1c39c <alt_ic_irq_disable>
   1c538:	e0bff715 	stw	r2,-36(fp)
   1c53c:	e0bffa17 	ldw	r2,-24(fp)
   1c540:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1c544:	e0bff917 	ldw	r2,-28(fp)
   1c548:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   1c54c:	e0bff717 	ldw	r2,-36(fp)
}
   1c550:	e037883a 	mov	sp,fp
   1c554:	dfc00117 	ldw	ra,4(sp)
   1c558:	df000017 	ldw	fp,0(sp)
   1c55c:	dec00204 	addi	sp,sp,8
   1c560:	f800283a 	ret

0001c564 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   1c564:	defff804 	addi	sp,sp,-32
   1c568:	dfc00715 	stw	ra,28(sp)
   1c56c:	df000615 	stw	fp,24(sp)
   1c570:	dc000515 	stw	r16,20(sp)
   1c574:	df000604 	addi	fp,sp,24
   1c578:	e13ffb15 	stw	r4,-20(fp)
   1c57c:	e17ffc15 	stw	r5,-16(fp)
   1c580:	e1bffd15 	stw	r6,-12(fp)
   1c584:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
   1c588:	e1bffe17 	ldw	r6,-8(fp)
   1c58c:	e17ffd17 	ldw	r5,-12(fp)
   1c590:	e13ffc17 	ldw	r4,-16(fp)
   1c594:	001c7ec0 	call	1c7ec <open>
   1c598:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
   1c59c:	e0bffa17 	ldw	r2,-24(fp)
   1c5a0:	10002216 	blt	r2,zero,1c62c <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
   1c5a4:	040000b4 	movhi	r16,2
   1c5a8:	843b7004 	addi	r16,r16,-4672
   1c5ac:	e0bffa17 	ldw	r2,-24(fp)
   1c5b0:	01400304 	movi	r5,12
   1c5b4:	1009883a 	mov	r4,r2
   1c5b8:	00024440 	call	2444 <__mulsi3>
   1c5bc:	8085883a 	add	r2,r16,r2
   1c5c0:	10c00017 	ldw	r3,0(r2)
   1c5c4:	e0bffb17 	ldw	r2,-20(fp)
   1c5c8:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   1c5cc:	040000b4 	movhi	r16,2
   1c5d0:	843b7004 	addi	r16,r16,-4672
   1c5d4:	e0bffa17 	ldw	r2,-24(fp)
   1c5d8:	01400304 	movi	r5,12
   1c5dc:	1009883a 	mov	r4,r2
   1c5e0:	00024440 	call	2444 <__mulsi3>
   1c5e4:	8085883a 	add	r2,r16,r2
   1c5e8:	10800104 	addi	r2,r2,4
   1c5ec:	10c00017 	ldw	r3,0(r2)
   1c5f0:	e0bffb17 	ldw	r2,-20(fp)
   1c5f4:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   1c5f8:	040000b4 	movhi	r16,2
   1c5fc:	843b7004 	addi	r16,r16,-4672
   1c600:	e0bffa17 	ldw	r2,-24(fp)
   1c604:	01400304 	movi	r5,12
   1c608:	1009883a 	mov	r4,r2
   1c60c:	00024440 	call	2444 <__mulsi3>
   1c610:	8085883a 	add	r2,r16,r2
   1c614:	10800204 	addi	r2,r2,8
   1c618:	10c00017 	ldw	r3,0(r2)
   1c61c:	e0bffb17 	ldw	r2,-20(fp)
   1c620:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   1c624:	e13ffa17 	ldw	r4,-24(fp)
   1c628:	001a0580 	call	1a058 <alt_release_fd>
  }
} 
   1c62c:	0001883a 	nop
   1c630:	e6ffff04 	addi	sp,fp,-4
   1c634:	dfc00217 	ldw	ra,8(sp)
   1c638:	df000117 	ldw	fp,4(sp)
   1c63c:	dc000017 	ldw	r16,0(sp)
   1c640:	dec00304 	addi	sp,sp,12
   1c644:	f800283a 	ret

0001c648 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   1c648:	defffb04 	addi	sp,sp,-20
   1c64c:	dfc00415 	stw	ra,16(sp)
   1c650:	df000315 	stw	fp,12(sp)
   1c654:	df000304 	addi	fp,sp,12
   1c658:	e13ffd15 	stw	r4,-12(fp)
   1c65c:	e17ffe15 	stw	r5,-8(fp)
   1c660:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   1c664:	01c07fc4 	movi	r7,511
   1c668:	01800044 	movi	r6,1
   1c66c:	e17ffd17 	ldw	r5,-12(fp)
   1c670:	010000b4 	movhi	r4,2
   1c674:	213b7304 	addi	r4,r4,-4660
   1c678:	001c5640 	call	1c564 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   1c67c:	01c07fc4 	movi	r7,511
   1c680:	000d883a 	mov	r6,zero
   1c684:	e17ffe17 	ldw	r5,-8(fp)
   1c688:	010000b4 	movhi	r4,2
   1c68c:	213b7004 	addi	r4,r4,-4672
   1c690:	001c5640 	call	1c564 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   1c694:	01c07fc4 	movi	r7,511
   1c698:	01800044 	movi	r6,1
   1c69c:	e17fff17 	ldw	r5,-4(fp)
   1c6a0:	010000b4 	movhi	r4,2
   1c6a4:	213b7604 	addi	r4,r4,-4648
   1c6a8:	001c5640 	call	1c564 <alt_open_fd>
}  
   1c6ac:	0001883a 	nop
   1c6b0:	e037883a 	mov	sp,fp
   1c6b4:	dfc00117 	ldw	ra,4(sp)
   1c6b8:	df000017 	ldw	fp,0(sp)
   1c6bc:	dec00204 	addi	sp,sp,8
   1c6c0:	f800283a 	ret

0001c6c4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   1c6c4:	defffe04 	addi	sp,sp,-8
   1c6c8:	dfc00115 	stw	ra,4(sp)
   1c6cc:	df000015 	stw	fp,0(sp)
   1c6d0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   1c6d4:	d0a00d17 	ldw	r2,-32716(gp)
   1c6d8:	10000326 	beq	r2,zero,1c6e8 <alt_get_errno+0x24>
   1c6dc:	d0a00d17 	ldw	r2,-32716(gp)
   1c6e0:	103ee83a 	callr	r2
   1c6e4:	00000106 	br	1c6ec <alt_get_errno+0x28>
   1c6e8:	d0a70b04 	addi	r2,gp,-25556
}
   1c6ec:	e037883a 	mov	sp,fp
   1c6f0:	dfc00117 	ldw	ra,4(sp)
   1c6f4:	df000017 	ldw	fp,0(sp)
   1c6f8:	dec00204 	addi	sp,sp,8
   1c6fc:	f800283a 	ret

0001c700 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   1c700:	defffb04 	addi	sp,sp,-20
   1c704:	dfc00415 	stw	ra,16(sp)
   1c708:	df000315 	stw	fp,12(sp)
   1c70c:	dc000215 	stw	r16,8(sp)
   1c710:	df000304 	addi	fp,sp,12
   1c714:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   1c718:	e0bffe17 	ldw	r2,-8(fp)
   1c71c:	10800217 	ldw	r2,8(r2)
   1c720:	10d00034 	orhi	r3,r2,16384
   1c724:	e0bffe17 	ldw	r2,-8(fp)
   1c728:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   1c72c:	e03ffd15 	stw	zero,-12(fp)
   1c730:	00002306 	br	1c7c0 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   1c734:	040000b4 	movhi	r16,2
   1c738:	843b7004 	addi	r16,r16,-4672
   1c73c:	e0bffd17 	ldw	r2,-12(fp)
   1c740:	01400304 	movi	r5,12
   1c744:	1009883a 	mov	r4,r2
   1c748:	00024440 	call	2444 <__mulsi3>
   1c74c:	8085883a 	add	r2,r16,r2
   1c750:	10c00017 	ldw	r3,0(r2)
   1c754:	e0bffe17 	ldw	r2,-8(fp)
   1c758:	10800017 	ldw	r2,0(r2)
   1c75c:	1880151e 	bne	r3,r2,1c7b4 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   1c760:	040000b4 	movhi	r16,2
   1c764:	843b7004 	addi	r16,r16,-4672
   1c768:	e0bffd17 	ldw	r2,-12(fp)
   1c76c:	01400304 	movi	r5,12
   1c770:	1009883a 	mov	r4,r2
   1c774:	00024440 	call	2444 <__mulsi3>
   1c778:	8085883a 	add	r2,r16,r2
   1c77c:	10800204 	addi	r2,r2,8
   1c780:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   1c784:	10000b0e 	bge	r2,zero,1c7b4 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   1c788:	01400304 	movi	r5,12
   1c78c:	e13ffd17 	ldw	r4,-12(fp)
   1c790:	00024440 	call	2444 <__mulsi3>
   1c794:	1007883a 	mov	r3,r2
   1c798:	008000b4 	movhi	r2,2
   1c79c:	10bb7004 	addi	r2,r2,-4672
   1c7a0:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   1c7a4:	e0bffe17 	ldw	r2,-8(fp)
   1c7a8:	18800226 	beq	r3,r2,1c7b4 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   1c7ac:	00bffcc4 	movi	r2,-13
   1c7b0:	00000806 	br	1c7d4 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   1c7b4:	e0bffd17 	ldw	r2,-12(fp)
   1c7b8:	10800044 	addi	r2,r2,1
   1c7bc:	e0bffd15 	stw	r2,-12(fp)
   1c7c0:	d0a00c17 	ldw	r2,-32720(gp)
   1c7c4:	1007883a 	mov	r3,r2
   1c7c8:	e0bffd17 	ldw	r2,-12(fp)
   1c7cc:	18bfd92e 	bgeu	r3,r2,1c734 <__alt_mem_epcs_flash_controller_0+0xff81b734>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   1c7d0:	0005883a 	mov	r2,zero
}
   1c7d4:	e6ffff04 	addi	sp,fp,-4
   1c7d8:	dfc00217 	ldw	ra,8(sp)
   1c7dc:	df000117 	ldw	fp,4(sp)
   1c7e0:	dc000017 	ldw	r16,0(sp)
   1c7e4:	dec00304 	addi	sp,sp,12
   1c7e8:	f800283a 	ret

0001c7ec <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   1c7ec:	defff604 	addi	sp,sp,-40
   1c7f0:	dfc00915 	stw	ra,36(sp)
   1c7f4:	df000815 	stw	fp,32(sp)
   1c7f8:	df000804 	addi	fp,sp,32
   1c7fc:	e13ffd15 	stw	r4,-12(fp)
   1c800:	e17ffe15 	stw	r5,-8(fp)
   1c804:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   1c808:	00bfffc4 	movi	r2,-1
   1c80c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   1c810:	00bffb44 	movi	r2,-19
   1c814:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   1c818:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   1c81c:	d1600a04 	addi	r5,gp,-32728
   1c820:	e13ffd17 	ldw	r4,-12(fp)
   1c824:	001c2140 	call	1c214 <alt_find_dev>
   1c828:	e0bff815 	stw	r2,-32(fp)
   1c82c:	e0bff817 	ldw	r2,-32(fp)
   1c830:	1000051e 	bne	r2,zero,1c848 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   1c834:	e13ffd17 	ldw	r4,-12(fp)
   1c838:	001cd0c0 	call	1cd0c <alt_find_file>
   1c83c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   1c840:	00800044 	movi	r2,1
   1c844:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   1c848:	e0bff817 	ldw	r2,-32(fp)
   1c84c:	10002b26 	beq	r2,zero,1c8fc <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
   1c850:	e13ff817 	ldw	r4,-32(fp)
   1c854:	001ce140 	call	1ce14 <alt_get_fd>
   1c858:	e0bff915 	stw	r2,-28(fp)
   1c85c:	e0bff917 	ldw	r2,-28(fp)
   1c860:	1000030e 	bge	r2,zero,1c870 <open+0x84>
    {
      status = index;
   1c864:	e0bff917 	ldw	r2,-28(fp)
   1c868:	e0bffa15 	stw	r2,-24(fp)
   1c86c:	00002506 	br	1c904 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
   1c870:	01400304 	movi	r5,12
   1c874:	e13ff917 	ldw	r4,-28(fp)
   1c878:	00024440 	call	2444 <__mulsi3>
   1c87c:	1007883a 	mov	r3,r2
   1c880:	008000b4 	movhi	r2,2
   1c884:	10bb7004 	addi	r2,r2,-4672
   1c888:	1885883a 	add	r2,r3,r2
   1c88c:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   1c890:	e0fffe17 	ldw	r3,-8(fp)
   1c894:	00900034 	movhi	r2,16384
   1c898:	10bfffc4 	addi	r2,r2,-1
   1c89c:	1886703a 	and	r3,r3,r2
   1c8a0:	e0bffc17 	ldw	r2,-16(fp)
   1c8a4:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   1c8a8:	e0bffb17 	ldw	r2,-20(fp)
   1c8ac:	1000051e 	bne	r2,zero,1c8c4 <open+0xd8>
   1c8b0:	e13ffc17 	ldw	r4,-16(fp)
   1c8b4:	001c7000 	call	1c700 <alt_file_locked>
   1c8b8:	e0bffa15 	stw	r2,-24(fp)
   1c8bc:	e0bffa17 	ldw	r2,-24(fp)
   1c8c0:	10001016 	blt	r2,zero,1c904 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   1c8c4:	e0bff817 	ldw	r2,-32(fp)
   1c8c8:	10800317 	ldw	r2,12(r2)
   1c8cc:	10000826 	beq	r2,zero,1c8f0 <open+0x104>
   1c8d0:	e0bff817 	ldw	r2,-32(fp)
   1c8d4:	10800317 	ldw	r2,12(r2)
   1c8d8:	e1ffff17 	ldw	r7,-4(fp)
   1c8dc:	e1bffe17 	ldw	r6,-8(fp)
   1c8e0:	e17ffd17 	ldw	r5,-12(fp)
   1c8e4:	e13ffc17 	ldw	r4,-16(fp)
   1c8e8:	103ee83a 	callr	r2
   1c8ec:	00000106 	br	1c8f4 <open+0x108>
   1c8f0:	0005883a 	mov	r2,zero
   1c8f4:	e0bffa15 	stw	r2,-24(fp)
   1c8f8:	00000206 	br	1c904 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
   1c8fc:	00bffb44 	movi	r2,-19
   1c900:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   1c904:	e0bffa17 	ldw	r2,-24(fp)
   1c908:	1000090e 	bge	r2,zero,1c930 <open+0x144>
  {
    alt_release_fd (index);  
   1c90c:	e13ff917 	ldw	r4,-28(fp)
   1c910:	001a0580 	call	1a058 <alt_release_fd>
    ALT_ERRNO = -status;
   1c914:	001c6c40 	call	1c6c4 <alt_get_errno>
   1c918:	1007883a 	mov	r3,r2
   1c91c:	e0bffa17 	ldw	r2,-24(fp)
   1c920:	0085c83a 	sub	r2,zero,r2
   1c924:	18800015 	stw	r2,0(r3)
    return -1;
   1c928:	00bfffc4 	movi	r2,-1
   1c92c:	00000106 	br	1c934 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
   1c930:	e0bff917 	ldw	r2,-28(fp)
}
   1c934:	e037883a 	mov	sp,fp
   1c938:	dfc00117 	ldw	ra,4(sp)
   1c93c:	df000017 	ldw	fp,0(sp)
   1c940:	dec00204 	addi	sp,sp,8
   1c944:	f800283a 	ret

0001c948 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   1c948:	defffa04 	addi	sp,sp,-24
   1c94c:	df000515 	stw	fp,20(sp)
   1c950:	df000504 	addi	fp,sp,20
   1c954:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1c958:	0005303a 	rdctl	r2,status
   1c95c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1c960:	e0fffc17 	ldw	r3,-16(fp)
   1c964:	00bfff84 	movi	r2,-2
   1c968:	1884703a 	and	r2,r3,r2
   1c96c:	1001703a 	wrctl	status,r2
  
  return context;
   1c970:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   1c974:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   1c978:	e0bfff17 	ldw	r2,-4(fp)
   1c97c:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   1c980:	e0bffd17 	ldw	r2,-12(fp)
   1c984:	10800017 	ldw	r2,0(r2)
   1c988:	e0fffd17 	ldw	r3,-12(fp)
   1c98c:	18c00117 	ldw	r3,4(r3)
   1c990:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   1c994:	e0bffd17 	ldw	r2,-12(fp)
   1c998:	10800117 	ldw	r2,4(r2)
   1c99c:	e0fffd17 	ldw	r3,-12(fp)
   1c9a0:	18c00017 	ldw	r3,0(r3)
   1c9a4:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   1c9a8:	e0bffd17 	ldw	r2,-12(fp)
   1c9ac:	e0fffd17 	ldw	r3,-12(fp)
   1c9b0:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   1c9b4:	e0bffd17 	ldw	r2,-12(fp)
   1c9b8:	e0fffd17 	ldw	r3,-12(fp)
   1c9bc:	10c00015 	stw	r3,0(r2)
   1c9c0:	e0bffb17 	ldw	r2,-20(fp)
   1c9c4:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1c9c8:	e0bffe17 	ldw	r2,-8(fp)
   1c9cc:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   1c9d0:	0001883a 	nop
   1c9d4:	e037883a 	mov	sp,fp
   1c9d8:	df000017 	ldw	fp,0(sp)
   1c9dc:	dec00104 	addi	sp,sp,4
   1c9e0:	f800283a 	ret

0001c9e4 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   1c9e4:	defffb04 	addi	sp,sp,-20
   1c9e8:	dfc00415 	stw	ra,16(sp)
   1c9ec:	df000315 	stw	fp,12(sp)
   1c9f0:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   1c9f4:	d0a01217 	ldw	r2,-32696(gp)
   1c9f8:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   1c9fc:	d0a71417 	ldw	r2,-25520(gp)
   1ca00:	10800044 	addi	r2,r2,1
   1ca04:	d0a71415 	stw	r2,-25520(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   1ca08:	00002e06 	br	1cac4 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   1ca0c:	e0bffd17 	ldw	r2,-12(fp)
   1ca10:	10800017 	ldw	r2,0(r2)
   1ca14:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   1ca18:	e0bffd17 	ldw	r2,-12(fp)
   1ca1c:	10800403 	ldbu	r2,16(r2)
   1ca20:	10803fcc 	andi	r2,r2,255
   1ca24:	10000426 	beq	r2,zero,1ca38 <alt_tick+0x54>
   1ca28:	d0a71417 	ldw	r2,-25520(gp)
   1ca2c:	1000021e 	bne	r2,zero,1ca38 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   1ca30:	e0bffd17 	ldw	r2,-12(fp)
   1ca34:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   1ca38:	e0bffd17 	ldw	r2,-12(fp)
   1ca3c:	10800217 	ldw	r2,8(r2)
   1ca40:	d0e71417 	ldw	r3,-25520(gp)
   1ca44:	18801d36 	bltu	r3,r2,1cabc <alt_tick+0xd8>
   1ca48:	e0bffd17 	ldw	r2,-12(fp)
   1ca4c:	10800403 	ldbu	r2,16(r2)
   1ca50:	10803fcc 	andi	r2,r2,255
   1ca54:	1000191e 	bne	r2,zero,1cabc <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   1ca58:	e0bffd17 	ldw	r2,-12(fp)
   1ca5c:	10800317 	ldw	r2,12(r2)
   1ca60:	e0fffd17 	ldw	r3,-12(fp)
   1ca64:	18c00517 	ldw	r3,20(r3)
   1ca68:	1809883a 	mov	r4,r3
   1ca6c:	103ee83a 	callr	r2
   1ca70:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   1ca74:	e0bfff17 	ldw	r2,-4(fp)
   1ca78:	1000031e 	bne	r2,zero,1ca88 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   1ca7c:	e13ffd17 	ldw	r4,-12(fp)
   1ca80:	001c9480 	call	1c948 <alt_alarm_stop>
   1ca84:	00000d06 	br	1cabc <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   1ca88:	e0bffd17 	ldw	r2,-12(fp)
   1ca8c:	10c00217 	ldw	r3,8(r2)
   1ca90:	e0bfff17 	ldw	r2,-4(fp)
   1ca94:	1887883a 	add	r3,r3,r2
   1ca98:	e0bffd17 	ldw	r2,-12(fp)
   1ca9c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   1caa0:	e0bffd17 	ldw	r2,-12(fp)
   1caa4:	10c00217 	ldw	r3,8(r2)
   1caa8:	d0a71417 	ldw	r2,-25520(gp)
   1caac:	1880032e 	bgeu	r3,r2,1cabc <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   1cab0:	e0bffd17 	ldw	r2,-12(fp)
   1cab4:	00c00044 	movi	r3,1
   1cab8:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   1cabc:	e0bffe17 	ldw	r2,-8(fp)
   1cac0:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   1cac4:	e0fffd17 	ldw	r3,-12(fp)
   1cac8:	d0a01204 	addi	r2,gp,-32696
   1cacc:	18bfcf1e 	bne	r3,r2,1ca0c <__alt_mem_epcs_flash_controller_0+0xff81ba0c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   1cad0:	0001883a 	nop
}
   1cad4:	0001883a 	nop
   1cad8:	e037883a 	mov	sp,fp
   1cadc:	dfc00117 	ldw	ra,4(sp)
   1cae0:	df000017 	ldw	fp,0(sp)
   1cae4:	dec00204 	addi	sp,sp,8
   1cae8:	f800283a 	ret

0001caec <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   1caec:	deffff04 	addi	sp,sp,-4
   1caf0:	df000015 	stw	fp,0(sp)
   1caf4:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   1caf8:	000170fa 	wrctl	ienable,zero
}
   1cafc:	0001883a 	nop
   1cb00:	e037883a 	mov	sp,fp
   1cb04:	df000017 	ldw	fp,0(sp)
   1cb08:	dec00104 	addi	sp,sp,4
   1cb0c:	f800283a 	ret

0001cb10 <alt_avalon_spi_command>:

int alt_avalon_spi_command(alt_u32 base, alt_u32 slave,
                           alt_u32 write_length, const alt_u8 * write_data,
                           alt_u32 read_length, alt_u8 * read_data,
                           alt_u32 flags)
{
   1cb10:	defff404 	addi	sp,sp,-48
   1cb14:	df000b15 	stw	fp,44(sp)
   1cb18:	df000b04 	addi	fp,sp,44
   1cb1c:	e13ffc15 	stw	r4,-16(fp)
   1cb20:	e17ffd15 	stw	r5,-12(fp)
   1cb24:	e1bffe15 	stw	r6,-8(fp)
   1cb28:	e1ffff15 	stw	r7,-4(fp)
  const alt_u8 * write_end = write_data + write_length;
   1cb2c:	e0ffff17 	ldw	r3,-4(fp)
   1cb30:	e0bffe17 	ldw	r2,-8(fp)
   1cb34:	1885883a 	add	r2,r3,r2
   1cb38:	e0bff815 	stw	r2,-32(fp)
  alt_u8 * read_end = read_data + read_length;
   1cb3c:	e0c00217 	ldw	r3,8(fp)
   1cb40:	e0800117 	ldw	r2,4(fp)
   1cb44:	1885883a 	add	r2,r3,r2
   1cb48:	e0bff915 	stw	r2,-28(fp)

  alt_u32 write_zeros = read_length;
   1cb4c:	e0800117 	ldw	r2,4(fp)
   1cb50:	e0bff515 	stw	r2,-44(fp)
  alt_u32 read_ignore = write_length;
   1cb54:	e0bffe17 	ldw	r2,-8(fp)
   1cb58:	e0bff615 	stw	r2,-40(fp)

  /* We must not send more than two bytes to the target before it has
   * returned any as otherwise it will overflow. */
  /* Unfortunately the hardware does not seem to work with credits > 1,
   * leave it at 1 for now. */
  alt_32 credits = 1;
   1cb5c:	00800044 	movi	r2,1
   1cb60:	e0bff715 	stw	r2,-36(fp)
  /* Warning: this function is not currently safe if called in a multi-threaded
   * environment, something above must perform locking to make it safe if more
   * than one thread intends to use it.
   */

  IOWR_ALTERA_AVALON_SPI_SLAVE_SEL(base, 1 << slave);
   1cb64:	e0bffc17 	ldw	r2,-16(fp)
   1cb68:	10800504 	addi	r2,r2,20
   1cb6c:	1009883a 	mov	r4,r2
   1cb70:	00c00044 	movi	r3,1
   1cb74:	e0bffd17 	ldw	r2,-12(fp)
   1cb78:	1884983a 	sll	r2,r3,r2
   1cb7c:	20800035 	stwio	r2,0(r4)
  
  /* Set the SSO bit (force chipselect) only if the toggle flag is not set */
  if ((flags & ALT_AVALON_SPI_COMMAND_TOGGLE_SS_N) == 0) {
   1cb80:	e0800317 	ldw	r2,12(fp)
   1cb84:	1080008c 	andi	r2,r2,2
   1cb88:	1000051e 	bne	r2,zero,1cba0 <alt_avalon_spi_command+0x90>
    IOWR_ALTERA_AVALON_SPI_CONTROL(base, ALTERA_AVALON_SPI_CONTROL_SSO_MSK);
   1cb8c:	e0bffc17 	ldw	r2,-16(fp)
   1cb90:	10800304 	addi	r2,r2,12
   1cb94:	1007883a 	mov	r3,r2
   1cb98:	00810004 	movi	r2,1024
   1cb9c:	18800035 	stwio	r2,0(r3)
  /*
   * Discard any stale data present in the RXDATA register, in case
   * previous communication was interrupted and stale data was left
   * behind.
   */
  IORD_ALTERA_AVALON_SPI_RXDATA(base);
   1cba0:	e0bffc17 	ldw	r2,-16(fp)
   1cba4:	10800037 	ldwio	r2,0(r2)
  for ( ; ; )
  {
    
    do
    {
      status = IORD_ALTERA_AVALON_SPI_STATUS(base);
   1cba8:	e0bffc17 	ldw	r2,-16(fp)
   1cbac:	10800204 	addi	r2,r2,8
   1cbb0:	10800037 	ldwio	r2,0(r2)
   1cbb4:	e0bffa15 	stw	r2,-24(fp)
    }
    while (((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) == 0 || credits == 0) &&
   1cbb8:	e0bffa17 	ldw	r2,-24(fp)
   1cbbc:	1080100c 	andi	r2,r2,64
            (status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) == 0);
   1cbc0:	10000226 	beq	r2,zero,1cbcc <alt_avalon_spi_command+0xbc>
    
    do
    {
      status = IORD_ALTERA_AVALON_SPI_STATUS(base);
    }
    while (((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) == 0 || credits == 0) &&
   1cbc4:	e0bff717 	ldw	r2,-36(fp)
   1cbc8:	1000031e 	bne	r2,zero,1cbd8 <alt_avalon_spi_command+0xc8>
            (status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) == 0);
   1cbcc:	e0bffa17 	ldw	r2,-24(fp)
   1cbd0:	1080200c 	andi	r2,r2,128
    
    do
    {
      status = IORD_ALTERA_AVALON_SPI_STATUS(base);
    }
    while (((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) == 0 || credits == 0) &&
   1cbd4:	103ff426 	beq	r2,zero,1cba8 <__alt_mem_epcs_flash_controller_0+0xff81bba8>
            (status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) == 0);

    if ((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) != 0 && credits > 0)
   1cbd8:	e0bffa17 	ldw	r2,-24(fp)
   1cbdc:	1080100c 	andi	r2,r2,64
   1cbe0:	10001e26 	beq	r2,zero,1cc5c <alt_avalon_spi_command+0x14c>
   1cbe4:	e0bff717 	ldw	r2,-36(fp)
   1cbe8:	00801c0e 	bge	zero,r2,1cc5c <alt_avalon_spi_command+0x14c>
    {
      credits--;
   1cbec:	e0bff717 	ldw	r2,-36(fp)
   1cbf0:	10bfffc4 	addi	r2,r2,-1
   1cbf4:	e0bff715 	stw	r2,-36(fp)

      if (write_data < write_end)
   1cbf8:	e0ffff17 	ldw	r3,-4(fp)
   1cbfc:	e0bff817 	ldw	r2,-32(fp)
   1cc00:	18800a2e 	bgeu	r3,r2,1cc2c <alt_avalon_spi_command+0x11c>
        IOWR_ALTERA_AVALON_SPI_TXDATA(base, *write_data++);
   1cc04:	e0bffc17 	ldw	r2,-16(fp)
   1cc08:	10800104 	addi	r2,r2,4
   1cc0c:	1009883a 	mov	r4,r2
   1cc10:	e0bfff17 	ldw	r2,-4(fp)
   1cc14:	10c00044 	addi	r3,r2,1
   1cc18:	e0ffff15 	stw	r3,-4(fp)
   1cc1c:	10800003 	ldbu	r2,0(r2)
   1cc20:	10803fcc 	andi	r2,r2,255
   1cc24:	20800035 	stwio	r2,0(r4)
   1cc28:	00000c06 	br	1cc5c <alt_avalon_spi_command+0x14c>
      else if (write_zeros > 0)
   1cc2c:	e0bff517 	ldw	r2,-44(fp)
   1cc30:	10000826 	beq	r2,zero,1cc54 <alt_avalon_spi_command+0x144>
      {
        write_zeros--;
   1cc34:	e0bff517 	ldw	r2,-44(fp)
   1cc38:	10bfffc4 	addi	r2,r2,-1
   1cc3c:	e0bff515 	stw	r2,-44(fp)
        IOWR_ALTERA_AVALON_SPI_TXDATA(base, 0);
   1cc40:	e0bffc17 	ldw	r2,-16(fp)
   1cc44:	10800104 	addi	r2,r2,4
   1cc48:	0007883a 	mov	r3,zero
   1cc4c:	10c00035 	stwio	r3,0(r2)
   1cc50:	00000206 	br	1cc5c <alt_avalon_spi_command+0x14c>
      }
      else
        credits = -1024;
   1cc54:	00bf0004 	movi	r2,-1024
   1cc58:	e0bff715 	stw	r2,-36(fp)
    };

    if ((status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) != 0)
   1cc5c:	e0bffa17 	ldw	r2,-24(fp)
   1cc60:	1080200c 	andi	r2,r2,128
   1cc64:	103fd026 	beq	r2,zero,1cba8 <__alt_mem_epcs_flash_controller_0+0xff81bba8>
    {
      alt_u32 rxdata = IORD_ALTERA_AVALON_SPI_RXDATA(base);
   1cc68:	e0bffc17 	ldw	r2,-16(fp)
   1cc6c:	10800037 	ldwio	r2,0(r2)
   1cc70:	e0bffb15 	stw	r2,-20(fp)

      if (read_ignore > 0)
   1cc74:	e0bff617 	ldw	r2,-40(fp)
   1cc78:	10000426 	beq	r2,zero,1cc8c <alt_avalon_spi_command+0x17c>
        read_ignore--;
   1cc7c:	e0bff617 	ldw	r2,-40(fp)
   1cc80:	10bfffc4 	addi	r2,r2,-1
   1cc84:	e0bff615 	stw	r2,-40(fp)
   1cc88:	00000506 	br	1cca0 <alt_avalon_spi_command+0x190>
      else
        *read_data++ = (alt_u8)rxdata;
   1cc8c:	e0800217 	ldw	r2,8(fp)
   1cc90:	10c00044 	addi	r3,r2,1
   1cc94:	e0c00215 	stw	r3,8(fp)
   1cc98:	e0fffb17 	ldw	r3,-20(fp)
   1cc9c:	10c00005 	stb	r3,0(r2)
      credits++;
   1cca0:	e0bff717 	ldw	r2,-36(fp)
   1cca4:	10800044 	addi	r2,r2,1
   1cca8:	e0bff715 	stw	r2,-36(fp)

      if (read_ignore == 0 && read_data == read_end)
   1ccac:	e0bff617 	ldw	r2,-40(fp)
   1ccb0:	103fbd1e 	bne	r2,zero,1cba8 <__alt_mem_epcs_flash_controller_0+0xff81bba8>
   1ccb4:	e0c00217 	ldw	r3,8(fp)
   1ccb8:	e0bff917 	ldw	r2,-28(fp)
   1ccbc:	18bfba1e 	bne	r3,r2,1cba8 <__alt_mem_epcs_flash_controller_0+0xff81bba8>
  }

  /* Wait until the interface has finished transmitting */
  do
  {
    status = IORD_ALTERA_AVALON_SPI_STATUS(base);
   1ccc0:	e0bffc17 	ldw	r2,-16(fp)
   1ccc4:	10800204 	addi	r2,r2,8
   1ccc8:	10800037 	ldwio	r2,0(r2)
   1cccc:	e0bffa15 	stw	r2,-24(fp)
  }
  while ((status & ALTERA_AVALON_SPI_STATUS_TMT_MSK) == 0);
   1ccd0:	e0bffa17 	ldw	r2,-24(fp)
   1ccd4:	1080080c 	andi	r2,r2,32
   1ccd8:	103ff926 	beq	r2,zero,1ccc0 <__alt_mem_epcs_flash_controller_0+0xff81bcc0>

  /* Clear SSO (release chipselect) unless the caller is going to
   * keep using this chip
   */
  if ((flags & ALT_AVALON_SPI_COMMAND_MERGE) == 0)
   1ccdc:	e0800317 	ldw	r2,12(fp)
   1cce0:	1080004c 	andi	r2,r2,1
   1cce4:	1000041e 	bne	r2,zero,1ccf8 <alt_avalon_spi_command+0x1e8>
    IOWR_ALTERA_AVALON_SPI_CONTROL(base, 0);
   1cce8:	e0bffc17 	ldw	r2,-16(fp)
   1ccec:	10800304 	addi	r2,r2,12
   1ccf0:	0007883a 	mov	r3,zero
   1ccf4:	10c00035 	stwio	r3,0(r2)

  return read_length;
   1ccf8:	e0800117 	ldw	r2,4(fp)
}
   1ccfc:	e037883a 	mov	sp,fp
   1cd00:	df000017 	ldw	fp,0(sp)
   1cd04:	dec00104 	addi	sp,sp,4
   1cd08:	f800283a 	ret

0001cd0c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   1cd0c:	defffb04 	addi	sp,sp,-20
   1cd10:	dfc00415 	stw	ra,16(sp)
   1cd14:	df000315 	stw	fp,12(sp)
   1cd18:	df000304 	addi	fp,sp,12
   1cd1c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   1cd20:	d0a00817 	ldw	r2,-32736(gp)
   1cd24:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   1cd28:	00003106 	br	1cdf0 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   1cd2c:	e0bffd17 	ldw	r2,-12(fp)
   1cd30:	10800217 	ldw	r2,8(r2)
   1cd34:	1009883a 	mov	r4,r2
   1cd38:	00033c80 	call	33c8 <strlen>
   1cd3c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   1cd40:	e0bffd17 	ldw	r2,-12(fp)
   1cd44:	10c00217 	ldw	r3,8(r2)
   1cd48:	e0bffe17 	ldw	r2,-8(fp)
   1cd4c:	10bfffc4 	addi	r2,r2,-1
   1cd50:	1885883a 	add	r2,r3,r2
   1cd54:	10800003 	ldbu	r2,0(r2)
   1cd58:	10803fcc 	andi	r2,r2,255
   1cd5c:	1080201c 	xori	r2,r2,128
   1cd60:	10bfe004 	addi	r2,r2,-128
   1cd64:	10800bd8 	cmpnei	r2,r2,47
   1cd68:	1000031e 	bne	r2,zero,1cd78 <alt_find_file+0x6c>
    {
      len -= 1;
   1cd6c:	e0bffe17 	ldw	r2,-8(fp)
   1cd70:	10bfffc4 	addi	r2,r2,-1
   1cd74:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   1cd78:	e0bffe17 	ldw	r2,-8(fp)
   1cd7c:	e0ffff17 	ldw	r3,-4(fp)
   1cd80:	1885883a 	add	r2,r3,r2
   1cd84:	10800003 	ldbu	r2,0(r2)
   1cd88:	10803fcc 	andi	r2,r2,255
   1cd8c:	1080201c 	xori	r2,r2,128
   1cd90:	10bfe004 	addi	r2,r2,-128
   1cd94:	10800be0 	cmpeqi	r2,r2,47
   1cd98:	1000081e 	bne	r2,zero,1cdbc <alt_find_file+0xb0>
   1cd9c:	e0bffe17 	ldw	r2,-8(fp)
   1cda0:	e0ffff17 	ldw	r3,-4(fp)
   1cda4:	1885883a 	add	r2,r3,r2
   1cda8:	10800003 	ldbu	r2,0(r2)
   1cdac:	10803fcc 	andi	r2,r2,255
   1cdb0:	1080201c 	xori	r2,r2,128
   1cdb4:	10bfe004 	addi	r2,r2,-128
   1cdb8:	10000a1e 	bne	r2,zero,1cde4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   1cdbc:	e0bffd17 	ldw	r2,-12(fp)
   1cdc0:	10800217 	ldw	r2,8(r2)
   1cdc4:	e0fffe17 	ldw	r3,-8(fp)
   1cdc8:	180d883a 	mov	r6,r3
   1cdcc:	e17fff17 	ldw	r5,-4(fp)
   1cdd0:	1009883a 	mov	r4,r2
   1cdd4:	0002d980 	call	2d98 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   1cdd8:	1000021e 	bne	r2,zero,1cde4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   1cddc:	e0bffd17 	ldw	r2,-12(fp)
   1cde0:	00000706 	br	1ce00 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   1cde4:	e0bffd17 	ldw	r2,-12(fp)
   1cde8:	10800017 	ldw	r2,0(r2)
   1cdec:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   1cdf0:	e0fffd17 	ldw	r3,-12(fp)
   1cdf4:	d0a00804 	addi	r2,gp,-32736
   1cdf8:	18bfcc1e 	bne	r3,r2,1cd2c <__alt_mem_epcs_flash_controller_0+0xff81bd2c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   1cdfc:	0005883a 	mov	r2,zero
}
   1ce00:	e037883a 	mov	sp,fp
   1ce04:	dfc00117 	ldw	ra,4(sp)
   1ce08:	df000017 	ldw	fp,0(sp)
   1ce0c:	dec00204 	addi	sp,sp,8
   1ce10:	f800283a 	ret

0001ce14 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   1ce14:	defffa04 	addi	sp,sp,-24
   1ce18:	dfc00515 	stw	ra,20(sp)
   1ce1c:	df000415 	stw	fp,16(sp)
   1ce20:	dc000315 	stw	r16,12(sp)
   1ce24:	df000404 	addi	fp,sp,16
   1ce28:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
   1ce2c:	00bffa04 	movi	r2,-24
   1ce30:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   1ce34:	e03ffc15 	stw	zero,-16(fp)
   1ce38:	00001d06 	br	1ceb0 <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
   1ce3c:	040000b4 	movhi	r16,2
   1ce40:	843b7004 	addi	r16,r16,-4672
   1ce44:	e0bffc17 	ldw	r2,-16(fp)
   1ce48:	01400304 	movi	r5,12
   1ce4c:	1009883a 	mov	r4,r2
   1ce50:	00024440 	call	2444 <__mulsi3>
   1ce54:	8085883a 	add	r2,r16,r2
   1ce58:	10800017 	ldw	r2,0(r2)
   1ce5c:	1000111e 	bne	r2,zero,1cea4 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
   1ce60:	040000b4 	movhi	r16,2
   1ce64:	843b7004 	addi	r16,r16,-4672
   1ce68:	e0bffc17 	ldw	r2,-16(fp)
   1ce6c:	01400304 	movi	r5,12
   1ce70:	1009883a 	mov	r4,r2
   1ce74:	00024440 	call	2444 <__mulsi3>
   1ce78:	8085883a 	add	r2,r16,r2
   1ce7c:	e0fffe17 	ldw	r3,-8(fp)
   1ce80:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   1ce84:	d0e00c17 	ldw	r3,-32720(gp)
   1ce88:	e0bffc17 	ldw	r2,-16(fp)
   1ce8c:	1880020e 	bge	r3,r2,1ce98 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
   1ce90:	e0bffc17 	ldw	r2,-16(fp)
   1ce94:	d0a00c15 	stw	r2,-32720(gp)
      }
      rc = i;
   1ce98:	e0bffc17 	ldw	r2,-16(fp)
   1ce9c:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
   1cea0:	00000606 	br	1cebc <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   1cea4:	e0bffc17 	ldw	r2,-16(fp)
   1cea8:	10800044 	addi	r2,r2,1
   1ceac:	e0bffc15 	stw	r2,-16(fp)
   1ceb0:	e0bffc17 	ldw	r2,-16(fp)
   1ceb4:	10800810 	cmplti	r2,r2,32
   1ceb8:	103fe01e 	bne	r2,zero,1ce3c <__alt_mem_epcs_flash_controller_0+0xff81be3c>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   1cebc:	e0bffd17 	ldw	r2,-12(fp)
}
   1cec0:	e6ffff04 	addi	sp,fp,-4
   1cec4:	dfc00217 	ldw	ra,8(sp)
   1cec8:	df000117 	ldw	fp,4(sp)
   1cecc:	dc000017 	ldw	r16,0(sp)
   1ced0:	dec00304 	addi	sp,sp,12
   1ced4:	f800283a 	ret

0001ced8 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   1ced8:	defffe04 	addi	sp,sp,-8
   1cedc:	df000115 	stw	fp,4(sp)
   1cee0:	df000104 	addi	fp,sp,4
   1cee4:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   1cee8:	e0bfff17 	ldw	r2,-4(fp)
   1ceec:	10bffe84 	addi	r2,r2,-6
   1cef0:	10c00428 	cmpgeui	r3,r2,16
   1cef4:	18001a1e 	bne	r3,zero,1cf60 <alt_exception_cause_generated_bad_addr+0x88>
   1cef8:	100690ba 	slli	r3,r2,2
   1cefc:	008000b4 	movhi	r2,2
   1cf00:	10b3c404 	addi	r2,r2,-12528
   1cf04:	1885883a 	add	r2,r3,r2
   1cf08:	10800017 	ldw	r2,0(r2)
   1cf0c:	1000683a 	jmp	r2
   1cf10:	0001cf50 	cmplti	zero,zero,1853
   1cf14:	0001cf50 	cmplti	zero,zero,1853
   1cf18:	0001cf60 	cmpeqi	zero,zero,1853
   1cf1c:	0001cf60 	cmpeqi	zero,zero,1853
   1cf20:	0001cf60 	cmpeqi	zero,zero,1853
   1cf24:	0001cf50 	cmplti	zero,zero,1853
   1cf28:	0001cf58 	cmpnei	zero,zero,1853
   1cf2c:	0001cf60 	cmpeqi	zero,zero,1853
   1cf30:	0001cf50 	cmplti	zero,zero,1853
   1cf34:	0001cf50 	cmplti	zero,zero,1853
   1cf38:	0001cf60 	cmpeqi	zero,zero,1853
   1cf3c:	0001cf50 	cmplti	zero,zero,1853
   1cf40:	0001cf58 	cmpnei	zero,zero,1853
   1cf44:	0001cf60 	cmpeqi	zero,zero,1853
   1cf48:	0001cf60 	cmpeqi	zero,zero,1853
   1cf4c:	0001cf50 	cmplti	zero,zero,1853
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   1cf50:	00800044 	movi	r2,1
   1cf54:	00000306 	br	1cf64 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   1cf58:	0005883a 	mov	r2,zero
   1cf5c:	00000106 	br	1cf64 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   1cf60:	0005883a 	mov	r2,zero
  }
}
   1cf64:	e037883a 	mov	sp,fp
   1cf68:	df000017 	ldw	fp,0(sp)
   1cf6c:	dec00104 	addi	sp,sp,4
   1cf70:	f800283a 	ret

0001cf74 <atexit>:
   1cf74:	200b883a 	mov	r5,r4
   1cf78:	000f883a 	mov	r7,zero
   1cf7c:	000d883a 	mov	r6,zero
   1cf80:	0009883a 	mov	r4,zero
   1cf84:	001cfc01 	jmpi	1cfc0 <__register_exitproc>

0001cf88 <exit>:
   1cf88:	defffe04 	addi	sp,sp,-8
   1cf8c:	000b883a 	mov	r5,zero
   1cf90:	dc000015 	stw	r16,0(sp)
   1cf94:	dfc00115 	stw	ra,4(sp)
   1cf98:	2021883a 	mov	r16,r4
   1cf9c:	001d0d80 	call	1d0d8 <__call_exitprocs>
   1cfa0:	008000b4 	movhi	r2,2
   1cfa4:	10801b04 	addi	r2,r2,108
   1cfa8:	11000017 	ldw	r4,0(r2)
   1cfac:	20800f17 	ldw	r2,60(r4)
   1cfb0:	10000126 	beq	r2,zero,1cfb8 <exit+0x30>
   1cfb4:	103ee83a 	callr	r2
   1cfb8:	8009883a 	mov	r4,r16
   1cfbc:	001d2580 	call	1d258 <_exit>

0001cfc0 <__register_exitproc>:
   1cfc0:	defffa04 	addi	sp,sp,-24
   1cfc4:	dc000315 	stw	r16,12(sp)
   1cfc8:	040000b4 	movhi	r16,2
   1cfcc:	84001b04 	addi	r16,r16,108
   1cfd0:	80c00017 	ldw	r3,0(r16)
   1cfd4:	dc400415 	stw	r17,16(sp)
   1cfd8:	dfc00515 	stw	ra,20(sp)
   1cfdc:	18805217 	ldw	r2,328(r3)
   1cfe0:	2023883a 	mov	r17,r4
   1cfe4:	10003726 	beq	r2,zero,1d0c4 <__register_exitproc+0x104>
   1cfe8:	10c00117 	ldw	r3,4(r2)
   1cfec:	010007c4 	movi	r4,31
   1cff0:	20c00e16 	blt	r4,r3,1d02c <__register_exitproc+0x6c>
   1cff4:	1a000044 	addi	r8,r3,1
   1cff8:	8800221e 	bne	r17,zero,1d084 <__register_exitproc+0xc4>
   1cffc:	18c00084 	addi	r3,r3,2
   1d000:	18c7883a 	add	r3,r3,r3
   1d004:	18c7883a 	add	r3,r3,r3
   1d008:	12000115 	stw	r8,4(r2)
   1d00c:	10c7883a 	add	r3,r2,r3
   1d010:	19400015 	stw	r5,0(r3)
   1d014:	0005883a 	mov	r2,zero
   1d018:	dfc00517 	ldw	ra,20(sp)
   1d01c:	dc400417 	ldw	r17,16(sp)
   1d020:	dc000317 	ldw	r16,12(sp)
   1d024:	dec00604 	addi	sp,sp,24
   1d028:	f800283a 	ret
   1d02c:	00800034 	movhi	r2,0
   1d030:	10895904 	addi	r2,r2,9572
   1d034:	10002626 	beq	r2,zero,1d0d0 <__register_exitproc+0x110>
   1d038:	01006404 	movi	r4,400
   1d03c:	d9400015 	stw	r5,0(sp)
   1d040:	d9800115 	stw	r6,4(sp)
   1d044:	d9c00215 	stw	r7,8(sp)
   1d048:	00025640 	call	2564 <malloc>
   1d04c:	d9400017 	ldw	r5,0(sp)
   1d050:	d9800117 	ldw	r6,4(sp)
   1d054:	d9c00217 	ldw	r7,8(sp)
   1d058:	10001d26 	beq	r2,zero,1d0d0 <__register_exitproc+0x110>
   1d05c:	81000017 	ldw	r4,0(r16)
   1d060:	10000115 	stw	zero,4(r2)
   1d064:	02000044 	movi	r8,1
   1d068:	22405217 	ldw	r9,328(r4)
   1d06c:	0007883a 	mov	r3,zero
   1d070:	12400015 	stw	r9,0(r2)
   1d074:	20805215 	stw	r2,328(r4)
   1d078:	10006215 	stw	zero,392(r2)
   1d07c:	10006315 	stw	zero,396(r2)
   1d080:	883fde26 	beq	r17,zero,1cffc <__alt_mem_epcs_flash_controller_0+0xff81bffc>
   1d084:	18c9883a 	add	r4,r3,r3
   1d088:	2109883a 	add	r4,r4,r4
   1d08c:	1109883a 	add	r4,r2,r4
   1d090:	21802215 	stw	r6,136(r4)
   1d094:	01800044 	movi	r6,1
   1d098:	12406217 	ldw	r9,392(r2)
   1d09c:	30cc983a 	sll	r6,r6,r3
   1d0a0:	4992b03a 	or	r9,r9,r6
   1d0a4:	12406215 	stw	r9,392(r2)
   1d0a8:	21c04215 	stw	r7,264(r4)
   1d0ac:	01000084 	movi	r4,2
   1d0b0:	893fd21e 	bne	r17,r4,1cffc <__alt_mem_epcs_flash_controller_0+0xff81bffc>
   1d0b4:	11006317 	ldw	r4,396(r2)
   1d0b8:	218cb03a 	or	r6,r4,r6
   1d0bc:	11806315 	stw	r6,396(r2)
   1d0c0:	003fce06 	br	1cffc <__alt_mem_epcs_flash_controller_0+0xff81bffc>
   1d0c4:	18805304 	addi	r2,r3,332
   1d0c8:	18805215 	stw	r2,328(r3)
   1d0cc:	003fc606 	br	1cfe8 <__alt_mem_epcs_flash_controller_0+0xff81bfe8>
   1d0d0:	00bfffc4 	movi	r2,-1
   1d0d4:	003fd006 	br	1d018 <__alt_mem_epcs_flash_controller_0+0xff81c018>

0001d0d8 <__call_exitprocs>:
   1d0d8:	defff504 	addi	sp,sp,-44
   1d0dc:	df000915 	stw	fp,36(sp)
   1d0e0:	dd400615 	stw	r21,24(sp)
   1d0e4:	dc800315 	stw	r18,12(sp)
   1d0e8:	dfc00a15 	stw	ra,40(sp)
   1d0ec:	ddc00815 	stw	r23,32(sp)
   1d0f0:	dd800715 	stw	r22,28(sp)
   1d0f4:	dd000515 	stw	r20,20(sp)
   1d0f8:	dcc00415 	stw	r19,16(sp)
   1d0fc:	dc400215 	stw	r17,8(sp)
   1d100:	dc000115 	stw	r16,4(sp)
   1d104:	d9000015 	stw	r4,0(sp)
   1d108:	2839883a 	mov	fp,r5
   1d10c:	04800044 	movi	r18,1
   1d110:	057fffc4 	movi	r21,-1
   1d114:	008000b4 	movhi	r2,2
   1d118:	10801b04 	addi	r2,r2,108
   1d11c:	12000017 	ldw	r8,0(r2)
   1d120:	45005217 	ldw	r20,328(r8)
   1d124:	44c05204 	addi	r19,r8,328
   1d128:	a0001c26 	beq	r20,zero,1d19c <__call_exitprocs+0xc4>
   1d12c:	a0800117 	ldw	r2,4(r20)
   1d130:	15ffffc4 	addi	r23,r2,-1
   1d134:	b8000d16 	blt	r23,zero,1d16c <__call_exitprocs+0x94>
   1d138:	14000044 	addi	r16,r2,1
   1d13c:	8421883a 	add	r16,r16,r16
   1d140:	8421883a 	add	r16,r16,r16
   1d144:	84402004 	addi	r17,r16,128
   1d148:	a463883a 	add	r17,r20,r17
   1d14c:	a421883a 	add	r16,r20,r16
   1d150:	e0001e26 	beq	fp,zero,1d1cc <__call_exitprocs+0xf4>
   1d154:	80804017 	ldw	r2,256(r16)
   1d158:	e0801c26 	beq	fp,r2,1d1cc <__call_exitprocs+0xf4>
   1d15c:	bdffffc4 	addi	r23,r23,-1
   1d160:	843fff04 	addi	r16,r16,-4
   1d164:	8c7fff04 	addi	r17,r17,-4
   1d168:	bd7ff91e 	bne	r23,r21,1d150 <__alt_mem_epcs_flash_controller_0+0xff81c150>
   1d16c:	00800034 	movhi	r2,0
   1d170:	10895e04 	addi	r2,r2,9592
   1d174:	10000926 	beq	r2,zero,1d19c <__call_exitprocs+0xc4>
   1d178:	a0800117 	ldw	r2,4(r20)
   1d17c:	1000301e 	bne	r2,zero,1d240 <__call_exitprocs+0x168>
   1d180:	a0800017 	ldw	r2,0(r20)
   1d184:	10003226 	beq	r2,zero,1d250 <__call_exitprocs+0x178>
   1d188:	a009883a 	mov	r4,r20
   1d18c:	98800015 	stw	r2,0(r19)
   1d190:	00025780 	call	2578 <free>
   1d194:	9d000017 	ldw	r20,0(r19)
   1d198:	a03fe41e 	bne	r20,zero,1d12c <__alt_mem_epcs_flash_controller_0+0xff81c12c>
   1d19c:	dfc00a17 	ldw	ra,40(sp)
   1d1a0:	df000917 	ldw	fp,36(sp)
   1d1a4:	ddc00817 	ldw	r23,32(sp)
   1d1a8:	dd800717 	ldw	r22,28(sp)
   1d1ac:	dd400617 	ldw	r21,24(sp)
   1d1b0:	dd000517 	ldw	r20,20(sp)
   1d1b4:	dcc00417 	ldw	r19,16(sp)
   1d1b8:	dc800317 	ldw	r18,12(sp)
   1d1bc:	dc400217 	ldw	r17,8(sp)
   1d1c0:	dc000117 	ldw	r16,4(sp)
   1d1c4:	dec00b04 	addi	sp,sp,44
   1d1c8:	f800283a 	ret
   1d1cc:	a0800117 	ldw	r2,4(r20)
   1d1d0:	80c00017 	ldw	r3,0(r16)
   1d1d4:	10bfffc4 	addi	r2,r2,-1
   1d1d8:	15c01426 	beq	r2,r23,1d22c <__call_exitprocs+0x154>
   1d1dc:	80000015 	stw	zero,0(r16)
   1d1e0:	183fde26 	beq	r3,zero,1d15c <__alt_mem_epcs_flash_controller_0+0xff81c15c>
   1d1e4:	95c8983a 	sll	r4,r18,r23
   1d1e8:	a0806217 	ldw	r2,392(r20)
   1d1ec:	a5800117 	ldw	r22,4(r20)
   1d1f0:	2084703a 	and	r2,r4,r2
   1d1f4:	10000b26 	beq	r2,zero,1d224 <__call_exitprocs+0x14c>
   1d1f8:	a0806317 	ldw	r2,396(r20)
   1d1fc:	2088703a 	and	r4,r4,r2
   1d200:	20000c1e 	bne	r4,zero,1d234 <__call_exitprocs+0x15c>
   1d204:	89400017 	ldw	r5,0(r17)
   1d208:	d9000017 	ldw	r4,0(sp)
   1d20c:	183ee83a 	callr	r3
   1d210:	a0800117 	ldw	r2,4(r20)
   1d214:	15bfbf1e 	bne	r2,r22,1d114 <__alt_mem_epcs_flash_controller_0+0xff81c114>
   1d218:	98800017 	ldw	r2,0(r19)
   1d21c:	153fcf26 	beq	r2,r20,1d15c <__alt_mem_epcs_flash_controller_0+0xff81c15c>
   1d220:	003fbc06 	br	1d114 <__alt_mem_epcs_flash_controller_0+0xff81c114>
   1d224:	183ee83a 	callr	r3
   1d228:	003ff906 	br	1d210 <__alt_mem_epcs_flash_controller_0+0xff81c210>
   1d22c:	a5c00115 	stw	r23,4(r20)
   1d230:	003feb06 	br	1d1e0 <__alt_mem_epcs_flash_controller_0+0xff81c1e0>
   1d234:	89000017 	ldw	r4,0(r17)
   1d238:	183ee83a 	callr	r3
   1d23c:	003ff406 	br	1d210 <__alt_mem_epcs_flash_controller_0+0xff81c210>
   1d240:	a0800017 	ldw	r2,0(r20)
   1d244:	a027883a 	mov	r19,r20
   1d248:	1029883a 	mov	r20,r2
   1d24c:	003fb606 	br	1d128 <__alt_mem_epcs_flash_controller_0+0xff81c128>
   1d250:	0005883a 	mov	r2,zero
   1d254:	003ffb06 	br	1d244 <__alt_mem_epcs_flash_controller_0+0xff81c244>

0001d258 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   1d258:	defffd04 	addi	sp,sp,-12
   1d25c:	df000215 	stw	fp,8(sp)
   1d260:	df000204 	addi	fp,sp,8
   1d264:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   1d268:	0001883a 	nop
   1d26c:	e0bfff17 	ldw	r2,-4(fp)
   1d270:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   1d274:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   1d278:	10000226 	beq	r2,zero,1d284 <_exit+0x2c>
    ALT_SIM_FAIL();
   1d27c:	002af070 	cmpltui	zero,zero,43969
   1d280:	00000106 	br	1d288 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   1d284:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   1d288:	003fff06 	br	1d288 <__alt_mem_epcs_flash_controller_0+0xff81c288>
